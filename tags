!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ACKCIADDR	net/lwip/netif/ppp/ipcp.c	495;"	d	file:
ACKCICHAP	net/lwip/netif/ppp/lcp.c	653;"	d	file:
ACKCICHAR	net/lwip/netif/ppp/lcp.c	641;"	d	file:
ACKCIDNS	net/lwip/netif/ppp/ipcp.c	522;"	d	file:
ACKCILONG	net/lwip/netif/ppp/lcp.c	668;"	d	file:
ACKCILQR	net/lwip/netif/ppp/lcp.c	680;"	d	file:
ACKCISHORT	net/lwip/netif/ppp/lcp.c	629;"	d	file:
ACKCIVJ	net/lwip/netif/ppp/ipcp.c	467;"	d	file:
ACKCIVOID	net/lwip/netif/ppp/lcp.c	620;"	d	file:
ADDCIADDR	net/lwip/netif/ppp/ipcp.c	399;"	d	file:
ADDCICHAP	net/lwip/netif/ppp/lcp.c	551;"	d	file:
ADDCICHAR	net/lwip/netif/ppp/lcp.c	574;"	d	file:
ADDCIDNS	net/lwip/netif/ppp/ipcp.c	418;"	d	file:
ADDCILONG	net/lwip/netif/ppp/lcp.c	559;"	d	file:
ADDCILQR	net/lwip/netif/ppp/lcp.c	566;"	d	file:
ADDCISHORT	net/lwip/netif/ppp/lcp.c	544;"	d	file:
ADDCIVJ	net/lwip/netif/ppp/ipcp.c	382;"	d	file:
ADDCIVOID	net/lwip/netif/ppp/lcp.c	538;"	d	file:
AF_INET	net/lwip/include/lwip/sockets.h	118;"	d
AF_UNSPEC	net/lwip/include/lwip/sockets.h	117;"	d
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon9
ALT	kern/console.c	222;"	d	file:
ANNOUNCE_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	65;"	d
ANNOUNCE_NUM	net/lwip/include/ipv4/lwip/autoip.h	64;"	d
ANNOUNCE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	66;"	d
API_EVENT	net/lwip/include/lwip/api.h	158;"	d
API_LIB_DEBUG	net/lwip/include/lwip/opt.h	1497;"	d
API_MSG_DEBUG	net/lwip/include/lwip/opt.h	1504;"	d
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARPH_HWLEN	net/lwip/netif/etharp.c	81;"	d	file:
ARPH_HWLEN_SET	net/lwip/netif/etharp.c	84;"	d	file:
ARPH_PROTOLEN	net/lwip/netif/etharp.c	82;"	d	file:
ARPH_PROTOLEN_SET	net/lwip/netif/etharp.c	85;"	d	file:
ARP_MAXAGE	net/lwip/netif/etharp.c	69;"	d	file:
ARP_MAXPENDING	net/lwip/netif/etharp.c	77;"	d	file:
ARP_QUEUEING	net/lwip/include/lwip/opt.h	336;"	d
ARP_REPLY	net/lwip/include/netif/etharp.h	132;"	d
ARP_REQUEST	net/lwip/include/netif/etharp.h	131;"	d
ARP_TABLE_SIZE	net/lwip/include/lwip/opt.h	328;"	d
ARP_TMR_INTERVAL	net/lwip/include/netif/etharp.h	123;"	d
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/net/ns.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testinput.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testoutput.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echosrv.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echotest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/exechello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/httpd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testtime.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	66;"	d
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	76;"	d
AUTH_H	net/lwip/netif/ppp/auth.h	54;"	d
AUTOIP_DEBUG	net/lwip/include/lwip/opt.h	1680;"	d
AUTOIP_STATE_ANNOUNCING	net/lwip/include/ipv4/lwip/autoip.h	74;"	d
AUTOIP_STATE_BOUND	net/lwip/include/ipv4/lwip/autoip.h	75;"	d
AUTOIP_STATE_OFF	net/lwip/include/ipv4/lwip/autoip.h	72;"	d
AUTOIP_STATE_PROBING	net/lwip/include/ipv4/lwip/autoip.h	73;"	d
AUTOIP_TICKS_PER_SECOND	net/lwip/include/ipv4/lwip/autoip.h	57;"	d
AUTOIP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	56;"	d
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BCMP	net/lwip/netif/ppp/ppp.h	210;"	d
BCOPY	net/lwip/netif/ppp/ppp.h	211;"	d
BIG_ENDIAN	net/lwip/include/lwip/arch.h	40;"	d
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFFSIZE	obj/user/echosrv.asm	/^#define BUFFSIZE 32$/;"	d
BUFFSIZE	user/echosrv.c	7;"	d	file:
BUFFSIZE	user/echotest.c	5;"	d	file:
BUFFSIZE	user/httpd.c	11;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
BUFSIZ	user/sh.c	3;"	d	file:
BUSY	kern/lapic.c	30;"	d	file:
BYTE_ORDER	net/lwip/jos/arch/cc.h	38;"	d
BZERO	net/lwip/netif/ppp/ppp.h	212;"	d
C	kern/console.c	289;"	d	file:
CAPSLOCK	kern/console.c	224;"	d	file:
CBCP_OPT	net/lwip/netif/ppp/lcp.h	82;"	d
CBCP_SUPPORT	net/lwip/include/lwip/opt.h	1302;"	d
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CCP_SUPPORT	net/lwip/include/lwip/opt.h	1309;"	d
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHAPCS_CLOSED	net/lwip/netif/ppp/chap.h	103;"	d
CHAPCS_INITIAL	net/lwip/netif/ppp/chap.h	102;"	d
CHAPCS_LISTEN	net/lwip/netif/ppp/chap.h	105;"	d
CHAPCS_OPEN	net/lwip/netif/ppp/chap.h	107;"	d
CHAPCS_PENDING	net/lwip/netif/ppp/chap.h	104;"	d
CHAPCS_RESPONSE	net/lwip/netif/ppp/chap.h	106;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	71;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	81;"	d
CHAPSS_BADAUTH	net/lwip/netif/ppp/chap.h	118;"	d
CHAPSS_CLOSED	net/lwip/netif/ppp/chap.h	113;"	d
CHAPSS_INITIAL	net/lwip/netif/ppp/chap.h	112;"	d
CHAPSS_INITIAL_CHAL	net/lwip/netif/ppp/chap.h	115;"	d
CHAPSS_OPEN	net/lwip/netif/ppp/chap.h	116;"	d
CHAPSS_PENDING	net/lwip/netif/ppp/chap.h	114;"	d
CHAPSS_RECHALLENGE	net/lwip/netif/ppp/chap.h	117;"	d
CHAP_CHALLENGE	net/lwip/netif/ppp/chap.h	87;"	d
CHAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1354;"	d
CHAP_DEFTRANSMITS	net/lwip/include/lwip/opt.h	1358;"	d
CHAP_DIGEST_MD5	net/lwip/netif/ppp/chap.h	82;"	d
CHAP_FAILURE	net/lwip/netif/ppp/chap.h	90;"	d
CHAP_H	net/lwip/netif/ppp/chap.h	69;"	d
CHAP_HEADERLEN	net/lwip/netif/ppp/chap.h	76;"	d
CHAP_MICROSOFT	net/lwip/netif/ppp/chap.h	84;"	d
CHAP_PEER	net/lwip/netif/ppp/auth.c	93;"	d	file:
CHAP_RESPONSE	net/lwip/netif/ppp/chap.h	88;"	d
CHAP_SUCCESS	net/lwip/netif/ppp/chap.h	89;"	d
CHAP_SUPPORT	net/lwip/include/lwip/opt.h	1288;"	d
CHAP_WITHPEER	net/lwip/netif/ppp/auth.c	92;"	d	file:
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CHECKSUM_CHECK_IP	net/lwip/include/lwip/opt.h	1433;"	d
CHECKSUM_CHECK_TCP	net/lwip/include/lwip/opt.h	1447;"	d
CHECKSUM_CHECK_UDP	net/lwip/include/lwip/opt.h	1440;"	d
CHECKSUM_GEN_IP	net/lwip/include/lwip/opt.h	1412;"	d
CHECKSUM_GEN_TCP	net/lwip/include/lwip/opt.h	1426;"	d
CHECKSUM_GEN_UDP	net/lwip/include/lwip/opt.h	1419;"	d
CHPMS_H	net/lwip/netif/ppp/chpms.h	58;"	d
CILEN_ADDR	net/lwip/netif/ppp/ipcp.c	77;"	d	file:
CILEN_ADDRS	net/lwip/netif/ppp/ipcp.c	78;"	d	file:
CILEN_CBCP	net/lwip/netif/ppp/lcp.c	88;"	d	file:
CILEN_CHAP	net/lwip/netif/ppp/lcp.c	85;"	d	file:
CILEN_CHAR	net/lwip/netif/ppp/lcp.c	83;"	d	file:
CILEN_COMPRESS	net/lwip/netif/ppp/ipcp.c	75;"	d	file:
CILEN_LONG	net/lwip/netif/ppp/lcp.c	86;"	d	file:
CILEN_LQR	net/lwip/netif/ppp/lcp.c	87;"	d	file:
CILEN_SHORT	net/lwip/netif/ppp/lcp.c	84;"	d	file:
CILEN_VJ	net/lwip/netif/ppp/ipcp.c	76;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/ipcp.c	74;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/lcp.c	82;"	d	file:
CI_ACCOMPRESSION	net/lwip/netif/ppp/lcp.h	69;"	d
CI_ADDR	net/lwip/netif/ppp/ipcp.h	65;"	d
CI_ADDRS	net/lwip/netif/ppp/ipcp.h	63;"	d
CI_ASYNCMAP	net/lwip/netif/ppp/lcp.h	64;"	d
CI_AUTHTYPE	net/lwip/netif/ppp/lcp.h	65;"	d
CI_CALLBACK	net/lwip/netif/ppp/lcp.h	70;"	d
CI_COMPRESSTYPE	net/lwip/netif/ppp/ipcp.h	64;"	d
CI_EPDISC	net/lwip/netif/ppp/lcp.h	73;"	d
CI_MAGICNUMBER	net/lwip/netif/ppp/lcp.h	67;"	d
CI_MRRU	net/lwip/netif/ppp/lcp.h	71;"	d
CI_MRU	net/lwip/netif/ppp/lcp.h	63;"	d
CI_MS_DNS1	net/lwip/netif/ppp/ipcp.h	68;"	d
CI_MS_DNS2	net/lwip/netif/ppp/ipcp.h	70;"	d
CI_MS_WINS1	net/lwip/netif/ppp/ipcp.h	67;"	d
CI_MS_WINS2	net/lwip/netif/ppp/ipcp.h	69;"	d
CI_PCOMPRESSION	net/lwip/netif/ppp/lcp.h	68;"	d
CI_QUALITY	net/lwip/netif/ppp/lcp.h	66;"	d
CI_SSNHF	net/lwip/netif/ppp/lcp.h	72;"	d
CLOSED	net/lwip/include/lwip/tcp.h	/^  CLOSED      = 0,$/;"	e	enum:tcp_state
CLOSE_WAIT	net/lwip/include/lwip/tcp.h	/^  CLOSE_WAIT  = 7,$/;"	e	enum:tcp_state
CLOSING	net/lwip/include/lwip/tcp.h	/^  CLOSING     = 8,$/;"	e	enum:tcp_state
CMDBUF_SIZE	kern/monitor.c	16;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
CODENAME	net/lwip/netif/ppp/ipcp.c	115;"	d	file:
CODENAME	net/lwip/netif/ppp/lcp.c	130;"	d	file:
CODEREJ	net/lwip/netif/ppp/fsm.h	75;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONFACK	net/lwip/netif/ppp/fsm.h	70;"	d
CONFNAK	net/lwip/netif/ppp/fsm.h	71;"	d
CONFREJ	net/lwip/netif/ppp/fsm.h	72;"	d
CONFREQ	net/lwip/netif/ppp/fsm.h	69;"	d
CONSBUFSIZE	kern/console.c	388;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon12
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon12
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon12
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	221;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
ChallengeResponse	net/lwip/netif/ppp/chpms.c	/^ChallengeResponse( u_char *challenge, \/* IN   8 octets *\/$/;"	f	file:
ChapAuthPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthPeer(int unit, char *our_name, int digest)$/;"	f
ChapAuthWithPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthWithPeer(int unit, char *our_name, int digest)$/;"	f
ChapChallengeTimeout	net/lwip/netif/ppp/chap.c	/^ChapChallengeTimeout(void *arg)$/;"	f	file:
ChapGenChallenge	net/lwip/netif/ppp/chap.c	/^ChapGenChallenge(chap_state *cstate)$/;"	f	file:
ChapInit	net/lwip/netif/ppp/chap.c	/^ChapInit(int unit)$/;"	f	file:
ChapInput	net/lwip/netif/ppp/chap.c	/^ChapInput(int unit, u_char *inpacket, int packet_len)$/;"	f	file:
ChapLowerDown	net/lwip/netif/ppp/chap.c	/^ChapLowerDown(int unit)$/;"	f	file:
ChapLowerUp	net/lwip/netif/ppp/chap.c	/^ChapLowerUp(int unit)$/;"	f	file:
ChapMS	net/lwip/netif/ppp/chpms.c	/^ChapMS( chap_state *cstate, char *rchallenge, int rchallenge_len, char *secret, int secret_len)$/;"	f
ChapMS_LANMan	net/lwip/netif/ppp/chpms.c	/^ChapMS_LANMan( char *rchallenge,$/;"	f	file:
ChapMS_NT	net/lwip/netif/ppp/chpms.c	/^ChapMS_NT( char *rchallenge,$/;"	f	file:
ChapProtocolReject	net/lwip/netif/ppp/chap.c	/^ChapProtocolReject(int unit)$/;"	f	file:
ChapReceiveChallenge	net/lwip/netif/ppp/chap.c	/^ChapReceiveChallenge(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveFailure	net/lwip/netif/ppp/chap.c	/^ChapReceiveFailure(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapReceiveResponse	net/lwip/netif/ppp/chap.c	/^ChapReceiveResponse(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveSuccess	net/lwip/netif/ppp/chap.c	/^ChapReceiveSuccess(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapRechallenge	net/lwip/netif/ppp/chap.c	/^ChapRechallenge(void *arg)$/;"	f	file:
ChapResponseTimeout	net/lwip/netif/ppp/chap.c	/^ChapResponseTimeout(void *arg)$/;"	f	file:
ChapSendChallenge	net/lwip/netif/ppp/chap.c	/^ChapSendChallenge(chap_state *cstate)$/;"	f	file:
ChapSendResponse	net/lwip/netif/ppp/chap.c	/^ChapSendResponse(chap_state *cstate)$/;"	f	file:
ChapSendStatus	net/lwip/netif/ppp/chap.c	/^ChapSendStatus(chap_state *cstate, int code)$/;"	f	file:
Collapse	net/lwip/netif/ppp/chpms.c	/^Collapse(u_char *in, u_char *out)$/;"	f	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	57;"	d
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DECODEL	net/lwip/netif/ppp/vj.c	107;"	d	file:
DECODES	net/lwip/netif/ppp/vj.c	118;"	d	file:
DECODEU	net/lwip/netif/ppp/vj.c	129;"	d	file:
DECPTR	net/lwip/netif/ppp/ppp.h	208;"	d
DEFAULT	net/ns.h	6;"	d
DEFAULT_ACCEPTMBOX_SIZE	net/lwip/include/lwip/opt.h	1043;"	d
DEFAULT_RAW_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1016;"	d
DEFAULT_TCP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1034;"	d
DEFAULT_THREAD_NAME	net/lwip/include/lwip/opt.h	989;"	d
DEFAULT_THREAD_PRIO	net/lwip/include/lwip/opt.h	1007;"	d
DEFAULT_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	998;"	d
DEFAULT_UDP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1025;"	d
DEFEND_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	69;"	d
DEFLOOPBACKFAIL	net/lwip/netif/ppp/lcp.h	165;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DHCP_ACK	net/lwip/include/lwip/dhcp.h	188;"	d
DHCP_AUTOIP_COOP_STATE_OFF	net/lwip/include/lwip/dhcp.h	178;"	d
DHCP_AUTOIP_COOP_STATE_ON	net/lwip/include/lwip/dhcp.h	179;"	d
DHCP_BACKING_OFF	net/lwip/include/lwip/dhcp.h	174;"	d
DHCP_BOOTREPLY	net/lwip/include/lwip/dhcp.h	182;"	d
DHCP_BOOTREQUEST	net/lwip/include/lwip/dhcp.h	181;"	d
DHCP_BOUND	net/lwip/include/lwip/dhcp.h	172;"	d
DHCP_BROADCAST_FLAG	net/lwip/include/lwip/dhcp.h	197;"	d
DHCP_BROADCAST_MASK	net/lwip/include/lwip/dhcp.h	198;"	d
DHCP_CHADDR_LEN	net/lwip/include/lwip/dhcp.h	93;"	d
DHCP_CHADDR_OFS	net/lwip/include/lwip/dhcp.h	151;"	d
DHCP_CHECKING	net/lwip/include/lwip/dhcp.h	170;"	d
DHCP_CIADDR_OFS	net/lwip/include/lwip/dhcp.h	147;"	d
DHCP_CLIENT_PORT	net/lwip/include/lwip/dhcp.h	159;"	d
DHCP_COARSE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	21;"	d
DHCP_COARSE_TIMER_SECS	net/lwip/include/lwip/dhcp.h	19;"	d
DHCP_COOKIE_OFS	net/lwip/include/lwip/dhcp.h	156;"	d
DHCP_DEBUG	net/lwip/include/lwip/opt.h	1673;"	d
DHCP_DECLINE	net/lwip/include/lwip/dhcp.h	187;"	d
DHCP_DISCOVER	net/lwip/include/lwip/dhcp.h	184;"	d
DHCP_DOES_ARP_CHECK	net/lwip/include/lwip/opt.h	490;"	d
DHCP_FILE_LEN	net/lwip/include/lwip/dhcp.h	97;"	d
DHCP_FILE_OFS	net/lwip/include/lwip/dhcp.h	153;"	d
DHCP_FINE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	23;"	d
DHCP_FLAGS_OFS	net/lwip/include/lwip/dhcp.h	146;"	d
DHCP_GIADDR_OFS	net/lwip/include/lwip/dhcp.h	150;"	d
DHCP_HLEN_ETH	net/lwip/include/lwip/dhcp.h	195;"	d
DHCP_HLEN_OFS	net/lwip/include/lwip/dhcp.h	142;"	d
DHCP_HOPS_OFS	net/lwip/include/lwip/dhcp.h	143;"	d
DHCP_HTYPE_ETH	net/lwip/include/lwip/dhcp.h	193;"	d
DHCP_HTYPE_OFS	net/lwip/include/lwip/dhcp.h	141;"	d
DHCP_INFORM	net/lwip/include/lwip/dhcp.h	191;"	d
DHCP_INFORMING	net/lwip/include/lwip/dhcp.h	169;"	d
DHCP_INIT	net/lwip/include/lwip/dhcp.h	164;"	d
DHCP_MAX_DNS	net/lwip/include/lwip/dhcp.h	55;"	d
DHCP_MIN_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	100;"	d
DHCP_MSG_LEN	net/lwip/include/lwip/dhcp.h	154;"	d
DHCP_MSG_OFS	net/lwip/include/lwip/dhcp.h	139;"	d
DHCP_NAK	net/lwip/include/lwip/dhcp.h	189;"	d
DHCP_OFF	net/lwip/include/lwip/dhcp.h	175;"	d
DHCP_OFFER	net/lwip/include/lwip/dhcp.h	185;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	103;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	108;"	d
DHCP_OPTIONS_OFS	net/lwip/include/lwip/dhcp.h	157;"	d
DHCP_OPTION_BOOTFILE	net/lwip/include/lwip/dhcp.h	232;"	d
DHCP_OPTION_BROADCAST	net/lwip/include/lwip/dhcp.h	208;"	d
DHCP_OPTION_CLIENT_ID	net/lwip/include/lwip/dhcp.h	230;"	d
DHCP_OPTION_DNS_SERVER	net/lwip/include/lwip/dhcp.h	204;"	d
DHCP_OPTION_END	net/lwip/include/lwip/dhcp.h	210;"	d
DHCP_OPTION_HOSTNAME	net/lwip/include/lwip/dhcp.h	205;"	d
DHCP_OPTION_IP_TTL	net/lwip/include/lwip/dhcp.h	206;"	d
DHCP_OPTION_LEASE_TIME	net/lwip/include/lwip/dhcp.h	214;"	d
DHCP_OPTION_MAX_MSG_SIZE	net/lwip/include/lwip/dhcp.h	224;"	d
DHCP_OPTION_MAX_MSG_SIZE_LEN	net/lwip/include/lwip/dhcp.h	225;"	d
DHCP_OPTION_MESSAGE_TYPE	net/lwip/include/lwip/dhcp.h	217;"	d
DHCP_OPTION_MESSAGE_TYPE_LEN	net/lwip/include/lwip/dhcp.h	218;"	d
DHCP_OPTION_MTU	net/lwip/include/lwip/dhcp.h	207;"	d
DHCP_OPTION_OVERLOAD	net/lwip/include/lwip/dhcp.h	215;"	d
DHCP_OPTION_PAD	net/lwip/include/lwip/dhcp.h	201;"	d
DHCP_OPTION_PARAMETER_REQUEST_LIST	net/lwip/include/lwip/dhcp.h	222;"	d
DHCP_OPTION_REQUESTED_IP	net/lwip/include/lwip/dhcp.h	213;"	d
DHCP_OPTION_ROUTER	net/lwip/include/lwip/dhcp.h	203;"	d
DHCP_OPTION_SERVER_ID	net/lwip/include/lwip/dhcp.h	221;"	d
DHCP_OPTION_SUBNET_MASK	net/lwip/include/lwip/dhcp.h	202;"	d
DHCP_OPTION_T1	net/lwip/include/lwip/dhcp.h	227;"	d
DHCP_OPTION_T2	net/lwip/include/lwip/dhcp.h	228;"	d
DHCP_OPTION_TCP_TTL	net/lwip/include/lwip/dhcp.h	209;"	d
DHCP_OPTION_TFTP_SERVERNAME	net/lwip/include/lwip/dhcp.h	231;"	d
DHCP_OPTION_US	net/lwip/include/lwip/dhcp.h	229;"	d
DHCP_OP_OFS	net/lwip/include/lwip/dhcp.h	140;"	d
DHCP_OVERLOAD_FILE	net/lwip/include/lwip/dhcp.h	236;"	d
DHCP_OVERLOAD_NONE	net/lwip/include/lwip/dhcp.h	235;"	d
DHCP_OVERLOAD_SNAME	net/lwip/include/lwip/dhcp.h	237;"	d
DHCP_OVERLOAD_SNAME_FILE	net/lwip/include/lwip/dhcp.h	238;"	d
DHCP_PERMANENT	net/lwip/include/lwip/dhcp.h	171;"	d
DHCP_REBINDING	net/lwip/include/lwip/dhcp.h	166;"	d
DHCP_REBOOTING	net/lwip/include/lwip/dhcp.h	165;"	d
DHCP_RELEASE	net/lwip/include/lwip/dhcp.h	190;"	d
DHCP_RENEWING	net/lwip/include/lwip/dhcp.h	167;"	d
DHCP_REQUEST	net/lwip/include/lwip/dhcp.h	186;"	d
DHCP_REQUESTING	net/lwip/include/lwip/dhcp.h	163;"	d
DHCP_SECS_OFS	net/lwip/include/lwip/dhcp.h	145;"	d
DHCP_SELECTING	net/lwip/include/lwip/dhcp.h	168;"	d
DHCP_SERVER_PORT	net/lwip/include/lwip/dhcp.h	160;"	d
DHCP_SIADDR_OFS	net/lwip/include/lwip/dhcp.h	149;"	d
DHCP_SNAME_LEN	net/lwip/include/lwip/dhcp.h	95;"	d
DHCP_SNAME_OFS	net/lwip/include/lwip/dhcp.h	152;"	d
DHCP_XID_OFS	net/lwip/include/lwip/dhcp.h	144;"	d
DHCP_YIADDR_OFS	net/lwip/include/lwip/dhcp.h	148;"	d
DISCREQ	net/lwip/netif/ppp/lcp.h	81;"	d
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
DNS_DEBUG	net/lwip/include/lwip/opt.h	1701;"	d
DNS_DOES_NAME_CHECK	net/lwip/include/lwip/opt.h	600;"	d
DNS_FLAG1_AUTHORATIVE	net/lwip/core/dns.c	110;"	d	file:
DNS_FLAG1_OPCODE_INVERSE	net/lwip/core/dns.c	108;"	d	file:
DNS_FLAG1_OPCODE_STANDARD	net/lwip/core/dns.c	109;"	d	file:
DNS_FLAG1_OPCODE_STATUS	net/lwip/core/dns.c	107;"	d	file:
DNS_FLAG1_RD	net/lwip/core/dns.c	112;"	d	file:
DNS_FLAG1_RESPONSE	net/lwip/core/dns.c	106;"	d	file:
DNS_FLAG1_TRUNC	net/lwip/core/dns.c	111;"	d	file:
DNS_FLAG2_ERR_MASK	net/lwip/core/dns.c	114;"	d	file:
DNS_FLAG2_ERR_NAME	net/lwip/core/dns.c	116;"	d	file:
DNS_FLAG2_ERR_NONE	net/lwip/core/dns.c	115;"	d	file:
DNS_FLAG2_RA	net/lwip/core/dns.c	113;"	d	file:
DNS_MAX_NAME_LENGTH	net/lwip/include/lwip/opt.h	590;"	d
DNS_MAX_RETRIES	net/lwip/core/dns.c	97;"	d	file:
DNS_MAX_SERVERS	net/lwip/include/lwip/opt.h	595;"	d
DNS_MAX_TTL	net/lwip/core/dns.c	102;"	d	file:
DNS_MSG_SIZE	net/lwip/include/lwip/opt.h	612;"	d
DNS_RRCLASS_CH	net/lwip/include/lwip/dns.h	65;"	d
DNS_RRCLASS_CS	net/lwip/include/lwip/dns.h	64;"	d
DNS_RRCLASS_FLUSH	net/lwip/include/lwip/dns.h	67;"	d
DNS_RRCLASS_HS	net/lwip/include/lwip/dns.h	66;"	d
DNS_RRCLASS_IN	net/lwip/include/lwip/dns.h	63;"	d
DNS_RRTYPE_A	net/lwip/include/lwip/dns.h	45;"	d
DNS_RRTYPE_CNAME	net/lwip/include/lwip/dns.h	49;"	d
DNS_RRTYPE_HINFO	net/lwip/include/lwip/dns.h	57;"	d
DNS_RRTYPE_MB	net/lwip/include/lwip/dns.h	51;"	d
DNS_RRTYPE_MD	net/lwip/include/lwip/dns.h	47;"	d
DNS_RRTYPE_MF	net/lwip/include/lwip/dns.h	48;"	d
DNS_RRTYPE_MG	net/lwip/include/lwip/dns.h	52;"	d
DNS_RRTYPE_MINFO	net/lwip/include/lwip/dns.h	58;"	d
DNS_RRTYPE_MR	net/lwip/include/lwip/dns.h	53;"	d
DNS_RRTYPE_MX	net/lwip/include/lwip/dns.h	59;"	d
DNS_RRTYPE_NS	net/lwip/include/lwip/dns.h	46;"	d
DNS_RRTYPE_NULL	net/lwip/include/lwip/dns.h	54;"	d
DNS_RRTYPE_PTR	net/lwip/include/lwip/dns.h	56;"	d
DNS_RRTYPE_SOA	net/lwip/include/lwip/dns.h	50;"	d
DNS_RRTYPE_TXT	net/lwip/include/lwip/dns.h	60;"	d
DNS_RRTYPE_WKS	net/lwip/include/lwip/dns.h	55;"	d
DNS_SERVER_ADDRESS	net/lwip/core/dns.c	87;"	d	file:
DNS_SERVER_PORT	net/lwip/core/dns.c	92;"	d	file:
DNS_STATE_ASKING	net/lwip/core/dns.c	121;"	d	file:
DNS_STATE_DONE	net/lwip/core/dns.c	122;"	d	file:
DNS_STATE_NEW	net/lwip/core/dns.c	120;"	d	file:
DNS_STATE_UNUSED	net/lwip/core/dns.c	119;"	d	file:
DNS_TABLE_SIZE	net/lwip/include/lwip/opt.h	585;"	d
DNS_TMR_INTERVAL	net/lwip/include/lwip/dns.h	42;"	d
DNS_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	607;"	d
DTEMP	lib/extraspawn.c	7;"	d	file:
DesEncrypt	net/lwip/netif/ppp/chpms.c	/^DesEncrypt( u_char *clear, \/* IN  8 octets *\/$/;"	f	file:
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/ns.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testinput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testoutput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echosrv.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echotest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/exechello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/httpd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testtime.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	228;"	d	file:
E1000_TCTL	kern/e1000.h	11;"	d
E1000_TDBAH	kern/e1000.h	7;"	d
E1000_TDBAL	kern/e1000.h	6;"	d
E1000_TDH	kern/e1000.h	9;"	d
E1000_TDLEN	kern/e1000.h	8;"	d
E1000_TDT	kern/e1000.h	10;"	d
E1000_TIPG	kern/e1000.h	12;"	d
E2BIG	net/lwip/include/lwip/arch.h	75;"	d
EACCES	net/lwip/include/lwip/arch.h	81;"	d
EADDRINUSE	net/lwip/include/lwip/arch.h	168;"	d
EADDRNOTAVAIL	net/lwip/include/lwip/arch.h	169;"	d
EADV	net/lwip/include/lwip/arch.h	138;"	d
EAFNOSUPPORT	net/lwip/include/lwip/arch.h	167;"	d
EAGAIN	net/lwip/include/lwip/arch.h	79;"	d
EAI_FAIL	net/lwip/include/lwip/netdb.h	53;"	d
EAI_MEMORY	net/lwip/include/lwip/netdb.h	54;"	d
EAI_NONAME	net/lwip/include/lwip/netdb.h	51;"	d
EAI_SERVICE	net/lwip/include/lwip/netdb.h	52;"	d
EALREADY	net/lwip/include/lwip/arch.h	184;"	d
EBADE	net/lwip/include/lwip/arch.h	120;"	d
EBADF	net/lwip/include/lwip/arch.h	77;"	d
EBADFD	net/lwip/include/lwip/arch.h	147;"	d
EBADMSG	net/lwip/include/lwip/arch.h	144;"	d
EBADR	net/lwip/include/lwip/arch.h	121;"	d
EBADRQC	net/lwip/include/lwip/arch.h	124;"	d
EBADSLT	net/lwip/include/lwip/arch.h	125;"	d
EBFONT	net/lwip/include/lwip/arch.h	129;"	d
EBUSY	net/lwip/include/lwip/arch.h	84;"	d
ECHILD	net/lwip/include/lwip/arch.h	78;"	d
ECHOREP	net/lwip/netif/ppp/lcp.h	80;"	d
ECHOREQ	net/lwip/netif/ppp/lcp.h	79;"	d
ECHRNG	net/lwip/include/lwip/arch.h	112;"	d
ECOMM	net/lwip/include/lwip/arch.h	140;"	d
ECONNABORTED	net/lwip/include/lwip/arch.h	173;"	d
ECONNREFUSED	net/lwip/include/lwip/arch.h	181;"	d
ECONNRESET	net/lwip/include/lwip/arch.h	174;"	d
EDEADLK	net/lwip/include/lwip/arch.h	103;"	d
EDEADLOCK	net/lwip/include/lwip/arch.h	127;"	d
EDESTADDRREQ	net/lwip/include/lwip/arch.h	159;"	d
EDOM	net/lwip/include/lwip/arch.h	101;"	d
EDOTDOT	net/lwip/include/lwip/arch.h	143;"	d
EDQUOT	net/lwip/include/lwip/arch.h	192;"	d
EEXIST	net/lwip/include/lwip/arch.h	85;"	d
EFAULT	net/lwip/include/lwip/arch.h	82;"	d
EFBIG	net/lwip/include/lwip/arch.h	95;"	d
EHOSTDOWN	net/lwip/include/lwip/arch.h	182;"	d
EHOSTUNREACH	net/lwip/include/lwip/arch.h	183;"	d
EIDRM	net/lwip/include/lwip/arch.h	111;"	d
EILSEQ	net/lwip/include/lwip/arch.h	154;"	d
EINPROGRESS	net/lwip/include/lwip/arch.h	185;"	d
EINTR	net/lwip/include/lwip/arch.h	72;"	d
EINVAL	net/lwip/include/lwip/arch.h	90;"	d
EIO	net/lwip/include/lwip/arch.h	73;"	d
EISCONN	net/lwip/include/lwip/arch.h	176;"	d
EISDIR	net/lwip/include/lwip/arch.h	89;"	d
EISNAM	net/lwip/include/lwip/arch.h	190;"	d
EL2HLT	net/lwip/include/lwip/arch.h	119;"	d
EL2NSYNC	net/lwip/include/lwip/arch.h	113;"	d
EL3HLT	net/lwip/include/lwip/arch.h	114;"	d
EL3RST	net/lwip/include/lwip/arch.h	115;"	d
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ELIBACC	net/lwip/include/lwip/arch.h	149;"	d
ELIBBAD	net/lwip/include/lwip/arch.h	150;"	d
ELIBEXEC	net/lwip/include/lwip/arch.h	153;"	d
ELIBMAX	net/lwip/include/lwip/arch.h	152;"	d
ELIBSCN	net/lwip/include/lwip/arch.h	151;"	d
ELNRNG	net/lwip/include/lwip/arch.h	116;"	d
ELOOP	net/lwip/include/lwip/arch.h	108;"	d
EMEDIUMTYPE	net/lwip/include/lwip/arch.h	195;"	d
EMFILE	net/lwip/include/lwip/arch.h	92;"	d
EMLINK	net/lwip/include/lwip/arch.h	99;"	d
EMSGSIZE	net/lwip/include/lwip/arch.h	160;"	d
EMULTIHOP	net/lwip/include/lwip/arch.h	142;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENABLE_LOOPBACK	net/lwip/include/lwip/netif.h	37;"	d
ENAMETOOLONG	net/lwip/include/lwip/arch.h	104;"	d
ENAVAIL	net/lwip/include/lwip/arch.h	189;"	d
ENCODE	net/lwip/netif/ppp/vj.c	86;"	d	file:
ENCODEZ	net/lwip/netif/ppp/vj.c	96;"	d	file:
ENETDOWN	net/lwip/include/lwip/arch.h	170;"	d
ENETRESET	net/lwip/include/lwip/arch.h	172;"	d
ENETUNREACH	net/lwip/include/lwip/arch.h	171;"	d
ENFILE	net/lwip/include/lwip/arch.h	91;"	d
ENOANO	net/lwip/include/lwip/arch.h	123;"	d
ENOBUFS	net/lwip/include/lwip/arch.h	175;"	d
ENOCSI	net/lwip/include/lwip/arch.h	118;"	d
ENODATA	net/lwip/include/lwip/arch.h	131;"	d
ENODEV	net/lwip/include/lwip/arch.h	87;"	d
ENOENT	net/lwip/include/lwip/arch.h	70;"	d
ENOEXEC	net/lwip/include/lwip/arch.h	76;"	d
ENOLCK	net/lwip/include/lwip/arch.h	105;"	d
ENOLINK	net/lwip/include/lwip/arch.h	137;"	d
ENOMEDIUM	net/lwip/include/lwip/arch.h	194;"	d
ENOMEM	net/lwip/include/lwip/arch.h	80;"	d
ENOMSG	net/lwip/include/lwip/arch.h	110;"	d
ENONET	net/lwip/include/lwip/arch.h	134;"	d
ENOPKG	net/lwip/include/lwip/arch.h	135;"	d
ENOPROTOOPT	net/lwip/include/lwip/arch.h	162;"	d
ENOSPC	net/lwip/include/lwip/arch.h	96;"	d
ENOSR	net/lwip/include/lwip/arch.h	133;"	d
ENOSTR	net/lwip/include/lwip/arch.h	130;"	d
ENOSYS	net/lwip/include/lwip/arch.h	106;"	d
ENOTBLK	net/lwip/include/lwip/arch.h	83;"	d
ENOTCONN	net/lwip/include/lwip/arch.h	177;"	d
ENOTDIR	net/lwip/include/lwip/arch.h	88;"	d
ENOTEMPTY	net/lwip/include/lwip/arch.h	107;"	d
ENOTNAM	net/lwip/include/lwip/arch.h	188;"	d
ENOTSOCK	net/lwip/include/lwip/arch.h	158;"	d
ENOTTY	net/lwip/include/lwip/arch.h	93;"	d
ENOTUNIQ	net/lwip/include/lwip/arch.h	146;"	d
ENSRBADFAMILY	net/lwip/include/lwip/arch.h	207;"	d
ENSRBADNAME	net/lwip/include/lwip/arch.h	206;"	d
ENSRBADQUERY	net/lwip/include/lwip/arch.h	205;"	d
ENSRBADRESP	net/lwip/include/lwip/arch.h	208;"	d
ENSRCNAMELOOP	net/lwip/include/lwip/arch.h	216;"	d
ENSRCONNREFUSED	net/lwip/include/lwip/arch.h	209;"	d
ENSRDESTRUCTION	net/lwip/include/lwip/arch.h	214;"	d
ENSRFILE	net/lwip/include/lwip/arch.h	212;"	d
ENSRFORMERR	net/lwip/include/lwip/arch.h	200;"	d
ENSRNODATA	net/lwip/include/lwip/arch.h	199;"	d
ENSRNOMEM	net/lwip/include/lwip/arch.h	213;"	d
ENSRNOTFOUND	net/lwip/include/lwip/arch.h	202;"	d
ENSRNOTIMP	net/lwip/include/lwip/arch.h	203;"	d
ENSROF	net/lwip/include/lwip/arch.h	211;"	d
ENSROK	net/lwip/include/lwip/arch.h	198;"	d
ENSRQUERYDOMAINTOOLONG	net/lwip/include/lwip/arch.h	215;"	d
ENSRREFUSED	net/lwip/include/lwip/arch.h	204;"	d
ENSRSERVFAIL	net/lwip/include/lwip/arch.h	201;"	d
ENSRTIMEOUT	net/lwip/include/lwip/arch.h	210;"	d
ENTRY	net/lwip/jos/arch/longjmp.S	/^#define ENTRY(x) \\$/;"	d
ENTRY	obj/net/ns.asm	/^#define ENTRY(x) \\$/;"	d
ENVGENSHIFT	kern/env.c	23;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	31;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon4
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon4
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon4
ENV_PASTE3	kern/env.h	29;"	d
ENV_PRIORITY_ABOVE_NORMAL	inc/env.h	/^	ENV_PRIORITY_ABOVE_NORMAL,$/;"	e	enum:__anon5
ENV_PRIORITY_BELOW_NORMAL	inc/env.h	/^	ENV_PRIORITY_BELOW_NORMAL,$/;"	e	enum:__anon5
ENV_PRIORITY_HIGHEST	inc/env.h	/^	ENV_PRIORITY_HIGHEST,$/;"	e	enum:__anon5
ENV_PRIORITY_LOWEST	inc/env.h	/^	ENV_PRIORITY_LOWEST$/;"	e	enum:__anon5
ENV_PRIORITY_NORMAL	inc/env.h	/^	ENV_PRIORITY_NORMAL,$/;"	e	enum:__anon5
ENV_PRIORITY_TIME_CRITICAL	inc/env.h	/^	ENV_PRIORITY_TIME_CRITICAL = 1, $/;"	e	enum:__anon5
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon4
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon4
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_NS	inc/env.h	/^	ENV_TYPE_NS,		\/\/ Network server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
ENXIO	net/lwip/include/lwip/arch.h	74;"	d
EOI	kern/lapic.c	17;"	d	file:
EOPNOTSUPP	net/lwip/include/lwip/arch.h	165;"	d
EOVERFLOW	net/lwip/include/lwip/arch.h	145;"	d
EPERM	net/lwip/include/lwip/arch.h	69;"	d
EPFNOSUPPORT	net/lwip/include/lwip/arch.h	166;"	d
EPIPE	net/lwip/include/lwip/arch.h	100;"	d
EPROTO	net/lwip/include/lwip/arch.h	141;"	d
EPROTONOSUPPORT	net/lwip/include/lwip/arch.h	163;"	d
EPROTOTYPE	net/lwip/include/lwip/arch.h	161;"	d
ERANGE	net/lwip/include/lwip/arch.h	102;"	d
EREMCHG	net/lwip/include/lwip/arch.h	148;"	d
EREMOTE	net/lwip/include/lwip/arch.h	136;"	d
EREMOTEIO	net/lwip/include/lwip/arch.h	191;"	d
ERESTART	net/lwip/include/lwip/arch.h	155;"	d
EROFS	net/lwip/include/lwip/arch.h	98;"	d
ERRNO	net/lwip/jos/lwipopts.h	61;"	d
ERROR	kern/lapic.c	39;"	d	file:
ERR_ABRT	net/lwip/include/lwip/err.h	60;"	d
ERR_ARG	net/lwip/include/lwip/err.h	67;"	d
ERR_BUF	net/lwip/include/lwip/err.h	54;"	d
ERR_CLSD	net/lwip/include/lwip/err.h	62;"	d
ERR_CONN	net/lwip/include/lwip/err.h	63;"	d
ERR_IF	net/lwip/include/lwip/err.h	71;"	d
ERR_INPROGRESS	net/lwip/include/lwip/err.h	74;"	d
ERR_ISCONN	net/lwip/include/lwip/err.h	72;"	d
ERR_IS_FATAL	net/lwip/include/lwip/err.h	58;"	d
ERR_MEM	net/lwip/include/lwip/err.h	53;"	d
ERR_OK	net/lwip/include/lwip/err.h	52;"	d
ERR_RST	net/lwip/include/lwip/err.h	61;"	d
ERR_RTE	net/lwip/include/lwip/err.h	56;"	d
ERR_TIMEOUT	net/lwip/include/lwip/err.h	55;"	d
ERR_TO_ERRNO_TABLE_SIZE	net/lwip/api/sockets.c	145;"	d	file:
ERR_USE	net/lwip/include/lwip/err.h	69;"	d
ERR_VAL	net/lwip/include/lwip/err.h	65;"	d
ESCAPE_P	net/lwip/netif/ppp/ppp.c	135;"	d	file:
ESHUTDOWN	net/lwip/include/lwip/arch.h	178;"	d
ESOCKTNOSUPPORT	net/lwip/include/lwip/arch.h	164;"	d
ESPIPE	net/lwip/include/lwip/arch.h	97;"	d
ESR	kern/lapic.c	20;"	d	file:
ESRCH	net/lwip/include/lwip/arch.h	71;"	d
ESRMNT	net/lwip/include/lwip/arch.h	139;"	d
ESTABLISHED	net/lwip/include/lwip/tcp.h	/^  ESTABLISHED = 4,$/;"	e	enum:tcp_state
ESTALE	net/lwip/include/lwip/arch.h	186;"	d
ESTRPIPE	net/lwip/include/lwip/arch.h	156;"	d
ETHARP_DEBUG	net/lwip/include/lwip/opt.h	1476;"	d
ETHARP_FIND_ONLY	net/lwip/netif/etharp.c	118;"	d	file:
ETHARP_HWADDR_LEN	net/lwip/include/netif/etharp.h	56;"	d
ETHARP_STATE_EMPTY	net/lwip/netif/etharp.c	/^  ETHARP_STATE_EMPTY = 0,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_PENDING	net/lwip/netif/etharp.c	/^  ETHARP_STATE_PENDING,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_STABLE	net/lwip/netif/etharp.c	/^  ETHARP_STATE_STABLE$/;"	e	enum:etharp_state	file:
ETHARP_STATS	net/lwip/include/lwip/opt.h	1157;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	202;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	205;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	201;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	204;"	d
ETHARP_TRUST_IP_MAC	net/lwip/include/lwip/opt.h	348;"	d
ETHARP_TRY_HARD	net/lwip/netif/etharp.c	117;"	d	file:
ETHERMTU	net/lwip/include/netif/ppp_oe.h	135;"	d
ETHTYPE_ARP	net/lwip/include/netif/etharp.h	125;"	d
ETHTYPE_IP	net/lwip/include/netif/etharp.h	126;"	d
ETHTYPE_PPPOE	net/lwip/include/netif/etharp.h	128;"	d
ETHTYPE_PPPOEDISC	net/lwip/include/netif/etharp.h	127;"	d
ETH_PAD_SIZE	net/lwip/include/netif/etharp.h	52;"	d
ETIME	net/lwip/include/lwip/arch.h	132;"	d
ETIMEDOUT	net/lwip/include/lwip/arch.h	180;"	d
ETOOMANYREFS	net/lwip/include/lwip/arch.h	179;"	d
ETXTBSY	net/lwip/include/lwip/arch.h	94;"	d
EUCLEAN	net/lwip/include/lwip/arch.h	187;"	d
EUNATCH	net/lwip/include/lwip/arch.h	117;"	d
EUSERS	net/lwip/include/lwip/arch.h	157;"	d
EWOULDBLOCK	net/lwip/include/lwip/arch.h	109;"	d
EXDEV	net/lwip/include/lwip/arch.h	86;"	d
EXFULL	net/lwip/include/lwip/arch.h	122;"	d
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon3
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	,	\/\/ Bad path$/;"	e	enum:__anon3
E_BAD_REQ	user/httpd.c	9;"	d	file:
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon3
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon3
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	,	\/\/ File already exists$/;"	e	enum:__anon3
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon3
E_INVAL_PRIORITY	inc/error.h	/^	E_INVAL_PRIORITY	\/\/ Invalid Env Priority$/;"	e	enum:__anon3
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon3
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	,	\/\/ Too many files are open$/;"	e	enum:__anon3
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	,	\/\/ File not a valid executable$/;"	e	enum:__anon3
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	, 	\/\/ File or block not found$/;"	e	enum:__anon3
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	,	\/\/ Operation not supported$/;"	e	enum:__anon3
E_NO_DISK	inc/error.h	/^	E_NO_DISK	,	\/\/ No free space left on disk$/;"	e	enum:__anon3
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon3
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon3
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon3
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
Expand	net/lwip/netif/ppp/chpms.c	/^Expand(u_char *in, u_char *out)$/;"	f	file:
F	net/lwip/netif/ppp/md5.c	71;"	d	file:
FDTABLE	lib/fd.c	8;"	d	file:
FD_CLR	net/lwip/include/lwip/sockets.h	277;"	d
FD_ISSET	net/lwip/include/lwip/sockets.h	278;"	d
FD_SET	net/lwip/include/lwip/sockets.h	276;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	273;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	275;"	d
FD_ZERO	net/lwip/include/lwip/sockets.h	279;"	d
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FF	net/lwip/netif/ppp/md5.c	81;"	d	file:
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIN_WAIT_1	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_1  = 5,$/;"	e	enum:tcp_state
FIN_WAIT_2	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_2  = 6,$/;"	e	enum:tcp_state
FIONBIO	net/lwip/include/lwip/sockets.h	254;"	d
FIONREAD	net/lwip/include/lwip/sockets.h	251;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FOLD_U32T	net/lwip/core/ipv4/inet_chksum.c	69;"	d	file:
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	70;"	d
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	80;"	d
FSM_DEFMAXCONFREQS	net/lwip/include/lwip/opt.h	1338;"	d
FSM_DEFMAXNAKLOOPS	net/lwip/include/lwip/opt.h	1342;"	d
FSM_DEFMAXTERMREQS	net/lwip/include/lwip/opt.h	1334;"	d
FSM_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1330;"	d
FSM_H	net/lwip/netif/ppp/fsm.h	55;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon2
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon2
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon2
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon2
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon2
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon2
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon2
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon2
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
FdSock	inc/fd.h	/^struct FdSock {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
G	net/lwip/netif/ppp/md5.c	72;"	d	file:
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
GETCHAR	net/lwip/netif/ppp/ppp.h	176;"	d
GETLONG	net/lwip/netif/ppp/ppp.h	193;"	d
GETSHORT	net/lwip/netif/ppp/ppp.h	184;"	d
GG	net/lwip/netif/ppp/md5.c	86;"	d	file:
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Get7Bits	net/lwip/netif/ppp/chpms.c	/^Get7Bits( u_char *input, int startBit)$/;"	f	file:
GetMask	net/lwip/netif/ppp/ppp.c	/^GetMask(u32_t addr)$/;"	f
H	net/lwip/netif/ppp/md5.c	73;"	d	file:
HEADERLEN	net/lwip/netif/ppp/fsm.h	63;"	d
HH	net/lwip/netif/ppp/md5.c	91;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	65;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	67;"	d	file:
HOST_NOT_FOUND	net/lwip/include/lwip/netdb.h	56;"	d
HTTP_VERSION	user/httpd.c	7;"	d	file:
HWTYPE_ETHERNET	net/lwip/netif/etharp.c	79;"	d	file:
I	net/lwip/netif/ppp/md5.c	74;"	d	file:
ICMP6_DUR	net/lwip/include/ipv6/lwip/icmp.h	46;"	d
ICMP6_ECHO	net/lwip/include/ipv6/lwip/icmp.h	48;"	d
ICMP6_ER	net/lwip/include/ipv6/lwip/icmp.h	49;"	d
ICMP6_TE	net/lwip/include/ipv6/lwip/icmp.h	47;"	d
ICMPH_CODE	net/lwip/include/ipv4/lwip/icmp.h	110;"	d
ICMPH_CODE_SET	net/lwip/include/ipv4/lwip/icmp.h	113;"	d
ICMPH_TYPE	net/lwip/include/ipv4/lwip/icmp.h	109;"	d
ICMPH_TYPE_SET	net/lwip/include/ipv4/lwip/icmp.h	112;"	d
ICMP_DEBUG	net/lwip/include/lwip/opt.h	1518;"	d
ICMP_DEST_UNREACH_DATASIZE	net/lwip/core/ipv4/icmp.c	57;"	d	file:
ICMP_DUR	net/lwip/include/ipv4/lwip/icmp.h	48;"	d
ICMP_DUR_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_ECHO	net/lwip/include/ipv4/lwip/icmp.h	51;"	d
ICMP_ER	net/lwip/include/ipv4/lwip/icmp.h	47;"	d
ICMP_IR	net/lwip/include/ipv4/lwip/icmp.h	57;"	d
ICMP_IRQ	net/lwip/include/ipv4/lwip/icmp.h	56;"	d
ICMP_PP	net/lwip/include/ipv4/lwip/icmp.h	53;"	d
ICMP_RD	net/lwip/include/ipv4/lwip/icmp.h	50;"	d
ICMP_SQ	net/lwip/include/ipv4/lwip/icmp.h	49;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1179;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1231;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	170;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	173;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	169;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	172;"	d
ICMP_TE	net/lwip/include/ipv4/lwip/icmp.h	52;"	d
ICMP_TE_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TS	net/lwip/include/ipv4/lwip/icmp.h	54;"	d
ICMP_TSR	net/lwip/include/ipv4/lwip/icmp.h	55;"	d
ICMP_TTL	net/lwip/include/lwip/opt.h	452;"	d
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IFF_PASSIVE	net/lwip/netif/ppp/ppp_oe.c	188;"	d	file:
IGMP_ADD_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	73;"	d
IGMP_DEBUG	net/lwip/include/lwip/opt.h	1525;"	d
IGMP_DEL_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	72;"	d
IGMP_GROUP_DELAYING_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	77;"	d
IGMP_GROUP_IDLE_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	78;"	d
IGMP_GROUP_NON_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	76;"	d
IGMP_JOIN_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	69;"	d
IGMP_LEAVE_GROUP	net/lwip/include/ipv4/lwip/igmp.h	64;"	d
IGMP_MEMB_QUERY	net/lwip/include/ipv4/lwip/igmp.h	61;"	d
IGMP_MINLEN	net/lwip/include/ipv4/lwip/igmp.h	54;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1186;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1232;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	178;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	181;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	177;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	180;"	d
IGMP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/igmp.h	67;"	d
IGMP_TTL	net/lwip/include/ipv4/lwip/igmp.h	53;"	d
IGMP_V1_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	68;"	d
IGMP_V1_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	62;"	d
IGMP_V2_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	63;"	d
II	net/lwip/netif/ppp/md5.c	96;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INADDR_ANY	net/lwip/include/lwip/sockets.h	127;"	d
INADDR_BROADCAST	net/lwip/include/lwip/sockets.h	128;"	d
INADDR_LOOPBACK	net/lwip/include/ipv4/lwip/ip_addr.h	81;"	d
INADDR_NONE	net/lwip/include/ipv4/lwip/ip_addr.h	80;"	d
INCPTR	net/lwip/netif/ppp/ppp.h	207;"	d
INCR	net/lwip/netif/ppp/vj.c	45;"	d	file:
INCR	net/lwip/netif/ppp/vj.c	47;"	d	file:
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INET_DEBUG	net/lwip/include/lwip/opt.h	1532;"	d
INIT	kern/lapic.c	22;"	d	file:
IN_BADCLASS	net/lwip/include/ipv4/lwip/ip_addr.h	112;"	d
IN_CLASSA	net/lwip/include/ipv4/lwip/ip_addr.h	88;"	d
IN_CLASSA_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	91;"	d
IN_CLASSA_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	92;"	d
IN_CLASSA_NET	net/lwip/include/ipv4/lwip/ip_addr.h	89;"	d
IN_CLASSA_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	90;"	d
IN_CLASSB	net/lwip/include/ipv4/lwip/ip_addr.h	94;"	d
IN_CLASSB_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	97;"	d
IN_CLASSB_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	98;"	d
IN_CLASSB_NET	net/lwip/include/ipv4/lwip/ip_addr.h	95;"	d
IN_CLASSB_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	96;"	d
IN_CLASSC	net/lwip/include/ipv4/lwip/ip_addr.h	100;"	d
IN_CLASSC_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	103;"	d
IN_CLASSC_NET	net/lwip/include/ipv4/lwip/ip_addr.h	101;"	d
IN_CLASSC_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	102;"	d
IN_CLASSD	net/lwip/include/ipv4/lwip/ip_addr.h	105;"	d
IN_CLASSD_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	108;"	d
IN_CLASSD_NET	net/lwip/include/ipv4/lwip/ip_addr.h	106;"	d
IN_CLASSD_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	107;"	d
IN_EXPERIMENTAL	net/lwip/include/ipv4/lwip/ip_addr.h	111;"	d
IN_LOOPBACKNET	net/lwip/include/ipv4/lwip/ip_addr.h	114;"	d
IN_MULTICAST	net/lwip/include/ipv4/lwip/ip_addr.h	109;"	d
IOCPARM_MASK	net/lwip/include/lwip/sockets.h	236;"	d
IOC_IN	net/lwip/include/lwip/sockets.h	239;"	d
IOC_INOUT	net/lwip/include/lwip/sockets.h	240;"	d
IOC_OUT	net/lwip/include/lwip/sockets.h	238;"	d
IOC_VOID	net/lwip/include/lwip/sockets.h	237;"	d
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IP	net/ns.h	4;"	d
IP4_ADDR	net/lwip/include/ipv4/lwip/ip_addr.h	116;"	d
IP6_ADDR	net/lwip/include/ipv6/lwip/ip_addr.h	71;"	d
IPADDR	user/echotest.c	6;"	d	file:
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	67;"	d
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	77;"	d
IPCP_H	net/lwip/netif/ppp/ipcp.h	55;"	d
IPCP_VJMODE_OLD	net/lwip/netif/ppp/ipcp.h	72;"	d
IPCP_VJMODE_RFC1172	net/lwip/netif/ppp/ipcp.h	73;"	d
IPCP_VJMODE_RFC1332	net/lwip/netif/ppp/ipcp.h	74;"	d
IPCP_VJ_COMP	net/lwip/netif/ppp/ipcp.h	77;"	d
IPCP_VJ_COMP_OLD	net/lwip/netif/ppp/ipcp.h	78;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1172;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1230;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	194;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	197;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	193;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	196;"	d
IPH_CHKSUM	net/lwip/include/ipv4/lwip/ip.h	151;"	d
IPH_CHKSUM_SET	net/lwip/include/ipv4/lwip/ip.h	159;"	d
IPH_HL	net/lwip/include/ipv4/lwip/ip.h	144;"	d
IPH_ID	net/lwip/include/ipv4/lwip/ip.h	147;"	d
IPH_ID_SET	net/lwip/include/ipv4/lwip/ip.h	155;"	d
IPH_LEN	net/lwip/include/ipv4/lwip/ip.h	146;"	d
IPH_LEN_SET	net/lwip/include/ipv4/lwip/ip.h	154;"	d
IPH_OFFSET	net/lwip/include/ipv4/lwip/ip.h	148;"	d
IPH_OFFSET_SET	net/lwip/include/ipv4/lwip/ip.h	156;"	d
IPH_PROTO	net/lwip/include/ipv4/lwip/ip.h	150;"	d
IPH_PROTO	net/lwip/include/ipv6/lwip/ip.h	99;"	d
IPH_PROTO_SET	net/lwip/include/ipv4/lwip/ip.h	158;"	d
IPH_TOS	net/lwip/include/ipv4/lwip/ip.h	145;"	d
IPH_TTL	net/lwip/include/ipv4/lwip/ip.h	149;"	d
IPH_TTL_SET	net/lwip/include/ipv4/lwip/ip.h	157;"	d
IPH_V	net/lwip/include/ipv4/lwip/ip.h	143;"	d
IPH_VHLTOS_SET	net/lwip/include/ipv4/lwip/ip.h	153;"	d
IPPROTO_IP	net/lwip/include/lwip/sockets.h	122;"	d
IPPROTO_TCP	net/lwip/include/lwip/sockets.h	123;"	d
IPPROTO_UDP	net/lwip/include/lwip/sockets.h	124;"	d
IPPROTO_UDPLITE	net/lwip/include/lwip/sockets.h	125;"	d
IPTOS_LOWCOST	net/lwip/include/lwip/sockets.h	201;"	d
IPTOS_LOWDELAY	net/lwip/include/lwip/sockets.h	198;"	d
IPTOS_MINCOST	net/lwip/include/lwip/sockets.h	202;"	d
IPTOS_PREC	net/lwip/include/lwip/sockets.h	214;"	d
IPTOS_PREC_CRITIC_ECP	net/lwip/include/lwip/sockets.h	217;"	d
IPTOS_PREC_FLASH	net/lwip/include/lwip/sockets.h	219;"	d
IPTOS_PREC_FLASHOVERRIDE	net/lwip/include/lwip/sockets.h	218;"	d
IPTOS_PREC_IMMEDIATE	net/lwip/include/lwip/sockets.h	220;"	d
IPTOS_PREC_INTERNETCONTROL	net/lwip/include/lwip/sockets.h	216;"	d
IPTOS_PREC_MASK	net/lwip/include/lwip/sockets.h	213;"	d
IPTOS_PREC_NETCONTROL	net/lwip/include/lwip/sockets.h	215;"	d
IPTOS_PREC_PRIORITY	net/lwip/include/lwip/sockets.h	221;"	d
IPTOS_PREC_ROUTINE	net/lwip/include/lwip/sockets.h	222;"	d
IPTOS_RELIABILITY	net/lwip/include/lwip/sockets.h	200;"	d
IPTOS_THROUGHPUT	net/lwip/include/lwip/sockets.h	199;"	d
IPTOS_TOS	net/lwip/include/lwip/sockets.h	197;"	d
IPTOS_TOS_MASK	net/lwip/include/lwip/sockets.h	196;"	d
IP_ADDRESSES_AND_ID_MATCH	net/lwip/core/ipv4/ip_frag.c	91;"	d	file:
IP_ADDR_ANY	net/lwip/include/ipv4/lwip/ip_addr.h	77;"	d
IP_ADDR_ANY	net/lwip/include/ipv6/lwip/ip_addr.h	41;"	d
IP_ADDR_ANY_VALUE	net/lwip/core/ipv4/ip_addr.c	44;"	d	file:
IP_ADDR_BROADCAST	net/lwip/include/ipv4/lwip/ip_addr.h	78;"	d
IP_ADDR_BROADCAST_VALUE	net/lwip/core/ipv4/ip_addr.c	45;"	d	file:
IP_ADD_MEMBERSHIP	net/lwip/include/lwip/sockets.h	168;"	d
IP_DEBUG	net/lwip/include/lwip/opt.h	1539;"	d
IP_DEFAULT_TTL	net/lwip/include/lwip/opt.h	432;"	d
IP_DF	net/lwip/include/ipv4/lwip/ip.h	127;"	d
IP_DF	net/lwip/netif/ppp/vjbsdhdr.h	33;"	d
IP_DROP_MEMBERSHIP	net/lwip/include/lwip/sockets.h	169;"	d
IP_FORWARD	net/lwip/include/lwip/opt.h	362;"	d
IP_FRAG	net/lwip/include/lwip/opt.h	389;"	d
IP_FRAG_MAX_MTU	net/lwip/include/lwip/opt.h	425;"	d
IP_FRAG_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	417;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	66;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	68;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	57;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	59;"	d
IP_HLEN	net/lwip/include/ipv4/lwip/ip.h	55;"	d
IP_HLEN	net/lwip/include/ipv6/lwip/ip.h	46;"	d
IP_MF	net/lwip/include/ipv4/lwip/ip.h	128;"	d
IP_MF	net/lwip/netif/ppp/vjbsdhdr.h	34;"	d
IP_MULTICAST_IF	net/lwip/include/lwip/sockets.h	171;"	d
IP_MULTICAST_LOOP	net/lwip/include/lwip/sockets.h	172;"	d
IP_MULTICAST_TTL	net/lwip/include/lwip/sockets.h	170;"	d
IP_OFFMASK	net/lwip/include/ipv4/lwip/ip.h	129;"	d
IP_OFFMASK	net/lwip/netif/ppp/vjbsdhdr.h	35;"	d
IP_OPTIONS_ALLOWED	net/lwip/include/lwip/opt.h	371;"	d
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	/^  IP_PCB;$/;"	m	struct:ip_pcb
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	80;"	d
IP_PCB	net/lwip/include/ipv6/lwip/ip.h	71;"	d
IP_PCB	net/lwip/include/lwip/raw.h	/^  IP_PCB;$/;"	m	struct:raw_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb_listen
IP_PCB	net/lwip/include/lwip/udp.h	/^  IP_PCB;$/;"	m	struct:udp_pcb
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	71;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	73;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	62;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	64;"	d
IP_PROTO_ICMP	net/lwip/include/ipv4/lwip/ip.h	57;"	d
IP_PROTO_ICMP	net/lwip/include/ipv6/lwip/ip.h	48;"	d
IP_PROTO_IGMP	net/lwip/include/ipv4/lwip/igmp.h	52;"	d
IP_PROTO_TCP	net/lwip/include/ipv4/lwip/ip.h	60;"	d
IP_PROTO_TCP	net/lwip/include/ipv6/lwip/ip.h	51;"	d
IP_PROTO_UDP	net/lwip/include/ipv4/lwip/ip.h	58;"	d
IP_PROTO_UDP	net/lwip/include/ipv6/lwip/ip.h	49;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv4/lwip/ip.h	59;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv6/lwip/ip.h	50;"	d
IP_REASSEMBLY	net/lwip/include/lwip/opt.h	380;"	d
IP_REASS_CHECK_OVERLAP	net/lwip/core/ipv4/ip_frag.c	68;"	d	file:
IP_REASS_DEBUG	net/lwip/include/lwip/opt.h	1546;"	d
IP_REASS_FLAG_LASTFRAG	net/lwip/core/ipv4/ip_frag.c	79;"	d	file:
IP_REASS_FREE_OLDEST	net/lwip/core/ipv4/ip_frag.c	76;"	d	file:
IP_REASS_MAXAGE	net/lwip/include/lwip/opt.h	398;"	d
IP_REASS_MAX_PBUFS	net/lwip/include/lwip/opt.h	408;"	d
IP_RF	net/lwip/include/ipv4/lwip/ip.h	126;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1164;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1229;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	186;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	189;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	185;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	188;"	d
IP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/ip_frag.h	49;"	d
IP_TOS	net/lwip/include/lwip/sockets.h	141;"	d
IP_TTL	net/lwip/include/lwip/sockets.h	142;"	d
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	10;"	d
JOS_INC_MALLOC_H	inc/malloc.h	2;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_NS_H	inc/ns.h	4;"	d
JOS_INC_PARTITION_H	inc/partition.h	2;"	d
JOS_INC_PERROR_H	net/lwip/jos/arch/perror.h	2;"	d
JOS_INC_SETJMP_H	net/lwip/jos/arch/setjmp.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_THREADQ_H	net/lwip/jos/arch/threadq.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_E1000_H	kern/e1000.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PCI_H	kern/pci.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TIME_H	kern/time.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_LONGJMP_GCCATTR	net/lwip/jos/arch/i386/setjmp.h	6;"	d
JOS_LWIP_LWIPOPTS_H	net/lwip/jos/lwipopts.h	2;"	d
JOS_MACHINE_SETJMP_H	net/lwip/jos/arch/i386/setjmp.h	2;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	37;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=6$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LANManResp	net/lwip/netif/ppp/chpms.c	/^    u_char LANManResp[24];$/;"	m	struct:__anon17	file:
LAST_ACK	net/lwip/include/lwip/tcp.h	/^  LAST_ACK    = 9,$/;"	e	enum:tcp_state
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	69;"	d
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	79;"	d
LCP_ECHOINTERVAL	net/lwip/include/lwip/opt.h	1363;"	d
LCP_H	net/lwip/netif/ppp/lcp.h	55;"	d
LCP_MAXECHOFAILS	net/lwip/include/lwip/opt.h	1368;"	d
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LENCIADDR	net/lwip/netif/ppp/ipcp.c	339;"	d	file:
LENCICBCP	net/lwip/netif/ppp/lcp.c	512;"	d	file:
LENCICHAP	net/lwip/netif/ppp/lcp.c	508;"	d	file:
LENCIDNS	net/lwip/netif/ppp/ipcp.c	340;"	d	file:
LENCILONG	net/lwip/netif/ppp/lcp.c	510;"	d	file:
LENCILQR	net/lwip/netif/ppp/lcp.c	511;"	d	file:
LENCISHORT	net/lwip/netif/ppp/lcp.c	509;"	d	file:
LENCIVJ	net/lwip/netif/ppp/ipcp.c	338;"	d	file:
LENCIVOID	net/lwip/netif/ppp/lcp.c	507;"	d	file:
LEVEL	kern/lapic.c	27;"	d	file:
LINK_STATS	net/lwip/include/lwip/opt.h	1150;"	d
LINK_STATS	net/lwip/include/lwip/opt.h	1228;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	210;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	213;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	209;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	212;"	d
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LISTEN	net/lwip/include/lwip/tcp.h	/^  LISTEN      = 1,$/;"	e	enum:tcp_state
LIST_EMPTY	net/lwip/jos/arch/queue.h	142;"	d
LIST_EMPTY	net/lwip/netif/ppp/ppp_oe.c	122;"	d	file:
LIST_ENTRY	net/lwip/jos/arch/queue.h	129;"	d
LIST_ENTRY	net/lwip/netif/ppp/ppp_oe.c	112;"	d	file:
LIST_FIRST	net/lwip/jos/arch/queue.h	147;"	d
LIST_FIRST	net/lwip/netif/ppp/ppp_oe.c	124;"	d	file:
LIST_FOREACH	net/lwip/jos/arch/queue.h	160;"	d
LIST_FOREACH	net/lwip/netif/ppp/ppp_oe.c	126;"	d	file:
LIST_HEAD	net/lwip/jos/arch/queue.h	109;"	d
LIST_HEAD	net/lwip/netif/ppp/ppp_oe.c	104;"	d	file:
LIST_HEAD_INITIALIZER	net/lwip/jos/arch/queue.h	118;"	d
LIST_HEAD_INITIALIZER	net/lwip/netif/ppp/ppp_oe.c	109;"	d	file:
LIST_INIT	net/lwip/jos/arch/queue.h	168;"	d
LIST_INIT	net/lwip/netif/ppp/ppp_oe.c	131;"	d	file:
LIST_INSERT_AFTER	net/lwip/jos/arch/queue.h	177;"	d
LIST_INSERT_AFTER	net/lwip/netif/ppp/ppp_oe.c	135;"	d	file:
LIST_INSERT_BEFORE	net/lwip/jos/arch/queue.h	190;"	d
LIST_INSERT_BEFORE	net/lwip/netif/ppp/ppp_oe.c	143;"	d	file:
LIST_INSERT_HEAD	net/lwip/jos/arch/queue.h	201;"	d
LIST_INSERT_HEAD	net/lwip/netif/ppp/ppp_oe.c	150;"	d	file:
LIST_NEXT	net/lwip/jos/arch/queue.h	153;"	d
LIST_NEXT	net/lwip/netif/ppp/ppp_oe.c	157;"	d	file:
LIST_REMOVE	net/lwip/jos/arch/queue.h	212;"	d
LIST_REMOVE	net/lwip/netif/ppp/ppp_oe.c	159;"	d	file:
LITTLE_ENDIAN	net/lwip/include/lwip/arch.h	36;"	d
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	52;"	d
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	59;"	d
LOG2NENV	inc/env.h	28;"	d
LOG_CRITICAL	net/lwip/netif/ppp/pppdebug.h	/^LOG_CRITICAL = 0,$/;"	e	enum:__anon18
LOG_DEBUG	net/lwip/netif/ppp/pppdebug.h	/^LOG_DEBUG    = 7$/;"	e	enum:__anon18
LOG_DETAIL	net/lwip/netif/ppp/pppdebug.h	/^LOG_DETAIL   = 6,$/;"	e	enum:__anon18
LOG_ERR	net/lwip/netif/ppp/pppdebug.h	/^LOG_ERR      = 1,$/;"	e	enum:__anon18
LOG_INFO	net/lwip/netif/ppp/pppdebug.h	/^LOG_INFO     = 5,$/;"	e	enum:__anon18
LOG_NOTICE	net/lwip/netif/ppp/pppdebug.h	/^LOG_NOTICE   = 2,$/;"	e	enum:__anon18
LOG_WARNING	net/lwip/netif/ppp/pppdebug.h	/^LOG_WARNING  = 3,$/;"	e	enum:__anon18
LS_ACKRCVD	net/lwip/netif/ppp/fsm.h	87;"	d
LS_ACKSENT	net/lwip/netif/ppp/fsm.h	88;"	d
LS_CLOSED	net/lwip/netif/ppp/fsm.h	82;"	d
LS_CLOSING	net/lwip/netif/ppp/fsm.h	84;"	d
LS_INITIAL	net/lwip/netif/ppp/fsm.h	80;"	d
LS_OPENED	net/lwip/netif/ppp/fsm.h	89;"	d
LS_REQSENT	net/lwip/netif/ppp/fsm.h	86;"	d
LS_STARTING	net/lwip/netif/ppp/fsm.h	81;"	d
LS_STOPPED	net/lwip/netif/ppp/fsm.h	83;"	d
LS_STOPPING	net/lwip/netif/ppp/fsm.h	85;"	d
LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT	net/lwip/include/lwip/opt.h	177;"	d
LWIP_ARCH_CC_H	net/lwip/jos/arch/cc.h	2;"	d
LWIP_ARCH_PERF_H	net/lwip/jos/arch/perf.h	2;"	d
LWIP_ARCH_QUEUE_H	net/lwip/jos/arch/queue.h	36;"	d
LWIP_ARCH_SYS_ARCH_H	net/lwip/jos/arch/sys_arch.h	2;"	d
LWIP_ARCH_THREAD_H	net/lwip/jos/arch/thread.h	2;"	d
LWIP_ARP	net/lwip/include/lwip/opt.h	321;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	64;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	67;"	d
LWIP_AUTOIP	net/lwip/include/lwip/opt.h	502;"	d
LWIP_AUTOIP_RAND	net/lwip/core/ipv4/autoip.c	82;"	d	file:
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	762;"	d
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	765;"	d
LWIP_CHKSUM	net/lwip/core/ipv4/inet_chksum.c	56;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	58;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	63;"	d	file:
LWIP_COMPAT_SOCKETS	net/lwip/include/lwip/opt.h	1083;"	d
LWIP_COMPAT_SOCKETS	net/lwip/jos/lwipopts.h	16;"	d
LWIP_DBG_FRESH	net/lwip/include/lwip/debug.h	59;"	d
LWIP_DBG_HALT	net/lwip/include/lwip/debug.h	61;"	d
LWIP_DBG_LEVEL_OFF	net/lwip/include/lwip/debug.h	43;"	d
LWIP_DBG_LEVEL_SERIOUS	net/lwip/include/lwip/debug.h	45;"	d
LWIP_DBG_LEVEL_SEVERE	net/lwip/include/lwip/debug.h	46;"	d
LWIP_DBG_LEVEL_WARNING	net/lwip/include/lwip/debug.h	44;"	d
LWIP_DBG_MASK_LEVEL	net/lwip/include/lwip/debug.h	47;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/include/lwip/opt.h	1461;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	58;"	d
LWIP_DBG_OFF	net/lwip/include/lwip/debug.h	52;"	d
LWIP_DBG_ON	net/lwip/include/lwip/debug.h	50;"	d
LWIP_DBG_STATE	net/lwip/include/lwip/debug.h	57;"	d
LWIP_DBG_TRACE	net/lwip/include/lwip/debug.h	55;"	d
LWIP_DBG_TYPES_ON	net/lwip/include/lwip/opt.h	1469;"	d
LWIP_DEBUG	net/lwip/jos/lwipopts.h	49;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	80;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	93;"	d
LWIP_DHCP	net/lwip/include/lwip/opt.h	483;"	d
LWIP_DHCP	net/lwip/jos/lwipopts.h	15;"	d
LWIP_DHCP_AUTOIP_COOP	net/lwip/include/lwip/opt.h	510;"	d
LWIP_DNS	net/lwip/include/lwip/opt.h	580;"	d
LWIP_DNS_API_DECLARE_H_ERRNO	net/lwip/include/lwip/netdb.h	38;"	d
LWIP_DNS_API_DECLARE_STRUCTS	net/lwip/include/lwip/netdb.h	46;"	d
LWIP_DNS_API_DEFINE_ERRORS	net/lwip/include/lwip/netdb.h	42;"	d
LWIP_DNS_API_HOSTENT_STORAGE	net/lwip/api/netdb.c	60;"	d	file:
LWIP_ERROR	net/lwip/include/lwip/debug.h	72;"	d
LWIP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ACCEPT,$/;"	e	enum:lwip_event
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	761;"	d
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	764;"	d
LWIP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_CONNECTED,$/;"	e	enum:lwip_event
LWIP_EVENT_ERR	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ERR$/;"	e	enum:lwip_event
LWIP_EVENT_POLL	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_POLL,$/;"	e	enum:lwip_event
LWIP_EVENT_RECV	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_RECV,$/;"	e	enum:lwip_event
LWIP_EVENT_SENT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_SENT,$/;"	e	enum:lwip_event
LWIP_HAVE_LOOPIF	net/lwip/include/lwip/opt.h	881;"	d
LWIP_HAVE_SLIPIF	net/lwip/include/lwip/opt.h	893;"	d
LWIP_ICMP	net/lwip/include/lwip/opt.h	445;"	d
LWIP_IGMP	net/lwip/include/lwip/opt.h	567;"	d
LWIP_LOOPBACK_MAX_PBUFS	net/lwip/include/lwip/opt.h	852;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	57;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	66;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	14;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	98;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	58;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	67;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	100;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	16;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	56;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	65;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	15;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	99;"	d
LWIP_MAX	net/lwip/include/lwip/def.h	38;"	d
LWIP_MEMPOOL	net/lwip/core/memp.c	117;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	123;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	130;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	137;"	d	file:
LWIP_MEMPOOL	net/lwip/core/stats.c	103;"	d	file:
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	44;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	55;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	64;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp_std.h	97;"	d
LWIP_MEM_ALIGN	net/lwip/include/lwip/mem.h	96;"	d
LWIP_MEM_ALIGN_SIZE	net/lwip/include/lwip/mem.h	92;"	d
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	192;"	d	file:
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	203;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	193;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	204;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	194;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	205;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	189;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	199;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	190;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	200;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	191;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	201;"	d	file:
LWIP_MIN	net/lwip/include/lwip/def.h	39;"	d
LWIP_NETCONN	net/lwip/include/lwip/opt.h	1063;"	d
LWIP_NETIF_API	net/lwip/include/lwip/opt.h	809;"	d
LWIP_NETIF_HOSTNAME	net/lwip/include/lwip/opt.h	802;"	d
LWIP_NETIF_HWADDRHINT	net/lwip/include/lwip/opt.h	836;"	d
LWIP_NETIF_LINK_CALLBACK	net/lwip/include/lwip/opt.h	825;"	d
LWIP_NETIF_LOOPBACK	net/lwip/include/lwip/opt.h	844;"	d
LWIP_NETIF_LOOPBACK_MULTITHREADING	net/lwip/include/lwip/opt.h	869;"	d
LWIP_NETIF_STATUS_CALLBACK	net/lwip/include/lwip/opt.h	817;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	101;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	22;"	d
LWIP_PLATFORM_ASSERT	net/lwip/jos/arch/cc.h	35;"	d
LWIP_PLATFORM_BYTESWAP	net/lwip/include/ipv4/lwip/inet.h	66;"	d
LWIP_PLATFORM_DIAG	net/lwip/jos/arch/cc.h	34;"	d
LWIP_POSIX_SOCKETS_IO_NAMES	net/lwip/include/lwip/opt.h	1092;"	d
LWIP_PROVIDE_ERRNO	net/lwip/jos/arch/perror.c	2;"	d	file:
LWIP_PROVIDE_ERRNO	net/lwip/jos/lwipopts.h	18;"	d
LWIP_RAW	net/lwip/include/lwip/opt.h	464;"	d
LWIP_SNMP	net/lwip/include/lwip/opt.h	523;"	d
LWIP_SNMP_OBJ_ID_LEN	net/lwip/include/lwip/snmp.h	88;"	d
LWIP_SOCKET	net/lwip/include/lwip/opt.h	1075;"	d
LWIP_SO_RCVBUF	net/lwip/include/lwip/opt.h	1115;"	d
LWIP_SO_RCVTIMEO	net/lwip/include/lwip/opt.h	1108;"	d
LWIP_STATS	net/lwip/include/lwip/opt.h	1134;"	d
LWIP_STATS	net/lwip/jos/lwipopts.h	13;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1143;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1238;"	d
LWIP_STATS_DISPLAY	net/lwip/jos/lwipopts.h	14;"	d
LWIP_STATS_LARGE	net/lwip/include/lwip/stats.h	47;"	d
LWIP_TCP	net/lwip/include/lwip/opt.h	650;"	d
LWIP_TCPIP_CORE_LOCKING	net/lwip/include/lwip/opt.h	1056;"	d
LWIP_TCP_KEEPALIVE	net/lwip/include/lwip/opt.h	1101;"	d
LWIP_TIMEVAL_PRIVATE	net/lwip/include/lwip/sockets.h	290;"	d
LWIP_UDP	net/lwip/include/lwip/opt.h	624;"	d
LWIP_UDPLITE	net/lwip/include/lwip/opt.h	631;"	d
LWIP_UNUSED_ARG	net/lwip/include/lwip/arch.h	63;"	d
LcpEchoCheck	net/lwip/netif/ppp/lcp.c	/^LcpEchoCheck (fsm *f)$/;"	f	file:
LcpEchoTimeout	net/lwip/netif/ppp/lcp.c	/^LcpEchoTimeout (void *arg)$/;"	f	file:
LcpLinkFailure	net/lwip/netif/ppp/lcp.c	/^LcpLinkFailure (fsm *f)$/;"	f	file:
LcpSendEchoRequest	net/lwip/netif/ppp/lcp.c	/^LcpSendEchoRequest (fsm *f)$/;"	f	file:
LinkPhase	net/lwip/netif/ppp/lcp.h	/^} LinkPhase;$/;"	t	typeref:enum:__anon16
LogCodes	net/lwip/netif/ppp/pppdebug.h	/^} LogCodes;$/;"	t	typeref:enum:__anon18
MAGIC_H	net/lwip/netif/ppp/magic.h	55;"	d
MAKEHEADER	net/lwip/netif/ppp/ppp.h	223;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASK	net/ns.h	5;"	d
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	179;"	d	file:
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	user/sh.c	20;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR,$/;"	e	enum:__anon3
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXMALLOC	lib/malloc.c	/^	MAXMALLOC = 1024*1024	\/* max size of one allocated chunk *\/$/;"	e	enum:__anon13	file:
MAXNAMELEN	inc/fs.h	17;"	d
MAXNAMELEN	net/lwip/include/lwip/opt.h	1398;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAXPENDING	obj/user/echosrv.asm	/^#define MAXPENDING 5    \/\/ Max connection requests$/;"	d
MAXPENDING	user/echosrv.c	8;"	d	file:
MAXPENDING	user/httpd.c	12;"	d	file:
MAXSECRETLEN	net/lwip/include/lwip/opt.h	1399;"	d
MAX_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	96;"	d
MAX_CONFLICTS	net/lwip/include/ipv4/lwip/autoip.h	67;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_HDR	net/lwip/netif/ppp/vj.h	31;"	d
MAX_IRQS	kern/picirq.h	9;"	d
MAX_NT_PASSWORD	net/lwip/netif/ppp/chpms.h	60;"	d
MAX_RESPONSE_LENGTH	net/lwip/netif/ppp/chap.h	97;"	d
MAX_SIZE	net/lwip/netif/slipif.c	62;"	d	file:
MAX_SLOTS	net/lwip/netif/ppp/vj.h	30;"	d
MBOXSLOTS	net/lwip/jos/arch/sys_arch.c	14;"	d	file:
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MD5Final	net/lwip/netif/ppp/md5.c	/^MD5Final (unsigned char hash[], MD5_CTX *mdContext)$/;"	f
MD5Init	net/lwip/netif/ppp/md5.c	/^MD5Init (MD5_CTX *mdContext)$/;"	f
MD5Update	net/lwip/netif/ppp/md5.c	/^MD5Update(MD5_CTX *mdContext, unsigned char *inBuf, unsigned int inLen)$/;"	f
MD5_CTX	net/lwip/netif/ppp/md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:__anon15
MD5_H	net/lwip/netif/ppp/md5.h	41;"	d
MD5_SIGNATURE_SIZE	net/lwip/netif/ppp/chap.h	83;"	d
MD5_SUPPORT	net/lwip/include/lwip/opt.h	1323;"	d
MEMCPY	net/lwip/include/lwip/opt.h	76;"	d
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	104;"	d	file:
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	95;"	d	file:
MEMP_DEBUG	net/lwip/include/lwip/opt.h	1567;"	d
MEMP_MAX	net/lwip/include/lwip/memp.h	/^  MEMP_MAX$/;"	e	enum:__anon20
MEMP_NUM_ARP_QUEUE	net/lwip/include/lwip/opt.h	250;"	d
MEMP_NUM_IGMP_GROUP	net/lwip/include/lwip/opt.h	260;"	d
MEMP_NUM_NETBUF	net/lwip/include/lwip/opt.h	276;"	d
MEMP_NUM_NETBUF	net/lwip/jos/lwipopts.h	30;"	d
MEMP_NUM_NETCONN	net/lwip/include/lwip/opt.h	284;"	d
MEMP_NUM_NETCONN	net/lwip/jos/lwipopts.h	31;"	d
MEMP_NUM_PBUF	net/lwip/include/lwip/opt.h	191;"	d
MEMP_NUM_PBUF	net/lwip/jos/lwipopts.h	25;"	d
MEMP_NUM_RAW_PCB	net/lwip/include/lwip/opt.h	199;"	d
MEMP_NUM_REASSDATA	net/lwip/include/lwip/opt.h	240;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/include/lwip/opt.h	268;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/jos/lwipopts.h	32;"	d
MEMP_NUM_TCPIP_MSG_API	net/lwip/include/lwip/opt.h	293;"	d
MEMP_NUM_TCPIP_MSG_INPKT	net/lwip/include/lwip/opt.h	302;"	d
MEMP_NUM_TCP_PCB	net/lwip/include/lwip/opt.h	216;"	d
MEMP_NUM_TCP_PCB	net/lwip/jos/lwipopts.h	27;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/include/lwip/opt.h	224;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/jos/lwipopts.h	28;"	d
MEMP_NUM_TCP_SEG	net/lwip/include/lwip/opt.h	232;"	d
MEMP_NUM_TCP_SEG	net/lwip/jos/lwipopts.h	29;"	d
MEMP_NUM_UDP_PCB	net/lwip/include/lwip/opt.h	208;"	d
MEMP_NUM_UDP_PCB	net/lwip/jos/lwipopts.h	26;"	d
MEMP_OVERFLOW_CHECK	net/lwip/include/lwip/opt.h	128;"	d
MEMP_POOL_FIRST	net/lwip/include/lwip/memp.h	74;"	d
MEMP_POOL_HELPER_FIRST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_FIRST = ((u8_t)$/;"	e	enum:__anon21
MEMP_POOL_HELPER_LAST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_LAST = ((u8_t)$/;"	e	enum:__anon21
MEMP_POOL_LAST	net/lwip/include/lwip/memp.h	75;"	d
MEMP_SANITY_CHECK	net/lwip/include/lwip/opt.h	136;"	d
MEMP_SANITY_CHECK	net/lwip/jos/lwipopts.h	59;"	d
MEMP_SANITY_REGION_AFTER	net/lwip/core/memp.c	85;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	88;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	90;"	d	file:
MEMP_SANITY_REGION_BEFORE	net/lwip/core/memp.c	77;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	80;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	82;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	103;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	94;"	d	file:
MEMP_STATS	net/lwip/include/lwip/opt.h	1216;"	d
MEMP_STATS	net/lwip/include/lwip/opt.h	1236;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	235;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	245;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	237;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	247;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	243;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	249;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	236;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	246;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	238;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	248;"	d
MEMP_USE_CUSTOM_POOLS	net/lwip/include/lwip/opt.h	155;"	d
MEM_ALIGNMENT	net/lwip/include/lwip/opt.h	107;"	d
MEM_ALIGNMENT	net/lwip/jos/lwipopts.h	23;"	d
MEM_DEBUG	net/lwip/include/lwip/opt.h	1560;"	d
MEM_LIBC_MALLOC	net/lwip/include/lwip/opt.h	98;"	d
MEM_SIZE	net/lwip/include/lwip/opt.h	115;"	d
MEM_SIZE	net/lwip/jos/lwipopts.h	35;"	d
MEM_SIZE_ALIGNED	net/lwip/core/mem.c	170;"	d	file:
MEM_STATS	net/lwip/include/lwip/opt.h	1209;"	d
MEM_STATS	net/lwip/include/lwip/opt.h	1235;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	217;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	227;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	224;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	230;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	225;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	231;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	218;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	228;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	219;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	229;"	d
MEM_USE_POOLS	net/lwip/include/lwip/opt.h	145;"	d
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	677;"	d	file:
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	679;"	d	file:
MIB_NODE_AR	net/lwip/include/lwip/snmp_structs.h	91;"	d
MIB_NODE_EX	net/lwip/include/lwip/snmp_structs.h	97;"	d
MIB_NODE_LR	net/lwip/include/lwip/snmp_structs.h	95;"	d
MIB_NODE_RA	net/lwip/include/lwip/snmp_structs.h	93;"	d
MIB_NODE_SC	net/lwip/include/lwip/snmp_structs.h	89;"	d
MIB_OBJECT_NONE	net/lwip/include/lwip/snmp_structs.h	55;"	d
MIB_OBJECT_NOT_ACCESSIBLE	net/lwip/include/lwip/snmp_structs.h	63;"	d
MIB_OBJECT_READ_ONLY	net/lwip/include/lwip/snmp_structs.h	60;"	d
MIB_OBJECT_READ_WRITE	net/lwip/include/lwip/snmp_structs.h	61;"	d
MIB_OBJECT_SCALAR	net/lwip/include/lwip/snmp_structs.h	56;"	d
MIB_OBJECT_TAB	net/lwip/include/lwip/snmp_structs.h	57;"	d
MIB_OBJECT_WRITE_ONLY	net/lwip/include/lwip/snmp_structs.h	62;"	d
MIN	inc/types.h	43;"	d
MIN_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	95;"	d
MIN_SIZE	net/lwip/core/mem.c	165;"	d	file:
MIN_SIZE_ALIGNED	net/lwip/core/mem.c	168;"	d	file:
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MSCHAP_SUPPORT	net/lwip/include/lwip/opt.h	1295;"	d
MSG_DONTWAIT	net/lwip/include/lwip/sockets.h	134;"	d
MSG_MORE	net/lwip/include/lwip/sockets.h	135;"	d
MSG_OOB	net/lwip/include/lwip/sockets.h	133;"	d
MSG_PEEK	net/lwip/include/lwip/sockets.h	131;"	d
MSG_WAITALL	net/lwip/include/lwip/sockets.h	132;"	d
MS_CHAP_RESPONSE_LEN	net/lwip/netif/ppp/chap.h	85;"	d
MS_ChapResponse	net/lwip/netif/ppp/chpms.c	/^} MS_ChapResponse;$/;"	t	typeref:struct:__anon17	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
MakeKey	net/lwip/netif/ppp/chpms.c	/^MakeKey( u_char *key,    \/* IN  56 bit DES key missing parity bits *\/$/;"	f	file:
NAKCIADDR	net/lwip/netif/ppp/ipcp.c	592;"	d	file:
NAKCICHAP	net/lwip/netif/ppp/lcp.c	760;"	d	file:
NAKCICHAR	net/lwip/netif/ppp/lcp.c	772;"	d	file:
NAKCIDNS	net/lwip/netif/ppp/ipcp.c	624;"	d	file:
NAKCILONG	net/lwip/netif/ppp/lcp.c	794;"	d	file:
NAKCILQR	net/lwip/netif/ppp/lcp.c	805;"	d	file:
NAKCISHORT	net/lwip/netif/ppp/lcp.c	783;"	d	file:
NAKCIVJ	net/lwip/netif/ppp/ipcp.c	612;"	d	file:
NAKCIVOID	net/lwip/netif/ppp/lcp.c	750;"	d	file:
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	37;"	d	file:
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	29;"	d
NETCONNTYPE_DATAGRAM	net/lwip/include/lwip/api.h	60;"	d
NETCONNTYPE_GROUP	net/lwip/include/lwip/api.h	59;"	d
NETCONN_CLOSE	net/lwip/include/lwip/api.h	/^  NETCONN_CLOSE$/;"	e	enum:netconn_state
NETCONN_CONNECT	net/lwip/include/lwip/api.h	/^  NETCONN_CONNECT,$/;"	e	enum:netconn_state
NETCONN_COPY	net/lwip/include/lwip/api.h	55;"	d
NETCONN_EVT_RCVMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVMINUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_RCVPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVPLUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDMINUS$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDPLUS,$/;"	e	enum:netconn_evt
NETCONN_INVALID	net/lwip/include/lwip/api.h	/^  NETCONN_INVALID    = 0,$/;"	e	enum:netconn_type
NETCONN_JOIN	net/lwip/include/lwip/api.h	/^  NETCONN_JOIN,$/;"	e	enum:netconn_igmp
NETCONN_LEAVE	net/lwip/include/lwip/api.h	/^  NETCONN_LEAVE$/;"	e	enum:netconn_igmp
NETCONN_LISTEN	net/lwip/include/lwip/api.h	/^  NETCONN_LISTEN,$/;"	e	enum:netconn_state
NETCONN_MORE	net/lwip/include/lwip/api.h	56;"	d
NETCONN_NOCOPY	net/lwip/include/lwip/api.h	54;"	d
NETCONN_NOFLAG	net/lwip/include/lwip/api.h	53;"	d
NETCONN_NONE	net/lwip/include/lwip/api.h	/^  NETCONN_NONE,$/;"	e	enum:netconn_state
NETCONN_RAW	net/lwip/include/lwip/api.h	/^  NETCONN_RAW        = 0x40$/;"	e	enum:netconn_type
NETCONN_TCP	net/lwip/include/lwip/api.h	/^  NETCONN_TCP        = 0x10,$/;"	e	enum:netconn_type
NETCONN_UDP	net/lwip/include/lwip/api.h	/^  NETCONN_UDP        = 0x20,$/;"	e	enum:netconn_type
NETCONN_UDPLITE	net/lwip/include/lwip/api.h	/^  NETCONN_UDPLITE    = 0x21,$/;"	e	enum:netconn_type
NETCONN_UDPNOCHKSUM	net/lwip/include/lwip/api.h	/^  NETCONN_UDPNOCHKSUM= 0x22,$/;"	e	enum:netconn_type
NETCONN_WRITE	net/lwip/include/lwip/api.h	/^  NETCONN_WRITE,$/;"	e	enum:netconn_state
NETIF_DEBUG	net/lwip/include/lwip/opt.h	1483;"	d
NETIF_FLAG_BROADCAST	net/lwip/include/lwip/netif.h	71;"	d
NETIF_FLAG_DHCP	net/lwip/include/lwip/netif.h	75;"	d
NETIF_FLAG_ETHARP	net/lwip/include/lwip/netif.h	80;"	d
NETIF_FLAG_IGMP	net/lwip/include/lwip/netif.h	82;"	d
NETIF_FLAG_LINK_UP	net/lwip/include/lwip/netif.h	78;"	d
NETIF_FLAG_POINTTOPOINT	net/lwip/include/lwip/netif.h	73;"	d
NETIF_FLAG_UP	net/lwip/include/lwip/netif.h	69;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	181;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	196;"	d
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	62;"	d	file:
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	64;"	d	file:
NETIF_MAX_HWADDR_LEN	net/lwip/include/lwip/netif.h	61;"	d
NETIF_SET_HINT	net/lwip/netif/etharp.c	121;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	56;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	58;"	d	file:
NEW_A	net/lwip/netif/ppp/vj.h	86;"	d
NEW_C	net/lwip/netif/ppp/vj.h	83;"	d
NEW_I	net/lwip/netif/ppp/vj.h	84;"	d
NEW_S	net/lwip/netif/ppp/vj.h	85;"	d
NEW_U	net/lwip/netif/ppp/vj.h	88;"	d
NEW_W	net/lwip/netif/ppp/vj.h	87;"	d
NHANDLERS	fs/serv.c	328;"	d	file:
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NMBOX	net/lwip/jos/arch/sys_arch.c	13;"	d	file:
NO	kern/console.c	218;"	d	file:
NODE_STACK_SIZE	net/lwip/core/snmp/mib_structs.c	45;"	d	file:
NO_DATA	net/lwip/include/lwip/netdb.h	57;"	d
NO_RECOVERY	net/lwip/include/lwip/netdb.h	58;"	d
NO_SYS	net/lwip/include/lwip/opt.h	68;"	d
NPDENTRIES	inc/mmu.h	45;"	d
NPMODE_DROP	net/lwip/netif/ppp/ppp.h	/^  NPMODE_DROP,        \/* silently drop the packet *\/$/;"	e	enum:NPmode
NPMODE_ERROR	net/lwip/netif/ppp/ppp.h	/^  NPMODE_ERROR,       \/* return an error *\/$/;"	e	enum:NPmode
NPMODE_PASS	net/lwip/netif/ppp/ppp.h	/^  NPMODE_PASS,        \/* pass the packet through *\/$/;"	e	enum:NPmode
NPMODE_QUEUE	net/lwip/netif/ppp/ppp.h	/^  NPMODE_QUEUE        \/* save it up for later. *\/$/;"	e	enum:NPmode
NPTENTRIES	inc/mmu.h	46;"	d
NPmode	net/lwip/netif/ppp/ppp.h	/^enum NPmode {$/;"	g
NSEM	net/lwip/jos/arch/sys_arch.c	12;"	d	file:
NSREQ_ACCEPT	inc/ns.h	/^	NSREQ_ACCEPT = 1,$/;"	e	enum:__anon6
NSREQ_BIND	inc/ns.h	/^	NSREQ_BIND,$/;"	e	enum:__anon6
NSREQ_CLOSE	inc/ns.h	/^	NSREQ_CLOSE,$/;"	e	enum:__anon6
NSREQ_CONNECT	inc/ns.h	/^	NSREQ_CONNECT,$/;"	e	enum:__anon6
NSREQ_INPUT	inc/ns.h	/^	NSREQ_INPUT,$/;"	e	enum:__anon6
NSREQ_LISTEN	inc/ns.h	/^	NSREQ_LISTEN,$/;"	e	enum:__anon6
NSREQ_OUTPUT	inc/ns.h	/^	NSREQ_OUTPUT,$/;"	e	enum:__anon6
NSREQ_RECV	inc/ns.h	/^	NSREQ_RECV,$/;"	e	enum:__anon6
NSREQ_SEND	inc/ns.h	/^	NSREQ_SEND,$/;"	e	enum:__anon6
NSREQ_SHUTDOWN	inc/ns.h	/^	NSREQ_SHUTDOWN,$/;"	e	enum:__anon6
NSREQ_SOCKET	inc/ns.h	/^	NSREQ_SOCKET,$/;"	e	enum:__anon6
NSREQ_TIMER	inc/ns.h	/^	NSREQ_TIMER,$/;"	e	enum:__anon6
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS,$/;"	e	enum:__anon8
NTResp	net/lwip/netif/ppp/chpms.c	/^    u_char NTResp[24];$/;"	m	struct:__anon17	file:
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NULL	net/lwip/include/lwip/def.h	42;"	d
NUMLOCK	kern/console.c	225;"	d	file:
NUM_PPP	net/lwip/include/lwip/opt.h	1274;"	d
NUM_SOCKETS	net/lwip/api/sockets.c	57;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
Nsipc	inc/ns.h	/^union Nsipc {$/;"	u
Nsreq_accept	inc/ns.h	/^	struct Nsreq_accept {$/;"	s	union:Nsipc
Nsreq_bind	inc/ns.h	/^	struct Nsreq_bind {$/;"	s	union:Nsipc
Nsreq_close	inc/ns.h	/^	struct Nsreq_close {$/;"	s	union:Nsipc
Nsreq_connect	inc/ns.h	/^	struct Nsreq_connect {$/;"	s	union:Nsipc
Nsreq_listen	inc/ns.h	/^	struct Nsreq_listen {$/;"	s	union:Nsipc
Nsreq_recv	inc/ns.h	/^	struct Nsreq_recv {$/;"	s	union:Nsipc
Nsreq_send	inc/ns.h	/^	struct Nsreq_send {$/;"	s	union:Nsipc
Nsreq_shutdown	inc/ns.h	/^	struct Nsreq_shutdown {$/;"	s	union:Nsipc
Nsreq_socket	inc/ns.h	/^	struct Nsreq_socket {$/;"	s	union:Nsipc
Nsret_accept	inc/ns.h	/^	struct Nsret_accept {$/;"	s	union:Nsipc
Nsret_recv	inc/ns.h	/^	struct Nsret_recv {$/;"	s	union:Nsipc
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OPT_PASSIVE	net/lwip/netif/ppp/fsm.h	94;"	d
OPT_RESTART	net/lwip/netif/ppp/fsm.h	95;"	d
OPT_SILENT	net/lwip/netif/ppp/fsm.h	96;"	d
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	173;"	d
O_CREAT	inc/lib.h	175;"	d
O_EXCL	inc/lib.h	177;"	d
O_MKDIR	inc/lib.h	178;"	d
O_NONBLOCK	net/lwip/include/lwip/sockets.h	268;"	d
O_RDONLY	inc/lib.h	170;"	d
O_RDWR	inc/lib.h	172;"	d
O_TRUNC	inc/lib.h	176;"	d
O_WRONLY	inc/lib.h	171;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Dec 10 13:42:16 PST 2014$/;"	m
PACK_STRUCT_BEGIN	net/lwip/include/lwip/arch.h	50;"	d
PACK_STRUCT_BEGIN	net/lwip/jos/arch/cc.h	23;"	d
PACK_STRUCT_END	net/lwip/include/lwip/arch.h	54;"	d
PACK_STRUCT_END	net/lwip/jos/arch/cc.h	24;"	d
PACK_STRUCT_FIELD	net/lwip/include/lwip/arch.h	58;"	d
PACK_STRUCT_FIELD	net/lwip/jos/arch/cc.h	21;"	d
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_answer
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_hdr
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_query
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_dur_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_echo_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_te_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/igmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:igmp_msg
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/lwip/dhcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dhcp_msg
PACK_STRUCT_STRUCT	net/lwip/include/lwip/tcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:tcp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/lwip/udp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:udp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_addr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:etharp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ethip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoehdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoetag
PACK_STRUCT_STRUCT	net/lwip/jos/arch/cc.h	22;"	d
PADDING	net/lwip/netif/ppp/md5.c	/^static unsigned char PADDING[64] = {$/;"	v	file:
PADDR	kern/pmap.h	25;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PAP_H	net/lwip/netif/ppp/pap.h	53;"	d
PAP_PEER	net/lwip/netif/ppp/auth.c	91;"	d	file:
PAP_SUPPORT	net/lwip/include/lwip/opt.h	1281;"	d
PAP_WITHPEER	net/lwip/netif/ppp/auth.c	90;"	d	file:
PBUF_DEBUG	net/lwip/include/lwip/opt.h	1490;"	d
PBUF_FLAG_PUSH	net/lwip/include/lwip/pbuf.h	62;"	d
PBUF_IP	net/lwip/include/lwip/pbuf.h	/^  PBUF_IP,$/;"	e	enum:__anon38
PBUF_IP_HLEN	net/lwip/include/lwip/pbuf.h	44;"	d
PBUF_LINK	net/lwip/include/lwip/pbuf.h	/^  PBUF_LINK,$/;"	e	enum:__anon38
PBUF_LINK_HLEN	net/lwip/include/lwip/opt.h	780;"	d
PBUF_POOL	net/lwip/include/lwip/pbuf.h	/^  PBUF_POOL \/* pbuf payload refers to RAM *\/$/;"	e	enum:__anon39
PBUF_POOL_BUFSIZE	net/lwip/include/lwip/opt.h	789;"	d
PBUF_POOL_BUFSIZE	net/lwip/jos/lwipopts.h	38;"	d
PBUF_POOL_BUFSIZE_ALIGNED	net/lwip/core/pbuf.c	79;"	d	file:
PBUF_POOL_SIZE	net/lwip/include/lwip/opt.h	309;"	d
PBUF_POOL_SIZE	net/lwip/jos/lwipopts.h	37;"	d
PBUF_RAM	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAM, \/* pbuf data is stored in RAM *\/$/;"	e	enum:__anon39
PBUF_RAW	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAW$/;"	e	enum:__anon38
PBUF_REF	net/lwip/include/lwip/pbuf.h	/^  PBUF_REF, \/* pbuf comes from the pbuf pool *\/$/;"	e	enum:__anon39
PBUF_ROM	net/lwip/include/lwip/pbuf.h	/^  PBUF_ROM, \/* pbuf data is stored in ROM *\/$/;"	e	enum:__anon39
PBUF_TRANSPORT	net/lwip/include/lwip/pbuf.h	/^  PBUF_TRANSPORT,$/;"	e	enum:__anon38
PBUF_TRANSPORT_HLEN	net/lwip/include/lwip/pbuf.h	43;"	d
PCI32_DMA_BOUNCE_THRESHOLD	kern/pcireg.h	708;"	d
PCINT	kern/lapic.c	36;"	d	file:
PCI_BHLC_CODE	kern/pcireg.h	329;"	d
PCI_BHLC_REG	kern/pcireg.h	302;"	d
PCI_BIST	kern/pcireg.h	306;"	d
PCI_BIST_MASK	kern/pcireg.h	305;"	d
PCI_BIST_SHIFT	kern/pcireg.h	304;"	d
PCI_BRIDGE_BUS_PRIMARY_SHIFT	kern/pcireg.h	590;"	d
PCI_BRIDGE_BUS_REG	kern/pcireg.h	589;"	d
PCI_BRIDGE_BUS_SECONDARY_SHIFT	kern/pcireg.h	591;"	d
PCI_BRIDGE_BUS_SUBORDINATE_SHIFT	kern/pcireg.h	592;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_SERR	kern/pcireg.h	639;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_STAT	kern/pcireg.h	638;"	d
PCI_BRIDGE_CONTROL_ISA	kern/pcireg.h	630;"	d
PCI_BRIDGE_CONTROL_MABRT	kern/pcireg.h	633;"	d
PCI_BRIDGE_CONTROL_MASK	kern/pcireg.h	627;"	d
PCI_BRIDGE_CONTROL_PERE	kern/pcireg.h	628;"	d
PCI_BRIDGE_CONTROL_PRI_DISC_TIMER	kern/pcireg.h	636;"	d
PCI_BRIDGE_CONTROL_REG	kern/pcireg.h	625;"	d
PCI_BRIDGE_CONTROL_SECBR	kern/pcireg.h	634;"	d
PCI_BRIDGE_CONTROL_SECFASTB2B	kern/pcireg.h	635;"	d
PCI_BRIDGE_CONTROL_SEC_DISC_TIMER	kern/pcireg.h	637;"	d
PCI_BRIDGE_CONTROL_SERR	kern/pcireg.h	629;"	d
PCI_BRIDGE_CONTROL_SHIFT	kern/pcireg.h	626;"	d
PCI_BRIDGE_CONTROL_VGA	kern/pcireg.h	631;"	d
PCI_BRIDGE_IOHIGH_BASE_MASK	kern/pcireg.h	622;"	d
PCI_BRIDGE_IOHIGH_BASE_SHIFT	kern/pcireg.h	620;"	d
PCI_BRIDGE_IOHIGH_LIMIT_MASK	kern/pcireg.h	623;"	d
PCI_BRIDGE_IOHIGH_LIMIT_SHIFT	kern/pcireg.h	621;"	d
PCI_BRIDGE_IOHIGH_REG	kern/pcireg.h	619;"	d
PCI_BRIDGE_IO_32BITS	kern/pcireg.h	601;"	d
PCI_BRIDGE_MEMORY_BASE_MASK	kern/pcireg.h	606;"	d
PCI_BRIDGE_MEMORY_BASE_SHIFT	kern/pcireg.h	604;"	d
PCI_BRIDGE_MEMORY_LIMIT_MASK	kern/pcireg.h	607;"	d
PCI_BRIDGE_MEMORY_LIMIT_SHIFT	kern/pcireg.h	605;"	d
PCI_BRIDGE_MEMORY_REG	kern/pcireg.h	603;"	d
PCI_BRIDGE_PREFETCHBASE32_REG	kern/pcireg.h	616;"	d
PCI_BRIDGE_PREFETCHLIMIT32_REG	kern/pcireg.h	617;"	d
PCI_BRIDGE_PREFETCHMEM_64BITS	kern/pcireg.h	614;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_MASK	kern/pcireg.h	612;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_SHIFT	kern/pcireg.h	610;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_MASK	kern/pcireg.h	613;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_SHIFT	kern/pcireg.h	611;"	d
PCI_BRIDGE_PREFETCHMEM_REG	kern/pcireg.h	609;"	d
PCI_BRIDGE_STATIO_IOBASE_MASK	kern/pcireg.h	598;"	d
PCI_BRIDGE_STATIO_IOBASE_SHIFT	kern/pcireg.h	595;"	d
PCI_BRIDGE_STATIO_IOLIMIT_MASK	kern/pcireg.h	599;"	d
PCI_BRIDGE_STATIO_IOLIMIT_SHIFT	kern/pcireg.h	596;"	d
PCI_BRIDGE_STATIO_REG	kern/pcireg.h	594;"	d
PCI_BRIDGE_STATIO_STATUS_MASK	kern/pcireg.h	600;"	d
PCI_BRIDGE_STATIO_STATUS_SHIFT	kern/pcireg.h	597;"	d
PCI_CACHELINE	kern/pcireg.h	326;"	d
PCI_CACHELINE_MASK	kern/pcireg.h	325;"	d
PCI_CACHELINE_SHIFT	kern/pcireg.h	324;"	d
PCI_CAPLISTPTR_REG	kern/pcireg.h	412;"	d
PCI_CAPLIST_CAP	kern/pcireg.h	416;"	d
PCI_CAPLIST_NEXT	kern/pcireg.h	415;"	d
PCI_CAPLIST_PTR	kern/pcireg.h	414;"	d
PCI_CAP_AGP	kern/pcireg.h	420;"	d
PCI_CAP_AGP8	kern/pcireg.h	433;"	d
PCI_CAP_AGP_MAJOR	kern/pcireg.h	421;"	d
PCI_CAP_AGP_MINOR	kern/pcireg.h	422;"	d
PCI_CAP_CPCI_HOTSWAP	kern/pcireg.h	426;"	d
PCI_CAP_CPCI_RSRCCTL	kern/pcireg.h	431;"	d
PCI_CAP_DEBUGPORT	kern/pcireg.h	430;"	d
PCI_CAP_HOTPLUG	kern/pcireg.h	432;"	d
PCI_CAP_LDT	kern/pcireg.h	428;"	d
PCI_CAP_MSI	kern/pcireg.h	425;"	d
PCI_CAP_MSIX	kern/pcireg.h	436;"	d
PCI_CAP_PCIEXPRESS	kern/pcireg.h	435;"	d
PCI_CAP_PCIX	kern/pcireg.h	427;"	d
PCI_CAP_PWRMGMT	kern/pcireg.h	419;"	d
PCI_CAP_RESERVED0	kern/pcireg.h	418;"	d
PCI_CAP_SECURE	kern/pcireg.h	434;"	d
PCI_CAP_SLOTID	kern/pcireg.h	424;"	d
PCI_CAP_VENDSPEC	kern/pcireg.h	429;"	d
PCI_CAP_VPD	kern/pcireg.h	423;"	d
PCI_CARDBUS_CAPLISTPTR_REG	kern/pcireg.h	413;"	d
PCI_CARDBUS_CIS_REG	kern/pcireg.h	400;"	d
PCI_CLASS	kern/pcireg.h	118;"	d
PCI_CLASS_BRIDGE	kern/pcireg.h	148;"	d
PCI_CLASS_CODE	kern/pcireg.h	136;"	d
PCI_CLASS_COMMUNICATIONS	kern/pcireg.h	149;"	d
PCI_CLASS_CRYPTO	kern/pcireg.h	158;"	d
PCI_CLASS_DASP	kern/pcireg.h	159;"	d
PCI_CLASS_DISPLAY	kern/pcireg.h	145;"	d
PCI_CLASS_DOCK	kern/pcireg.h	152;"	d
PCI_CLASS_I2O	kern/pcireg.h	156;"	d
PCI_CLASS_INPUT	kern/pcireg.h	151;"	d
PCI_CLASS_MASK	kern/pcireg.h	117;"	d
PCI_CLASS_MASS_STORAGE	kern/pcireg.h	143;"	d
PCI_CLASS_MEMORY	kern/pcireg.h	147;"	d
PCI_CLASS_MULTIMEDIA	kern/pcireg.h	146;"	d
PCI_CLASS_NETWORK	kern/pcireg.h	144;"	d
PCI_CLASS_PREHISTORIC	kern/pcireg.h	142;"	d
PCI_CLASS_PROCESSOR	kern/pcireg.h	153;"	d
PCI_CLASS_REG	kern/pcireg.h	109;"	d
PCI_CLASS_SATCOM	kern/pcireg.h	157;"	d
PCI_CLASS_SERIALBUS	kern/pcireg.h	154;"	d
PCI_CLASS_SHIFT	kern/pcireg.h	116;"	d
PCI_CLASS_SYSTEM	kern/pcireg.h	150;"	d
PCI_CLASS_UNDEFINED	kern/pcireg.h	160;"	d
PCI_CLASS_WIRELESS	kern/pcireg.h	155;"	d
PCI_COMMAND_BACKTOBACK_ENABLE	kern/pcireg.h	89;"	d
PCI_COMMAND_INVALIDATE_ENABLE	kern/pcireg.h	84;"	d
PCI_COMMAND_IO_ENABLE	kern/pcireg.h	80;"	d
PCI_COMMAND_MASK	kern/pcireg.h	72;"	d
PCI_COMMAND_MASTER_ENABLE	kern/pcireg.h	82;"	d
PCI_COMMAND_MEM_ENABLE	kern/pcireg.h	81;"	d
PCI_COMMAND_PALETTE_ENABLE	kern/pcireg.h	85;"	d
PCI_COMMAND_PARITY_ENABLE	kern/pcireg.h	86;"	d
PCI_COMMAND_SERR_ENABLE	kern/pcireg.h	88;"	d
PCI_COMMAND_SHIFT	kern/pcireg.h	71;"	d
PCI_COMMAND_SPECIAL_ENABLE	kern/pcireg.h	83;"	d
PCI_COMMAND_STATUS_CODE	kern/pcireg.h	76;"	d
PCI_COMMAND_STATUS_REG	kern/pcireg.h	70;"	d
PCI_COMMAND_STEPPING_ENABLE	kern/pcireg.h	87;"	d
PCI_HDRTYPE	kern/pcireg.h	311;"	d
PCI_HDRTYPE_DEVICE	kern/pcireg.h	339;"	d
PCI_HDRTYPE_MASK	kern/pcireg.h	310;"	d
PCI_HDRTYPE_MULTIFN	kern/pcireg.h	316;"	d
PCI_HDRTYPE_PCB	kern/pcireg.h	341;"	d
PCI_HDRTYPE_PPB	kern/pcireg.h	340;"	d
PCI_HDRTYPE_SHIFT	kern/pcireg.h	309;"	d
PCI_HDRTYPE_TYPE	kern/pcireg.h	314;"	d
PCI_ID_CODE	kern/pcireg.h	63;"	d
PCI_ID_REG	kern/pcireg.h	48;"	d
PCI_INTERFACE	kern/pcireg.h	128;"	d
PCI_INTERFACE_MASK	kern/pcireg.h	127;"	d
PCI_INTERFACE_SHIFT	kern/pcireg.h	126;"	d
PCI_INTERRUPT_CODE	kern/pcireg.h	575;"	d
PCI_INTERRUPT_GRANT	kern/pcireg.h	557;"	d
PCI_INTERRUPT_GRANT_MASK	kern/pcireg.h	556;"	d
PCI_INTERRUPT_GRANT_SHIFT	kern/pcireg.h	555;"	d
PCI_INTERRUPT_LATENCY	kern/pcireg.h	562;"	d
PCI_INTERRUPT_LATENCY_MASK	kern/pcireg.h	561;"	d
PCI_INTERRUPT_LATENCY_SHIFT	kern/pcireg.h	560;"	d
PCI_INTERRUPT_LINE	kern/pcireg.h	572;"	d
PCI_INTERRUPT_LINE_MASK	kern/pcireg.h	571;"	d
PCI_INTERRUPT_LINE_SHIFT	kern/pcireg.h	570;"	d
PCI_INTERRUPT_PIN	kern/pcireg.h	567;"	d
PCI_INTERRUPT_PIN_A	kern/pcireg.h	582;"	d
PCI_INTERRUPT_PIN_B	kern/pcireg.h	583;"	d
PCI_INTERRUPT_PIN_C	kern/pcireg.h	584;"	d
PCI_INTERRUPT_PIN_D	kern/pcireg.h	585;"	d
PCI_INTERRUPT_PIN_MASK	kern/pcireg.h	566;"	d
PCI_INTERRUPT_PIN_MAX	kern/pcireg.h	586;"	d
PCI_INTERRUPT_PIN_NONE	kern/pcireg.h	581;"	d
PCI_INTERRUPT_PIN_SHIFT	kern/pcireg.h	565;"	d
PCI_INTERRUPT_REG	kern/pcireg.h	538;"	d
PCI_LATTIMER	kern/pcireg.h	321;"	d
PCI_LATTIMER_MASK	kern/pcireg.h	320;"	d
PCI_LATTIMER_SHIFT	kern/pcireg.h	319;"	d
PCI_MAPREG_END	kern/pcireg.h	347;"	d
PCI_MAPREG_IO_ADDR	kern/pcireg.h	384;"	d
PCI_MAPREG_IO_ADDR_MASK	kern/pcireg.h	388;"	d
PCI_MAPREG_IO_SIZE	kern/pcireg.h	386;"	d
PCI_MAPREG_MEM64_ADDR	kern/pcireg.h	378;"	d
PCI_MAPREG_MEM64_ADDR_MASK	kern/pcireg.h	382;"	d
PCI_MAPREG_MEM64_SIZE	kern/pcireg.h	380;"	d
PCI_MAPREG_MEM_ADDR	kern/pcireg.h	372;"	d
PCI_MAPREG_MEM_ADDR_MASK	kern/pcireg.h	376;"	d
PCI_MAPREG_MEM_PREFETCHABLE	kern/pcireg.h	368;"	d
PCI_MAPREG_MEM_PREFETCHABLE_MASK	kern/pcireg.h	370;"	d
PCI_MAPREG_MEM_SIZE	kern/pcireg.h	374;"	d
PCI_MAPREG_MEM_TYPE	kern/pcireg.h	360;"	d
PCI_MAPREG_MEM_TYPE_32BIT	kern/pcireg.h	364;"	d
PCI_MAPREG_MEM_TYPE_32BIT_1M	kern/pcireg.h	365;"	d
PCI_MAPREG_MEM_TYPE_64BIT	kern/pcireg.h	366;"	d
PCI_MAPREG_MEM_TYPE_MASK	kern/pcireg.h	362;"	d
PCI_MAPREG_NUM	kern/pcireg.h	393;"	d
PCI_MAPREG_PCB_END	kern/pcireg.h	350;"	d
PCI_MAPREG_PPB_END	kern/pcireg.h	349;"	d
PCI_MAPREG_ROM	kern/pcireg.h	348;"	d
PCI_MAPREG_ROM_ENABLE	kern/pcireg.h	358;"	d
PCI_MAPREG_SIZE_TO_MASK	kern/pcireg.h	390;"	d
PCI_MAPREG_START	kern/pcireg.h	346;"	d
PCI_MAPREG_TYPE	kern/pcireg.h	352;"	d
PCI_MAPREG_TYPE_IO	kern/pcireg.h	357;"	d
PCI_MAPREG_TYPE_MASK	kern/pcireg.h	354;"	d
PCI_MAPREG_TYPE_MEM	kern/pcireg.h	356;"	d
PCI_MAX_LAT	kern/pcireg.h	547;"	d
PCI_MAX_LAT_MASK	kern/pcireg.h	546;"	d
PCI_MAX_LAT_SHIFT	kern/pcireg.h	545;"	d
PCI_MIN_GNT	kern/pcireg.h	552;"	d
PCI_MIN_GNT_MASK	kern/pcireg.h	551;"	d
PCI_MIN_GNT_SHIFT	kern/pcireg.h	550;"	d
PCI_PCIX_CMD	kern/pcireg.h	477;"	d
PCI_PCIX_CMD_BCNT_1024	kern/pcireg.h	483;"	d
PCI_PCIX_CMD_BCNT_2048	kern/pcireg.h	484;"	d
PCI_PCIX_CMD_BCNT_4096	kern/pcireg.h	485;"	d
PCI_PCIX_CMD_BCNT_512	kern/pcireg.h	482;"	d
PCI_PCIX_CMD_BYTECNT_MASK	kern/pcireg.h	480;"	d
PCI_PCIX_CMD_BYTECNT_SHIFT	kern/pcireg.h	481;"	d
PCI_PCIX_CMD_PERR_RECOVER	kern/pcireg.h	478;"	d
PCI_PCIX_CMD_RELAXED_ORDER	kern/pcireg.h	479;"	d
PCI_PCIX_CMD_SPLTRANS_1	kern/pcireg.h	487;"	d
PCI_PCIX_CMD_SPLTRANS_12	kern/pcireg.h	492;"	d
PCI_PCIX_CMD_SPLTRANS_16	kern/pcireg.h	493;"	d
PCI_PCIX_CMD_SPLTRANS_2	kern/pcireg.h	488;"	d
PCI_PCIX_CMD_SPLTRANS_3	kern/pcireg.h	489;"	d
PCI_PCIX_CMD_SPLTRANS_32	kern/pcireg.h	494;"	d
PCI_PCIX_CMD_SPLTRANS_4	kern/pcireg.h	490;"	d
PCI_PCIX_CMD_SPLTRANS_8	kern/pcireg.h	491;"	d
PCI_PCIX_CMD_SPLTRANS_MASK	kern/pcireg.h	486;"	d
PCI_PCIX_STATUS	kern/pcireg.h	499;"	d
PCI_PCIX_STATUS_133	kern/pcireg.h	504;"	d
PCI_PCIX_STATUS_64BIT	kern/pcireg.h	503;"	d
PCI_PCIX_STATUS_BUS_MASK	kern/pcireg.h	502;"	d
PCI_PCIX_STATUS_DEVCPLX	kern/pcireg.h	507;"	d
PCI_PCIX_STATUS_DEV_MASK	kern/pcireg.h	501;"	d
PCI_PCIX_STATUS_FN_MASK	kern/pcireg.h	500;"	d
PCI_PCIX_STATUS_MAXB_1024	kern/pcireg.h	511;"	d
PCI_PCIX_STATUS_MAXB_2048	kern/pcireg.h	512;"	d
PCI_PCIX_STATUS_MAXB_4096	kern/pcireg.h	513;"	d
PCI_PCIX_STATUS_MAXB_512	kern/pcireg.h	510;"	d
PCI_PCIX_STATUS_MAXB_MASK	kern/pcireg.h	508;"	d
PCI_PCIX_STATUS_MAXB_SHIFT	kern/pcireg.h	509;"	d
PCI_PCIX_STATUS_MAXRS_128K	kern/pcireg.h	531;"	d
PCI_PCIX_STATUS_MAXRS_16K	kern/pcireg.h	528;"	d
PCI_PCIX_STATUS_MAXRS_1K	kern/pcireg.h	524;"	d
PCI_PCIX_STATUS_MAXRS_2K	kern/pcireg.h	525;"	d
PCI_PCIX_STATUS_MAXRS_32K	kern/pcireg.h	529;"	d
PCI_PCIX_STATUS_MAXRS_4K	kern/pcireg.h	526;"	d
PCI_PCIX_STATUS_MAXRS_64K	kern/pcireg.h	530;"	d
PCI_PCIX_STATUS_MAXRS_8K	kern/pcireg.h	527;"	d
PCI_PCIX_STATUS_MAXRS_MASK	kern/pcireg.h	523;"	d
PCI_PCIX_STATUS_MAXST_1	kern/pcireg.h	515;"	d
PCI_PCIX_STATUS_MAXST_12	kern/pcireg.h	520;"	d
PCI_PCIX_STATUS_MAXST_16	kern/pcireg.h	521;"	d
PCI_PCIX_STATUS_MAXST_2	kern/pcireg.h	516;"	d
PCI_PCIX_STATUS_MAXST_3	kern/pcireg.h	517;"	d
PCI_PCIX_STATUS_MAXST_32	kern/pcireg.h	522;"	d
PCI_PCIX_STATUS_MAXST_4	kern/pcireg.h	518;"	d
PCI_PCIX_STATUS_MAXST_8	kern/pcireg.h	519;"	d
PCI_PCIX_STATUS_MAXST_MASK	kern/pcireg.h	514;"	d
PCI_PCIX_STATUS_SCERR	kern/pcireg.h	532;"	d
PCI_PCIX_STATUS_SPLDISC	kern/pcireg.h	505;"	d
PCI_PCIX_STATUS_SPLUNEX	kern/pcireg.h	506;"	d
PCI_PMCR	kern/pcireg.h	453;"	d
PCI_PMCR_D1SUPP	kern/pcireg.h	454;"	d
PCI_PMCR_D2SUPP	kern/pcireg.h	455;"	d
PCI_PMCSR	kern/pcireg.h	457;"	d
PCI_PMCSR_STATE_D0	kern/pcireg.h	459;"	d
PCI_PMCSR_STATE_D1	kern/pcireg.h	460;"	d
PCI_PMCSR_STATE_D2	kern/pcireg.h	461;"	d
PCI_PMCSR_STATE_D3	kern/pcireg.h	462;"	d
PCI_PMCSR_STATE_MASK	kern/pcireg.h	458;"	d
PCI_PRODUCT	kern/pcireg.h	60;"	d
PCI_PRODUCT_MASK	kern/pcireg.h	59;"	d
PCI_PRODUCT_SHIFT	kern/pcireg.h	58;"	d
PCI_REVISION	kern/pcireg.h	133;"	d
PCI_REVISION_MASK	kern/pcireg.h	132;"	d
PCI_REVISION_SHIFT	kern/pcireg.h	131;"	d
PCI_STATUS_66MHZ_SUPPORT	kern/pcireg.h	92;"	d
PCI_STATUS_BACKTOBACK_SUPPORT	kern/pcireg.h	94;"	d
PCI_STATUS_CAPLIST_SUPPORT	kern/pcireg.h	91;"	d
PCI_STATUS_DEVSEL_FAST	kern/pcireg.h	96;"	d
PCI_STATUS_DEVSEL_MASK	kern/pcireg.h	99;"	d
PCI_STATUS_DEVSEL_MEDIUM	kern/pcireg.h	97;"	d
PCI_STATUS_DEVSEL_SLOW	kern/pcireg.h	98;"	d
PCI_STATUS_MASK	kern/pcireg.h	74;"	d
PCI_STATUS_MASTER_ABORT	kern/pcireg.h	102;"	d
PCI_STATUS_MASTER_TARGET_ABORT	kern/pcireg.h	101;"	d
PCI_STATUS_PARITY_DETECT	kern/pcireg.h	104;"	d
PCI_STATUS_PARITY_ERROR	kern/pcireg.h	95;"	d
PCI_STATUS_SHIFT	kern/pcireg.h	73;"	d
PCI_STATUS_SPECIAL_ERROR	kern/pcireg.h	103;"	d
PCI_STATUS_TARGET_TARGET_ABORT	kern/pcireg.h	100;"	d
PCI_STATUS_UDF_SUPPORT	kern/pcireg.h	93;"	d
PCI_SUBCLASS	kern/pcireg.h	123;"	d
PCI_SUBCLASS_BRIDGE_CARDBUS	kern/pcireg.h	211;"	d
PCI_SUBCLASS_BRIDGE_EISA	kern/pcireg.h	206;"	d
PCI_SUBCLASS_BRIDGE_HOST	kern/pcireg.h	204;"	d
PCI_SUBCLASS_BRIDGE_INFINIBAND	kern/pcireg.h	214;"	d
PCI_SUBCLASS_BRIDGE_ISA	kern/pcireg.h	205;"	d
PCI_SUBCLASS_BRIDGE_MC	kern/pcireg.h	207;"	d
PCI_SUBCLASS_BRIDGE_MISC	kern/pcireg.h	215;"	d
PCI_SUBCLASS_BRIDGE_NUBUS	kern/pcireg.h	210;"	d
PCI_SUBCLASS_BRIDGE_PCI	kern/pcireg.h	208;"	d
PCI_SUBCLASS_BRIDGE_PCMCIA	kern/pcireg.h	209;"	d
PCI_SUBCLASS_BRIDGE_RACEWAY	kern/pcireg.h	212;"	d
PCI_SUBCLASS_BRIDGE_STPCI	kern/pcireg.h	213;"	d
PCI_SUBCLASS_COMMUNICATIONS_GPIB	kern/pcireg.h	222;"	d
PCI_SUBCLASS_COMMUNICATIONS_MISC	kern/pcireg.h	224;"	d
PCI_SUBCLASS_COMMUNICATIONS_MODEM	kern/pcireg.h	221;"	d
PCI_SUBCLASS_COMMUNICATIONS_MPSERIAL	kern/pcireg.h	220;"	d
PCI_SUBCLASS_COMMUNICATIONS_PARALLEL	kern/pcireg.h	219;"	d
PCI_SUBCLASS_COMMUNICATIONS_SERIAL	kern/pcireg.h	218;"	d
PCI_SUBCLASS_COMMUNICATIONS_SMARTCARD	kern/pcireg.h	223;"	d
PCI_SUBCLASS_CRYPTO_ENTERTAINMENT	kern/pcireg.h	289;"	d
PCI_SUBCLASS_CRYPTO_MISC	kern/pcireg.h	290;"	d
PCI_SUBCLASS_CRYPTO_NETCOMP	kern/pcireg.h	288;"	d
PCI_SUBCLASS_DASP_DPIO	kern/pcireg.h	293;"	d
PCI_SUBCLASS_DASP_MGMT	kern/pcireg.h	296;"	d
PCI_SUBCLASS_DASP_MISC	kern/pcireg.h	297;"	d
PCI_SUBCLASS_DASP_SYNC	kern/pcireg.h	295;"	d
PCI_SUBCLASS_DASP_TIMEFREQ	kern/pcireg.h	294;"	d
PCI_SUBCLASS_DISPLAY_3D	kern/pcireg.h	189;"	d
PCI_SUBCLASS_DISPLAY_MISC	kern/pcireg.h	190;"	d
PCI_SUBCLASS_DISPLAY_VGA	kern/pcireg.h	187;"	d
PCI_SUBCLASS_DISPLAY_XGA	kern/pcireg.h	188;"	d
PCI_SUBCLASS_DOCK_GENERIC	kern/pcireg.h	243;"	d
PCI_SUBCLASS_DOCK_MISC	kern/pcireg.h	244;"	d
PCI_SUBCLASS_I2O_STANDARD	kern/pcireg.h	278;"	d
PCI_SUBCLASS_INPUT_DIGITIZER	kern/pcireg.h	236;"	d
PCI_SUBCLASS_INPUT_GAMEPORT	kern/pcireg.h	239;"	d
PCI_SUBCLASS_INPUT_KEYBOARD	kern/pcireg.h	235;"	d
PCI_SUBCLASS_INPUT_MISC	kern/pcireg.h	240;"	d
PCI_SUBCLASS_INPUT_MOUSE	kern/pcireg.h	237;"	d
PCI_SUBCLASS_INPUT_SCANNER	kern/pcireg.h	238;"	d
PCI_SUBCLASS_MASK	kern/pcireg.h	122;"	d
PCI_SUBCLASS_MASS_STORAGE_ATA	kern/pcireg.h	172;"	d
PCI_SUBCLASS_MASS_STORAGE_FLOPPY	kern/pcireg.h	169;"	d
PCI_SUBCLASS_MASS_STORAGE_IDE	kern/pcireg.h	168;"	d
PCI_SUBCLASS_MASS_STORAGE_IPI	kern/pcireg.h	170;"	d
PCI_SUBCLASS_MASS_STORAGE_MISC	kern/pcireg.h	174;"	d
PCI_SUBCLASS_MASS_STORAGE_RAID	kern/pcireg.h	171;"	d
PCI_SUBCLASS_MASS_STORAGE_SATA	kern/pcireg.h	173;"	d
PCI_SUBCLASS_MASS_STORAGE_SCSI	kern/pcireg.h	167;"	d
PCI_SUBCLASS_MEMORY_FLASH	kern/pcireg.h	200;"	d
PCI_SUBCLASS_MEMORY_MISC	kern/pcireg.h	201;"	d
PCI_SUBCLASS_MEMORY_RAM	kern/pcireg.h	199;"	d
PCI_SUBCLASS_MULTIMEDIA_AUDIO	kern/pcireg.h	194;"	d
PCI_SUBCLASS_MULTIMEDIA_MISC	kern/pcireg.h	196;"	d
PCI_SUBCLASS_MULTIMEDIA_TELEPHONY	kern/pcireg.h	195;"	d
PCI_SUBCLASS_MULTIMEDIA_VIDEO	kern/pcireg.h	193;"	d
PCI_SUBCLASS_NETWORK_ATM	kern/pcireg.h	180;"	d
PCI_SUBCLASS_NETWORK_ETHERNET	kern/pcireg.h	177;"	d
PCI_SUBCLASS_NETWORK_FDDI	kern/pcireg.h	179;"	d
PCI_SUBCLASS_NETWORK_ISDN	kern/pcireg.h	181;"	d
PCI_SUBCLASS_NETWORK_MISC	kern/pcireg.h	184;"	d
PCI_SUBCLASS_NETWORK_PCIMGMULTICOMP	kern/pcireg.h	183;"	d
PCI_SUBCLASS_NETWORK_TOKENRING	kern/pcireg.h	178;"	d
PCI_SUBCLASS_NETWORK_WORLDFIP	kern/pcireg.h	182;"	d
PCI_SUBCLASS_PREHISTORIC_MISC	kern/pcireg.h	163;"	d
PCI_SUBCLASS_PREHISTORIC_VGA	kern/pcireg.h	164;"	d
PCI_SUBCLASS_PROCESSOR_386	kern/pcireg.h	247;"	d
PCI_SUBCLASS_PROCESSOR_486	kern/pcireg.h	248;"	d
PCI_SUBCLASS_PROCESSOR_ALPHA	kern/pcireg.h	250;"	d
PCI_SUBCLASS_PROCESSOR_COPROC	kern/pcireg.h	253;"	d
PCI_SUBCLASS_PROCESSOR_MIPS	kern/pcireg.h	252;"	d
PCI_SUBCLASS_PROCESSOR_PENTIUM	kern/pcireg.h	249;"	d
PCI_SUBCLASS_PROCESSOR_POWERPC	kern/pcireg.h	251;"	d
PCI_SUBCLASS_SATCOM_AUDIO	kern/pcireg.h	283;"	d
PCI_SUBCLASS_SATCOM_DATA	kern/pcireg.h	285;"	d
PCI_SUBCLASS_SATCOM_TV	kern/pcireg.h	282;"	d
PCI_SUBCLASS_SATCOM_VOICE	kern/pcireg.h	284;"	d
PCI_SUBCLASS_SERIALBUS_ACCESS	kern/pcireg.h	257;"	d
PCI_SUBCLASS_SERIALBUS_CANBUS	kern/pcireg.h	265;"	d
PCI_SUBCLASS_SERIALBUS_FIBER	kern/pcireg.h	260;"	d
PCI_SUBCLASS_SERIALBUS_FIREWIRE	kern/pcireg.h	256;"	d
PCI_SUBCLASS_SERIALBUS_INFINIBAND	kern/pcireg.h	262;"	d
PCI_SUBCLASS_SERIALBUS_IPMI	kern/pcireg.h	263;"	d
PCI_SUBCLASS_SERIALBUS_SERCOS	kern/pcireg.h	264;"	d
PCI_SUBCLASS_SERIALBUS_SMBUS	kern/pcireg.h	261;"	d
PCI_SUBCLASS_SERIALBUS_SSA	kern/pcireg.h	258;"	d
PCI_SUBCLASS_SERIALBUS_USB	kern/pcireg.h	259;"	d
PCI_SUBCLASS_SHIFT	kern/pcireg.h	121;"	d
PCI_SUBCLASS_SYSTEM_DMA	kern/pcireg.h	228;"	d
PCI_SUBCLASS_SYSTEM_MISC	kern/pcireg.h	232;"	d
PCI_SUBCLASS_SYSTEM_PCIHOTPLUG	kern/pcireg.h	231;"	d
PCI_SUBCLASS_SYSTEM_PIC	kern/pcireg.h	227;"	d
PCI_SUBCLASS_SYSTEM_RTC	kern/pcireg.h	230;"	d
PCI_SUBCLASS_SYSTEM_TIMER	kern/pcireg.h	229;"	d
PCI_SUBCLASS_WIRELESS_802_11A	kern/pcireg.h	273;"	d
PCI_SUBCLASS_WIRELESS_802_11B	kern/pcireg.h	274;"	d
PCI_SUBCLASS_WIRELESS_BLUETOOTH	kern/pcireg.h	271;"	d
PCI_SUBCLASS_WIRELESS_BROADBAND	kern/pcireg.h	272;"	d
PCI_SUBCLASS_WIRELESS_CONSUMERIR	kern/pcireg.h	269;"	d
PCI_SUBCLASS_WIRELESS_IRDA	kern/pcireg.h	268;"	d
PCI_SUBCLASS_WIRELESS_MISC	kern/pcireg.h	275;"	d
PCI_SUBCLASS_WIRELESS_RF	kern/pcireg.h	270;"	d
PCI_SUBSYS_ID_REG	kern/pcireg.h	407;"	d
PCI_VENDOR	kern/pcireg.h	55;"	d
PCI_VENDOR_MASK	kern/pcireg.h	54;"	d
PCI_VENDOR_SHIFT	kern/pcireg.h	53;"	d
PCI_VPDRES_ISLARGE	kern/pcireg.h	657;"	d
PCI_VPDRES_LARGE_NAME	kern/pcireg.h	662;"	d
PCI_VPDRES_SMALL_LENGTH	kern/pcireg.h	659;"	d
PCI_VPDRES_SMALL_NAME	kern/pcireg.h	660;"	d
PCI_VPDRES_TYPE_COMPATIBLE_DEVICE_ID	kern/pcireg.h	664;"	d
PCI_VPDRES_TYPE_END_TAG	kern/pcireg.h	666;"	d
PCI_VPDRES_TYPE_IDENTIFIER_STRING	kern/pcireg.h	668;"	d
PCI_VPDRES_TYPE_VENDOR_DEFINED	kern/pcireg.h	665;"	d
PCI_VPDRES_TYPE_VPD	kern/pcireg.h	669;"	d
PCI_VPD_ADDRESS	kern/pcireg.h	443;"	d
PCI_VPD_ADDRESS_MASK	kern/pcireg.h	441;"	d
PCI_VPD_ADDRESS_SHIFT	kern/pcireg.h	442;"	d
PCI_VPD_DATAREG	kern/pcireg.h	445;"	d
PCI_VPD_OPFLAG	kern/pcireg.h	446;"	d
PDADDRESS	net/lwip/netif/ppp/ppp.c	/^  PDADDRESS,   \/* Process address field. *\/$/;"	e	enum:__anon19	file:
PDCONTROL	net/lwip/netif/ppp/ppp.c	/^  PDCONTROL,   \/* Process control field. *\/$/;"	e	enum:__anon19	file:
PDDATA	net/lwip/netif/ppp/ppp.c	/^  PDDATA       \/* Process data byte. *\/$/;"	e	enum:__anon19	file:
PDIDLE	net/lwip/netif/ppp/ppp.c	/^  PDIDLE = 0,  \/* Idle state - waiting. *\/$/;"	e	enum:__anon19	file:
PDPROTOCOL1	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL1, \/* Process protocol field 1. *\/$/;"	e	enum:__anon19	file:
PDPROTOCOL2	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL2, \/* Process protocol field 2. *\/$/;"	e	enum:__anon19	file:
PDSTART	net/lwip/netif/ppp/ppp.c	/^  PDSTART,     \/* Process start flag. *\/$/;"	e	enum:__anon19	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERF_START	net/lwip/jos/arch/perf.h	4;"	d
PERF_STOP	net/lwip/jos/arch/perf.h	5;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PER_TCP_PCB_BUFFER	net/lwip/jos/lwipopts.h	34;"	d
PFTEMP	inc/memlayout.h	137;"	d
PF_INET	net/lwip/include/lwip/sockets.h	119;"	d
PF_UNSPEC	net/lwip/include/lwip/sockets.h	120;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PHASE_AUTHENTICATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_AUTHENTICATE,$/;"	e	enum:__anon16
PHASE_CALLBACK	net/lwip/netif/ppp/lcp.h	/^  PHASE_CALLBACK,$/;"	e	enum:__anon16
PHASE_DEAD	net/lwip/netif/ppp/lcp.h	/^  PHASE_DEAD = 0,$/;"	e	enum:__anon16
PHASE_ESTABLISH	net/lwip/netif/ppp/lcp.h	/^  PHASE_ESTABLISH,$/;"	e	enum:__anon16
PHASE_INITIALIZE	net/lwip/netif/ppp/lcp.h	/^  PHASE_INITIALIZE,$/;"	e	enum:__anon16
PHASE_NETWORK	net/lwip/netif/ppp/lcp.h	/^  PHASE_NETWORK,$/;"	e	enum:__anon16
PHASE_TERMINATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_TERMINATE$/;"	e	enum:__anon16
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
PKTMAP	net/lwip/jos/jif/jif.c	47;"	d	file:
PKT_SIZE	kern/e1000.c	6;"	d	file:
PORT	user/echosrv.c	5;"	d	file:
PORT	user/echotest.c	7;"	d	file:
PORT	user/httpd.c	5;"	d	file:
PORT7	GNUmakefile	/^PORT7	:= $(shell expr $(GDBPORT) + 1)$/;"	m
PORT80	GNUmakefile	/^PORT80	:= $(shell expr $(GDBPORT) + 2)$/;"	m
PPPAUTHTYPE_ANY	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_ANY,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_CHAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_CHAP$/;"	e	enum:pppAuthType
PPPAUTHTYPE_NONE	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_NONE,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_PAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_PAP,$/;"	e	enum:pppAuthType
PPPCTLG_ERRCODE	net/lwip/netif/ppp/ppp.h	252;"	d
PPPCTLG_FD	net/lwip/netif/ppp/ppp.h	253;"	d
PPPCTLG_UPSTATUS	net/lwip/netif/ppp/ppp.h	250;"	d
PPPCTLS_ERRCODE	net/lwip/netif/ppp/ppp.h	251;"	d
PPPControl	net/lwip/netif/ppp/ppp.c	/^} PPPControl;$/;"	t	typeref:struct:PPPControl_s	file:
PPPControl_s	net/lwip/netif/ppp/ppp.c	/^typedef struct PPPControl_s {$/;"	s	file:
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	72;"	d
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	82;"	d
PPPDEBUG_H	net/lwip/netif/ppp/pppdebug.h	37;"	d
PPPDevStates	net/lwip/netif/ppp/ppp.c	/^} PPPDevStates;$/;"	t	typeref:enum:__anon19	file:
PPPERR_ALLOC	net/lwip/netif/ppp/ppp.h	237;"	d
PPPERR_AUTHFAIL	net/lwip/netif/ppp/ppp.h	240;"	d
PPPERR_CONNECT	net/lwip/netif/ppp/ppp.h	239;"	d
PPPERR_DEVICE	net/lwip/netif/ppp/ppp.h	236;"	d
PPPERR_NONE	net/lwip/netif/ppp/ppp.h	233;"	d
PPPERR_OPEN	net/lwip/netif/ppp/ppp.h	235;"	d
PPPERR_PARAM	net/lwip/netif/ppp/ppp.h	234;"	d
PPPERR_PROTOCOL	net/lwip/netif/ppp/ppp.h	241;"	d
PPPERR_USER	net/lwip/netif/ppp/ppp.h	238;"	d
PPPOE_ADD_16	net/lwip/netif/ppp/ppp_oe.c	170;"	d	file:
PPPOE_ADD_HEADER	net/lwip/netif/ppp/ppp_oe.c	175;"	d	file:
PPPOE_CODE_PADI	net/lwip/include/netif/ppp_oe.h	128;"	d
PPPOE_CODE_PADO	net/lwip/include/netif/ppp_oe.h	129;"	d
PPPOE_CODE_PADR	net/lwip/include/netif/ppp_oe.h	130;"	d
PPPOE_CODE_PADS	net/lwip/include/netif/ppp_oe.h	131;"	d
PPPOE_CODE_PADT	net/lwip/include/netif/ppp_oe.h	132;"	d
PPPOE_DISC_MAXPADI	net/lwip/netif/ppp/ppp_oe.c	183;"	d	file:
PPPOE_DISC_MAXPADR	net/lwip/netif/ppp/ppp_oe.c	184;"	d	file:
PPPOE_DISC_TIMEOUT	net/lwip/netif/ppp/ppp_oe.c	181;"	d	file:
PPPOE_HEADERLEN	net/lwip/include/netif/ppp_oe.h	114;"	d
PPPOE_MAXMTU	net/lwip/include/netif/ppp_oe.h	139;"	d
PPPOE_MAXMTU	net/lwip/netif/ppp/lcp.c	72;"	d	file:
PPPOE_SLOW_RETRY	net/lwip/netif/ppp/ppp_oe.c	182;"	d	file:
PPPOE_STATE_CLOSING	net/lwip/include/netif/ppp_oe.h	110;"	d
PPPOE_STATE_INITIAL	net/lwip/include/netif/ppp_oe.h	106;"	d
PPPOE_STATE_PADI_SENT	net/lwip/include/netif/ppp_oe.h	107;"	d
PPPOE_STATE_PADO_SENT	net/lwip/include/netif/ppp_oe.h	112;"	d
PPPOE_STATE_PADR_SENT	net/lwip/include/netif/ppp_oe.h	108;"	d
PPPOE_STATE_SESSION	net/lwip/include/netif/ppp_oe.h	109;"	d
PPPOE_SUPPORT	net/lwip/include/lwip/opt.h	1258;"	d
PPPOE_TAG_ACCOOKIE	net/lwip/include/netif/ppp_oe.h	121;"	d
PPPOE_TAG_ACNAME	net/lwip/include/netif/ppp_oe.h	119;"	d
PPPOE_TAG_ACSYS_ERR	net/lwip/include/netif/ppp_oe.h	125;"	d
PPPOE_TAG_EOL	net/lwip/include/netif/ppp_oe.h	117;"	d
PPPOE_TAG_GENERIC_ERR	net/lwip/include/netif/ppp_oe.h	126;"	d
PPPOE_TAG_HUNIQUE	net/lwip/include/netif/ppp_oe.h	120;"	d
PPPOE_TAG_RELAYSID	net/lwip/include/netif/ppp_oe.h	123;"	d
PPPOE_TAG_SNAME	net/lwip/include/netif/ppp_oe.h	118;"	d
PPPOE_TAG_SNAME_ERR	net/lwip/include/netif/ppp_oe.h	124;"	d
PPPOE_TAG_VENDOR	net/lwip/include/netif/ppp_oe.h	122;"	d
PPPOE_VERTYPE	net/lwip/include/netif/ppp_oe.h	115;"	d
PPPOS_SUPPORT	net/lwip/include/lwip/opt.h	1265;"	d
PPP_ADDRESS	net/lwip/netif/ppp/ppp.c	119;"	d	file:
PPP_ALLSTATIONS	net/lwip/netif/ppp/ppp.h	125;"	d
PPP_AT	net/lwip/netif/ppp/ppp.h	135;"	d
PPP_ATCP	net/lwip/netif/ppp/ppp.h	140;"	d
PPP_CBCP	net/lwip/netif/ppp/ppp.h	146;"	d
PPP_CCP	net/lwip/netif/ppp/ppp.h	141;"	d
PPP_CHAP	net/lwip/netif/ppp/ppp.h	145;"	d
PPP_COMP	net/lwip/netif/ppp/ppp.h	138;"	d
PPP_CONTROL	net/lwip/netif/ppp/ppp.c	120;"	d	file:
PPP_DEBUG	net/lwip/include/lwip/opt.h	1659;"	d
PPP_DEFMRU	net/lwip/include/lwip/opt.h	1393;"	d
PPP_ESCAPE	net/lwip/netif/ppp/ppp.h	128;"	d
PPP_FCS	net/lwip/netif/ppp/ppp.h	153;"	d
PPP_FCSLEN	net/lwip/netif/ppp/ppp.h	119;"	d
PPP_FLAG	net/lwip/netif/ppp/ppp.h	127;"	d
PPP_GOODFCS	net/lwip/netif/ppp/ppp.h	152;"	d
PPP_H	net/lwip/netif/ppp/ppp.h	35;"	d
PPP_HDRLEN	net/lwip/netif/ppp/ppp.h	118;"	d
PPP_INITFCS	net/lwip/netif/ppp/ppp.h	151;"	d
PPP_IP	net/lwip/netif/ppp/ppp.h	134;"	d
PPP_IPCP	net/lwip/netif/ppp/ppp.h	139;"	d
PPP_LCP	net/lwip/netif/ppp/ppp.h	142;"	d
PPP_LQR	net/lwip/netif/ppp/ppp.h	144;"	d
PPP_MAXIDLEFLAG	net/lwip/include/lwip/opt.h	1373;"	d
PPP_MAXMRU	net/lwip/include/lwip/opt.h	1391;"	d
PPP_MAXMTU	net/lwip/include/lwip/opt.h	1387;"	d
PPP_MINMRU	net/lwip/include/lwip/opt.h	1395;"	d
PPP_MINMTU	net/lwip/include/lwip/opt.h	1389;"	d
PPP_MRU	net/lwip/include/lwip/opt.h	1390;"	d
PPP_MTU	net/lwip/include/lwip/opt.h	1384;"	d
PPP_OE_H	net/lwip/include/netif/ppp_oe.h	71;"	d
PPP_PAP	net/lwip/netif/ppp/ppp.h	143;"	d
PPP_PROTOCOL	net/lwip/netif/ppp/ppp.c	121;"	d	file:
PPP_SUPPORT	net/lwip/include/lwip/opt.h	1251;"	d
PPP_THREAD_NAME	net/lwip/include/lwip/opt.h	964;"	d
PPP_THREAD_PRIO	net/lwip/include/lwip/opt.h	982;"	d
PPP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	973;"	d
PPP_TRANS	net/lwip/netif/ppp/ppp.h	129;"	d
PPP_UI	net/lwip/netif/ppp/ppp.h	126;"	d
PPP_VJC_COMP	net/lwip/netif/ppp/ppp.h	136;"	d
PPP_VJC_UNCOMP	net/lwip/netif/ppp/ppp.h	137;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	215;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	217;"	d
PROBE_MAX	net/lwip/include/ipv4/lwip/autoip.h	62;"	d
PROBE_MIN	net/lwip/include/ipv4/lwip/autoip.h	61;"	d
PROBE_NUM	net/lwip/include/ipv4/lwip/autoip.h	63;"	d
PROBE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	60;"	d
PROTO_NAME	net/lwip/netif/ppp/fsm.c	106;"	d	file:
PROTREJ	net/lwip/netif/ppp/lcp.h	78;"	d
PTABLE_MAGIC	inc/partition.h	14;"	d
PTABLE_MAGIC_OFFSET	inc/partition.h	13;"	d
PTABLE_OFFSET	inc/partition.h	11;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_CONTINUED	lib/malloc.c	23;"	d	file:
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	95;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PTYPE_DOS_EXTENDED	inc/partition.h	20;"	d
PTYPE_JOSFS	inc/partition.h	18;"	d
PTYPE_JOS_KERN	inc/partition.h	17;"	d
PTYPE_LINUX_EXTENDED	inc/partition.h	22;"	d
PTYPE_W95_EXTENDED	inc/partition.h	21;"	d
PUTCHAR	net/lwip/netif/ppp/ppp.h	179;"	d
PUTLONG	net/lwip/netif/ppp/ppp.h	199;"	d
PUTSHORT	net/lwip/netif/ppp/ppp.h	188;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Partitiondesc	inc/partition.h	/^struct Partitiondesc {$/;"	s
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
QUEUE_SIZE	net/ns.h	11;"	d
RANDM_H	net/lwip/netif/ppp/randm.h	35;"	d
RANDPOOLSZ	net/lwip/netif/ppp/randm.c	46;"	d	file:
RATE_LIMIT_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	68;"	d
RAW_DEBUG	net/lwip/include/lwip/opt.h	1553;"	d
RAW_TTL	net/lwip/include/lwip/opt.h	471;"	d
REJCIADDR	net/lwip/netif/ppp/ipcp.c	793;"	d	file:
REJCICBCP	net/lwip/netif/ppp/lcp.c	1138;"	d	file:
REJCICHAP	net/lwip/netif/ppp/lcp.c	1090;"	d	file:
REJCIDNS	net/lwip/netif/ppp/ipcp.c	843;"	d	file:
REJCILONG	net/lwip/netif/ppp/lcp.c	1107;"	d	file:
REJCILQR	net/lwip/netif/ppp/lcp.c	1122;"	d	file:
REJCISHORT	net/lwip/netif/ppp/lcp.c	1075;"	d	file:
REJCIVJ	net/lwip/netif/ppp/ipcp.c	818;"	d	file:
REJCIVOID	net/lwip/netif/ppp/lcp.c	1065;"	d	file:
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
REQVA	lib/nsipc.c	8;"	d	file:
REQVA	net/ns.h	12;"	d
ROTATE_LEFT	net/lwip/netif/ppp/md5.c	77;"	d	file:
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	64;"	d
ROUTER_ALERT	net/lwip/include/ipv4/lwip/igmp.h	55;"	d
ROUTER_ALERTLEN	net/lwip/include/ipv4/lwip/igmp.h	56;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
S11	net/lwip/netif/ppp/md5.c	223;"	d	file:
S12	net/lwip/netif/ppp/md5.c	224;"	d	file:
S13	net/lwip/netif/ppp/md5.c	225;"	d	file:
S14	net/lwip/netif/ppp/md5.c	226;"	d	file:
S16_F	net/lwip/jos/arch/cc.h	26;"	d
S21	net/lwip/netif/ppp/md5.c	245;"	d	file:
S22	net/lwip/netif/ppp/md5.c	246;"	d	file:
S23	net/lwip/netif/ppp/md5.c	247;"	d	file:
S24	net/lwip/netif/ppp/md5.c	248;"	d	file:
S31	net/lwip/netif/ppp/md5.c	267;"	d	file:
S32	net/lwip/netif/ppp/md5.c	268;"	d	file:
S32_F	net/lwip/jos/arch/cc.h	30;"	d
S33	net/lwip/netif/ppp/md5.c	269;"	d	file:
S34	net/lwip/netif/ppp/md5.c	270;"	d	file:
S41	net/lwip/netif/ppp/md5.c	289;"	d	file:
S42	net/lwip/netif/ppp/md5.c	290;"	d	file:
S43	net/lwip/netif/ppp/md5.c	291;"	d	file:
S44	net/lwip/netif/ppp/md5.c	292;"	d	file:
SAMEMAPPING	obj/kern/kernel.asm	/^	SAMEMAPPING:$/;"	l
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	226;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	220;"	d	file:
SIOCATMARK	net/lwip/include/lwip/sockets.h	263;"	d
SIOCGHIWAT	net/lwip/include/lwip/sockets.h	260;"	d
SIOCGLOWAT	net/lwip/include/lwip/sockets.h	262;"	d
SIOCSHIWAT	net/lwip/include/lwip/sockets.h	259;"	d
SIOCSLOWAT	net/lwip/include/lwip/sockets.h	261;"	d
SIZEOF_QUEUE	kern/e1000.c	5;"	d	file:
SIZEOF_STRUCT_MEM	net/lwip/core/mem.c	169;"	d	file:
SIZEOF_STRUCT_PBUF	net/lwip/core/pbuf.c	76;"	d	file:
SLIPIF_THREAD_NAME	net/lwip/include/lwip/opt.h	939;"	d
SLIPIF_THREAD_PRIO	net/lwip/include/lwip/opt.h	957;"	d
SLIPIF_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	948;"	d
SLIP_DEBUG	net/lwip/include/lwip/opt.h	1666;"	d
SLIP_END	net/lwip/netif/slipif.c	57;"	d	file:
SLIP_ESC	net/lwip/netif/slipif.c	58;"	d	file:
SLIP_ESC_END	net/lwip/netif/slipif.c	59;"	d	file:
SLIP_ESC_ESC	net/lwip/netif/slipif.c	60;"	d	file:
SMEMCPY	net/lwip/include/lwip/opt.h	84;"	d
SNMP_ASN1_APPLIC	net/lwip/include/lwip/snmp_asn1.h	48;"	d
SNMP_ASN1_CONSTR	net/lwip/include/lwip/snmp_asn1.h	51;"	d
SNMP_ASN1_CONTXT	net/lwip/include/lwip/snmp_asn1.h	49;"	d
SNMP_ASN1_COUNTER	net/lwip/include/lwip/snmp_asn1.h	63;"	d
SNMP_ASN1_GAUGE	net/lwip/include/lwip/snmp_asn1.h	64;"	d
SNMP_ASN1_INTEG	net/lwip/include/lwip/snmp_asn1.h	55;"	d
SNMP_ASN1_IPADDR	net/lwip/include/lwip/snmp_asn1.h	62;"	d
SNMP_ASN1_NUL	net/lwip/include/lwip/snmp_asn1.h	57;"	d
SNMP_ASN1_OBJ_ID	net/lwip/include/lwip/snmp_asn1.h	58;"	d
SNMP_ASN1_OC_STR	net/lwip/include/lwip/snmp_asn1.h	56;"	d
SNMP_ASN1_OPAQUE	net/lwip/include/lwip/snmp_asn1.h	66;"	d
SNMP_ASN1_PDU_GET_NEXT_REQ	net/lwip/include/lwip/snmp_asn1.h	70;"	d
SNMP_ASN1_PDU_GET_REQ	net/lwip/include/lwip/snmp_asn1.h	69;"	d
SNMP_ASN1_PDU_GET_RESP	net/lwip/include/lwip/snmp_asn1.h	71;"	d
SNMP_ASN1_PDU_SET_REQ	net/lwip/include/lwip/snmp_asn1.h	72;"	d
SNMP_ASN1_PDU_TRAP	net/lwip/include/lwip/snmp_asn1.h	73;"	d
SNMP_ASN1_PRIMIT	net/lwip/include/lwip/snmp_asn1.h	52;"	d
SNMP_ASN1_SEQ	net/lwip/include/lwip/snmp_asn1.h	59;"	d
SNMP_ASN1_TIMETICKS	net/lwip/include/lwip/snmp_asn1.h	65;"	d
SNMP_ASN1_UNIV	net/lwip/include/lwip/snmp_asn1.h	47;"	d
SNMP_COMMUNITY_STR_LEN	net/lwip/include/lwip/snmp_msg.h	214;"	d
SNMP_CONCURRENT_REQUESTS	net/lwip/include/lwip/opt.h	531;"	d
SNMP_ENTERPRISE_ID	net/lwip/core/snmp/mib2.c	65;"	d	file:
SNMP_ES_BADVALUE	net/lwip/include/lwip/snmp_msg.h	64;"	d
SNMP_ES_GENERROR	net/lwip/include/lwip/snmp_msg.h	66;"	d
SNMP_ES_NOERROR	net/lwip/include/lwip/snmp_msg.h	61;"	d
SNMP_ES_NOSUCHNAME	net/lwip/include/lwip/snmp_msg.h	63;"	d
SNMP_ES_READONLY	net/lwip/include/lwip/snmp_msg.h	65;"	d
SNMP_ES_TOOBIG	net/lwip/include/lwip/snmp_msg.h	62;"	d
SNMP_GENTRAP_AUTHFAIL	net/lwip/include/lwip/snmp_msg.h	70;"	d
SNMP_GENTRAP_COLDSTART	net/lwip/include/lwip/snmp_msg.h	68;"	d
SNMP_GENTRAP_ENTERPRISESPC	net/lwip/include/lwip/snmp_msg.h	71;"	d
SNMP_GENTRAP_WARMSTART	net/lwip/include/lwip/snmp_msg.h	69;"	d
SNMP_GET_SYSUPTIME	net/lwip/core/snmp/mib2.c	74;"	d	file:
SNMP_IN_PORT	net/lwip/include/lwip/snmp_msg.h	53;"	d
SNMP_MIB_DEBUG	net/lwip/include/lwip/opt.h	1694;"	d
SNMP_MSG_DEBUG	net/lwip/include/lwip/opt.h	1687;"	d
SNMP_MSG_EMPTY	net/lwip/include/lwip/snmp_msg.h	195;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	208;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	211;"	d
SNMP_MSG_EXTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	209;"	d
SNMP_MSG_EXTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	210;"	d
SNMP_MSG_EXTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	212;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	200;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	203;"	d
SNMP_MSG_INTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	201;"	d
SNMP_MSG_INTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	202;"	d
SNMP_MSG_INTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	204;"	d
SNMP_MSG_SEARCH_OBJ	net/lwip/include/lwip/snmp_msg.h	197;"	d
SNMP_PRIVATE_MIB	net/lwip/include/lwip/opt.h	546;"	d
SNMP_SAFE_REQUESTS	net/lwip/include/lwip/opt.h	555;"	d
SNMP_SYSOBJID	net/lwip/core/snmp/mib2.c	67;"	d	file:
SNMP_SYSOBJID_LEN	net/lwip/core/snmp/mib2.c	66;"	d	file:
SNMP_SYSSERVICES	net/lwip/core/snmp/mib2.c	70;"	d	file:
SNMP_SYSUPTIME_INTERVAL	net/lwip/include/lwip/snmp.h	85;"	d
SNMP_TRAP_DESTINATIONS	net/lwip/include/lwip/opt.h	539;"	d
SNMP_TRAP_PORT	net/lwip/include/lwip/snmp_msg.h	58;"	d
SOCKETS_DEBUG	net/lwip/include/lwip/opt.h	1511;"	d
SOCK_DGRAM	net/lwip/include/lwip/sockets.h	69;"	d
SOCK_RAW	net/lwip/include/lwip/sockets.h	70;"	d
SOCK_STREAM	net/lwip/include/lwip/sockets.h	68;"	d
SOF_ACCEPTCONN	net/lwip/include/ipv4/lwip/ip.h	102;"	d
SOF_BROADCAST	net/lwip/include/ipv4/lwip/ip.h	106;"	d
SOF_DEBUG	net/lwip/include/ipv4/lwip/ip.h	101;"	d
SOF_DONTROUTE	net/lwip/include/ipv4/lwip/ip.h	105;"	d
SOF_KEEPALIVE	net/lwip/include/ipv4/lwip/ip.h	104;"	d
SOF_LINGER	net/lwip/include/ipv4/lwip/ip.h	108;"	d
SOF_OOBINLINE	net/lwip/include/ipv4/lwip/ip.h	109;"	d
SOF_REUSEADDR	net/lwip/include/ipv4/lwip/ip.h	103;"	d
SOF_REUSEPORT	net/lwip/include/ipv4/lwip/ip.h	110;"	d
SOF_USELOOPBACK	net/lwip/include/ipv4/lwip/ip.h	107;"	d
SOL_SOCKET	net/lwip/include/lwip/sockets.h	114;"	d
SO_ACCEPTCONN	net/lwip/include/lwip/sockets.h	76;"	d
SO_BROADCAST	net/lwip/include/lwip/sockets.h	80;"	d
SO_CONTIMEO	net/lwip/include/lwip/sockets.h	99;"	d
SO_DEBUG	net/lwip/include/lwip/sockets.h	75;"	d
SO_DONTLINGER	net/lwip/include/lwip/sockets.h	86;"	d
SO_DONTROUTE	net/lwip/include/lwip/sockets.h	79;"	d
SO_ERROR	net/lwip/include/lwip/sockets.h	97;"	d
SO_KEEPALIVE	net/lwip/include/lwip/sockets.h	78;"	d
SO_LINGER	net/lwip/include/lwip/sockets.h	82;"	d
SO_NO_CHECK	net/lwip/include/lwip/sockets.h	100;"	d
SO_OOBINLINE	net/lwip/include/lwip/sockets.h	83;"	d
SO_RCVBUF	net/lwip/include/lwip/sockets.h	92;"	d
SO_RCVLOWAT	net/lwip/include/lwip/sockets.h	94;"	d
SO_RCVTIMEO	net/lwip/include/lwip/sockets.h	96;"	d
SO_REUSE	net/lwip/include/lwip/opt.h	1122;"	d
SO_REUSEADDR	net/lwip/include/lwip/sockets.h	77;"	d
SO_REUSEPORT	net/lwip/include/lwip/sockets.h	84;"	d
SO_SNDBUF	net/lwip/include/lwip/sockets.h	91;"	d
SO_SNDLOWAT	net/lwip/include/lwip/sockets.h	93;"	d
SO_SNDTIMEO	net/lwip/include/lwip/sockets.h	95;"	d
SO_TYPE	net/lwip/include/lwip/sockets.h	98;"	d
SO_USELOOPBACK	net/lwip/include/lwip/sockets.h	81;"	d
SPECIALS_MASK	net/lwip/netif/ppp/vj.h	93;"	d
SPECIAL_D	net/lwip/netif/ppp/vj.h	92;"	d
SPECIAL_I	net/lwip/netif/ppp/vj.h	91;"	d
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STATS_DEC	net/lwip/include/lwip/stats.h	145;"	d
STATS_DEC	net/lwip/include/lwip/stats.h	149;"	d
STATS_INC	net/lwip/include/lwip/stats.h	144;"	d
STATS_INC	net/lwip/include/lwip/stats.h	148;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	51;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	54;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	52;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	55;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SWAP_BYTES_IN_WORD	net/lwip/core/ipv4/inet_chksum.c	67;"	d	file:
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
SYMBOLS	user/sh.c	205;"	d	file:
SYN_RCVD	net/lwip/include/lwip/tcp.h	/^  SYN_RCVD    = 3,$/;"	e	enum:tcp_state
SYN_SENT	net/lwip/include/lwip/tcp.h	/^  SYN_SENT    = 2,$/;"	e	enum:tcp_state
SYS_ARCH_DEC	net/lwip/include/lwip/sys.h	215;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	167;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	192;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/jos/arch/sys_arch.h	17;"	d
SYS_ARCH_GET	net/lwip/include/lwip/sys.h	224;"	d
SYS_ARCH_INC	net/lwip/include/lwip/sys.h	206;"	d
SYS_ARCH_NOWAIT	net/lwip/jos/arch/sys_arch.h	21;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	177;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	193;"	d
SYS_ARCH_PROTECT	net/lwip/jos/arch/sys_arch.h	18;"	d
SYS_ARCH_SET	net/lwip/include/lwip/sys.h	233;"	d
SYS_ARCH_TIMEOUT	net/lwip/include/lwip/sys.h	71;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	186;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	194;"	d
SYS_ARCH_UNPROTECT	net/lwip/jos/arch/sys_arch.h	19;"	d
SYS_DEBUG	net/lwip/include/lwip/opt.h	1574;"	d
SYS_LIGHTWEIGHT_PROT	net/lwip/include/lwip/opt.h	60;"	d
SYS_MBOX_EMPTY	net/lwip/include/lwip/sys.h	76;"	d
SYS_MBOX_NULL	net/lwip/jos/arch/sys_arch.h	10;"	d
SYS_SEM_NULL	net/lwip/jos/arch/sys_arch.h	11;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1223;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1237;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	254;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	258;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	255;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	259;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	253;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	257;"	d
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon8
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon8
SYS_env_assign_priority	inc/syscall.h	/^	SYS_env_assign_priority,$/;"	e	enum:__anon8
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon8
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon8
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon8
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon8
SYS_exec	inc/syscall.h	/^	SYS_exec$/;"	e	enum:__anon8
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon8
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon8
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon8
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon8
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon8
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon8
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon8
SYS_recieve_packet	inc/syscall.h	/^	SYS_recieve_packet,$/;"	e	enum:__anon8
SYS_time_msec	inc/syscall.h	/^	SYS_time_msec,$/;"	e	enum:__anon8
SYS_transmit_packet	inc/syscall.h	/^	SYS_transmit_packet,$/;"	e	enum:__anon8
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon8
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
StdText	net/lwip/netif/ppp/chpms.c	/^static u_char *StdText = (u_char *)"KGS!@#$%"; \/* key from rasapi32.dll *\/$/;"	v	file:
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TCPH_FLAGS	net/lwip/include/lwip/tcp.h	230;"	d
TCPH_FLAGS_SET	net/lwip/include/lwip/tcp.h	234;"	d
TCPH_HDRLEN	net/lwip/include/lwip/tcp.h	229;"	d
TCPH_HDRLEN_SET	net/lwip/include/lwip/tcp.h	233;"	d
TCPH_OFFSET	net/lwip/include/lwip/tcp.h	228;"	d
TCPH_OFFSET_SET	net/lwip/include/lwip/tcp.h	232;"	d
TCPH_SET_FLAG	net/lwip/include/lwip/tcp.h	235;"	d
TCPH_UNSET_FLAG	net/lwip/include/lwip/tcp.h	236;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	54;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	61;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	55;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	62;"	d
TCPIP_DEBUG	net/lwip/include/lwip/opt.h	1652;"	d
TCPIP_MBOX_SIZE	net/lwip/include/lwip/opt.h	932;"	d
TCPIP_MSG_API	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_API,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_CALLBACK	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_CALLBACK,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_INPKT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_INPKT,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_NETIFAPI	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_NETIFAPI,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_TIMEOUT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_TIMEOUT$/;"	e	enum:tcpip_msg_type
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	56;"	d
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	63;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	57;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	64;"	d
TCPIP_THREAD_NAME	net/lwip/include/lwip/opt.h	905;"	d
TCPIP_THREAD_PRIO	net/lwip/include/lwip/opt.h	923;"	d
TCPIP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	914;"	d
TCP_ACK	net/lwip/include/lwip/tcp.h	160;"	d
TCP_BUILD_MSS_OPTION	net/lwip/include/lwip/tcp.h	142;"	d
TCP_CALCULATE_EFF_SEND_MSS	net/lwip/include/lwip/opt.h	709;"	d
TCP_CWND_DEBUG	net/lwip/include/lwip/opt.h	1610;"	d
TCP_CWR	net/lwip/include/lwip/tcp.h	163;"	d
TCP_DEBUG	net/lwip/include/lwip/opt.h	1581;"	d
TCP_DEFAULT_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	750;"	d
TCP_ECE	net/lwip/include/lwip/tcp.h	162;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	456;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	469;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	462;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	480;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	466;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	486;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	464;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	483;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	460;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	475;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	458;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	472;"	d
TCP_FAST_INTERVAL	net/lwip/include/lwip/tcp.h	175;"	d
TCP_FIN	net/lwip/include/lwip/tcp.h	156;"	d
TCP_FIN_WAIT_TIMEOUT	net/lwip/include/lwip/tcp.h	182;"	d
TCP_FLAGS	net/lwip/include/lwip/tcp.h	165;"	d
TCP_FR_DEBUG	net/lwip/include/lwip/opt.h	1595;"	d
TCP_HLEN	net/lwip/include/lwip/tcp.h	168;"	d
TCP_INPUT_DEBUG	net/lwip/include/lwip/opt.h	1588;"	d
TCP_KEEPALIVE	net/lwip/include/lwip/sockets.h	149;"	d
TCP_KEEPCNT	net/lwip/include/lwip/sockets.h	152;"	d
TCP_KEEPCNT_DEFAULT	net/lwip/include/lwip/tcp.h	201;"	d
TCP_KEEPIDLE	net/lwip/include/lwip/sockets.h	150;"	d
TCP_KEEPIDLE_DEFAULT	net/lwip/include/lwip/tcp.h	193;"	d
TCP_KEEPINTVL	net/lwip/include/lwip/sockets.h	151;"	d
TCP_KEEPINTVL_DEFAULT	net/lwip/include/lwip/tcp.h	197;"	d
TCP_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	741;"	d
TCP_LOCAL_PORT_RANGE_END	net/lwip/core/tcp.c	445;"	d	file:
TCP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define TCP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
TCP_LOCAL_PORT_RANGE_START	net/lwip/core/tcp.c	444;"	d	file:
TCP_MAXIDLE	net/lwip/include/lwip/tcp.h	204;"	d
TCP_MAXRTX	net/lwip/include/lwip/opt.h	671;"	d
TCP_MSL	net/lwip/include/lwip/tcp.h	188;"	d
TCP_MSS	net/lwip/include/lwip/opt.h	697;"	d
TCP_MSS	net/lwip/jos/lwipopts.h	40;"	d
TCP_NODELAY	net/lwip/include/lwip/sockets.h	148;"	d
TCP_OOSEQ_TIMEOUT	net/lwip/include/lwip/tcp.h	185;"	d
TCP_OUTPUT_DEBUG	net/lwip/include/lwip/opt.h	1624;"	d
TCP_PCB_COMMON	net/lwip/include/lwip/tcp.h	264;"	d
TCP_PRIO_MAX	net/lwip/include/lwip/tcp.h	113;"	d
TCP_PRIO_MIN	net/lwip/include/lwip/tcp.h	111;"	d
TCP_PRIO_NORMAL	net/lwip/include/lwip/tcp.h	112;"	d
TCP_PSH	net/lwip/include/lwip/tcp.h	159;"	d
TCP_PUSH_BIT	net/lwip/netif/ppp/vj.h	95;"	d
TCP_QLEN_DEBUG	net/lwip/include/lwip/opt.h	1638;"	d
TCP_QUEUE_OOSEQ	net/lwip/include/lwip/opt.h	686;"	d
TCP_REG	net/lwip/include/lwip/tcp.h	617;"	d
TCP_RMV	net/lwip/include/lwip/tcp.h	622;"	d
TCP_RST	net/lwip/include/lwip/tcp.h	158;"	d
TCP_RST_DEBUG	net/lwip/include/lwip/opt.h	1631;"	d
TCP_RTO_DEBUG	net/lwip/include/lwip/opt.h	1603;"	d
TCP_SEQ_BETWEEN	net/lwip/include/lwip/tcp.h	155;"	d
TCP_SEQ_GEQ	net/lwip/include/lwip/tcp.h	150;"	d
TCP_SEQ_GT	net/lwip/include/lwip/tcp.h	149;"	d
TCP_SEQ_LEQ	net/lwip/include/lwip/tcp.h	148;"	d
TCP_SEQ_LT	net/lwip/include/lwip/tcp.h	147;"	d
TCP_SLOW_INTERVAL	net/lwip/include/lwip/tcp.h	179;"	d
TCP_SNDLOWAT	net/lwip/include/lwip/opt.h	734;"	d
TCP_SNDQUEUELEN_OVERFLOW	net/lwip/include/lwip/tcp.h	333;"	d
TCP_SND_BUF	net/lwip/include/lwip/opt.h	717;"	d
TCP_SND_BUF	net/lwip/jos/lwipopts.h	42;"	d
TCP_SND_QUEUELEN	net/lwip/include/lwip/opt.h	725;"	d
TCP_SND_QUEUELEN	net/lwip/jos/lwipopts.h	45;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1202;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1234;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	154;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	157;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	153;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	156;"	d
TCP_SYN	net/lwip/include/lwip/tcp.h	157;"	d
TCP_SYNMAXRTX	net/lwip/include/lwip/opt.h	678;"	d
TCP_SYN_RCVD_TIMEOUT	net/lwip/include/lwip/tcp.h	183;"	d
TCP_TCPLEN	net/lwip/include/lwip/tcp.h	238;"	d
TCP_TMR_INTERVAL	net/lwip/include/lwip/tcp.h	171;"	d
TCP_TTL	net/lwip/include/lwip/opt.h	657;"	d
TCP_URG	net/lwip/include/lwip/tcp.h	161;"	d
TCP_WND	net/lwip/include/lwip/opt.h	664;"	d
TCP_WND	net/lwip/jos/lwipopts.h	41;"	d
TCP_WND_DEBUG	net/lwip/include/lwip/opt.h	1617;"	d
TCP_WRITE_FLAG_COPY	net/lwip/include/lwip/tcp.h	103;"	d
TCP_WRITE_FLAG_MORE	net/lwip/include/lwip/tcp.h	104;"	d
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TERMACK	net/lwip/netif/ppp/fsm.h	74;"	d
TERMREQ	net/lwip/netif/ppp/fsm.h	73;"	d
TESTOUTPUT_COUNT	net/testoutput.c	4;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TF_ACK_DELAY	net/lwip/include/lwip/tcp.h	283;"	d
TF_ACK_NOW	net/lwip/include/lwip/tcp.h	284;"	d
TF_CLOSED	net/lwip/include/lwip/tcp.h	258;"	d
TF_FIN	net/lwip/include/lwip/tcp.h	286;"	d
TF_GOT_FIN	net/lwip/include/lwip/tcp.h	259;"	d
TF_INFR	net/lwip/include/lwip/tcp.h	285;"	d
TF_NAGLEMEMERR	net/lwip/include/lwip/tcp.h	288;"	d
TF_NODELAY	net/lwip/include/lwip/tcp.h	287;"	d
TF_RESET	net/lwip/include/lwip/tcp.h	257;"	d
THREAD_NUM_ONHALT	net/lwip/jos/arch/threadq.h	7;"	d
TICR	kern/lapic.c	41;"	d	file:
TIMEOUT	net/lwip/netif/ppp/ppp.h	96;"	d
TIMER	kern/lapic.c	33;"	d	file:
TIMER_INTERVAL	net/ns.h	8;"	d
TIME_WAIT	net/lwip/include/lwip/tcp.h	/^  TIME_WAIT   = 10$/;"	e	enum:tcp_state
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRACELCP	net/lwip/netif/ppp/pppdebug.h	62;"	d
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
TRY_AGAIN	net/lwip/include/lwip/netdb.h	59;"	d
TYPE_COMPRESSED_TCP	net/lwip/netif/ppp/vj.h	79;"	d
TYPE_ERROR	net/lwip/netif/ppp/vj.h	80;"	d
TYPE_IP	net/lwip/netif/ppp/vj.h	77;"	d
TYPE_UNCOMPRESSED_TCP	net/lwip/netif/ppp/vj.h	78;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Transform	net/lwip/netif/ppp/md5.c	/^Transform (u32_t *buf, u32_t *in)$/;"	f	file:
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
U16_F	net/lwip/jos/arch/cc.h	27;"	d
U32_F	net/lwip/jos/arch/cc.h	31;"	d
UDPLITE_RECV_CSCOV	net/lwip/include/lwip/sockets.h	160;"	d
UDPLITE_SEND_CSCOV	net/lwip/include/lwip/sockets.h	159;"	d
UDP_DEBUG	net/lwip/include/lwip/opt.h	1645;"	d
UDP_FLAGS_CONNECTED	net/lwip/include/lwip/udp.h	68;"	d
UDP_FLAGS_NOCHKSUM	net/lwip/include/lwip/udp.h	66;"	d
UDP_FLAGS_UDPLITE	net/lwip/include/lwip/udp.h	67;"	d
UDP_HLEN	net/lwip/include/lwip/udp.h	48;"	d
UDP_LOCAL_PORT_RANGE_END	net/lwip/core/udp.c	608;"	d	file:
UDP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
UDP_LOCAL_PORT_RANGE_START	net/lwip/core/udp.c	607;"	d	file:
UDP_LOCAL_PORT_RANGE_START	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_START 4096$/;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1194;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1233;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	162;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	165;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	161;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	164;"	d
UDP_TTL	net/lwip/include/lwip/opt.h	638;"	d
UENVS	inc/memlayout.h	116;"	d
UL	net/lwip/netif/ppp/md5.c	103;"	d	file:
UL	net/lwip/netif/ppp/md5.c	106;"	d	file:
UL	net/lwip/netif/ppp/md5.c	108;"	d	file:
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	53;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	60;"	d
UNTIMEOUT	net/lwip/netif/ppp/ppp.h	97;"	d
UPAGES	inc/memlayout.h	114;"	d
UPAPCS_AUTHREQ	net/lwip/netif/ppp/pap.h	79;"	d
UPAPCS_BADAUTH	net/lwip/netif/ppp/pap.h	81;"	d
UPAPCS_CLOSED	net/lwip/netif/ppp/pap.h	77;"	d
UPAPCS_INITIAL	net/lwip/netif/ppp/pap.h	76;"	d
UPAPCS_OPEN	net/lwip/netif/ppp/pap.h	80;"	d
UPAPCS_PENDING	net/lwip/netif/ppp/pap.h	78;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	68;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	78;"	d
UPAPSS_BADAUTH	net/lwip/netif/ppp/pap.h	91;"	d
UPAPSS_CLOSED	net/lwip/netif/ppp/pap.h	87;"	d
UPAPSS_INITIAL	net/lwip/netif/ppp/pap.h	86;"	d
UPAPSS_LISTEN	net/lwip/netif/ppp/pap.h	89;"	d
UPAPSS_OPEN	net/lwip/netif/ppp/pap.h	90;"	d
UPAPSS_PENDING	net/lwip/netif/ppp/pap.h	88;"	d
UPAP_AUTHACK	net/lwip/netif/ppp/pap.h	70;"	d
UPAP_AUTHNAK	net/lwip/netif/ppp/pap.h	71;"	d
UPAP_AUTHREQ	net/lwip/netif/ppp/pap.h	69;"	d
UPAP_DEFREQTIME	net/lwip/include/lwip/opt.h	1350;"	d
UPAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1346;"	d
UPAP_HEADERLEN	net/lwip/netif/ppp/pap.h	63;"	d
USED	inc/lib.h	28;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USE_CRYPT	net/lwip/netif/ppp/chpms.c	67;"	d	file:
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEMP2	lib/exec.c	5;"	d	file:
UTEMP2	lib/extraspawn.c	5;"	d	file:
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/exec.c	4;"	d	file:
UTEMP2USTACK	lib/extraspawn.c	4;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/exec.c	6;"	d	file:
UTEMP3	lib/extraspawn.c	6;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UseNT	net/lwip/netif/ppp/chpms.c	/^    u_char UseNT; \/* If 1, ignore the LANMan response field *\/$/;"	m	struct:__anon17	file:
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VA	user/testptelibrary.c	3;"	d	file:
VA	user/testpteshare.c	4;"	d	file:
VER	kern/lapic.c	15;"	d	file:
VERSION	user/httpd.c	6;"	d	file:
VJBSDHDR_H	net/lwip/netif/ppp/vjbsdhdr.h	2;"	d
VJF_TOSS	net/lwip/netif/ppp/vj.h	147;"	d
VJ_H	net/lwip/netif/ppp/vj.h	26;"	d
VJ_SUPPORT	net/lwip/include/lwip/opt.h	1316;"	d
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	178;"	d	file:
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
WHITESPACE	user/sh.c	204;"	d	file:
X1	kern/lapic.c	34;"	d	file:
X16_F	net/lwip/jos/arch/cc.h	28;"	d
X32_F	net/lwip/jos/arch/cc.h	32;"	d
_ALIGN_TEXT	net/lwip/jos/arch/longjmp.S	/^#define _ALIGN_TEXT .align 16, 0x90$/;"	d
_CONSOLE_H_	kern/console.h	4;"	d
_DEV_PCI_PCIREG_H_	kern/pcireg.h	35;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
_IO	net/lwip/include/lwip/sockets.h	243;"	d
_IOR	net/lwip/include/lwip/sockets.h	245;"	d
_IOW	net/lwip/include/lwip/sockets.h	247;"	d
_SYS_QUEUE_H_	net/lwip/netif/ppp/ppp_oe.c	88;"	d	file:
__LWIP_API_H__	net/lwip/include/lwip/api.h	33;"	d
__LWIP_API_MSG_H__	net/lwip/include/lwip/api_msg.h	33;"	d
__LWIP_ARCH_H__	net/lwip/include/lwip/arch.h	33;"	d
__LWIP_AUTOIP_H__	net/lwip/include/ipv4/lwip/autoip.h	45;"	d
__LWIP_DEBUG_H__	net/lwip/include/lwip/debug.h	33;"	d
__LWIP_DEF_H__	net/lwip/include/lwip/def.h	33;"	d
__LWIP_DHCP_H__	net/lwip/include/lwip/dhcp.h	5;"	d
__LWIP_DNS_H__	net/lwip/include/lwip/dns.h	35;"	d
__LWIP_ERR_H__	net/lwip/include/lwip/err.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv4/lwip/icmp.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv6/lwip/icmp.h	33;"	d
__LWIP_IGMP_H__	net/lwip/include/ipv4/lwip/igmp.h	36;"	d
__LWIP_INET_CHKSUM_H__	net/lwip/include/ipv4/lwip/inet_chksum.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv4/lwip/inet.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv6/lwip/inet.h	33;"	d
__LWIP_INIT_H__	net/lwip/include/lwip/init.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv4/lwip/ip_addr.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv6/lwip/ip_addr.h	33;"	d
__LWIP_IP_FRAG_H__	net/lwip/include/ipv4/lwip/ip_frag.h	34;"	d
__LWIP_IP_H__	net/lwip/include/ipv4/lwip/ip.h	33;"	d
__LWIP_IP_H__	net/lwip/include/ipv6/lwip/ip.h	33;"	d
__LWIP_MEMP_H__	net/lwip/include/lwip/memp.h	34;"	d
__LWIP_MEM_H__	net/lwip/include/lwip/mem.h	33;"	d
__LWIP_NETBUF_H__	net/lwip/include/lwip/netbuf.h	33;"	d
__LWIP_NETIFAPI_H__	net/lwip/include/lwip/netifapi.h	29;"	d
__LWIP_NETIF_H__	net/lwip/include/lwip/netif.h	33;"	d
__LWIP_OPT_H__	net/lwip/include/lwip/opt.h	39;"	d
__LWIP_PBUF_H__	net/lwip/include/lwip/pbuf.h	34;"	d
__LWIP_RAW_H__	net/lwip/include/lwip/raw.h	33;"	d
__LWIP_SNMP_ASN1_H__	net/lwip/include/lwip/snmp_asn1.h	36;"	d
__LWIP_SNMP_H__	net/lwip/include/lwip/snmp.h	34;"	d
__LWIP_SNMP_MSG_H__	net/lwip/include/lwip/snmp_msg.h	36;"	d
__LWIP_SNMP_STRUCTS_H__	net/lwip/include/lwip/snmp_structs.h	38;"	d
__LWIP_SOCKETS_H__	net/lwip/include/lwip/sockets.h	35;"	d
__LWIP_STATS_H__	net/lwip/include/lwip/stats.h	33;"	d
__LWIP_SYS_H__	net/lwip/include/lwip/sys.h	33;"	d
__LWIP_TCPIP_H__	net/lwip/include/lwip/tcpip.h	33;"	d
__LWIP_TCP_H__	net/lwip/include/lwip/tcp.h	33;"	d
__LWIP_UDP_H__	net/lwip/include/lwip/udp.h	33;"	d
__NETIF_ETHARP_H__	net/lwip/include/netif/etharp.h	36;"	d
__NETIF_LOOPIF_H__	net/lwip/include/netif/loopif.h	33;"	d
__NETIF_SLIPIF_H__	net/lwip/include/netif/slipif.h	35;"	d
__SIO_H__	net/lwip/include/lwip/sio.h	36;"	d
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f
_inet_ntoa	net/lwip/netif/ppp/ipcp.c	/^_inet_ntoa(u32_t n)$/;"	f
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
_pad	inc/ns.h	/^	char _pad[PGSIZE];$/;"	m	union:Nsipc
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	kern/init1.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/ns.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testinput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testoutput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/ns.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testinput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testoutput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/net/ns.asm	/^_start:$/;"	l
_start	obj/net/testinput.asm	/^_start:$/;"	l
_start	obj/net/testoutput.asm	/^_start:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/echosrv.asm	/^_start:$/;"	l
_start	obj/user/echotest.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/exechello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/httpd.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_start	obj/user/testtime.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
_warn	kern/init1.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
aaddrlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t aaddrlen;$/;"	m	struct:snmp_trap_header_lengths
aaddrlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t aaddrlenlen;$/;"	m	struct:snmp_trap_header_lengths
acc	obj/net/ns.asm	/^      acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^    acc = FOLD_U32T(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^  acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^  acc = 0;$/;"	d
acc	obj/net/ns.asm	/^  acc = FOLD_U32T(acc);$/;"	d
accept	inc/ns.h	/^	} accept;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_accept
accept	lib/sockets.c	/^accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
accept	net/lwip/include/lwip/sockets.h	326;"	d
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb_listen
acceptRet	inc/ns.h	/^	} acceptRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_accept
accept_function	net/lwip/api/api_msg.c	/^accept_function(void *arg, struct tcp_pcb *newpcb, err_t err)$/;"	f	file:
accept_local	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_local  : 1; \/* accept peer's value for ouraddr *\/$/;"	m	struct:ipcp_options
accept_remote	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_remote : 1; \/* accept peer's value for hisaddr *\/$/;"	m	struct:ipcp_options
acceptable	obj/net/ns.asm	/^        acceptable = 1;$/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = 1; $/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = tcp_receive(pcb);$/;"	d
accepted_inseq	obj/net/ns.asm	/^    accepted_inseq = tcp_receive(pcb);$/;"	d
acceptmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t acceptmbox;$/;"	m	struct:netconn
accepts_pending	net/lwip/include/lwip/tcp.h	/^  u8_t accepts_pending;$/;"	m	struct:tcp_pcb_listen
access	net/lwip/include/lwip/snmp_structs.h	/^  u8_t access;$/;"	m	struct:obj_def
accomp	net/lwip/netif/ppp/ppp.c	/^  int  accomp;                  \/* Does peer accept addr\/ctl compression? *\/$/;"	m	struct:PPPControl_s	file:
ackci	net/lwip/netif/ppp/fsm.h	/^  int  (*ackci)(fsm*, u_char*, int);                \/* ACK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
acked	net/lwip/include/lwip/tcp.h	/^  u16_t acked;$/;"	m	struct:tcp_pcb
ackno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
ackno	obj/net/ns.asm	/^    ackno = pcb->rcv_nxt;$/;"	d
ackno	obj/net/ns.asm	/^  ackno = tcphdr->ackno = ntohl(tcphdr->ackno);$/;"	d
ad	net/lwip/include/lwip/api_msg.h	/^    } ad;$/;"	m	union:api_msg_msg::__anon30	typeref:struct:api_msg_msg::__anon30::__anon33
add	net/lwip/include/lwip/netifapi.h	/^    } add;$/;"	m	union:netifapi_msg_msg::__anon22	typeref:struct:netifapi_msg_msg::__anon22::__anon23
addci	net/lwip/netif/ppp/fsm.h	/^  void (*addci)(fsm*, u_char*, int*);               \/* Add our Configuration Information *\/$/;"	m	struct:fsm_callbacks
addr	kern/e1000.h	/^	uint64_t addr;$/;"	m	struct:rx_desc
addr	kern/e1000.h	/^	uint64_t addr;$/;"	m	struct:tx_desc
addr	net/lwip/api/netdb.c	/^  struct ip_addr addr;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addr	net/lwip/include/lwip/api_msg.h	/^  struct ip_addr *addr;$/;"	m	struct:dns_api_msg	typeref:struct:dns_api_msg::ip_addr
addr	net/lwip/include/lwip/netbuf.h	/^  struct ip_addr *addr;$/;"	m	struct:netbuf	typeref:struct:netbuf::ip_addr
addr	obj/net/ns.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/net/ns.asm	/^      addr = (struct ip_addr*)&(sin.sin_addr.s_addr);$/;"	d
addr	obj/net/ns.asm	/^      addr = netbuf_fromaddr(buf);$/;"	d
addr	obj/net/testinput.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/net/testoutput.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/forktree.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/pingpong.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/pingpongs.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/primes.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/primespipe.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/sendpage.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/sh.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/spin.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/stresssched.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testfdsharing.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpipe.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpiperace.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpiperace2.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpteshare.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testshell.asm	/^	addr = (void *)ROUNDDOWN(addr, PGSIZE);$/;"	d
addr2test	obj/net/ns.asm	/^  addr2test = addr->addr;$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
addr_hint	net/lwip/include/lwip/netif.h	/^  u8_t *addr_hint;$/;"	m	struct:netif
addr_inf	net/lwip/include/lwip/snmp_structs.h	/^  void* addr_inf;$/;"	m	struct:mib_external_node
addresses	net/lwip/netif/ppp/auth.c	/^static struct wordlist *addresses[NUM_PPP];$/;"	v	typeref:struct:wordlist	file:
addrinfo	net/lwip/include/lwip/netdb.h	/^struct addrinfo {$/;"	s
addrs	net/lwip/api/netdb.c	/^  struct ip_addr *addrs;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addrs	net/lwip/netif/ppp/ppp.c	/^  struct ppp_addrs addrs;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::ppp_addrs	file:
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/net/ns.asm	/^ again:$/;"	l
again	obj/user/sh.asm	/^again:$/;"	l
age_pending	obj/net/ns.asm	/^          age_pending = arp_table[i].ctime;$/;"	d
age_queue	obj/net/ns.asm	/^          age_queue = arp_table[i].ctime;$/;"	d
age_stable	obj/net/ns.asm	/^        age_stable = arp_table[i].ctime;$/;"	d
ai_addr	net/lwip/include/lwip/netdb.h	/^    struct sockaddr  *ai_addr;       \/* Socket address of socket. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	net/lwip/include/lwip/netdb.h	/^    socklen_t         ai_addrlen;    \/* Length of socket address. *\/$/;"	m	struct:addrinfo
ai_canonname	net/lwip/include/lwip/netdb.h	/^    char             *ai_canonname;  \/* Canonical name of service location. *\/$/;"	m	struct:addrinfo
ai_family	net/lwip/include/lwip/netdb.h	/^    int               ai_family;     \/* Address family of socket. *\/$/;"	m	struct:addrinfo
ai_flags	net/lwip/include/lwip/netdb.h	/^    int               ai_flags;      \/* Input flags. *\/$/;"	m	struct:addrinfo
ai_next	net/lwip/include/lwip/netdb.h	/^    struct addrinfo  *ai_next;       \/* Pointer to next in list. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	net/lwip/include/lwip/netdb.h	/^    int               ai_protocol;   \/* Protocol of socket. *\/$/;"	m	struct:addrinfo
ai_socktype	net/lwip/include/lwip/netdb.h	/^    int               ai_socktype;   \/* Socket type. *\/$/;"	m	struct:addrinfo
aliases	net/lwip/api/netdb.c	/^  char *aliases;$/;"	m	struct:gethostbyname_r_helper	file:
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
alloc_socket	net/lwip/api/sockets.c	/^alloc_socket(struct netconn *newconn)$/;"	f	file:
alloc_sockfd	lib/sockets.c	/^alloc_sockfd(int sockid)$/;"	f	file:
alloc_tid	net/lwip/jos/arch/thread.c	/^alloc_tid(void) {$/;"	f	file:
allocate_exception_stack_to_child	lib/fork.c	/^allocate_exception_stack_to_child(int env_id){$/;"	f
allrouters	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allrouters;$/;"	v	typeref:struct:ip_addr	file:
allsystems	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allsystems;$/;"	v	typeref:struct:ip_addr	file:
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/ns.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/ns.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testinput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testinput.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testoutput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testoutput.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echosrv.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echosrv.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echotest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echotest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/exechello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/exechello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/httpd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/httpd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testtime.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testtime.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
announce	net/testinput.c	/^announce(void)$/;"	f	file:
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
ap	obj/net/ns.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/net/testinput.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echosrv.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echotest.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/httpd.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
api_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg {$/;"	s
api_msg_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg_msg {$/;"	s
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
apiflags	net/lwip/include/lwip/api_msg.h	/^      u8_t apiflags;$/;"	m	struct:api_msg_msg::__anon30::__anon34
apimsg	net/lwip/include/lwip/tcpip.h	/^    struct api_msg *apimsg;$/;"	m	union:tcpip_msg::__anon26	typeref:struct:tcpip_msg::__anon26::api_msg
arg	net/lwip/core/dns.c	/^  void *arg;$/;"	m	struct:dns_table_entry	file:
arg	net/lwip/include/lwip/sys.h	/^  void *arg;$/;"	m	struct:sys_timeo
arg	net/lwip/include/lwip/tcpip.h	/^      void *arg;$/;"	m	struct:tcpip_msg::__anon26::__anon29
arg	net/lwip/jos/arch/sys_arch.c	/^    void *arg;$/;"	m	struct:lwip_thread	file:
arg	obj/net/ns.asm	/^      arg = tmptimeout->arg;$/;"	d
arg	obj/net/ns.asm	/^  arg = arg;$/;"	d
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/net/ns.asm	/^args_exist:$/;"	l
args_exist	obj/net/testinput.asm	/^args_exist:$/;"	l
args_exist	obj/net/testoutput.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/echosrv.asm	/^args_exist:$/;"	l
args_exist	obj/user/echotest.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/exechello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/httpd.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
args_exist	obj/user/testtime.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
arp_table	net/lwip/netif/etharp.c	/^static struct etharp_entry arp_table[ARP_TABLE_SIZE];$/;"	v	typeref:struct:etharp_entry	file:
arp_timer	net/lwip/api/tcpip.c	/^arp_timer(void *arg)$/;"	f	file:
arptree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode arptree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ascii_to_bytes	grade-lab6	/^def ascii_to_bytes(s):$/;"	f
asn_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t asn_type;$/;"	m	struct:obj_def
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
asyncmap	net/lwip/netif/ppp/lcp.h	/^    u32_t asyncmap;              \/* Value of async map *\/$/;"	m	struct:lcp_options
at	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node at = {$/;"	v	typeref:struct:mib_ram_array_node
at_id	net/lwip/core/snmp/mib2.c	/^s32_t at_id = 1;$/;"	v
atentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node atentry = {$/;"	v	typeref:struct:mib_array_node
atentry_get_object_def	net/lwip/core/snmp/mib2.c	/^atentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
atentry_get_value	net/lwip/core/snmp/mib2.c	/^atentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
atentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t atentry_ids[3] = { 1, 2, 3 };$/;"	v
atentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const atentry_nodes[3] = {$/;"	v
attable	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node attable = {$/;"	v	typeref:struct:mib_array_node
attable_id	net/lwip/core/snmp/mib2.c	/^const s32_t attable_id = 1;$/;"	v
attable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* const attable_node = (struct mib_node* const)&atentry;$/;"	v
attachfn	kern/pci.c	/^	int (*attachfn) (struct pci_func *pcif);$/;"	m	struct:pci_driver	file:
auth_ip_addr	net/lwip/netif/ppp/auth.c	/^auth_ip_addr(int unit, u32_t addr)$/;"	f
auth_peer_fail	net/lwip/netif/ppp/auth.c	/^auth_peer_fail(int unit, u16_t protocol)$/;"	f
auth_peer_success	net/lwip/netif/ppp/auth.c	/^auth_peer_success(int unit, u16_t protocol, char *name, int namelen)$/;"	f
auth_pending	net/lwip/netif/ppp/auth.c	/^static int auth_pending[NUM_PPP];$/;"	v	file:
auth_required	net/lwip/netif/ppp/ppp.h	/^  u_int  auth_required     : 1;       \/* Peer is required to authenticate *\/$/;"	m	struct:ppp_settings
auth_reset	net/lwip/netif/ppp/auth.c	/^auth_reset(int unit)$/;"	f
auth_withpeer_fail	net/lwip/netif/ppp/auth.c	/^auth_withpeer_fail(int unit, u16_t protocol)$/;"	f
auth_withpeer_success	net/lwip/netif/ppp/auth.c	/^auth_withpeer_success(int unit, u16_t protocol)$/;"	f
autoip	net/lwip/include/ipv4/lwip/autoip.h	/^struct autoip$/;"	s
autoip	net/lwip/include/lwip/netif.h	/^  struct autoip *autoip;$/;"	m	struct:netif	typeref:struct:netif::autoip
autoip_arp_announce	net/lwip/core/ipv4/autoip.c	/^autoip_arp_announce(struct netif *netif)$/;"	f	file:
autoip_arp_reply	net/lwip/core/ipv4/autoip.c	/^autoip_arp_reply(struct netif *netif, struct etharp_hdr *hdr)$/;"	f
autoip_bind	net/lwip/core/ipv4/autoip.c	/^autoip_bind(struct netif *netif)$/;"	f	file:
autoip_coop_state	net/lwip/include/lwip/dhcp.h	/^  u8_t autoip_coop_state;$/;"	m	struct:dhcp
autoip_create_rand_addr	net/lwip/core/ipv4/autoip.c	/^autoip_create_rand_addr(struct netif *netif, struct ip_addr *RandomIPAddr)$/;"	f	file:
autoip_handle_arp_conflict	net/lwip/core/ipv4/autoip.c	/^autoip_handle_arp_conflict(struct netif *netif)$/;"	f	file:
autoip_init	net/lwip/core/ipv4/autoip.c	/^autoip_init(void)$/;"	f
autoip_start	net/lwip/core/ipv4/autoip.c	/^autoip_start(struct netif *netif)$/;"	f
autoip_stop	net/lwip/core/ipv4/autoip.c	/^autoip_stop(struct netif *netif)$/;"	f
autoip_timer	net/lwip/api/tcpip.c	/^autoip_timer(void *arg)$/;"	f	file:
autoip_tmr	net/lwip/core/ipv4/autoip.c	/^autoip_tmr()$/;"	f
avChurnRand	net/lwip/netif/ppp/randm.c	/^avChurnRand(char *randData, u32_t randLen)$/;"	f
avGenRand	net/lwip/netif/ppp/randm.c	/^avGenRand(char *buf, u32_t bufLen)$/;"	f
avRandom	net/lwip/netif/ppp/randm.c	/^avRandom()$/;"	f
avRandomInit	net/lwip/netif/ppp/randm.c	/^avRandomInit()$/;"	f
avRandomSeed	net/lwip/netif/ppp/randm.c	/^static u32_t avRandomSeed = 0;      \/* Seed used for random number generation. *\/$/;"	v	file:
avRandomize	net/lwip/netif/ppp/randm.c	/^avRandomize(void)$/;"	f
avRandomize	net/lwip/netif/ppp/randm.h	60;"	d
avRandomized	net/lwip/netif/ppp/randm.c	/^static int  avRandomized = 0;       \/* Set when truely randomized. *\/$/;"	v	file:
avail	net/lwip/include/lwip/stats.h	/^  mem_size_t avail;$/;"	m	struct:stats_mem
available	obj/net/ns.asm	/^  available = tcp_sndbuf(conn->pcb.tcp);$/;"	d
b	net/lwip/include/lwip/api_msg.h	/^    struct netbuf *b;$/;"	m	union:api_msg_msg::__anon30	typeref:struct:api_msg_msg::__anon30::netbuf
backlog	net/lwip/include/lwip/api_msg.h	/^      u8_t backlog;$/;"	m	struct:api_msg_msg::__anon30::__anon37
backlog	net/lwip/include/lwip/tcp.h	/^  u8_t backlog;$/;"	m	struct:tcp_pcb_listen
backlog	obj/net/ns.asm	/^    backlog = 0xff;$/;"	d
bad_ip_adrs	net/lwip/netif/ppp/auth.c	/^bad_ip_adrs(u32_t addr)$/;"	f
bar_width	obj/kern/kernel.asm	/^				bar_width = 8;$/;"	d
bar_width	obj/kern/kernel.asm	/^		bar_width = 4;$/;"	d
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_IO_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_MEM_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^	base = base + size;$/;"	d
base	obj/net/ns.asm	/^			base = 10;$/;"	d
base	obj/net/ns.asm	/^			base = 16;$/;"	d
base	obj/net/ns.asm	/^			base = 8;$/;"	d
base	obj/net/ns.asm	/^		base = 10;$/;"	d
base	obj/net/ns.asm	/^        base = 16;$/;"	d
base	obj/net/ns.asm	/^        base = 8;$/;"	d
base	obj/net/ns.asm	/^    base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 16;$/;"	d
base	obj/net/testinput.asm	/^			base = 8;$/;"	d
base	obj/net/testinput.asm	/^		base = 10;$/;"	d
base	obj/net/testinput.asm	/^        base = 16;$/;"	d
base	obj/net/testinput.asm	/^        base = 8;$/;"	d
base	obj/net/testinput.asm	/^    base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 16;$/;"	d
base	obj/net/testoutput.asm	/^			base = 8;$/;"	d
base	obj/net/testoutput.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^			base = 8;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^			base = 8;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 16;$/;"	d
base	obj/user/echosrv.asm	/^			base = 8;$/;"	d
base	obj/user/echosrv.asm	/^		base = 10;$/;"	d
base	obj/user/echosrv.asm	/^        base = 16;$/;"	d
base	obj/user/echosrv.asm	/^        base = 8;$/;"	d
base	obj/user/echosrv.asm	/^    base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 16;$/;"	d
base	obj/user/echotest.asm	/^			base = 8;$/;"	d
base	obj/user/echotest.asm	/^		base = 10;$/;"	d
base	obj/user/echotest.asm	/^        base = 16;$/;"	d
base	obj/user/echotest.asm	/^        base = 8;$/;"	d
base	obj/user/echotest.asm	/^    base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/exechello.asm	/^			base = 10;$/;"	d
base	obj/user/exechello.asm	/^			base = 16;$/;"	d
base	obj/user/exechello.asm	/^			base = 8;$/;"	d
base	obj/user/exechello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 16;$/;"	d
base	obj/user/httpd.asm	/^			base = 8;$/;"	d
base	obj/user/httpd.asm	/^		base = 10;$/;"	d
base	obj/user/httpd.asm	/^        base = 16;$/;"	d
base	obj/user/httpd.asm	/^        base = 8;$/;"	d
base	obj/user/httpd.asm	/^    base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^			base = 8;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^			base = 8;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^			base = 8;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^			base = 8;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^			base = 8;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^			base = 8;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 8;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^			base = 8;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^			base = 8;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^			base = 8;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 16;$/;"	d
base	obj/user/testtime.asm	/^			base = 8;$/;"	d
base	obj/user/testtime.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bc	net/lwip/include/lwip/api_msg.h	/^    } bc;$/;"	m	union:api_msg_msg::__anon30	typeref:struct:api_msg_msg::__anon30::__anon32
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/net/ns.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "testinput";$/;"	d
binaryname	obj/net/testoutput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "testoutput";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echosrv.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echotest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/exechello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^	binaryname = "jhttpd";$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testtime.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bind	inc/ns.h	/^	} bind;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_bind
bind	lib/sockets.c	/^bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
bind	net/lwip/include/lwip/sockets.h	327;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot	inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_alloc	kern/pmap1.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_aps	kern/init1.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon11	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	net/lwip/core/ipv4/ip_frag.c	/^static u8_t buf[LWIP_MEM_ALIGN_SIZE(IP_FRAG_MAX_MTU)];$/;"	v	file:
buf	net/lwip/netif/ppp/md5.h	/^  u32_t buf[4];             \/* scratch buffer *\/$/;"	m	struct:__anon15
buf	obj/fs/fs.asm	/^	buf = vbuf;$/;"	d
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/net/ns.asm	/^	buf = vbuf;$/;"	d
buf	obj/net/ns.asm	/^      buf = NULL;$/;"	d
buf	obj/net/ns.asm	/^      buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^      buf = sock->lastdata;$/;"	d
buf	obj/net/ns.asm	/^    buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^  buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/testinput.asm	/^	buf = vbuf;$/;"	d
buf	obj/net/testoutput.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/badsegment.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/breakpoint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/cat.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/divzero.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/dumbfork.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echo.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echosrv.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echotest.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/evilhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/exechello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/fairness.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultalloc.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultallocbad.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultbadhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultdie.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultevilhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultnostack.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultread.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultreadkernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultregs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwrite.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwritekernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/forktree.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/hello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/httpd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/icode.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/idle.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/init.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/ls.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/lsfd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/num.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpong.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpongs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primes.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primespipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sendpage.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/softint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spin.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/stresssched.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testbss.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfdsharing.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfile.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpteshare.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testshell.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testtime.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/yield.asm	/^	buf = vbuf;$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf_copy_len	obj/net/ns.asm	/^          buf_copy_len = len;$/;"	d
buf_copy_len	obj/net/ns.asm	/^      buf_copy_len = p->len - offset;$/;"	d
buffer	kern/e1000.c	/^char buffer[SIZEOF_QUEUE][PKT_SIZE];$/;"	v
buflen	obj/net/ns.asm	/^      buflen = netbuf_len(sock->lastdata);$/;"	d
buflen	obj/net/ns.asm	/^    buflen = netbuf_len(buf);$/;"	d
bus	kern/pci.h	/^    struct pci_bus *bus;	\/\/ Primary bus for bridges$/;"	m	struct:pci_func	typeref:struct:pci_func::pci_bus
buse	net/serv.c	/^static bool buse[QUEUE_SIZE];$/;"	v	file:
busno	kern/pci.h	/^    uint32_t busno;$/;"	m	struct:pci_bus
bytes	obj/net/ns.asm	/^	    bytes = len - copied;$/;"	d
bytes_to_read	obj/fs/fs.asm	/^		bytes_to_read = PGSIZE;$/;"	d
bytes_to_write	obj/fs/fs.asm	/^		bytes_to_write = PGSIZE;$/;"	d
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/net/ns.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/ns.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/net/ns.asm	/^        c = *++cp;$/;"	d
c	obj/net/ns.asm	/^      c = *++cp;$/;"	d
c	obj/net/ns.asm	/^  c = *cp;$/;"	d
c	obj/net/testinput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/testinput.asm	/^        c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^      c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^  c = *cp;$/;"	d
c	obj/net/testoutput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^        c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^      c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^  c = *cp;$/;"	d
c	obj/user/echotest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echotest.asm	/^        c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^      c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^  c = *cp;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/exechello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/user/httpd.asm	/^        c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^      c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^  c = *cp;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testtime.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
cachehit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER cachehit;$/;"	m	struct:stats_proto
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
callback	net/lwip/include/lwip/api.h	/^  netconn_callback callback;$/;"	m	struct:netconn
callbacks	net/lwip/netif/ppp/fsm.h	/^  struct fsm_callbacks* callbacks; \/* Callback routines *\/$/;"	m	struct:fsm	typeref:struct:fsm::fsm_callbacks
cat	user/cat.c	/^cat(int f, char *s)$/;"	f
cb	net/lwip/include/lwip/tcpip.h	/^    } cb;$/;"	m	union:tcpip_msg::__anon26	typeref:struct:tcpip_msg::__anon26::__anon28
cflag	net/lwip/netif/ppp/ipcp.h	/^  u_char  cflag;             \/* VJ slot compression flag. *\/$/;"	m	struct:ipcp_options
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/ns.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testinput.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testoutput.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echosrv.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echotest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/exechello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/httpd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testtime.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
chal_id	net/lwip/netif/ppp/chap.h	/^  u_char chal_id;                         \/* ID of last challenge *\/$/;"	m	struct:chap_state
chal_interval	net/lwip/netif/ppp/chap.h	/^  int chal_interval;                      \/* Time until we challenge peer again *\/$/;"	m	struct:chap_state
chal_len	net/lwip/netif/ppp/chap.h	/^  u_char chal_len;                        \/* challenge length *\/$/;"	m	struct:chap_state
chal_name	net/lwip/netif/ppp/chap.h	/^  char *chal_name;                        \/* Our name to use with challenge *\/$/;"	m	struct:chap_state
chal_transmits	net/lwip/netif/ppp/chap.h	/^  int chal_transmits;                     \/* Number of transmissions of challenge *\/$/;"	m	struct:chap_state
chal_type	net/lwip/netif/ppp/chap.h	/^  u_char chal_type;                       \/* hash algorithm for challenges *\/$/;"	m	struct:chap_state
challenge	net/lwip/netif/ppp/chap.h	/^  u_char challenge[MAX_CHALLENGE_LENGTH]; \/* last challenge string sent *\/$/;"	m	struct:chap_state
change_perms	kern/pmap.c	/^change_perms(pte_t *va, int u, int p, int w) {$/;"	f
change_perms	kern/pmap1.c	/^change_perms(pte_t *va, int u, int p, int w) {$/;"	f
changeperms	kern/monitor.c	/^int changeperms(int argc, char** argv, struct Trapframe* tf) {$/;"	f
chap	net/lwip/netif/ppp/chap.c	/^chap_state chap[NUM_PPP]; \/* CHAP state; one for each unit *\/$/;"	v
chap_mdtype	net/lwip/netif/ppp/lcp.h	/^    u_char chap_mdtype;          \/* which MD type (hashing algorithm) *\/$/;"	m	struct:lcp_options
chap_protent	net/lwip/netif/ppp/chap.c	/^struct protent chap_protent = {$/;"	v	typeref:struct:protent
chap_state	net/lwip/netif/ppp/chap.h	/^typedef struct chap_state {$/;"	s
chap_state	net/lwip/netif/ppp/chap.h	/^} chap_state;$/;"	t	typeref:struct:chap_state
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/net/ns.asm	/^char *$/;"	l
char	obj/net/testinput.asm	/^char *$/;"	l
char	obj/net/testoutput.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/echosrv.asm	/^char *$/;"	l
char	obj/user/echotest.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/exechello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/httpd.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spawnhello.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/testtime.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_idle	net/lwip/netif/ppp/auth.c	/^check_idle(void *arg)$/;"	f	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_passwd	net/lwip/netif/ppp/auth.c	/^check_passwd( int unit, char *auser, int userlen, char *apasswd, int passwdlen, char **msg, int *msglen)$/;"	f
check_perm	kern/monitor.c	/^void check_perm(char *perm, int *u, int *t, int *w) {$/;"	f
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
child	obj/user/icode.asm	/^	child = r;$/;"	d
child	obj/user/init.asm	/^	child = r;$/;"	d
child	obj/user/sh.asm	/^	child = r;$/;"	d
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_igmp
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_proto
chklen	obj/net/ns.asm	/^      chklen = chksum_len;$/;"	d
chklen	obj/net/ns.asm	/^    chklen = q->len;$/;"	d
chksum	net/lwip/core/ipv6/inet6.c	/^chksum(void *dataptr, u16_t len)$/;"	f	file:
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_dur_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_echo_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_te_hdr
chksum_len_rx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chksum_len_tx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chs_begin	inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc
chs_end	inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc
cifaddr	net/lwip/netif/ppp/ppp.c	/^cifaddr( int pd, u32_t o, u32_t h)$/;"	f
cifdefaultroute	net/lwip/netif/ppp/ppp.c	/^cifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
cilen	net/lwip/netif/ppp/fsm.h	/^  int  (*cilen)(fsm*);                              \/* Length of our Configuration Information *\/$/;"	m	struct:fsm_callbacks
cis_received	net/lwip/netif/ppp/ipcp.c	/^static int cis_received[NUM_PPP];      \/* # Conf-Reqs received *\/$/;"	v	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_answer	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_query	file:
class	obj/kern/kernel.asm	/^		class = pci_class[PCI_CLASS(f->dev_class)];$/;"	d
clear_perms	kern/pmap.c	/^clear_perms(pte_t *va) {$/;"	f
clear_perms	kern/pmap1.c	/^clear_perms(pte_t *va) {$/;"	f
clearperms	kern/monitor.c	/^int clearperms(int argc, char** argv, struct Trapframe* tf) {$/;"	f
clen	obj/net/ns.asm	/^  clen = pbuf_clen(p);$/;"	d
clientstate	net/lwip/netif/ppp/chap.h	/^  int clientstate;                        \/* Client state *\/$/;"	m	struct:chap_state
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	inc/ns.h	/^	} close;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_close
close	lib/fd.c	/^close(int fdnum)$/;"	f
close	net/lwip/include/lwip/sockets.h	347;"	d
close	net/lwip/netif/ppp/ppp.h	/^    void (*close) (int unit, char *reason);$/;"	m	struct:protent
close_all	lib/fd.c	/^close_all(void)$/;"	f
closesocket	net/lwip/include/lwip/sockets.h	329;"	d
cmd	kern/e1000.h	/^	uint8_t cmd;$/;"	m	struct:tx_desc
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/fs/fs.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/fs/fs.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/ns.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testinput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testoutput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echosrv.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echotest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/exechello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/httpd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testtime.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
code	obj/net/ns.asm	/^  code = *(((u8_t *)p->payload)+1);$/;"	d
code	user/httpd.c	/^	int code;$/;"	m	struct:error_messages	file:
code	user/httpd.c	/^	int code;$/;"	m	struct:responce_header	file:
color	gradelib.py	/^def color(name, text):$/;"	f
color_position	obj/fs/fs.asm	/^									color_position = 1;$/;"	d
color_position	obj/fs/fs.asm	/^						color_position = 0;$/;"	d
color_position	obj/kern/kernel.asm	/^									color_position = 1;$/;"	d
color_position	obj/kern/kernel.asm	/^						color_position = 0;$/;"	d
color_position	obj/net/ns.asm	/^									color_position = 1;$/;"	d
color_position	obj/net/ns.asm	/^						color_position = 0;$/;"	d
color_position	obj/net/testinput.asm	/^									color_position = 1;$/;"	d
color_position	obj/net/testinput.asm	/^						color_position = 0;$/;"	d
color_position	obj/net/testoutput.asm	/^									color_position = 1;$/;"	d
color_position	obj/net/testoutput.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/badsegment.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/badsegment.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/breakpoint.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/breakpoint.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/buggyhello.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/buggyhello.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/buggyhello2.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/buggyhello2.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/cat.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/cat.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/divzero.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/divzero.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/dumbfork.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/dumbfork.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/echo.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/echo.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/echosrv.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/echosrv.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/echotest.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/echotest.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/evilhello.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/evilhello.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/exechello.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/exechello.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/fairness.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/fairness.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/faultalloc.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/faultalloc.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/faultallocbad.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/faultallocbad.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/faultbadhandler.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/faultbadhandler.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/faultdie.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/faultdie.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/faultevilhandler.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/faultevilhandler.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/faultnostack.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/faultnostack.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/faultread.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/faultread.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/faultreadkernel.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/faultreadkernel.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/faultregs.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/faultregs.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/faultwrite.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/faultwrite.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/faultwritekernel.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/faultwritekernel.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/forktree.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/forktree.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/hello.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/hello.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/httpd.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/httpd.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/icode.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/icode.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/idle.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/idle.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/init.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/init.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/ls.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/ls.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/lsfd.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/lsfd.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/num.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/num.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/pingpong.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/pingpong.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/pingpongs.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/pingpongs.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/primes.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/primes.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/primespipe.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/primespipe.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/sendpage.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/sendpage.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/sh.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/sh.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/softint.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/softint.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/spawnhello.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/spawnhello.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/spin.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/spin.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/stresssched.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/stresssched.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/testbss.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/testbss.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/testfdsharing.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/testfdsharing.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/testfile.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/testfile.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/testkbd.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/testkbd.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/testpipe.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/testpipe.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/testpiperace.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/testpiperace.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/testpiperace2.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/testpiperace2.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/testpteshare.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/testpteshare.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/testshell.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/testshell.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/testtime.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/testtime.asm	/^						color_position = 0;$/;"	d
color_position	obj/user/yield.asm	/^									color_position = 1;$/;"	d
color_position	obj/user/yield.asm	/^						color_position = 0;$/;"	d
com_strlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t com_strlen;$/;"	m	struct:snmp_msg_pstat
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_resp_header_lengths
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_trap_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_resp_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_trap_header_lengths
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
common	net/lwip/include/lwip/netifapi.h	/^    } common;$/;"	m	union:netifapi_msg_msg::__anon22	typeref:struct:netifapi_msg_msg::__anon22::__anon24
community	net/lwip/include/lwip/snmp_msg.h	/^  u8_t community[SNMP_COMMUNITY_STR_LEN + 1];$/;"	m	struct:snmp_msg_pstat
compressSlot	net/lwip/netif/ppp/vj.h	/^  u_char compressSlot;             \/* Flag indicating OK to compress slot ID. *\/$/;"	m	struct:vjcompress
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
conn	net/lwip/api/sockets.c	/^  struct netconn *conn;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netconn	file:
conn	net/lwip/include/lwip/api_msg.h	/^  struct netconn *conn;$/;"	m	struct:api_msg_msg	typeref:struct:api_msg_msg::netconn
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback( (protocol == IPPROTO_UDPLITE) ?$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback(NETCONN_TCP, event_callback);$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_proto_and_callback(NETCONN_RAW, (u8_t)protocol, event_callback);$/;"	d
conn	obj/net/ns.asm	/^  conn = (struct netconn *)arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = memp_malloc(MEMP_NETCONN);$/;"	d
conn	obj/net/ns.asm	/^  conn = netconn_alloc(t, callback);$/;"	d
connect	inc/ns.h	/^	} connect;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_connect
connect	lib/sockets.c	/^connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
connect	net/lwip/include/lwip/sockets.h	330;"	d
connect_time_expired	net/lwip/netif/ppp/auth.c	/^connect_time_expired(void *arg)$/;"	f	file:
connected	net/lwip/include/lwip/tcp.h	/^  err_t (* connected)(void *arg, struct tcp_pcb *pcb, err_t err);$/;"	m	struct:tcp_pcb
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon11	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/net/ns.asm	/^const char *$/;"	l
const	obj/net/ns.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testinput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testoutput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echosrv.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echotest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echotest.asm	/^const char *msg = "Hello world!\\n";$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/exechello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/httpd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testtime.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cont	obj/net/ns.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cont	obj/user/httpd.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cop	obj/net/ns.asm	/^    cop = last ? left : nfb * 8;$/;"	d
copy_needed	obj/net/ns.asm	/^          copy_needed = 1;$/;"	d
copy_shared_pages	lib/exec.c	/^copy_shared_pages(envid_t child)$/;"	f	file:
copy_shared_pages	lib/extraspawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:
copylen	obj/net/ns.asm	/^      copylen = buflen;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = len;$/;"	d
count	net/lwip/include/lwip/snmp_msg.h	/^  u8_t count;$/;"	m	struct:snmp_varbind_root
count	net/lwip/include/lwip/snmp_structs.h	/^  u16_t count;$/;"	m	struct:mib_list_rootnode
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
count	obj/net/ns.asm	/^      count = pbuf_free(seg->p);$/;"	d
count	obj/net/ns.asm	/^  count = 0;$/;"	d
counter	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t counter;$/;"	m	struct:sys_sem_entry::__anon40::__anon41	file:
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
cs_filler	net/lwip/netif/ppp/vj.h	/^  u_char cs_filler;$/;"	m	struct:cstate
cs_hdr	net/lwip/netif/ppp/vj.h	115;"	d
cs_hlen	net/lwip/netif/ppp/vj.h	/^  u_short cs_hlen;        \/* size of hdr (receive only) *\/$/;"	m	struct:cstate
cs_id	net/lwip/netif/ppp/vj.h	/^  u_char cs_id;           \/* connection # associated with this state *\/$/;"	m	struct:cstate
cs_ip	net/lwip/netif/ppp/vj.h	114;"	d
cs_next	net/lwip/netif/ppp/vj.h	/^  struct cstate *cs_next; \/* next most recently used state (xmit only) *\/$/;"	m	struct:cstate	typeref:struct:cstate::cstate
cseg	obj/net/ns.asm	/^                  cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^                cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^          cseg = pcb->ooseq;$/;"	d
cseg	obj/net/ns.asm	/^  cseg = memp_malloc(MEMP_TCP_SEG);$/;"	d
cso	kern/e1000.h	/^	uint8_t cso;$/;"	m	struct:tx_desc
css	kern/e1000.h	/^	uint8_t css;$/;"	m	struct:tx_desc
cstate	net/lwip/netif/ppp/vj.h	/^struct cstate {$/;"	s
csu_hdr	net/lwip/netif/ppp/vj.h	/^    char csu_hdr[MAX_HDR];$/;"	m	union:cstate::__anon14
csu_ip	net/lwip/netif/ppp/vj.h	/^    struct ip csu_ip;     \/* ip\/tcp hdr from most recent packet *\/$/;"	m	union:cstate::__anon14	typeref:struct:cstate::__anon14::ip
csum	kern/e1000.h	/^	uint16_t csum;$/;"	m	struct:rx_desc
ctime	net/lwip/netif/etharp.c	/^  u8_t ctime;$/;"	m	struct:etharp_entry	file:
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
ctx	net/lwip/include/lwip/tcpip.h	/^      void *ctx;$/;"	m	struct:tcpip_msg::__anon26::__anon28
cur_envid	obj/kern/kernel.asm	/^			cur_envid = ENVX(curenv->env_id);$/;"	d
cur_tc	net/lwip/jos/arch/thread.c	/^static struct thread_context *cur_tc;$/;"	v	typeref:struct:thread_context	file:
cur_tc	obj/net/ns.asm	/^    cur_tc = NULL;$/;"	d
cur_tc	obj/net/ns.asm	/^    cur_tc = next_tc;$/;"	d
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
cwnd	net/lwip/include/lwip/tcp.h	/^  u16_t cwnd;  $/;"	m	struct:tcp_pcb
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/net/ns.asm	/^	d = dst;$/;"	d
d	obj/net/testinput.asm	/^	d = dst;$/;"	d
d	obj/net/testoutput.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/cat.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echo.asm	/^	d = dst;$/;"	d
d	obj/user/echosrv.asm	/^	d = dst;$/;"	d
d	obj/user/echotest.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/exechello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/httpd.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/ls.asm	/^	d = dst;$/;"	d
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
d	obj/user/num.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/sh.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
d	obj/user/testtime.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	obj/net/ns.asm	/^  data = (struct lwip_setgetsockopt_data*)arg;$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon45
datagram_len	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u16_t datagram_len;$/;"	m	struct:ip_reassdata
dataptr	net/lwip/include/lwip/api_msg.h	/^      const void *dataptr;$/;"	m	struct:api_msg_msg::__anon30::__anon34
dataptr	net/lwip/include/lwip/tcp.h	/^  void *dataptr;           \/* pointer to the TCP data in the pbuf *\/$/;"	m	struct:tcp_seg
dataptr	obj/net/ns.asm	/^  dataptr = (u8_t*)conn->write_msg->msg.w.dataptr + conn->write_offset;$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/nsipc.c	5;"	d	file:
debug	lib/pipe.c	3;"	d	file:
debug	net/lwip/jos/arch/sys_arch.c	10;"	d	file:
debug	net/serv.c	34;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/kern/kernel.asm	/^    default:$/;"	l
default	obj/net/ns.asm	/^		default:$/;"	l
default	obj/net/ns.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^      default: \/* unrecognized socket type *\/$/;"	l
default	obj/net/ns.asm	/^      default:$/;"	l
default	obj/net/ns.asm	/^    default:$/;"	l
default	obj/net/ns.asm	/^   default:$/;"	l
default	obj/net/ns.asm	/^  default:$/;"	l
default	obj/net/testinput.asm	/^		default:$/;"	l
default	obj/net/testoutput.asm	/^		default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/cat.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/echo.asm	/^		default:$/;"	l
default	obj/user/echosrv.asm	/^		default:$/;"	l
default	obj/user/echotest.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/exechello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/httpd.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/ls.asm	/^		default:$/;"	l
default	obj/user/lsfd.asm	/^		default:$/;"	l
default	obj/user/num.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/primespipe.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spawnhello.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testkbd.asm	/^		default:$/;"	l
default	obj/user/testpipe.asm	/^		default:$/;"	l
default	obj/user/testpiperace.asm	/^		default:$/;"	l
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
default	obj/user/testpteshare.asm	/^		default:$/;"	l
default	obj/user/testshell.asm	/^		default:$/;"	l
default	obj/user/testtime.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
default_route	net/lwip/netif/ppp/ipcp.h	/^  u_int   default_route : 1; \/* Assign default route through interface? *\/$/;"	m	struct:ipcp_options
default_route_set	net/lwip/netif/ppp/ipcp.c	/^static int default_route_set[NUM_PPP]; \/* Have set up a default route *\/$/;"	v	file:
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dest	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::
dest	obj/net/ns.asm	/^    dest = &(iphdr->dest);$/;"	d
dest	obj/net/ns.asm	/^    dest = &mcastaddr;$/;"	d
dest	obj/net/ns.asm	/^    dest = (struct eth_addr *)&ethbroadcast;$/;"	d
dest	obj/net/ns.asm	/^  dest = NULL;$/;"	d
dest	obj/net/ns.asm	/^  dest = ntohs(udphdr->dest);$/;"	d
dev	kern/pci.h	/^    uint32_t dev;$/;"	m	struct:pci_func
dev_class	kern/pci.h	/^    uint32_t dev_class;$/;"	m	struct:pci_func
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_id	kern/pci.h	/^    uint32_t dev_id;$/;"	m	struct:pci_func
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	file:
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	file:
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devsock	lib/sockets.c	/^struct Dev devsock =$/;"	v	typeref:struct:Dev
devsock_close	lib/sockets.c	/^devsock_close(struct Fd *fd)$/;"	f	file:
devsock_read	lib/sockets.c	/^devsock_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devsock_stat	lib/sockets.c	/^devsock_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devsock_write	lib/sockets.c	/^devsock_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
dhcp	net/lwip/include/lwip/dhcp.h	/^struct dhcp$/;"	s
dhcp	net/lwip/include/lwip/netif.h	/^  struct dhcp *dhcp;$/;"	m	struct:netif	typeref:struct:netif::dhcp
dhcp	obj/net/ns.asm	/^    dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = netif->dhcp;$/;"	d
dhcp_arp_reply	net/lwip/core/dhcp.c	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	f
dhcp_bind	net/lwip/core/dhcp.c	/^dhcp_bind(struct netif *netif)$/;"	f	file:
dhcp_check	net/lwip/core/dhcp.c	/^dhcp_check(struct netif *netif)$/;"	f	file:
dhcp_coarse_tmr	net/lwip/core/dhcp.c	/^dhcp_coarse_tmr()$/;"	f
dhcp_create_request	net/lwip/core/dhcp.c	/^dhcp_create_request(struct netif *netif)$/;"	f	file:
dhcp_decline	net/lwip/core/dhcp.c	/^dhcp_decline(struct netif *netif)$/;"	f	file:
dhcp_delete_request	net/lwip/core/dhcp.c	/^dhcp_delete_request(struct netif *netif)$/;"	f	file:
dhcp_discover	net/lwip/core/dhcp.c	/^dhcp_discover(struct netif *netif)$/;"	f	file:
dhcp_fine_tmr	net/lwip/core/dhcp.c	/^dhcp_fine_tmr()$/;"	f
dhcp_free_reply	net/lwip/core/dhcp.c	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	f	file:
dhcp_get_option_byte	net/lwip/core/dhcp.c	/^dhcp_get_option_byte(u8_t *ptr)$/;"	f	file:
dhcp_get_option_long	net/lwip/core/dhcp.c	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	f	file:
dhcp_get_option_ptr	net/lwip/core/dhcp.c	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	f	file:
dhcp_handle_ack	net/lwip/core/dhcp.c	/^dhcp_handle_ack(struct netif *netif)$/;"	f	file:
dhcp_handle_nak	net/lwip/core/dhcp.c	/^dhcp_handle_nak(struct netif *netif)$/;"	f	file:
dhcp_handle_offer	net/lwip/core/dhcp.c	/^dhcp_handle_offer(struct netif *netif)$/;"	f	file:
dhcp_inform	net/lwip/core/dhcp.c	/^dhcp_inform(struct netif *netif)$/;"	f
dhcp_msg	net/lwip/include/lwip/dhcp.h	/^struct dhcp_msg$/;"	s
dhcp_option	net/lwip/core/dhcp.c	/^dhcp_option(struct dhcp *dhcp, u8_t option_type, u8_t option_len)$/;"	f	file:
dhcp_option_byte	net/lwip/core/dhcp.c	/^dhcp_option_byte(struct dhcp *dhcp, u8_t value)$/;"	f	file:
dhcp_option_long	net/lwip/core/dhcp.c	/^dhcp_option_long(struct dhcp *dhcp, u32_t value)$/;"	f	file:
dhcp_option_short	net/lwip/core/dhcp.c	/^dhcp_option_short(struct dhcp *dhcp, u16_t value)$/;"	f	file:
dhcp_option_trailer	net/lwip/core/dhcp.c	/^dhcp_option_trailer(struct dhcp *dhcp)$/;"	f	file:
dhcp_rebind	net/lwip/core/dhcp.c	/^dhcp_rebind(struct netif *netif)$/;"	f	file:
dhcp_recv	net/lwip/core/dhcp.c	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dhcp_release	net/lwip/core/dhcp.c	/^dhcp_release(struct netif *netif)$/;"	f
dhcp_renew	net/lwip/core/dhcp.c	/^dhcp_renew(struct netif *netif)$/;"	f
dhcp_select	net/lwip/core/dhcp.c	/^dhcp_select(struct netif *netif)$/;"	f	file:
dhcp_set_state	net/lwip/core/dhcp.c	/^dhcp_set_state(struct dhcp *dhcp, u8_t new_state)$/;"	f	file:
dhcp_start	net/lwip/core/dhcp.c	/^dhcp_start(struct netif *netif)$/;"	f
dhcp_stop	net/lwip/core/dhcp.c	/^dhcp_stop(struct netif *netif)$/;"	f
dhcp_t1_timeout	net/lwip/core/dhcp.c	/^dhcp_t1_timeout(struct netif *netif)$/;"	f	file:
dhcp_t2_timeout	net/lwip/core/dhcp.c	/^dhcp_t2_timeout(struct netif *netif)$/;"	f	file:
dhcp_timeout	net/lwip/core/dhcp.c	/^dhcp_timeout(struct netif *netif)$/;"	f	file:
dhcp_timer_coarse	net/lwip/api/tcpip.c	/^dhcp_timer_coarse(void *arg)$/;"	f	file:
dhcp_timer_fine	net/lwip/api/tcpip.c	/^dhcp_timer_fine(void *arg)$/;"	f	file:
dhcp_unfold_reply	net/lwip/core/dhcp.c	/^dhcp_unfold_reply(struct dhcp *dhcp)$/;"	f	file:
did_authup	net/lwip/netif/ppp/auth.c	/^static int did_authup;$/;"	v	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
die	user/echosrv.c	/^die(char *m)$/;"	f	file:
die	user/echotest.c	/^die(char *m)$/;"	f	file:
die	user/httpd.c	/^die(char *m)$/;"	f	file:
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/exechello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/exechello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/exechello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
digest	net/lwip/netif/ppp/md5.h	/^  unsigned char digest[16]; \/* actual digest after MD5Final call *\/$/;"	m	struct:__anon15
dip	net/lwip/core/snmp/msg_out.c	/^  struct ip_addr dip;$/;"	m	struct:snmp_trap_dst	typeref:struct:snmp_trap_dst::ip_addr	file:
dip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr dip;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::ip_addr
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
disable_defaultip	net/lwip/netif/ppp/ppp.h	/^  u_int  disable_defaultip : 1;       \/* Don't use hostname for default IP addrs *\/$/;"	m	struct:ppp_settings
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
dns1	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns2	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns_answer	net/lwip/core/dns.c	/^struct dns_answer {$/;"	s	file:
dns_api_msg	net/lwip/include/lwip/api_msg.h	/^struct dns_api_msg {$/;"	s
dns_check_entries	net/lwip/core/dns.c	/^dns_check_entries(void)$/;"	f	file:
dns_check_entry	net/lwip/core/dns.c	/^dns_check_entry(u8_t i)$/;"	f	file:
dns_compare_name	net/lwip/core/dns.c	/^dns_compare_name(unsigned char *query, unsigned char *response)$/;"	f	file:
dns_count	net/lwip/include/lwip/dhcp.h	/^  u32_t dns_count; \/* actual number of DNS servers obtained *\/$/;"	m	struct:dhcp
dns_enqueue	net/lwip/core/dns.c	/^dns_enqueue(const char *name, dns_found_callback found, void *callback_arg)$/;"	f	file:
dns_found_callback	net/lwip/include/lwip/dns.h	/^typedef void (*dns_found_callback)(const char *name, struct ip_addr *ipaddr, void *callback_arg);$/;"	t
dns_gethostbyname	net/lwip/core/dns.c	/^dns_gethostbyname(const char *hostname, struct ip_addr *addr, dns_found_callback found,$/;"	f
dns_getserver	net/lwip/core/dns.c	/^dns_getserver(u8_t numdns)$/;"	f
dns_hdr	net/lwip/core/dns.c	/^struct dns_hdr {$/;"	s	file:
dns_init	net/lwip/core/dns.c	/^dns_init()$/;"	f
dns_lookup	net/lwip/core/dns.c	/^dns_lookup(const char *name)$/;"	f	file:
dns_parse_name	net/lwip/core/dns.c	/^dns_parse_name(unsigned char *query)$/;"	f	file:
dns_payload	net/lwip/core/dns.c	/^static u8_t                   dns_payload[DNS_MSG_SIZE];$/;"	v	file:
dns_pcb	net/lwip/core/dns.c	/^static struct udp_pcb        *dns_pcb;$/;"	v	typeref:struct:udp_pcb	file:
dns_query	net/lwip/core/dns.c	/^struct dns_query {$/;"	s	file:
dns_recv	net/lwip/core/dns.c	/^dns_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dns_send	net/lwip/core/dns.c	/^dns_send(u8_t numdns, const char* name, u8_t id)$/;"	f	file:
dns_seqno	net/lwip/core/dns.c	/^static u8_t                   dns_seqno;$/;"	v	file:
dns_servers	net/lwip/core/dns.c	/^static struct ip_addr         dns_servers[DNS_MAX_SERVERS];$/;"	v	typeref:struct:ip_addr	file:
dns_setserver	net/lwip/core/dns.c	/^dns_setserver(u8_t numdns, struct ip_addr *dnsserver)$/;"	f
dns_table	net/lwip/core/dns.c	/^static struct dns_table_entry dns_table[DNS_TABLE_SIZE];$/;"	v	typeref:struct:dns_table_entry	file:
dns_table_entry	net/lwip/core/dns.c	/^struct dns_table_entry {$/;"	s	file:
dns_timer	net/lwip/api/tcpip.c	/^dns_timer(void *arg)$/;"	f	file:
dns_tmr	net/lwip/core/dns.c	/^dns_tmr(void)$/;"	f
dnsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   dnsaddr[2];        \/* Primary and secondary MS DNS entries *\/$/;"	m	struct:ipcp_options
do_bind	net/lwip/api/api_msg.c	/^do_bind(struct api_msg_msg *msg)$/;"	f
do_close	net/lwip/api/api_msg.c	/^do_close(struct api_msg_msg *msg)$/;"	f
do_close_internal	net/lwip/api/api_msg.c	/^do_close_internal(struct netconn *conn)$/;"	f	file:
do_connect	net/lwip/api/api_msg.c	/^do_connect(struct api_msg_msg *msg)$/;"	f
do_connected	net/lwip/api/api_msg.c	/^do_connected(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
do_delconn	net/lwip/api/api_msg.c	/^do_delconn(struct api_msg_msg *msg)$/;"	f
do_disconnect	net/lwip/api/api_msg.c	/^do_disconnect(struct api_msg_msg *msg)$/;"	f
do_dns_found	net/lwip/api/api_msg.c	/^do_dns_found(const char *name, struct ip_addr *ipaddr, void *arg)$/;"	f	file:
do_getaddr	net/lwip/api/api_msg.c	/^do_getaddr(struct api_msg_msg *msg)$/;"	f
do_gethostbyname	net/lwip/api/api_msg.c	/^do_gethostbyname(void *arg)$/;"	f
do_join_leave_group	net/lwip/api/api_msg.c	/^do_join_leave_group(struct api_msg_msg *msg)$/;"	f
do_listen	net/lwip/api/api_msg.c	/^do_listen(struct api_msg_msg *msg)$/;"	f
do_netifapi_netif_add	net/lwip/api/netifapi.c	/^do_netifapi_netif_add( struct netifapi_msg_msg *msg)$/;"	f
do_netifapi_netif_common	net/lwip/api/netifapi.c	/^do_netifapi_netif_common( struct netifapi_msg_msg *msg)$/;"	f
do_newconn	net/lwip/api/api_msg.c	/^do_newconn(struct api_msg_msg *msg)$/;"	f
do_recv	net/lwip/api/api_msg.c	/^do_recv(struct api_msg_msg *msg)$/;"	f
do_send	net/lwip/api/api_msg.c	/^do_send(struct api_msg_msg *msg)$/;"	f
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest
do_write	net/lwip/api/api_msg.c	/^do_write(struct api_msg_msg *msg)$/;"	f
do_writemore	net/lwip/api/api_msg.c	/^do_writemore(struct netconn *conn)$/;"	f	file:
done	obj/net/ns.asm	/^        done = 1;$/;"	d
done	obj/net/ns.asm	/^      done = 1;$/;"	d
done	obj/net/ns.asm	/^ done:$/;"	l
down	net/lwip/netif/ppp/fsm.h	/^  void (*down)(fsm*);                               \/* Called when fsm leaves LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
drop	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER drop;             \/* Dropped packets. *\/$/;"	m	struct:stats_proto
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/ns.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testinput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testoutput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echosrv.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echotest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/exechello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/httpd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testtime.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dummy	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	m	struct:sys_timeo
dump	kern/monitor.c	/^int dump(int argc, char** argv, struct Trapframe* tf) {$/;"	f
dump_mem	kern/pmap.c	/^dump_mem(int *start, int *end) {$/;"	f
dump_mem	kern/pmap1.c	/^dump_mem(int *start, int *end) {$/;"	f
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
dupacks	net/lwip/include/lwip/tcp.h	/^  u8_t dupacks;$/;"	m	struct:tcp_pcb
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e2s	net/lwip/jos/arch/perror.c	/^e2s(int err) {$/;"	f
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
eaten	obj/net/ns.asm	/^          eaten = 1;$/;"	d
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echo_port	grade-lab6	/^echo_port = QEMU.get_gdb_port() + 1$/;"	v
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
echolen	obj/user/echotest.asm	/^	echolen = strlen(msg);$/;"	d
eff_wnd	obj/net/ns.asm	/^          eff_wnd = LWIP_MIN(pcb->cwnd, pcb->snd_wnd);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eidlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t eidlen;$/;"	m	struct:snmp_trap_header_lengths
eidlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t eidlenlen;$/;"	m	struct:snmp_trap_header_lengths
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
empty	obj/net/ns.asm	/^      empty = i;$/;"	d
empty_table	net/lwip/core/snmp/mib_structs.c	/^empty_table(struct mib_node *node)$/;"	f	file:
enable	net/lwip/core/snmp/msg_out.c	/^  u8_t enable;$/;"	m	struct:snmp_trap_dst	file:
enabled_flag	net/lwip/netif/ppp/ppp.h	/^    int  enabled_flag;      \/* 0 iff protocol is disabled *\/$/;"	m	struct:protent
end	net/lwip/core/ipv4/ip_frag.c	/^  u16_t end;$/;"	m	struct:ip_reass_helper	file:
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
endpoint	net/lwip/netif/ppp/lcp.h	/^    struct epdisc endpoint;      \/* endpoint discriminator *\/$/;"	m	struct:lcp_options	typeref:struct:lcp_options::epdisc
enterprise	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id *enterprise;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_obj_id
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
enum	obj/net/ns.asm	/^enum netconn_type$/;"	l
enum	obj/net/ns.asm	/^enum { thread_hash_size = 257 };$/;"	l
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i]; \/\/ <------$/;"	d
env_free_list	obj/kern/kernel.asm	/^		env_free_list = env;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = NULL;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_priority	inc/env.h	/^	unsigned env_priority;			\/\/ Environments Priority Level$/;"	m	struct:Env
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	net/lwip/jos/jif/jif.c	/^    envid_t envid;$/;"	m	struct:jif	file:
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/net/ns.asm	/^envid_t$/;"	l
envid_t	obj/net/testinput.asm	/^envid_t$/;"	l
envid_t	obj/net/testoutput.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/echosrv.asm	/^envid_t$/;"	l
envid_t	obj/user/echotest.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/exechello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/httpd.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envid_t	obj/user/testtime.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *)boot_alloc(sizeof_envs);$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	net/lwip/api/sockets.c	/^  err_t err;$/;"	m	struct:lwip_setgetsockopt_data	file:
err	net/lwip/api/sockets.c	/^  int err;$/;"	m	struct:lwip_socket	file:
err	net/lwip/core/dns.c	/^  u8_t  err;$/;"	m	struct:dns_table_entry	file:
err	net/lwip/include/lwip/api.h	/^  err_t err;$/;"	m	struct:netconn
err	net/lwip/include/lwip/api_msg.h	/^  err_t *err;$/;"	m	struct:dns_api_msg
err	net/lwip/include/lwip/netifapi.h	/^  err_t err;$/;"	m	struct:netifapi_msg_msg
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;              \/* Misc error. *\/$/;"	m	struct:stats_proto
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_mem
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_syselem
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^				err = -err;$/;"	d
err	obj/net/ns.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^        err = EAFNOSUPPORT;$/;"	d
err	obj/net/ns.asm	/^        err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^        err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^        err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^      err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^      err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^    err = ip_output_if(q, src_ip, dst_ip, pcb->ttl, pcb->tos, IP_PROTO_UDP, netif);    $/;"	d
err	obj/net/ns.asm	/^    err = netconn_connect(sock->conn, &remote_addr, ntohs(remote_port));$/;"	d
err	obj/net/ns.asm	/^    err = netconn_disconnect(sock->conn);$/;"	d
err	obj/net/ns.asm	/^    err = netconn_send(sock->conn, &buf);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output_nagle(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_process(pcb);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_send_ctrl(pcb, TCP_FIN);$/;"	d
err	obj/net/ns.asm	/^    err = udp_bind(pcb, &pcb->local_ip, pcb->local_port);$/;"	d
err	obj/net/ns.asm	/^    err:$/;"	l
err	obj/net/ns.asm	/^  err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^  err = data.err;$/;"	d
err	obj/net/ns.asm	/^  err = ip_output_if (q, src_ip, ipaddr, pcb->ttl, pcb->tos, pcb->protocol, netif);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_bind(sock->conn, &local_addr, ntohs(local_port));$/;"	d
err	obj/net/ns.asm	/^  err = netconn_listen_with_backlog(sock->conn, backlog);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_peer(newconn, &naddr, &port);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_write(sock->conn, data, size, NETCONN_COPY | ((flags & MSG_MORE)?NETCONN_MORE:0));$/;"	d
err	obj/net/ns.asm	/^  err = tcp_close(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^  err = tcp_write(conn->pcb.tcp, dataptr, len, conn->write_msg->msg.w.apiflags);$/;"	d
err	obj/net/ns.asm	/^err:$/;"	l
err	obj/net/testinput.asm	/^				err = -err;$/;"	d
err	obj/net/testinput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testinput.asm	/^    err:$/;"	l
err	obj/net/testinput.asm	/^err:$/;"	l
err	obj/net/testoutput.asm	/^				err = -err;$/;"	d
err	obj/net/testoutput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testoutput.asm	/^    err:$/;"	l
err	obj/net/testoutput.asm	/^err:$/;"	l
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^    err:$/;"	l
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^    err:$/;"	l
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^    err:$/;"	l
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^    err:$/;"	l
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^    err:$/;"	l
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^    err:$/;"	l
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/echosrv.asm	/^				err = -err;$/;"	d
err	obj/user/echosrv.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echosrv.asm	/^    err:$/;"	l
err	obj/user/echosrv.asm	/^err:$/;"	l
err	obj/user/echotest.asm	/^				err = -err;$/;"	d
err	obj/user/echotest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echotest.asm	/^    err:$/;"	l
err	obj/user/echotest.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^    err:$/;"	l
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/exechello.asm	/^				err = -err;$/;"	d
err	obj/user/exechello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/exechello.asm	/^    err:$/;"	l
err	obj/user/exechello.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^    err:$/;"	l
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^    err:$/;"	l
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^    err:$/;"	l
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^    err:$/;"	l
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^    err:$/;"	l
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^    err:$/;"	l
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^    err:$/;"	l
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^    err:$/;"	l
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^    err:$/;"	l
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^    err:$/;"	l
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^    err:$/;"	l
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^    err:$/;"	l
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^    err:$/;"	l
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^    err:$/;"	l
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/httpd.asm	/^				err = -err;$/;"	d
err	obj/user/httpd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/httpd.asm	/^    err:$/;"	l
err	obj/user/httpd.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^    err:$/;"	l
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^    err:$/;"	l
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^    err:$/;"	l
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^    err:$/;"	l
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^    err:$/;"	l
err	obj/user/sendpage.asm	/^err:$/;"	l
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^    err:$/;"	l
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spawnhello.asm	/^				err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^    err:$/;"	l
err	obj/user/spawnhello.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^    err:$/;"	l
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^    err:$/;"	l
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^    err:$/;"	l
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^    err:$/;"	l
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err	obj/user/testtime.asm	/^				err = -err;$/;"	d
err	obj/user/testtime.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testtime.asm	/^    err:$/;"	l
err	obj/user/testtime.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^    err:$/;"	l
err	obj/user/yield.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err1	obj/net/ns.asm	/^    err1:$/;"	l
err1	obj/net/testinput.asm	/^    err1:$/;"	l
err1	obj/net/testoutput.asm	/^    err1:$/;"	l
err1	obj/user/badsegment.asm	/^    err1:$/;"	l
err1	obj/user/breakpoint.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello2.asm	/^    err1:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err1	obj/user/divzero.asm	/^    err1:$/;"	l
err1	obj/user/dumbfork.asm	/^    err1:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err1	obj/user/echosrv.asm	/^    err1:$/;"	l
err1	obj/user/echotest.asm	/^    err1:$/;"	l
err1	obj/user/evilhello.asm	/^    err1:$/;"	l
err1	obj/user/exechello.asm	/^    err1:$/;"	l
err1	obj/user/fairness.asm	/^    err1:$/;"	l
err1	obj/user/faultalloc.asm	/^    err1:$/;"	l
err1	obj/user/faultallocbad.asm	/^    err1:$/;"	l
err1	obj/user/faultbadhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultdie.asm	/^    err1:$/;"	l
err1	obj/user/faultevilhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultnostack.asm	/^    err1:$/;"	l
err1	obj/user/faultread.asm	/^    err1:$/;"	l
err1	obj/user/faultreadkernel.asm	/^    err1:$/;"	l
err1	obj/user/faultregs.asm	/^    err1:$/;"	l
err1	obj/user/faultwrite.asm	/^    err1:$/;"	l
err1	obj/user/faultwritekernel.asm	/^    err1:$/;"	l
err1	obj/user/forktree.asm	/^    err1:$/;"	l
err1	obj/user/hello.asm	/^    err1:$/;"	l
err1	obj/user/httpd.asm	/^    err1:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err1	obj/user/idle.asm	/^    err1:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err1	obj/user/pingpong.asm	/^    err1:$/;"	l
err1	obj/user/pingpongs.asm	/^    err1:$/;"	l
err1	obj/user/primes.asm	/^    err1:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err1	obj/user/sendpage.asm	/^    err1:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err1	obj/user/softint.asm	/^    err1:$/;"	l
err1	obj/user/spawnhello.asm	/^    err1:$/;"	l
err1	obj/user/spin.asm	/^    err1:$/;"	l
err1	obj/user/stresssched.asm	/^    err1:$/;"	l
err1	obj/user/testbss.asm	/^    err1:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err1	obj/user/testfile.asm	/^    err1:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err1	obj/user/testtime.asm	/^    err1:$/;"	l
err1	obj/user/yield.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err2	obj/net/ns.asm	/^    err2:$/;"	l
err2	obj/net/testinput.asm	/^    err2:$/;"	l
err2	obj/net/testoutput.asm	/^    err2:$/;"	l
err2	obj/user/badsegment.asm	/^    err2:$/;"	l
err2	obj/user/breakpoint.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello2.asm	/^    err2:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err2	obj/user/divzero.asm	/^    err2:$/;"	l
err2	obj/user/dumbfork.asm	/^    err2:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err2	obj/user/echosrv.asm	/^    err2:$/;"	l
err2	obj/user/echotest.asm	/^    err2:$/;"	l
err2	obj/user/evilhello.asm	/^    err2:$/;"	l
err2	obj/user/exechello.asm	/^    err2:$/;"	l
err2	obj/user/fairness.asm	/^    err2:$/;"	l
err2	obj/user/faultalloc.asm	/^    err2:$/;"	l
err2	obj/user/faultallocbad.asm	/^    err2:$/;"	l
err2	obj/user/faultbadhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultdie.asm	/^    err2:$/;"	l
err2	obj/user/faultevilhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultnostack.asm	/^    err2:$/;"	l
err2	obj/user/faultread.asm	/^    err2:$/;"	l
err2	obj/user/faultreadkernel.asm	/^    err2:$/;"	l
err2	obj/user/faultregs.asm	/^    err2:$/;"	l
err2	obj/user/faultwrite.asm	/^    err2:$/;"	l
err2	obj/user/faultwritekernel.asm	/^    err2:$/;"	l
err2	obj/user/forktree.asm	/^    err2:$/;"	l
err2	obj/user/hello.asm	/^    err2:$/;"	l
err2	obj/user/httpd.asm	/^    err2:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err2	obj/user/idle.asm	/^    err2:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err2	obj/user/pingpong.asm	/^    err2:$/;"	l
err2	obj/user/pingpongs.asm	/^    err2:$/;"	l
err2	obj/user/primes.asm	/^    err2:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err2	obj/user/sendpage.asm	/^    err2:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err2	obj/user/softint.asm	/^    err2:$/;"	l
err2	obj/user/spawnhello.asm	/^    err2:$/;"	l
err2	obj/user/spin.asm	/^    err2:$/;"	l
err2	obj/user/stresssched.asm	/^    err2:$/;"	l
err2	obj/user/testbss.asm	/^    err2:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err2	obj/user/testfile.asm	/^    err2:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err2	obj/user/testtime.asm	/^    err2:$/;"	l
err2	obj/user/yield.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
err3	obj/net/ns.asm	/^    err3:$/;"	l
err3	obj/net/testinput.asm	/^    err3:$/;"	l
err3	obj/net/testoutput.asm	/^    err3:$/;"	l
err3	obj/user/badsegment.asm	/^    err3:$/;"	l
err3	obj/user/breakpoint.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello2.asm	/^    err3:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
err3	obj/user/divzero.asm	/^    err3:$/;"	l
err3	obj/user/dumbfork.asm	/^    err3:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
err3	obj/user/echosrv.asm	/^    err3:$/;"	l
err3	obj/user/echotest.asm	/^    err3:$/;"	l
err3	obj/user/evilhello.asm	/^    err3:$/;"	l
err3	obj/user/exechello.asm	/^    err3:$/;"	l
err3	obj/user/fairness.asm	/^    err3:$/;"	l
err3	obj/user/faultalloc.asm	/^    err3:$/;"	l
err3	obj/user/faultallocbad.asm	/^    err3:$/;"	l
err3	obj/user/faultbadhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultdie.asm	/^    err3:$/;"	l
err3	obj/user/faultevilhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultnostack.asm	/^    err3:$/;"	l
err3	obj/user/faultread.asm	/^    err3:$/;"	l
err3	obj/user/faultreadkernel.asm	/^    err3:$/;"	l
err3	obj/user/faultregs.asm	/^    err3:$/;"	l
err3	obj/user/faultwrite.asm	/^    err3:$/;"	l
err3	obj/user/faultwritekernel.asm	/^    err3:$/;"	l
err3	obj/user/forktree.asm	/^    err3:$/;"	l
err3	obj/user/hello.asm	/^    err3:$/;"	l
err3	obj/user/httpd.asm	/^    err3:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
err3	obj/user/idle.asm	/^    err3:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
err3	obj/user/pingpong.asm	/^    err3:$/;"	l
err3	obj/user/pingpongs.asm	/^    err3:$/;"	l
err3	obj/user/primes.asm	/^    err3:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
err3	obj/user/sendpage.asm	/^    err3:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
err3	obj/user/softint.asm	/^    err3:$/;"	l
err3	obj/user/spawnhello.asm	/^    err3:$/;"	l
err3	obj/user/spin.asm	/^    err3:$/;"	l
err3	obj/user/stresssched.asm	/^    err3:$/;"	l
err3	obj/user/testbss.asm	/^    err3:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
err3	obj/user/testfile.asm	/^    err3:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
err3	obj/user/testtime.asm	/^    err3:$/;"	l
err3	obj/user/yield.asm	/^    err3:$/;"	l
errCode	net/lwip/netif/ppp/ppp.c	/^  int  errCode;                 \/* Code indicating why interface is down. *\/$/;"	m	struct:PPPControl_s	file:
err_strerr	net/lwip/api/err.c	/^static const char *err_strerr[] = {$/;"	v	file:
err_t	net/lwip/include/lwip/err.h	/^ typedef s8_t err_t;$/;"	t
err_t	net/lwip/include/lwip/err.h	/^typedef LWIP_ERR_T err_t;$/;"	t
err_t	obj/net/ns.asm	/^err_t $/;"	l
err_t	obj/net/ns.asm	/^err_t$/;"	l
err_tcp	net/lwip/api/api_msg.c	/^err_tcp(void *arg, err_t err)$/;"	f	file:
err_to_errno	net/lwip/api/sockets.c	148;"	d	file:
err_to_errno_table	net/lwip/api/sockets.c	/^static const int err_to_errno_table[] = {$/;"	v	file:
errf	net/lwip/include/lwip/tcp.h	/^  void (* errf)(void *arg, err_t err);$/;"	m	struct:tcp_pcb
errf	obj/net/ns.asm	/^    errf = pcb->errf;$/;"	d
errf_arg	obj/net/ns.asm	/^    errf_arg = pcb->callback_arg;$/;"	d
erridxlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t erridxlen;$/;"	m	struct:snmp_resp_header_lengths
erridxlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t erridxlenlen;$/;"	m	struct:snmp_resp_header_lengths
errno	net/serv.c	/^int errno;$/;"	v
error	kern/e1000.h	/^	uint8_t error;$/;"	m	struct:rx_desc
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
error	obj/user/spawnhello.asm	/^error:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
error_index	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_index;$/;"	m	struct:snmp_msg_pstat
error_messages	user/httpd.c	/^struct error_messages {$/;"	s	file:
error_status	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_status;$/;"	m	struct:snmp_msg_pstat
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
errors	user/httpd.c	/^struct error_messages errors[] = {$/;"	v	typeref:struct:error_messages
errstatlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t errstatlen;$/;"	m	struct:snmp_resp_header_lengths
errstatlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t errstatlenlen;$/;"	m	struct:snmp_resp_header_lengths
errtfunc	net/lwip/include/lwip/netifapi.h	/^      err_t (* errtfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon22::__anon24
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
eth_addr	net/lwip/include/netif/etharp.h	/^struct eth_addr {$/;"	s
eth_addr_cmp	net/lwip/include/netif/etharp.h	165;"	d
eth_hdr	net/lwip/include/netif/etharp.h	/^struct eth_hdr {$/;"	s
ethaddr	net/lwip/jos/jif/jif.c	/^    struct eth_addr *ethaddr;$/;"	m	struct:jif	typeref:struct:jif::eth_addr	file:
ethaddr	net/lwip/netif/etharp.c	/^  struct eth_addr ethaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::eth_addr	file:
etharp	net/lwip/include/lwip/stats.h	/^  struct stats_proto etharp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
etharp_arp_input	net/lwip/netif/etharp.c	/^etharp_arp_input(struct netif *netif, struct eth_addr *ethaddr, struct pbuf *p)$/;"	f
etharp_cached_entry	net/lwip/netif/etharp.c	/^static u8_t etharp_cached_entry;$/;"	v	file:
etharp_cached_entry	obj/net/ns.asm	/^        etharp_cached_entry = i;$/;"	d
etharp_cached_entry	obj/net/ns.asm	/^  etharp_cached_entry = i;$/;"	d
etharp_entry	net/lwip/netif/etharp.c	/^struct etharp_entry {$/;"	s	file:
etharp_find_addr	net/lwip/netif/etharp.c	/^etharp_find_addr(struct netif *netif, struct ip_addr *ipaddr,$/;"	f
etharp_hdr	net/lwip/include/netif/etharp.h	/^struct etharp_hdr {$/;"	s
etharp_init	net/lwip/include/netif/etharp.h	144;"	d
etharp_ip_input	net/lwip/netif/etharp.c	/^etharp_ip_input(struct netif *netif, struct pbuf *p)$/;"	f
etharp_output	net/lwip/netif/etharp.c	/^etharp_output(struct netif *netif, struct pbuf *q, struct ip_addr *ipaddr)$/;"	f
etharp_q_entry	net/lwip/include/netif/etharp.h	/^struct etharp_q_entry {$/;"	s
etharp_query	net/lwip/netif/etharp.c	/^etharp_query(struct netif *netif, struct ip_addr *ipaddr, struct pbuf *q)$/;"	f
etharp_raw	net/lwip/netif/etharp.c	/^etharp_raw(struct netif *netif, const struct eth_addr *ethsrc_addr,$/;"	f	file:
etharp_request	net/lwip/netif/etharp.c	/^etharp_request(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
etharp_send_ip	net/lwip/netif/etharp.c	/^etharp_send_ip(struct netif *netif, struct pbuf *p, struct eth_addr *src, struct eth_addr *dst)$/;"	f	file:
etharp_state	net/lwip/netif/etharp.c	/^enum etharp_state {$/;"	g	file:
etharp_tmr	net/lwip/netif/etharp.c	/^etharp_tmr(void)$/;"	f
ethbroadcast	net/lwip/netif/etharp.c	/^const struct eth_addr ethbroadcast = {{0xff,0xff,0xff,0xff,0xff,0xff}};$/;"	v	typeref:struct:eth_addr
ethdst_hwaddr	obj/net/ns.asm	/^      ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : hdr->shwaddr.addr;$/;"	d
ethdst_hwaddr	obj/net/ns.asm	/^  ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : ethdst_addr->addr;$/;"	d
ethernet_input	net/lwip/netif/etharp.c	/^ethernet_input(struct pbuf *p, struct netif *netif)$/;"	f
ethhdr	obj/net/ns.asm	/^    ethhdr = p->payload;$/;"	d
ethif	net/lwip/netif/ppp/ppp.c	/^  struct netif *ethif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
ethip_hdr	net/lwip/include/netif/etharp.h	/^struct ethip_hdr {$/;"	s
ethzero	net/lwip/netif/etharp.c	/^const struct eth_addr ethzero = {{0,0,0,0,0,0}};$/;"	v	typeref:struct:eth_addr
event_callback	net/lwip/api/sockets.c	/^event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)$/;"	f	file:
exceptset	net/lwip/api/sockets.c	/^  fd_set *exceptset;$/;"	m	struct:lwip_select_cb	file:
exec	lib/exec.c	/^exec(const char *prog, const char **argv)$/;"	f
exec	lib/extraspawn.c	/^exec(const char *prog, const char **argv)$/;"	f
exec_init_stack	lib/exec.c	/^exec_init_stack(envid_t child, const char **argv, uintptr_t *init_esp, uint32_t mem_loc)$/;"	f
execl	lib/exec.c	/^execl(const char *prog, const char *arg0, ...)$/;"	f
execl	lib/extraspawn.c	/^execl(const char *prog, const char *arg0, ...)$/;"	f
exit	lib/exit.c	/^exit(void)$/;"	f
explicit_remote	net/lwip/netif/ppp/ppp.h	/^  u_int  explicit_remote   : 1;       \/* remote_name specified with remotename opt *\/$/;"	m	struct:ppp_settings
ext_accm	net/lwip/netif/ppp/ppp.h	/^typedef u_char  ext_accm[32];$/;"	t
ext_mib_node	net/lwip/include/lwip/snmp_msg.h	/^  struct mib_external_node *ext_mib_node;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::mib_external_node
ext_name_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_name_ptr ext_name_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_name_ptr
ext_object_def	net/lwip/include/lwip/snmp_msg.h	/^  struct obj_def ext_object_def;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::obj_def
ext_oid	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id ext_oid;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_obj_id
extcode	net/lwip/netif/ppp/fsm.h	/^  int  (*extcode)(fsm*, int, u_char, u_char*, int); \/* Called when unknown code received *\/$/;"	m	struct:fsm_callbacks
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern int interruptss[];$/;"	l
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extern	obj/kern/kernel.asm	/^extern void$/;"	l
extern	obj/net/ns.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testinput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testoutput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	net/lwip/include/lwip/tcpip.h	/^      void (*f)(void *ctx);$/;"	m	struct:tcpip_msg::__anon26::__anon28
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 40 12 00       	mov    $0x124000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 40 12 f0       	mov    $0xf0124000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 c7 00 00 00       	call   f0100105 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <test_backtrace>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	53                   	push   %ebx$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010004a	obj/kern/kernel.asm	/^f010004a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010004e	obj/kern/kernel.asm	/^f010004e:	c7 04 24 a0 80 10 f0 	movl   $0xf01080a0,(%esp)$/;"	l
f0100055	obj/kern/kernel.asm	/^f0100055:	e8 b0 45 00 00       	call   f010460a <cprintf>$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	85 db                	test   %ebx,%ebx$/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	7e 0d                	jle    f010006b <test_backtrace+0x2b>$/;"	l
f010005e	obj/kern/kernel.asm	/^f010005e:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0100061	obj/kern/kernel.asm	/^f0100061:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	e8 d7 ff ff ff       	call   f0100040 <test_backtrace>$/;"	l
f0100069	obj/kern/kernel.asm	/^f0100069:	eb 1c                	jmp    f0100087 <test_backtrace+0x47>$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	00 $/;"	l
f0100073	obj/kern/kernel.asm	/^f0100073:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010007a	obj/kern/kernel.asm	/^f010007a:	00 $/;"	l
f010007b	obj/kern/kernel.asm	/^f010007b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	e8 fb 08 00 00       	call   f0100982 <mon_backtrace>$/;"	l
f0100087	obj/kern/kernel.asm	/^f0100087:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010008b	obj/kern/kernel.asm	/^f010008b:	c7 04 24 bc 80 10 f0 	movl   $0xf01080bc,(%esp)$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	e8 73 45 00 00       	call   f010460a <cprintf>$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	83 c4 14             	add    $0x14,%esp$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	5b                   	pop    %ebx$/;"	l
f010009b	obj/kern/kernel.asm	/^f010009b:	5d                   	pop    %ebp$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c:	c3                   	ret    $/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d <_panic>:$/;"	l
f010009d	obj/kern/kernel.asm	/^f010009d:	55                   	push   %ebp$/;"	l
f010009e	obj/kern/kernel.asm	/^f010009e:	89 e5                	mov    %esp,%ebp$/;"	l
f01000a0	obj/kern/kernel.asm	/^f01000a0:	56                   	push   %esi$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	53                   	push   %ebx$/;"	l
f01000a2	obj/kern/kernel.asm	/^f01000a2:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01000a5	obj/kern/kernel.asm	/^f01000a5:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	83 3d 94 4e 2c f0 00 	cmpl   $0x0,0xf02c4e94$/;"	l
f01000af	obj/kern/kernel.asm	/^f01000af:	75 46                	jne    f01000f7 <_panic+0x5a>$/;"	l
f01000b1	obj/kern/kernel.asm	/^f01000b1:	89 35 94 4e 2c f0    	mov    %esi,0xf02c4e94$/;"	l
f01000b7	obj/kern/kernel.asm	/^f01000b7:	fa                   	cli    $/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	fc                   	cld    $/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01000bc	obj/kern/kernel.asm	/^f01000bc:	e8 88 6e 00 00       	call   f0106f49 <cpunum>$/;"	l
f01000c1	obj/kern/kernel.asm	/^f01000c1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01000c4	obj/kern/kernel.asm	/^f01000c4:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01000c8	obj/kern/kernel.asm	/^f01000c8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01000cb	obj/kern/kernel.asm	/^f01000cb:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01000cf	obj/kern/kernel.asm	/^f01000cf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000d3	obj/kern/kernel.asm	/^f01000d3:	c7 04 24 30 81 10 f0 	movl   $0xf0108130,(%esp)$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	e8 2b 45 00 00       	call   f010460a <cprintf>$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01000e3	obj/kern/kernel.asm	/^f01000e3:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01000e6	obj/kern/kernel.asm	/^f01000e6:	e8 ec 44 00 00       	call   f01045d7 <vcprintf>$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	c7 04 24 1b 95 10 f0 	movl   $0xf010951b,(%esp)$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	e8 13 45 00 00       	call   f010460a <cprintf>$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	e8 8b 0b 00 00       	call   f0100c8e <monitor>$/;"	l
f0100103	obj/kern/kernel.asm	/^f0100103:	eb f2                	jmp    f01000f7 <_panic+0x5a>$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105 <i386_init>:$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	55                   	push   %ebp$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	89 e5                	mov    %esp,%ebp$/;"	l
f0100108	obj/kern/kernel.asm	/^f0100108:	53                   	push   %ebx$/;"	l
f0100109	obj/kern/kernel.asm	/^f0100109:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	b8 c8 d4 30 f0       	mov    $0xf030d4c8,%eax$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	2d d7 35 2c f0       	sub    $0xf02c35d7,%eax$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010011a	obj/kern/kernel.asm	/^f010011a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	00 $/;"	l
f0100122	obj/kern/kernel.asm	/^f0100122:	c7 04 24 d7 35 2c f0 	movl   $0xf02c35d7,(%esp)$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	e8 c9 67 00 00       	call   f01068f7 <memset>$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	e8 e7 05 00 00       	call   f010071a <cons_init>$/;"	l
f0100133	obj/kern/kernel.asm	/^f0100133:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	00 $/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	c7 04 24 d7 80 10 f0 	movl   $0xf01080d7,(%esp)$/;"	l
f0100142	obj/kern/kernel.asm	/^f0100142:	e8 c3 44 00 00       	call   f010460a <cprintf>$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	e8 49 18 00 00       	call   f0101995 <mem_init>$/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	e8 f4 3b 00 00       	call   f0103d45 <env_init>$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	e8 4c 4c 00 00       	call   f0104da2 <trap_init>$/;"	l
f0100156	obj/kern/kernel.asm	/^f0100156:	e8 df 6a 00 00       	call   f0106c3a <mp_init>$/;"	l
f010015b	obj/kern/kernel.asm	/^f010015b:	90                   	nop$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0100160	obj/kern/kernel.asm	/^f0100160:	e8 ff 6d 00 00       	call   f0106f64 <lapic_init>$/;"	l
f0100165	obj/kern/kernel.asm	/^f0100165:	e8 bd 43 00 00       	call   f0104527 <pic_init>$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	e8 33 7c 00 00       	call   f0107da2 <time_init>$/;"	l
f010016f	obj/kern/kernel.asm	/^f010016f:	90                   	nop$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	e8 ff 7b 00 00       	call   f0107d74 <pci_init>$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	c7 04 24 00 64 12 f0 	movl   $0xf0126400,(%esp)$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	e8 46 70 00 00       	call   f01071c7 <spin_lock>$/;"	l
f0100181	obj/kern/kernel.asm	/^f0100181:	83 3d 9c 4e 2c f0 07 	cmpl   $0x7,0xf02c4e9c$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	77 24                	ja     f01001ae <i386_init+0xa9>$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f0100191	obj/kern/kernel.asm	/^f0100191:	00 $/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f0100199	obj/kern/kernel.asm	/^f0100199:	f0 $/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	c7 44 24 04 bd 00 00 	movl   $0xbd,0x4(%esp)$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	00 $/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	c7 04 24 f2 80 10 f0 	movl   $0xf01080f2,(%esp)$/;"	l
f01001a9	obj/kern/kernel.asm	/^f01001a9:	e8 ef fe ff ff       	call   f010009d <_panic>$/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae:	b8 72 6b 10 f0       	mov    $0xf0106b72,%eax$/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	2d f8 6a 10 f0       	sub    $0xf0106af8,%eax$/;"	l
f01001b8	obj/kern/kernel.asm	/^f01001b8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	c7 44 24 04 f8 6a 10 	movl   $0xf0106af8,0x4(%esp)$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	f0 $/;"	l
f01001c4	obj/kern/kernel.asm	/^f01001c4:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f01001cb	obj/kern/kernel.asm	/^f01001cb:	e8 74 67 00 00       	call   f0106944 <memmove>$/;"	l
f01001d0	obj/kern/kernel.asm	/^f01001d0:	bb 20 50 2c f0       	mov    $0xf02c5020,%ebx$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	eb 4d                	jmp    f0100224 <i386_init+0x11f>$/;"	l
f01001d7	obj/kern/kernel.asm	/^f01001d7:	e8 6d 6d 00 00       	call   f0106f49 <cpunum>$/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01001df	obj/kern/kernel.asm	/^f01001df:	05 20 50 2c f0       	add    $0xf02c5020,%eax$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	39 c3                	cmp    %eax,%ebx$/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	74 39                	je     f0100221 <i386_init+0x11c>$/;"	l
f01001e8	obj/kern/kernel.asm	/^f01001e8:	89 d8                	mov    %ebx,%eax$/;"	l
f01001ea	obj/kern/kernel.asm	/^f01001ea:	2d 20 50 2c f0       	sub    $0xf02c5020,%eax$/;"	l
f01001ef	obj/kern/kernel.asm	/^f01001ef:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01001f2	obj/kern/kernel.asm	/^f01001f2:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f01001f8	obj/kern/kernel.asm	/^f01001f8:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	8d 80 00 e0 2c f0    	lea    -0xfd32000(%eax),%eax$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	a3 98 4e 2c f0       	mov    %eax,0xf02c4e98$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	00 $/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100211	obj/kern/kernel.asm	/^f0100211:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100214	obj/kern/kernel.asm	/^f0100214:	e8 9b 6e 00 00       	call   f01070b4 <lapic_startap>$/;"	l
f0100219	obj/kern/kernel.asm	/^f0100219:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	75 f8                	jne    f0100219 <i386_init+0x114>$/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	83 c3 74             	add    $0x74,%ebx$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	6b 05 c4 53 2c f0 74 	imul   $0x74,0xf02c53c4,%eax$/;"	l
f010022b	obj/kern/kernel.asm	/^f010022b:	05 20 50 2c f0       	add    $0xf02c5020,%eax$/;"	l
f0100230	obj/kern/kernel.asm	/^f0100230:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100232	obj/kern/kernel.asm	/^f0100232:	72 a3                	jb     f01001d7 <i386_init+0xd2>$/;"	l
f0100234	obj/kern/kernel.asm	/^f0100234:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f010023b	obj/kern/kernel.asm	/^f010023b:	00 $/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	c7 04 24 6d 58 1e f0 	movl   $0xf01e586d,(%esp)$/;"	l
f0100243	obj/kern/kernel.asm	/^f0100243:	e8 62 3d 00 00       	call   f0103faa <env_create>$/;"	l
f0100248	obj/kern/kernel.asm	/^f0100248:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	00 $/;"	l
f0100250	obj/kern/kernel.asm	/^f0100250:	c7 04 24 88 47 24 f0 	movl   $0xf0244788,(%esp)$/;"	l
f0100257	obj/kern/kernel.asm	/^f0100257:	e8 4e 3d 00 00       	call   f0103faa <env_create>$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100263	obj/kern/kernel.asm	/^f0100263:	00 $/;"	l
f0100264	obj/kern/kernel.asm	/^f0100264:	c7 04 24 b1 83 20 f0 	movl   $0xf02083b1,(%esp)$/;"	l
f010026b	obj/kern/kernel.asm	/^f010026b:	e8 3a 3d 00 00       	call   f0103faa <env_create>$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	e8 49 04 00 00       	call   f01006be <kbd_intr>$/;"	l
f0100275	obj/kern/kernel.asm	/^f0100275:	e8 ea 51 00 00       	call   f0105464 <sched_yield>$/;"	l
f010027a	obj/kern/kernel.asm	/^f010027a <mp_main>:$/;"	l
f010027a	obj/kern/kernel.asm	/^f010027a:	55                   	push   %ebp$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	89 e5                	mov    %esp,%ebp$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0100285	obj/kern/kernel.asm	/^f0100285:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	77 20                	ja     f01002ac <mp_main+0x32>$/;"	l
f010028c	obj/kern/kernel.asm	/^f010028c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100290	obj/kern/kernel.asm	/^f0100290:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	f0 $/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	c7 44 24 04 d4 00 00 	movl   $0xd4,0x4(%esp)$/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	00 $/;"	l
f01002a0	obj/kern/kernel.asm	/^f01002a0:	c7 04 24 f2 80 10 f0 	movl   $0xf01080f2,(%esp)$/;"	l
f01002a7	obj/kern/kernel.asm	/^f01002a7:	e8 f1 fd ff ff       	call   f010009d <_panic>$/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	e8 90 6c 00 00       	call   f0106f49 <cpunum>$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01002bd	obj/kern/kernel.asm	/^f01002bd:	c7 04 24 fe 80 10 f0 	movl   $0xf01080fe,(%esp)$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	e8 41 43 00 00       	call   f010460a <cprintf>$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	e8 96 6c 00 00       	call   f0106f64 <lapic_init>$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	e8 48 3a 00 00       	call   f0103d1b <env_init_percpu>$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	e8 58 43 00 00       	call   f0104630 <trap_init_percpu>$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	e8 6c 6c 00 00       	call   f0106f49 <cpunum>$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	81 c2 20 50 2c f0    	add    $0xf02c5020,%edx$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	c7 04 24 00 64 12 f0 	movl   $0xf0126400,(%esp)$/;"	l
f01002f6	obj/kern/kernel.asm	/^f01002f6:	e8 cc 6e 00 00       	call   f01071c7 <spin_lock>$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	e8 64 51 00 00       	call   f0105464 <sched_yield>$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300 <_warn>:$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	55                   	push   %ebp$/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301:	89 e5                	mov    %esp,%ebp$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	53                   	push   %ebx$/;"	l
f0100304	obj/kern/kernel.asm	/^f0100304:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010030a	obj/kern/kernel.asm	/^f010030a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100311	obj/kern/kernel.asm	/^f0100311:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100314	obj/kern/kernel.asm	/^f0100314:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100318	obj/kern/kernel.asm	/^f0100318:	c7 04 24 14 81 10 f0 	movl   $0xf0108114,(%esp)$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	e8 e6 42 00 00       	call   f010460a <cprintf>$/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100328	obj/kern/kernel.asm	/^f0100328:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	e8 a4 42 00 00       	call   f01045d7 <vcprintf>$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	c7 04 24 1b 95 10 f0 	movl   $0xf010951b,(%esp)$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	e8 cb 42 00 00       	call   f010460a <cprintf>$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	5b                   	pop    %ebx$/;"	l
f0100343	obj/kern/kernel.asm	/^f0100343:	5d                   	pop    %ebp$/;"	l
f0100344	obj/kern/kernel.asm	/^f0100344:	c3                   	ret    $/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	66 90                	xchg   %ax,%ax$/;"	l
f0100347	obj/kern/kernel.asm	/^f0100347:	66 90                	xchg   %ax,%ax$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	66 90                	xchg   %ax,%ax$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b:	66 90                	xchg   %ax,%ax$/;"	l
f010034d	obj/kern/kernel.asm	/^f010034d:	66 90                	xchg   %ax,%ax$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	90                   	nop$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350 <serial_proc_data>:$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	55                   	push   %ebp$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	89 e5                	mov    %esp,%ebp$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	ec                   	in     (%dx),%al$/;"	l
f0100359	obj/kern/kernel.asm	/^f0100359:	a8 01                	test   $0x1,%al$/;"	l
f010035b	obj/kern/kernel.asm	/^f010035b:	74 08                	je     f0100365 <serial_proc_data+0x15>$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	b2 f8                	mov    $0xf8,%dl$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	ec                   	in     (%dx),%al$/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	eb 05                	jmp    f010036a <serial_proc_data+0x1a>$/;"	l
f0100365	obj/kern/kernel.asm	/^f0100365:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010036a	obj/kern/kernel.asm	/^f010036a:	5d                   	pop    %ebp$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	c3                   	ret    $/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c <cons_intr>:$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	55                   	push   %ebp$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	89 e5                	mov    %esp,%ebp$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	53                   	push   %ebx$/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	89 c3                	mov    %eax,%ebx$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	eb 2a                	jmp    f01003a1 <cons_intr+0x35>$/;"	l
f0100377	obj/kern/kernel.asm	/^f0100377:	85 d2                	test   %edx,%edx$/;"	l
f0100379	obj/kern/kernel.asm	/^f0100379:	74 26                	je     f01003a1 <cons_intr+0x35>$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	a1 24 42 2c f0       	mov    0xf02c4224,%eax$/;"	l
f0100380	obj/kern/kernel.asm	/^f0100380:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	89 0d 24 42 2c f0    	mov    %ecx,0xf02c4224$/;"	l
f0100389	obj/kern/kernel.asm	/^f0100389:	88 90 20 40 2c f0    	mov    %dl,-0xfd3bfe0(%eax)$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	75 0a                	jne    f01003a1 <cons_intr+0x35>$/;"	l
f0100397	obj/kern/kernel.asm	/^f0100397:	c7 05 24 42 2c f0 00 	movl   $0x0,0xf02c4224$/;"	l
f010039e	obj/kern/kernel.asm	/^f010039e:	00 00 00 $/;"	l
f01003a1	obj/kern/kernel.asm	/^f01003a1:	ff d3                	call   *%ebx$/;"	l
f01003a3	obj/kern/kernel.asm	/^f01003a3:	89 c2                	mov    %eax,%edx$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01003a8	obj/kern/kernel.asm	/^f01003a8:	75 cd                	jne    f0100377 <cons_intr+0xb>$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	83 c4 04             	add    $0x4,%esp$/;"	l
f01003ad	obj/kern/kernel.asm	/^f01003ad:	5b                   	pop    %ebx$/;"	l
f01003ae	obj/kern/kernel.asm	/^f01003ae:	5d                   	pop    %ebp$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	c3                   	ret    $/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0 <kbd_proc_data>:$/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01003b5	obj/kern/kernel.asm	/^f01003b5:	ec                   	in     (%dx),%al$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	a8 01                	test   $0x1,%al$/;"	l
f01003b8	obj/kern/kernel.asm	/^f01003b8:	0f 84 ef 00 00 00    	je     f01004ad <kbd_proc_data+0xfd>$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	b2 60                	mov    $0x60,%dl$/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	ec                   	in     (%dx),%al$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	89 c2                	mov    %eax,%edx$/;"	l
f01003c3	obj/kern/kernel.asm	/^f01003c3:	3c e0                	cmp    $0xe0,%al$/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	75 0d                	jne    f01003d4 <kbd_proc_data+0x24>$/;"	l
f01003c7	obj/kern/kernel.asm	/^f01003c7:	83 0d 00 40 2c f0 40 	orl    $0x40,0xf02c4000$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01003d3	obj/kern/kernel.asm	/^f01003d3:	c3                   	ret    $/;"	l
f01003d4	obj/kern/kernel.asm	/^f01003d4:	55                   	push   %ebp$/;"	l
f01003d5	obj/kern/kernel.asm	/^f01003d5:	89 e5                	mov    %esp,%ebp$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	53                   	push   %ebx$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01003db	obj/kern/kernel.asm	/^f01003db:	84 c0                	test   %al,%al$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	79 37                	jns    f0100416 <kbd_proc_data+0x66>$/;"	l
f01003df	obj/kern/kernel.asm	/^f01003df:	8b 0d 00 40 2c f0    	mov    0xf02c4000,%ecx$/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5:	89 cb                	mov    %ecx,%ebx$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	83 e3 40             	and    $0x40,%ebx$/;"	l
f01003ea	obj/kern/kernel.asm	/^f01003ea:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	85 db                	test   %ebx,%ebx$/;"	l
f01003ef	obj/kern/kernel.asm	/^f01003ef:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	0f b6 82 00 83 10 f0 	movzbl -0xfef7d00(%edx),%eax$/;"	l
f01003fc	obj/kern/kernel.asm	/^f01003fc:	83 c8 40             	or     $0x40,%eax$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	f7 d0                	not    %eax$/;"	l
f0100404	obj/kern/kernel.asm	/^f0100404:	21 c1                	and    %eax,%ecx$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	89 0d 00 40 2c f0    	mov    %ecx,0xf02c4000$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	e9 9d 00 00 00       	jmp    f01004b3 <kbd_proc_data+0x103>$/;"	l
f0100416	obj/kern/kernel.asm	/^f0100416:	8b 0d 00 40 2c f0    	mov    0xf02c4000,%ecx$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	f6 c1 40             	test   $0x40,%cl$/;"	l
f010041f	obj/kern/kernel.asm	/^f010041f:	74 0e                	je     f010042f <kbd_proc_data+0x7f>$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100424	obj/kern/kernel.asm	/^f0100424:	89 c2                	mov    %eax,%edx$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	89 0d 00 40 2c f0    	mov    %ecx,0xf02c4000$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	0f b6 82 00 83 10 f0 	movzbl -0xfef7d00(%edx),%eax$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	0b 05 00 40 2c f0    	or     0xf02c4000,%eax$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	0f b6 8a 00 82 10 f0 	movzbl -0xfef7e00(%edx),%ecx$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	31 c8                	xor    %ecx,%eax$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	a3 00 40 2c f0       	mov    %eax,0xf02c4000$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	89 c1                	mov    %eax,%ecx$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	8b 0c 8d e0 81 10 f0 	mov    -0xfef7e20(,%ecx,4),%ecx$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f0100460	obj/kern/kernel.asm	/^f0100460:	a8 08                	test   $0x8,%al$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	74 1b                	je     f010047f <kbd_proc_data+0xcf>$/;"	l
f0100464	obj/kern/kernel.asm	/^f0100464:	89 da                	mov    %ebx,%edx$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f010046c	obj/kern/kernel.asm	/^f010046c:	77 05                	ja     f0100473 <kbd_proc_data+0xc3>$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	eb 0c                	jmp    f010047f <kbd_proc_data+0xcf>$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	f7 d0                	not    %eax$/;"	l
f0100481	obj/kern/kernel.asm	/^f0100481:	89 c2                	mov    %eax,%edx$/;"	l
f0100483	obj/kern/kernel.asm	/^f0100483:	89 d8                	mov    %ebx,%eax$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	f6 c2 06             	test   $0x6,%dl$/;"	l
f0100488	obj/kern/kernel.asm	/^f0100488:	75 29                	jne    f01004b3 <kbd_proc_data+0x103>$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	75 21                	jne    f01004b3 <kbd_proc_data+0x103>$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	c7 04 24 9c 81 10 f0 	movl   $0xf010819c,(%esp)$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	e8 6c 41 00 00       	call   f010460a <cprintf>$/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	ee                   	out    %al,(%dx)$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	89 d8                	mov    %ebx,%eax$/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	eb 06                	jmp    f01004b3 <kbd_proc_data+0x103>$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01004b2	obj/kern/kernel.asm	/^f01004b2:	c3                   	ret    $/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	83 c4 14             	add    $0x14,%esp$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	5b                   	pop    %ebx$/;"	l
f01004b7	obj/kern/kernel.asm	/^f01004b7:	5d                   	pop    %ebp$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	c3                   	ret    $/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9 <cons_putc>:$/;"	l
f01004b9	obj/kern/kernel.asm	/^f01004b9:	55                   	push   %ebp$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	89 e5                	mov    %esp,%ebp$/;"	l
f01004bc	obj/kern/kernel.asm	/^f01004bc:	57                   	push   %edi$/;"	l
f01004bd	obj/kern/kernel.asm	/^f01004bd:	56                   	push   %esi$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	53                   	push   %ebx$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	89 c7                	mov    %eax,%edi$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f01004c9	obj/kern/kernel.asm	/^f01004c9:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f01004d3	obj/kern/kernel.asm	/^f01004d3:	eb 0c                	jmp    f01004e1 <cons_putc+0x28>$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	89 ca                	mov    %ecx,%edx$/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	ec                   	in     (%dx),%al$/;"	l
f01004d8	obj/kern/kernel.asm	/^f01004d8:	89 ca                	mov    %ecx,%edx$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	ec                   	in     (%dx),%al$/;"	l
f01004db	obj/kern/kernel.asm	/^f01004db:	89 ca                	mov    %ecx,%edx$/;"	l
f01004dd	obj/kern/kernel.asm	/^f01004dd:	ec                   	in     (%dx),%al$/;"	l
f01004de	obj/kern/kernel.asm	/^f01004de:	89 ca                	mov    %ecx,%edx$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	ec                   	in     (%dx),%al$/;"	l
f01004e1	obj/kern/kernel.asm	/^f01004e1:	89 f2                	mov    %esi,%edx$/;"	l
f01004e3	obj/kern/kernel.asm	/^f01004e3:	ec                   	in     (%dx),%al$/;"	l
f01004e4	obj/kern/kernel.asm	/^f01004e4:	a8 20                	test   $0x20,%al$/;"	l
f01004e6	obj/kern/kernel.asm	/^f01004e6:	75 05                	jne    f01004ed <cons_putc+0x34>$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	75 e8                	jne    f01004d5 <cons_putc+0x1c>$/;"	l
f01004ed	obj/kern/kernel.asm	/^f01004ed:	89 f8                	mov    %edi,%eax$/;"	l
f01004ef	obj/kern/kernel.asm	/^f01004ef:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01004f2	obj/kern/kernel.asm	/^f01004f2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01004f5	obj/kern/kernel.asm	/^f01004f5:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01004fa	obj/kern/kernel.asm	/^f01004fa:	ee                   	out    %al,(%dx)$/;"	l
f01004fb	obj/kern/kernel.asm	/^f01004fb:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	eb 0c                	jmp    f0100518 <cons_putc+0x5f>$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	89 ca                	mov    %ecx,%edx$/;"	l
f010050e	obj/kern/kernel.asm	/^f010050e:	ec                   	in     (%dx),%al$/;"	l
f010050f	obj/kern/kernel.asm	/^f010050f:	89 ca                	mov    %ecx,%edx$/;"	l
f0100511	obj/kern/kernel.asm	/^f0100511:	ec                   	in     (%dx),%al$/;"	l
f0100512	obj/kern/kernel.asm	/^f0100512:	89 ca                	mov    %ecx,%edx$/;"	l
f0100514	obj/kern/kernel.asm	/^f0100514:	ec                   	in     (%dx),%al$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	89 ca                	mov    %ecx,%edx$/;"	l
f0100517	obj/kern/kernel.asm	/^f0100517:	ec                   	in     (%dx),%al$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	89 f2                	mov    %esi,%edx$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	ec                   	in     (%dx),%al$/;"	l
f010051b	obj/kern/kernel.asm	/^f010051b:	84 c0                	test   %al,%al$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	78 05                	js     f0100524 <cons_putc+0x6b>$/;"	l
f010051f	obj/kern/kernel.asm	/^f010051f:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100522	obj/kern/kernel.asm	/^f0100522:	75 e8                	jne    f010050c <cons_putc+0x53>$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
f010052d	obj/kern/kernel.asm	/^f010052d:	ee                   	out    %al,(%dx)$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	b2 7a                	mov    $0x7a,%dl$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	ee                   	out    %al,(%dx)$/;"	l
f0100536	obj/kern/kernel.asm	/^f0100536:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f010053b	obj/kern/kernel.asm	/^f010053b:	ee                   	out    %al,(%dx)$/;"	l
f010053c	obj/kern/kernel.asm	/^f010053c:	89 fa                	mov    %edi,%edx$/;"	l
f010053e	obj/kern/kernel.asm	/^f010053e:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	89 f8                	mov    %edi,%eax$/;"	l
f0100546	obj/kern/kernel.asm	/^f0100546:	80 cc 07             	or     $0x7,%ah$/;"	l
f0100549	obj/kern/kernel.asm	/^f0100549:	85 d2                	test   %edx,%edx$/;"	l
f010054b	obj/kern/kernel.asm	/^f010054b:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f010054e	obj/kern/kernel.asm	/^f010054e:	89 f8                	mov    %edi,%eax$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100553	obj/kern/kernel.asm	/^f0100553:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	74 75                	je     f01005cd <cons_putc+0x114>$/;"	l
f0100558	obj/kern/kernel.asm	/^f0100558:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010055b	obj/kern/kernel.asm	/^f010055b:	7f 0a                	jg     f0100567 <cons_putc+0xae>$/;"	l
f010055d	obj/kern/kernel.asm	/^f010055d:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	74 15                	je     f0100577 <cons_putc+0xbe>$/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	e9 9a 00 00 00       	jmp    f0100601 <cons_putc+0x148>$/;"	l
f0100567	obj/kern/kernel.asm	/^f0100567:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f010056a	obj/kern/kernel.asm	/^f010056a:	74 3b                	je     f01005a7 <cons_putc+0xee>$/;"	l
f010056c	obj/kern/kernel.asm	/^f010056c:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f010056f	obj/kern/kernel.asm	/^f010056f:	90                   	nop$/;"	l
f0100570	obj/kern/kernel.asm	/^f0100570:	74 3d                	je     f01005af <cons_putc+0xf6>$/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572:	e9 8a 00 00 00       	jmp    f0100601 <cons_putc+0x148>$/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	0f b7 05 28 42 2c f0 	movzwl 0xf02c4228,%eax$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	66 85 c0             	test   %ax,%ax$/;"	l
f0100581	obj/kern/kernel.asm	/^f0100581:	0f 84 e5 00 00 00    	je     f010066c <cons_putc+0x1b3>$/;"	l
f0100587	obj/kern/kernel.asm	/^f0100587:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	66 a3 28 42 2c f0    	mov    %ax,0xf02c4228$/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100593	obj/kern/kernel.asm	/^f0100593:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	83 cf 20             	or     $0x20,%edi$/;"	l
f010059b	obj/kern/kernel.asm	/^f010059b:	8b 15 2c 42 2c f0    	mov    0xf02c422c,%edx$/;"	l
f01005a1	obj/kern/kernel.asm	/^f01005a1:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	eb 78                	jmp    f010061f <cons_putc+0x166>$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	66 83 05 28 42 2c f0 	addw   $0x50,0xf02c4228$/;"	l
f01005ae	obj/kern/kernel.asm	/^f01005ae:	50 $/;"	l
f01005af	obj/kern/kernel.asm	/^f01005af:	0f b7 05 28 42 2c f0 	movzwl 0xf02c4228,%eax$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01005bc	obj/kern/kernel.asm	/^f01005bc:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01005bf	obj/kern/kernel.asm	/^f01005bf:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01005c5	obj/kern/kernel.asm	/^f01005c5:	66 a3 28 42 2c f0    	mov    %ax,0xf02c4228$/;"	l
f01005cb	obj/kern/kernel.asm	/^f01005cb:	eb 52                	jmp    f010061f <cons_putc+0x166>$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	e8 e2 fe ff ff       	call   f01004b9 <cons_putc>$/;"	l
f01005d7	obj/kern/kernel.asm	/^f01005d7:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005dc	obj/kern/kernel.asm	/^f01005dc:	e8 d8 fe ff ff       	call   f01004b9 <cons_putc>$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	e8 ce fe ff ff       	call   f01004b9 <cons_putc>$/;"	l
f01005eb	obj/kern/kernel.asm	/^f01005eb:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	e8 c4 fe ff ff       	call   f01004b9 <cons_putc>$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	e8 ba fe ff ff       	call   f01004b9 <cons_putc>$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	eb 1e                	jmp    f010061f <cons_putc+0x166>$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	0f b7 05 28 42 2c f0 	movzwl 0xf02c4228,%eax$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	66 89 15 28 42 2c f0 	mov    %dx,0xf02c4228$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100615	obj/kern/kernel.asm	/^f0100615:	8b 15 2c 42 2c f0    	mov    0xf02c422c,%edx$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f010061f	obj/kern/kernel.asm	/^f010061f:	66 81 3d 28 42 2c f0 	cmpw   $0x7cf,0xf02c4228$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	cf 07 $/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	76 42                	jbe    f010066c <cons_putc+0x1b3>$/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	a1 2c 42 2c f0       	mov    0xf02c422c,%eax$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	00 $/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100641	obj/kern/kernel.asm	/^f0100641:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	e8 fb 62 00 00       	call   f0106944 <memmove>$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	8b 15 2c 42 2c f0    	mov    0xf02c422c,%edx$/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f0100654	obj/kern/kernel.asm	/^f0100654:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010065d	obj/kern/kernel.asm	/^f010065d:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	75 f0                	jne    f0100654 <cons_putc+0x19b>$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	66 83 2d 28 42 2c f0 	subw   $0x50,0xf02c4228$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	50 $/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c:	8b 0d 30 42 2c f0    	mov    0xf02c4230,%ecx$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100677	obj/kern/kernel.asm	/^f0100677:	89 ca                	mov    %ecx,%edx$/;"	l
f0100679	obj/kern/kernel.asm	/^f0100679:	ee                   	out    %al,(%dx)$/;"	l
f010067a	obj/kern/kernel.asm	/^f010067a:	0f b7 1d 28 42 2c f0 	movzwl 0xf02c4228,%ebx$/;"	l
f0100681	obj/kern/kernel.asm	/^f0100681:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f0100684	obj/kern/kernel.asm	/^f0100684:	89 d8                	mov    %ebx,%eax$/;"	l
f0100686	obj/kern/kernel.asm	/^f0100686:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010068a	obj/kern/kernel.asm	/^f010068a:	89 f2                	mov    %esi,%edx$/;"	l
f010068c	obj/kern/kernel.asm	/^f010068c:	ee                   	out    %al,(%dx)$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	89 ca                	mov    %ecx,%edx$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	ee                   	out    %al,(%dx)$/;"	l
f0100695	obj/kern/kernel.asm	/^f0100695:	89 d8                	mov    %ebx,%eax$/;"	l
f0100697	obj/kern/kernel.asm	/^f0100697:	89 f2                	mov    %esi,%edx$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	ee                   	out    %al,(%dx)$/;"	l
f010069a	obj/kern/kernel.asm	/^f010069a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010069d	obj/kern/kernel.asm	/^f010069d:	5b                   	pop    %ebx$/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	5e                   	pop    %esi$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	5f                   	pop    %edi$/;"	l
f01006a0	obj/kern/kernel.asm	/^f01006a0:	5d                   	pop    %ebp$/;"	l
f01006a1	obj/kern/kernel.asm	/^f01006a1:	c3                   	ret    $/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2 <serial_intr>:$/;"	l
f01006a2	obj/kern/kernel.asm	/^f01006a2:	80 3d 34 42 2c f0 00 	cmpb   $0x0,0xf02c4234$/;"	l
f01006a9	obj/kern/kernel.asm	/^f01006a9:	74 11                	je     f01006bc <serial_intr+0x1a>$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	55                   	push   %ebp$/;"	l
f01006ac	obj/kern/kernel.asm	/^f01006ac:	89 e5                	mov    %esp,%ebp$/;"	l
f01006ae	obj/kern/kernel.asm	/^f01006ae:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006b1	obj/kern/kernel.asm	/^f01006b1:	b8 50 03 10 f0       	mov    $0xf0100350,%eax$/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	e8 b1 fc ff ff       	call   f010036c <cons_intr>$/;"	l
f01006bb	obj/kern/kernel.asm	/^f01006bb:	c9                   	leave  $/;"	l
f01006bc	obj/kern/kernel.asm	/^f01006bc:	f3 c3                	repz ret $/;"	l
f01006be	obj/kern/kernel.asm	/^f01006be <kbd_intr>:$/;"	l
f01006be	obj/kern/kernel.asm	/^f01006be:	55                   	push   %ebp$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	b8 b0 03 10 f0       	mov    $0xf01003b0,%eax$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	e8 9e fc ff ff       	call   f010036c <cons_intr>$/;"	l
f01006ce	obj/kern/kernel.asm	/^f01006ce:	c9                   	leave  $/;"	l
f01006cf	obj/kern/kernel.asm	/^f01006cf:	c3                   	ret    $/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0 <cons_getc>:$/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0:	55                   	push   %ebp$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01006d3	obj/kern/kernel.asm	/^f01006d3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	e8 c7 ff ff ff       	call   f01006a2 <serial_intr>$/;"	l
f01006db	obj/kern/kernel.asm	/^f01006db:	e8 de ff ff ff       	call   f01006be <kbd_intr>$/;"	l
f01006e0	obj/kern/kernel.asm	/^f01006e0:	a1 20 42 2c f0       	mov    0xf02c4220,%eax$/;"	l
f01006e5	obj/kern/kernel.asm	/^f01006e5:	3b 05 24 42 2c f0    	cmp    0xf02c4224,%eax$/;"	l
f01006eb	obj/kern/kernel.asm	/^f01006eb:	74 26                	je     f0100713 <cons_getc+0x43>$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	89 15 20 42 2c f0    	mov    %edx,0xf02c4220$/;"	l
f01006f6	obj/kern/kernel.asm	/^f01006f6:	0f b6 88 20 40 2c f0 	movzbl -0xfd3bfe0(%eax),%ecx$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	89 c8                	mov    %ecx,%eax$/;"	l
f01006ff	obj/kern/kernel.asm	/^f01006ff:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	75 11                	jne    f0100718 <cons_getc+0x48>$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	c7 05 20 42 2c f0 00 	movl   $0x0,0xf02c4220$/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	00 00 00 $/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	eb 05                	jmp    f0100718 <cons_getc+0x48>$/;"	l
f0100713	obj/kern/kernel.asm	/^f0100713:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	c9                   	leave  $/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	c3                   	ret    $/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a <cons_init>:$/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a:	55                   	push   %ebp$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	89 e5                	mov    %esp,%ebp$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	57                   	push   %edi$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	56                   	push   %esi$/;"	l
f010071f	obj/kern/kernel.asm	/^f010071f:	53                   	push   %ebx$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f010072a	obj/kern/kernel.asm	/^f010072a:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	5a a5 $/;"	l
f0100733	obj/kern/kernel.asm	/^f0100733:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f010073a	obj/kern/kernel.asm	/^f010073a:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	74 11                	je     f0100751 <cons_init+0x37>$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	c7 05 30 42 2c f0 b4 	movl   $0x3b4,0xf02c4230$/;"	l
f0100747	obj/kern/kernel.asm	/^f0100747:	03 00 00 $/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	bf 00 00 0b f0       	mov    $0xf00b0000,%edi$/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f:	eb 16                	jmp    f0100767 <cons_init+0x4d>$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	c7 05 30 42 2c f0 d4 	movl   $0x3d4,0xf02c4230$/;"	l
f010075f	obj/kern/kernel.asm	/^f010075f:	03 00 00 $/;"	l
f0100762	obj/kern/kernel.asm	/^f0100762:	bf 00 80 0b f0       	mov    $0xf00b8000,%edi$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	8b 0d 30 42 2c f0    	mov    0xf02c4230,%ecx$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100772	obj/kern/kernel.asm	/^f0100772:	89 ca                	mov    %ecx,%edx$/;"	l
f0100774	obj/kern/kernel.asm	/^f0100774:	ee                   	out    %al,(%dx)$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	89 da                	mov    %ebx,%edx$/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	ec                   	in     (%dx),%al$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	0f b6 f0             	movzbl %al,%esi$/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f0100781	obj/kern/kernel.asm	/^f0100781:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100786	obj/kern/kernel.asm	/^f0100786:	89 ca                	mov    %ecx,%edx$/;"	l
f0100788	obj/kern/kernel.asm	/^f0100788:	ee                   	out    %al,(%dx)$/;"	l
f0100789	obj/kern/kernel.asm	/^f0100789:	89 da                	mov    %ebx,%edx$/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b:	ec                   	in     (%dx),%al$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	89 3d 2c 42 2c f0    	mov    %edi,0xf02c422c$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	09 de                	or     %ebx,%esi$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	66 89 35 28 42 2c f0 	mov    %si,0xf02c4228$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	e8 1b ff ff ff       	call   f01006be <kbd_intr>$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	0f b7 05 a8 63 12 f0 	movzwl 0xf01263a8,%eax$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	e8 01 3d 00 00       	call   f01044b8 <irq_setmask_8259A>$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	ba fa 03 00 00       	mov    $0x3fa,%edx$/;"	l
f01007bc	obj/kern/kernel.asm	/^f01007bc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	ee                   	out    %al,(%dx)$/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	b2 fb                	mov    $0xfb,%dl$/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	ee                   	out    %al,(%dx)$/;"	l
f01007ca	obj/kern/kernel.asm	/^f01007ca:	b2 f8                	mov    $0xf8,%dl$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	ee                   	out    %al,(%dx)$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01007d4	obj/kern/kernel.asm	/^f01007d4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007d9	obj/kern/kernel.asm	/^f01007d9:	ee                   	out    %al,(%dx)$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	b2 fb                	mov    $0xfb,%dl$/;"	l
f01007dc	obj/kern/kernel.asm	/^f01007dc:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01007e1	obj/kern/kernel.asm	/^f01007e1:	ee                   	out    %al,(%dx)$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	b2 fc                	mov    $0xfc,%dl$/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007e9	obj/kern/kernel.asm	/^f01007e9:	ee                   	out    %al,(%dx)$/;"	l
f01007ea	obj/kern/kernel.asm	/^f01007ea:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01007ec	obj/kern/kernel.asm	/^f01007ec:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1:	ee                   	out    %al,(%dx)$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	b2 fd                	mov    $0xfd,%dl$/;"	l
f01007f4	obj/kern/kernel.asm	/^f01007f4:	ec                   	in     (%dx),%al$/;"	l
f01007f5	obj/kern/kernel.asm	/^f01007f5:	3c ff                	cmp    $0xff,%al$/;"	l
f01007f7	obj/kern/kernel.asm	/^f01007f7:	0f 95 c1             	setne  %cl$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	88 0d 34 42 2c f0    	mov    %cl,0xf02c4234$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	b2 fa                	mov    $0xfa,%dl$/;"	l
f0100802	obj/kern/kernel.asm	/^f0100802:	ec                   	in     (%dx),%al$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	b2 f8                	mov    $0xf8,%dl$/;"	l
f0100805	obj/kern/kernel.asm	/^f0100805:	ec                   	in     (%dx),%al$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	84 c9                	test   %cl,%cl$/;"	l
f0100808	obj/kern/kernel.asm	/^f0100808:	74 1d                	je     f0100827 <cons_init+0x10d>$/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	0f b7 05 a8 63 12 f0 	movzwl 0xf01263a8,%eax$/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	e8 9a 3c 00 00       	call   f01044b8 <irq_setmask_8259A>$/;"	l
f010081e	obj/kern/kernel.asm	/^f010081e:	80 3d 34 42 2c f0 00 	cmpb   $0x0,0xf02c4234$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	75 0c                	jne    f0100833 <cons_init+0x119>$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	c7 04 24 a8 81 10 f0 	movl   $0xf01081a8,(%esp)$/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e:	e8 d7 3d 00 00       	call   f010460a <cprintf>$/;"	l
f0100833	obj/kern/kernel.asm	/^f0100833:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	5b                   	pop    %ebx$/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837:	5e                   	pop    %esi$/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838:	5f                   	pop    %edi$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	5d                   	pop    %ebp$/;"	l
f010083a	obj/kern/kernel.asm	/^f010083a:	c3                   	ret    $/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b <cputchar>:$/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b:	55                   	push   %ebp$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	89 e5                	mov    %esp,%ebp$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100844	obj/kern/kernel.asm	/^f0100844:	e8 70 fc ff ff       	call   f01004b9 <cons_putc>$/;"	l
f0100849	obj/kern/kernel.asm	/^f0100849:	c9                   	leave  $/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	c3                   	ret    $/;"	l
f010084b	obj/kern/kernel.asm	/^f010084b <getchar>:$/;"	l
f010084b	obj/kern/kernel.asm	/^f010084b:	55                   	push   %ebp$/;"	l
f010084c	obj/kern/kernel.asm	/^f010084c:	89 e5                	mov    %esp,%ebp$/;"	l
f010084e	obj/kern/kernel.asm	/^f010084e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	e8 7a fe ff ff       	call   f01006d0 <cons_getc>$/;"	l
f0100856	obj/kern/kernel.asm	/^f0100856:	85 c0                	test   %eax,%eax$/;"	l
f0100858	obj/kern/kernel.asm	/^f0100858:	74 f7                	je     f0100851 <getchar+0x6>$/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	c9                   	leave  $/;"	l
f010085b	obj/kern/kernel.asm	/^f010085b:	c3                   	ret    $/;"	l
f010085c	obj/kern/kernel.asm	/^f010085c <iscons>:$/;"	l
f010085c	obj/kern/kernel.asm	/^f010085c:	55                   	push   %ebp$/;"	l
f010085d	obj/kern/kernel.asm	/^f010085d:	89 e5                	mov    %esp,%ebp$/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100864	obj/kern/kernel.asm	/^f0100864:	5d                   	pop    %ebp$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	c3                   	ret    $/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	66 90                	xchg   %ax,%ax$/;"	l
f0100868	obj/kern/kernel.asm	/^f0100868:	66 90                	xchg   %ax,%ax$/;"	l
f010086a	obj/kern/kernel.asm	/^f010086a:	66 90                	xchg   %ax,%ax$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	66 90                	xchg   %ax,%ax$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	66 90                	xchg   %ax,%ax$/;"	l
f0100870	obj/kern/kernel.asm	/^f0100870 <changeperms>:$/;"	l
f0100870	obj/kern/kernel.asm	/^f0100870:	55                   	push   %ebp$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	89 e5                	mov    %esp,%ebp$/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100878	obj/kern/kernel.asm	/^f0100878:	5d                   	pop    %ebp$/;"	l
f0100879	obj/kern/kernel.asm	/^f0100879:	c3                   	ret    $/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a <mon_help>:$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	55                   	push   %ebp$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	89 e5                	mov    %esp,%ebp$/;"	l
f010087d	obj/kern/kernel.asm	/^f010087d:	56                   	push   %esi$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	53                   	push   %ebx$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882:	bb e4 87 10 f0       	mov    $0xf01087e4,%ebx$/;"	l
f0100887	obj/kern/kernel.asm	/^f0100887:	be 50 88 10 f0       	mov    $0xf0108850,%esi$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	8b 03                	mov    (%ebx),%eax$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892:	8b 43 fc             	mov    -0x4(%ebx),%eax$/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100899	obj/kern/kernel.asm	/^f0100899:	c7 04 24 00 84 10 f0 	movl   $0xf0108400,(%esp)$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	e8 65 3d 00 00       	call   f010460a <cprintf>$/;"	l
f01008a5	obj/kern/kernel.asm	/^f01008a5:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01008a8	obj/kern/kernel.asm	/^f01008a8:	39 f3                	cmp    %esi,%ebx$/;"	l
f01008aa	obj/kern/kernel.asm	/^f01008aa:	75 e0                	jne    f010088c <mon_help+0x12>$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	5b                   	pop    %ebx$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	5e                   	pop    %esi$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	5d                   	pop    %ebp$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	c3                   	ret    $/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8 <mon_kerninfo>:$/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8:	55                   	push   %ebp$/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01008bb	obj/kern/kernel.asm	/^f01008bb:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	c7 04 24 09 84 10 f0 	movl   $0xf0108409,(%esp)$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	e8 40 3d 00 00       	call   f010460a <cprintf>$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f01008d1	obj/kern/kernel.asm	/^f01008d1:	00 $/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	c7 04 24 38 85 10 f0 	movl   $0xf0108538,(%esp)$/;"	l
f01008d9	obj/kern/kernel.asm	/^f01008d9:	e8 2c 3d 00 00       	call   f010460a <cprintf>$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	00 $/;"	l
f01008e6	obj/kern/kernel.asm	/^f01008e6:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f01008ed	obj/kern/kernel.asm	/^f01008ed:	f0 $/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	c7 04 24 60 85 10 f0 	movl   $0xf0108560,(%esp)$/;"	l
f01008f5	obj/kern/kernel.asm	/^f01008f5:	e8 10 3d 00 00       	call   f010460a <cprintf>$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	c7 44 24 08 87 80 10 	movl   $0x108087,0x8(%esp)$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	00 $/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	c7 44 24 04 87 80 10 	movl   $0xf0108087,0x4(%esp)$/;"	l
f0100909	obj/kern/kernel.asm	/^f0100909:	f0 $/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	c7 04 24 84 85 10 f0 	movl   $0xf0108584,(%esp)$/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	e8 f4 3c 00 00       	call   f010460a <cprintf>$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	c7 44 24 08 d7 35 2c 	movl   $0x2c35d7,0x8(%esp)$/;"	l
f010091d	obj/kern/kernel.asm	/^f010091d:	00 $/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	c7 44 24 04 d7 35 2c 	movl   $0xf02c35d7,0x4(%esp)$/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	f0 $/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	c7 04 24 a8 85 10 f0 	movl   $0xf01085a8,(%esp)$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	e8 d8 3c 00 00       	call   f010460a <cprintf>$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	c7 44 24 08 c8 d4 30 	movl   $0x30d4c8,0x8(%esp)$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	00 $/;"	l
f010093a	obj/kern/kernel.asm	/^f010093a:	c7 44 24 04 c8 d4 30 	movl   $0xf030d4c8,0x4(%esp)$/;"	l
f0100941	obj/kern/kernel.asm	/^f0100941:	f0 $/;"	l
f0100942	obj/kern/kernel.asm	/^f0100942:	c7 04 24 cc 85 10 f0 	movl   $0xf01085cc,(%esp)$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	e8 bc 3c 00 00       	call   f010460a <cprintf>$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	b8 c7 d8 30 f0       	mov    $0xf030d8c7,%eax$/;"	l
f0100953	obj/kern/kernel.asm	/^f0100953:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100958	obj/kern/kernel.asm	/^f0100958:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f010095d	obj/kern/kernel.asm	/^f010095d:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f0100963	obj/kern/kernel.asm	/^f0100963:	85 c0                	test   %eax,%eax$/;"	l
f0100965	obj/kern/kernel.asm	/^f0100965:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f010096b	obj/kern/kernel.asm	/^f010096b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f:	c7 04 24 f0 85 10 f0 	movl   $0xf01085f0,(%esp)$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	e8 8f 3c 00 00       	call   f010460a <cprintf>$/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100980	obj/kern/kernel.asm	/^f0100980:	c9                   	leave  $/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	c3                   	ret    $/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982 <mon_backtrace>:$/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982:	55                   	push   %ebp$/;"	l
f0100983	obj/kern/kernel.asm	/^f0100983:	89 e5                	mov    %esp,%ebp$/;"	l
f0100985	obj/kern/kernel.asm	/^f0100985:	56                   	push   %esi$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	53                   	push   %ebx$/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	83 ec 50             	sub    $0x50,%esp$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	89 eb                	mov    %ebp,%ebx$/;"	l
f010098c	obj/kern/kernel.asm	/^f010098c:	c7 04 24 22 84 10 f0 	movl   $0xf0108422,(%esp)$/;"	l
f0100993	obj/kern/kernel.asm	/^f0100993:	e8 72 3c 00 00       	call   f010460a <cprintf>$/;"	l
f0100998	obj/kern/kernel.asm	/^f0100998:	8d 75 e0             	lea    -0x20(%ebp),%esi$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	e9 ab 00 00 00       	jmp    f0100a4b <mon_backtrace+0xc9>$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01009a4	obj/kern/kernel.asm	/^f01009a4:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	e8 44 54 00 00       	call   f0105df3 <debuginfo_eip>$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	c7 44 24 04 36 84 10 	movl   $0xf0108436,0x4(%esp)$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	f0 $/;"	l
f01009b7	obj/kern/kernel.asm	/^f01009b7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01009ba	obj/kern/kernel.asm	/^f01009ba:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	e8 9a 5e 00 00       	call   f010685c <strcmp>$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	85 c0                	test   %eax,%eax$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	74 14                	je     f01009df <mon_backtrace+0x5d>$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f01009ce	obj/kern/kernel.asm	/^f01009ce:	eb 07                	jmp    f01009d7 <mon_backtrace+0x55>$/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0:	88 44 15 d1          	mov    %al,-0x2f(%ebp,%edx,1)$/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4:	83 c2 01             	add    $0x1,%edx$/;"	l
f01009d7	obj/kern/kernel.asm	/^f01009d7:	0f b6 04 11          	movzbl (%ecx,%edx,1),%eax$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	3c 3a                	cmp    $0x3a,%al$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	75 f1                	jne    f01009d0 <mon_backtrace+0x4e>$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	c6 44 15 d1 00       	movb   $0x0,-0x2f(%ebp,%edx,1)$/;"	l
f01009e4	obj/kern/kernel.asm	/^f01009e4:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f01009f2	obj/kern/kernel.asm	/^f01009f2:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01009f5	obj/kern/kernel.asm	/^f01009f5:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f01009fc	obj/kern/kernel.asm	/^f01009fc:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100a0e	obj/kern/kernel.asm	/^f0100a0e:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100a12	obj/kern/kernel.asm	/^f0100a12:	c7 04 24 1c 86 10 f0 	movl   $0xf010861c,(%esp)$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	e8 ec 3b 00 00       	call   f010460a <cprintf>$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100a21	obj/kern/kernel.asm	/^f0100a21:	2b 45 f0             	sub    -0x10(%ebp),%eax$/;"	l
f0100a24	obj/kern/kernel.asm	/^f0100a24:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100a28	obj/kern/kernel.asm	/^f0100a28:	8d 45 d1             	lea    -0x2f(%ebp),%eax$/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100a2f	obj/kern/kernel.asm	/^f0100a2f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100a36	obj/kern/kernel.asm	/^f0100a36:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a3d	obj/kern/kernel.asm	/^f0100a3d:	c7 04 24 40 84 10 f0 	movl   $0xf0108440,(%esp)$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	e8 c1 3b 00 00       	call   f010460a <cprintf>$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b:	85 db                	test   %ebx,%ebx$/;"	l
f0100a4d	obj/kern/kernel.asm	/^f0100a4d:	0f 85 4d ff ff ff    	jne    f01009a0 <mon_backtrace+0x1e>$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a58	obj/kern/kernel.asm	/^f0100a58:	83 c4 50             	add    $0x50,%esp$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	5b                   	pop    %ebx$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	5e                   	pop    %esi$/;"	l
f0100a5d	obj/kern/kernel.asm	/^f0100a5d:	5d                   	pop    %ebp$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	c3                   	ret    $/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f <showmappings>:$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	55                   	push   %ebp$/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	56                   	push   %esi$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	53                   	push   %ebx$/;"	l
f0100a64	obj/kern/kernel.asm	/^f0100a64:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	74 44                	je     f0100ab4 <showmappings+0x55>$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	00 $/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	00 $/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a86	obj/kern/kernel.asm	/^f0100a86:	e8 98 5f 00 00       	call   f0106a23 <strtol>$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	89 c6                	mov    %eax,%esi$/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0100a94	obj/kern/kernel.asm	/^f0100a94:	00 $/;"	l
f0100a95	obj/kern/kernel.asm	/^f0100a95:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	00 $/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	e8 7b 5f 00 00       	call   f0106a23 <strtol>$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100aac	obj/kern/kernel.asm	/^f0100aac:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	e8 ad 0a 00 00       	call   f0101561 <show_mappings>$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ab9	obj/kern/kernel.asm	/^f0100ab9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100abc	obj/kern/kernel.asm	/^f0100abc:	5b                   	pop    %ebx$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	5e                   	pop    %esi$/;"	l
f0100abe	obj/kern/kernel.asm	/^f0100abe:	5d                   	pop    %ebp$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	c3                   	ret    $/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0 <clearperms>:$/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0:	55                   	push   %ebp$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)$/;"	l
f0100aca	obj/kern/kernel.asm	/^f0100aca:	7e 0e                	jle    f0100ada <clearperms+0x1a>$/;"	l
f0100acc	obj/kern/kernel.asm	/^f0100acc:	c7 04 24 50 86 10 f0 	movl   $0xf0108650,(%esp)$/;"	l
f0100ad3	obj/kern/kernel.asm	/^f0100ad3:	e8 32 3b 00 00       	call   f010460a <cprintf>$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	eb 0e                	jmp    f0100ae8 <clearperms+0x28>$/;"	l
f0100ada	obj/kern/kernel.asm	/^f0100ada:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100ae0	obj/kern/kernel.asm	/^f0100ae0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ae3	obj/kern/kernel.asm	/^f0100ae3:	e8 5d 0b 00 00       	call   f0101645 <clear_perms>$/;"	l
f0100ae8	obj/kern/kernel.asm	/^f0100ae8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100aed	obj/kern/kernel.asm	/^f0100aed:	c9                   	leave  $/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	c3                   	ret    $/;"	l
f0100aef	obj/kern/kernel.asm	/^f0100aef <dump>:$/;"	l
f0100aef	obj/kern/kernel.asm	/^f0100aef:	55                   	push   %ebp$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	89 e5                	mov    %esp,%ebp$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	56                   	push   %esi$/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	53                   	push   %ebx$/;"	l
f0100af4	obj/kern/kernel.asm	/^f0100af4:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100af7	obj/kern/kernel.asm	/^f0100af7:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	74 4b                	je     f0100b4b <dump+0x5c>$/;"	l
f0100b00	obj/kern/kernel.asm	/^f0100b00:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	00 $/;"	l
f0100b08	obj/kern/kernel.asm	/^f0100b08:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	00 $/;"	l
f0100b10	obj/kern/kernel.asm	/^f0100b10:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b16	obj/kern/kernel.asm	/^f0100b16:	e8 08 5f 00 00       	call   f0106a23 <strtol>$/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b:	89 c6                	mov    %eax,%esi$/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	00 $/;"	l
f0100b25	obj/kern/kernel.asm	/^f0100b25:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100b2c	obj/kern/kernel.asm	/^f0100b2c:	00 $/;"	l
f0100b2d	obj/kern/kernel.asm	/^f0100b2d:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100b30	obj/kern/kernel.asm	/^f0100b30:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	e8 eb 5e 00 00       	call   f0106a23 <strtol>$/;"	l
f0100b38	obj/kern/kernel.asm	/^f0100b38:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b3c	obj/kern/kernel.asm	/^f0100b3c:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100b3f	obj/kern/kernel.asm	/^f0100b3f:	e8 60 0b 00 00       	call   f01016a4 <dump_mem>$/;"	l
f0100b44	obj/kern/kernel.asm	/^f0100b44:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	eb 05                	jmp    f0100b50 <dump+0x61>$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b53	obj/kern/kernel.asm	/^f0100b53:	5b                   	pop    %ebx$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	5e                   	pop    %esi$/;"	l
f0100b55	obj/kern/kernel.asm	/^f0100b55:	5d                   	pop    %ebp$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	c3                   	ret    $/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57 <truncate_func_name>:$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	55                   	push   %ebp$/;"	l
f0100b58	obj/kern/kernel.asm	/^f0100b58:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a:	53                   	push   %ebx$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	c7 04 24 4f 84 10 f0 	movl   $0xf010844f,(%esp)$/;"	l
f0100b6c	obj/kern/kernel.asm	/^f0100b6c:	e8 99 3a 00 00       	call   f010460a <cprintf>$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100b76	obj/kern/kernel.asm	/^f0100b76:	eb 03                	jmp    f0100b7b <truncate_func_name+0x24>$/;"	l
f0100b78	obj/kern/kernel.asm	/^f0100b78:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	80 3c 03 3a          	cmpb   $0x3a,(%ebx,%eax,1)$/;"	l
f0100b7f	obj/kern/kernel.asm	/^f0100b7f:	75 f7                	jne    f0100b78 <truncate_func_name+0x21>$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100b89	obj/kern/kernel.asm	/^f0100b89:	c7 04 24 08 93 10 f0 	movl   $0xf0109308,(%esp)$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	e8 5d 5c 00 00       	call   f01067f2 <strncpy>$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	b8 08 93 10 f0       	mov    $0xf0109308,%eax$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	5b                   	pop    %ebx$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	5d                   	pop    %ebp$/;"	l
f0100b9f	obj/kern/kernel.asm	/^f0100b9f:	c3                   	ret    $/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0 <check_perm>:$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	55                   	push   %ebp$/;"	l
f0100ba1	obj/kern/kernel.asm	/^f0100ba1:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	53                   	push   %ebx$/;"	l
f0100ba4	obj/kern/kernel.asm	/^f0100ba4:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	c7 44 24 04 61 84 10 	movl   $0xf0108461,0x4(%esp)$/;"	l
f0100bb1	obj/kern/kernel.asm	/^f0100bb1:	f0 $/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5:	e8 a2 5c 00 00       	call   f010685c <strcmp>$/;"	l
f0100bba	obj/kern/kernel.asm	/^f0100bba:	85 c0                	test   %eax,%eax$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	75 0b                	jne    f0100bc9 <check_perm+0x29>$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	eb 3c                	jmp    f0100c05 <check_perm+0x65>$/;"	l
f0100bc9	obj/kern/kernel.asm	/^f0100bc9:	c7 44 24 04 67 84 10 	movl   $0xf0108467,0x4(%esp)$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	f0 $/;"	l
f0100bd1	obj/kern/kernel.asm	/^f0100bd1:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100bd4	obj/kern/kernel.asm	/^f0100bd4:	e8 83 5c 00 00       	call   f010685c <strcmp>$/;"	l
f0100bd9	obj/kern/kernel.asm	/^f0100bd9:	85 c0                	test   %eax,%eax$/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	75 0b                	jne    f0100be8 <check_perm+0x48>$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	eb 1d                	jmp    f0100c05 <check_perm+0x65>$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	c7 44 24 04 6d 84 10 	movl   $0xf010846d,0x4(%esp)$/;"	l
f0100bef	obj/kern/kernel.asm	/^f0100bef:	f0 $/;"	l
f0100bf0	obj/kern/kernel.asm	/^f0100bf0:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	e8 64 5c 00 00       	call   f010685c <strcmp>$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	85 c0                	test   %eax,%eax$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	75 09                	jne    f0100c05 <check_perm+0x65>$/;"	l
f0100bfc	obj/kern/kernel.asm	/^f0100bfc:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
f0100c05	obj/kern/kernel.asm	/^f0100c05:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	5b                   	pop    %ebx$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	5d                   	pop    %ebp$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	c3                   	ret    $/;"	l
f0100c0b	obj/kern/kernel.asm	/^f0100c0b <setperms>:$/;"	l
f0100c0b	obj/kern/kernel.asm	/^f0100c0b:	55                   	push   %ebp$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c0e	obj/kern/kernel.asm	/^f0100c0e:	57                   	push   %edi$/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	56                   	push   %esi$/;"	l
f0100c10	obj/kern/kernel.asm	/^f0100c10:	53                   	push   %ebx$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0100c14	obj/kern/kernel.asm	/^f0100c14:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100c1a	obj/kern/kernel.asm	/^f0100c1a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	bb 02 00 00 00       	mov    $0x2,%ebx$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	8d 7d dc             	lea    -0x24(%ebp),%edi$/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a:	eb 20                	jmp    f0100c5c <setperms+0x51>$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0100c40	obj/kern/kernel.asm	/^f0100c40:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100c4e	obj/kern/kernel.asm	/^f0100c4e:	8b 04 9e             	mov    (%esi,%ebx,4),%eax$/;"	l
f0100c51	obj/kern/kernel.asm	/^f0100c51:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	e8 47 ff ff ff       	call   f0100ba0 <check_perm>$/;"	l
f0100c59	obj/kern/kernel.asm	/^f0100c59:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	3b 5d 08             	cmp    0x8(%ebp),%ebx$/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	7e db                	jle    f0100c3c <setperms+0x31>$/;"	l
f0100c61	obj/kern/kernel.asm	/^f0100c61:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100c68	obj/kern/kernel.asm	/^f0100c68:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100c6b	obj/kern/kernel.asm	/^f0100c6b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100c72	obj/kern/kernel.asm	/^f0100c72:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100c76	obj/kern/kernel.asm	/^f0100c76:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c7c	obj/kern/kernel.asm	/^f0100c7c:	e8 85 09 00 00       	call   f0101606 <set_perms>$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0100c89	obj/kern/kernel.asm	/^f0100c89:	5b                   	pop    %ebx$/;"	l
f0100c8a	obj/kern/kernel.asm	/^f0100c8a:	5e                   	pop    %esi$/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	5f                   	pop    %edi$/;"	l
f0100c8c	obj/kern/kernel.asm	/^f0100c8c:	5d                   	pop    %ebp$/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	c3                   	ret    $/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e <monitor>:$/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e:	55                   	push   %ebp$/;"	l
f0100c8f	obj/kern/kernel.asm	/^f0100c8f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	57                   	push   %edi$/;"	l
f0100c92	obj/kern/kernel.asm	/^f0100c92:	56                   	push   %esi$/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	53                   	push   %ebx$/;"	l
f0100c94	obj/kern/kernel.asm	/^f0100c94:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100c97	obj/kern/kernel.asm	/^f0100c97:	c7 04 24 84 86 10 f0 	movl   $0xf0108684,(%esp)$/;"	l
f0100c9e	obj/kern/kernel.asm	/^f0100c9e:	e8 67 39 00 00       	call   f010460a <cprintf>$/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	c7 04 24 a8 86 10 f0 	movl   $0xf01086a8,(%esp)$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	e8 5b 39 00 00       	call   f010460a <cprintf>$/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	74 0b                	je     f0100cc0 <monitor+0x32>$/;"	l
f0100cb5	obj/kern/kernel.asm	/^f0100cb5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	e8 a8 3a 00 00       	call   f0104768 <print_trapframe>$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	c7 04 24 a8 86 10 f0 	movl   $0xf01086a8,(%esp)$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	e8 3e 39 00 00       	call   f010460a <cprintf>$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	c7 04 24 73 84 10 f0 	movl   $0xf0108473,(%esp)$/;"	l
f0100cd3	obj/kern/kernel.asm	/^f0100cd3:	e8 b8 59 00 00       	call   f0106690 <readline>$/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	89 c3                	mov    %eax,%ebx$/;"	l
f0100cda	obj/kern/kernel.asm	/^f0100cda:	85 c0                	test   %eax,%eax$/;"	l
f0100cdc	obj/kern/kernel.asm	/^f0100cdc:	74 ee                	je     f0100ccc <monitor+0x3e>$/;"	l
f0100cde	obj/kern/kernel.asm	/^f0100cde:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100ce5	obj/kern/kernel.asm	/^f0100ce5:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	eb 0a                	jmp    f0100cf6 <monitor+0x68>$/;"	l
f0100cec	obj/kern/kernel.asm	/^f0100cec:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100cef	obj/kern/kernel.asm	/^f0100cef:	89 f7                	mov    %esi,%edi$/;"	l
f0100cf1	obj/kern/kernel.asm	/^f0100cf1:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100cf4	obj/kern/kernel.asm	/^f0100cf4:	89 fe                	mov    %edi,%esi$/;"	l
f0100cf6	obj/kern/kernel.asm	/^f0100cf6:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100cf9	obj/kern/kernel.asm	/^f0100cf9:	84 c0                	test   %al,%al$/;"	l
f0100cfb	obj/kern/kernel.asm	/^f0100cfb:	74 63                	je     f0100d60 <monitor+0xd2>$/;"	l
f0100cfd	obj/kern/kernel.asm	/^f0100cfd:	0f be c0             	movsbl %al,%eax$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04:	c7 04 24 77 84 10 f0 	movl   $0xf0108477,(%esp)$/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b:	e8 aa 5b 00 00       	call   f01068ba <strchr>$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	85 c0                	test   %eax,%eax$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	75 d8                	jne    f0100cec <monitor+0x5e>$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100d17	obj/kern/kernel.asm	/^f0100d17:	74 47                	je     f0100d60 <monitor+0xd2>$/;"	l
f0100d19	obj/kern/kernel.asm	/^f0100d19:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	75 16                	jne    f0100d34 <monitor+0xa6>$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	00 $/;"	l
f0100d26	obj/kern/kernel.asm	/^f0100d26:	c7 04 24 7c 84 10 f0 	movl   $0xf010847c,(%esp)$/;"	l
f0100d2d	obj/kern/kernel.asm	/^f0100d2d:	e8 d8 38 00 00       	call   f010460a <cprintf>$/;"	l
f0100d32	obj/kern/kernel.asm	/^f0100d32:	eb 98                	jmp    f0100ccc <monitor+0x3e>$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100d37	obj/kern/kernel.asm	/^f0100d37:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	eb 03                	jmp    f0100d40 <monitor+0xb2>$/;"	l
f0100d3d	obj/kern/kernel.asm	/^f0100d3d:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43:	84 c0                	test   %al,%al$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	74 ad                	je     f0100cf4 <monitor+0x66>$/;"	l
f0100d47	obj/kern/kernel.asm	/^f0100d47:	0f be c0             	movsbl %al,%eax$/;"	l
f0100d4a	obj/kern/kernel.asm	/^f0100d4a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	c7 04 24 77 84 10 f0 	movl   $0xf0108477,(%esp)$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	e8 60 5b 00 00       	call   f01068ba <strchr>$/;"	l
f0100d5a	obj/kern/kernel.asm	/^f0100d5a:	85 c0                	test   %eax,%eax$/;"	l
f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	74 df                	je     f0100d3d <monitor+0xaf>$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	eb 94                	jmp    f0100cf4 <monitor+0x66>$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100d67	obj/kern/kernel.asm	/^f0100d67:	00 $/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	85 f6                	test   %esi,%esi$/;"	l
f0100d6a	obj/kern/kernel.asm	/^f0100d6a:	0f 84 5c ff ff ff    	je     f0100ccc <monitor+0x3e>$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100d78	obj/kern/kernel.asm	/^f0100d78:	8b 04 85 e0 87 10 f0 	mov    -0xfef7820(,%eax,4),%eax$/;"	l
f0100d7f	obj/kern/kernel.asm	/^f0100d7f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100d86	obj/kern/kernel.asm	/^f0100d86:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	e8 ce 5a 00 00       	call   f010685c <strcmp>$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	85 c0                	test   %eax,%eax$/;"	l
f0100d90	obj/kern/kernel.asm	/^f0100d90:	75 24                	jne    f0100db6 <monitor+0x128>$/;"	l
f0100d92	obj/kern/kernel.asm	/^f0100d92:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100d95	obj/kern/kernel.asm	/^f0100d95:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100d98	obj/kern/kernel.asm	/^f0100d98:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	8d 4d a8             	lea    -0x58(%ebp),%ecx$/;"	l
f0100d9f	obj/kern/kernel.asm	/^f0100d9f:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0100da3	obj/kern/kernel.asm	/^f0100da3:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100da6	obj/kern/kernel.asm	/^f0100da6:	ff 14 85 e8 87 10 f0 	call   *-0xfef7818(,%eax,4)$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	85 c0                	test   %eax,%eax$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	78 25                	js     f0100dd6 <monitor+0x148>$/;"	l
f0100db1	obj/kern/kernel.asm	/^f0100db1:	e9 16 ff ff ff       	jmp    f0100ccc <monitor+0x3e>$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100db9	obj/kern/kernel.asm	/^f0100db9:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0100dbc	obj/kern/kernel.asm	/^f0100dbc:	75 b7                	jne    f0100d75 <monitor+0xe7>$/;"	l
f0100dbe	obj/kern/kernel.asm	/^f0100dbe:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	c7 04 24 99 84 10 f0 	movl   $0xf0108499,(%esp)$/;"	l
f0100dcc	obj/kern/kernel.asm	/^f0100dcc:	e8 39 38 00 00       	call   f010460a <cprintf>$/;"	l
f0100dd1	obj/kern/kernel.asm	/^f0100dd1:	e9 f6 fe ff ff       	jmp    f0100ccc <monitor+0x3e>$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	5b                   	pop    %ebx$/;"	l
f0100dda	obj/kern/kernel.asm	/^f0100dda:	5e                   	pop    %esi$/;"	l
f0100ddb	obj/kern/kernel.asm	/^f0100ddb:	5f                   	pop    %edi$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	5d                   	pop    %ebp$/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	c3                   	ret    $/;"	l
f0100dde	obj/kern/kernel.asm	/^f0100dde:	66 90                	xchg   %ax,%ax$/;"	l
f0100de0	obj/kern/kernel.asm	/^f0100de0 <page2kva>:$/;"	l
f0100de0	obj/kern/kernel.asm	/^f0100de0:	2b 05 a4 4e 2c f0    	sub    0xf02c4ea4,%eax$/;"	l
f0100de6	obj/kern/kernel.asm	/^f0100de6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100de9	obj/kern/kernel.asm	/^f0100de9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	89 c2                	mov    %eax,%edx$/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100df1	obj/kern/kernel.asm	/^f0100df1:	3b 15 9c 4e 2c f0    	cmp    0xf02c4e9c,%edx$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	72 26                	jb     f0100e1f <page2kva+0x3f>$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	55                   	push   %ebp$/;"	l
f0100dfa	obj/kern/kernel.asm	/^f0100dfa:	89 e5                	mov    %esp,%ebp$/;"	l
f0100dfc	obj/kern/kernel.asm	/^f0100dfc:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100e03	obj/kern/kernel.asm	/^f0100e03:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f0100e0a	obj/kern/kernel.asm	/^f0100e0a:	f0 $/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	00 $/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	c7 04 24 29 92 10 f0 	movl   $0xf0109229,(%esp)$/;"	l
f0100e1a	obj/kern/kernel.asm	/^f0100e1a:	e8 7e f2 ff ff       	call   f010009d <_panic>$/;"	l
f0100e1f	obj/kern/kernel.asm	/^f0100e1f:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	c3                   	ret    $/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25 <check_va2pa>:$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	89 d1                	mov    %edx,%ecx$/;"	l
f0100e27	obj/kern/kernel.asm	/^f0100e27:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100e2a	obj/kern/kernel.asm	/^f0100e2a:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100e2d	obj/kern/kernel.asm	/^f0100e2d:	a8 01                	test   $0x1,%al$/;"	l
f0100e2f	obj/kern/kernel.asm	/^f0100e2f:	74 5d                	je     f0100e8e <check_va2pa+0x69>$/;"	l
f0100e31	obj/kern/kernel.asm	/^f0100e31:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100e36	obj/kern/kernel.asm	/^f0100e36:	89 c1                	mov    %eax,%ecx$/;"	l
f0100e38	obj/kern/kernel.asm	/^f0100e38:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	3b 0d 9c 4e 2c f0    	cmp    0xf02c4e9c,%ecx$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	72 26                	jb     f0100e69 <check_va2pa+0x44>$/;"	l
f0100e43	obj/kern/kernel.asm	/^f0100e43:	55                   	push   %ebp$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f0100e54	obj/kern/kernel.asm	/^f0100e54:	f0 $/;"	l
f0100e55	obj/kern/kernel.asm	/^f0100e55:	c7 44 24 04 12 04 00 	movl   $0x412,0x4(%esp)$/;"	l
f0100e5c	obj/kern/kernel.asm	/^f0100e5c:	00 $/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	e8 34 f2 ff ff       	call   f010009d <_panic>$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100e79	obj/kern/kernel.asm	/^f0100e79:	89 c2                	mov    %eax,%edx$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	85 d2                	test   %edx,%edx$/;"	l
f0100e85	obj/kern/kernel.asm	/^f0100e85:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100e8a	obj/kern/kernel.asm	/^f0100e8a:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	c3                   	ret    $/;"	l
f0100e8e	obj/kern/kernel.asm	/^f0100e8e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	c3                   	ret    $/;"	l
f0100e94	obj/kern/kernel.asm	/^f0100e94 <boot_alloc>:$/;"	l
f0100e94	obj/kern/kernel.asm	/^f0100e94:	55                   	push   %ebp$/;"	l
f0100e95	obj/kern/kernel.asm	/^f0100e95:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e97	obj/kern/kernel.asm	/^f0100e97:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100e9a	obj/kern/kernel.asm	/^f0100e9a:	89 c1                	mov    %eax,%ecx$/;"	l
f0100e9c	obj/kern/kernel.asm	/^f0100e9c:	8b 15 38 42 2c f0    	mov    0xf02c4238,%edx$/;"	l
f0100ea2	obj/kern/kernel.asm	/^f0100ea2:	85 d2                	test   %edx,%edx$/;"	l
f0100ea4	obj/kern/kernel.asm	/^f0100ea4:	75 7b                	jne    f0100f21 <boot_alloc+0x8d>$/;"	l
f0100ea6	obj/kern/kernel.asm	/^f0100ea6:	b8 c7 e4 30 f0       	mov    $0xf030e4c7,%eax$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	a3 38 42 2c f0       	mov    %eax,0xf02c4238$/;"	l
f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	85 c9                	test   %ecx,%ecx$/;"	l
f0100eb7	obj/kern/kernel.asm	/^f0100eb7:	74 7c                	je     f0100f35 <boot_alloc+0xa1>$/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	8d 14 08             	lea    (%eax,%ecx,1),%edx$/;"	l
f0100ebc	obj/kern/kernel.asm	/^f0100ebc:	89 15 38 42 2c f0    	mov    %edx,0xf02c4238$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	8b 0d 9c 4e 2c f0    	mov    0xf02c4e9c,%ecx$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	77 20                	ja     f0100ef3 <boot_alloc+0x5f>$/;"	l
f0100ed3	obj/kern/kernel.asm	/^f0100ed3:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100ed7	obj/kern/kernel.asm	/^f0100ed7:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede:	f0 $/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	c7 44 24 04 b0 00 00 	movl   $0xb0,0x4(%esp)$/;"	l
f0100ee6	obj/kern/kernel.asm	/^f0100ee6:	00 $/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	e8 aa f1 ff ff       	call   f010009d <_panic>$/;"	l
f0100ef3	obj/kern/kernel.asm	/^f0100ef3:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f0100ef9	obj/kern/kernel.asm	/^f0100ef9:	39 d1                	cmp    %edx,%ecx$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	73 38                	jae    f0100f35 <boot_alloc+0xa1>$/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd:	c7 44 24 0c 4c 88 10 	movl   $0xf010884c,0xc(%esp)$/;"	l
f0100f04	obj/kern/kernel.asm	/^f0100f04:	f0 $/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0100f0c	obj/kern/kernel.asm	/^f0100f0c:	f0 $/;"	l
f0100f0d	obj/kern/kernel.asm	/^f0100f0d:	c7 44 24 04 b0 00 00 	movl   $0xb0,0x4(%esp)$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	00 $/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0100f1c	obj/kern/kernel.asm	/^f0100f1c:	e8 7c f1 ff ff       	call   f010009d <_panic>$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	8d 82 ff 0f 00 00    	lea    0xfff(%edx),%eax$/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	a3 38 42 2c f0       	mov    %eax,0xf02c4238$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	85 c9                	test   %ecx,%ecx$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	75 84                	jne    f0100eb9 <boot_alloc+0x25>$/;"	l
f0100f35	obj/kern/kernel.asm	/^f0100f35:	c9                   	leave  $/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	c3                   	ret    $/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37 <check_page_free_list>:$/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37:	55                   	push   %ebp$/;"	l
f0100f38	obj/kern/kernel.asm	/^f0100f38:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	57                   	push   %edi$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	56                   	push   %esi$/;"	l
f0100f3c	obj/kern/kernel.asm	/^f0100f3c:	53                   	push   %ebx$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	84 c0                	test   %al,%al$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	0f 85 31 03 00 00    	jne    f0101279 <check_page_free_list+0x342>$/;"	l
f0100f48	obj/kern/kernel.asm	/^f0100f48:	e9 3e 03 00 00       	jmp    f010128b <check_page_free_list+0x354>$/;"	l
f0100f4d	obj/kern/kernel.asm	/^f0100f4d:	c7 44 24 08 70 88 10 	movl   $0xf0108870,0x8(%esp)$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54:	f0 $/;"	l
f0100f55	obj/kern/kernel.asm	/^f0100f55:	c7 44 24 04 44 03 00 	movl   $0x344,0x4(%esp)$/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	00 $/;"	l
f0100f5d	obj/kern/kernel.asm	/^f0100f5d:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	e8 34 f1 ff ff       	call   f010009d <_panic>$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100f6f	obj/kern/kernel.asm	/^f0100f6f:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100f72	obj/kern/kernel.asm	/^f0100f72:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100f75	obj/kern/kernel.asm	/^f0100f75:	89 c2                	mov    %eax,%edx$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	2b 15 a4 4e 2c f0    	sub    0xf02c4ea4,%edx$/;"	l
f0100f7d	obj/kern/kernel.asm	/^f0100f7d:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	0f 95 c2             	setne  %dl$/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100f8d	obj/kern/kernel.asm	/^f0100f8d:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100f93	obj/kern/kernel.asm	/^f0100f93:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	85 c0                	test   %eax,%eax$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	75 dc                	jne    f0100f75 <check_page_free_list+0x3e>$/;"	l
f0100f99	obj/kern/kernel.asm	/^f0100f99:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	89 10                	mov    %edx,(%eax)$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100fad	obj/kern/kernel.asm	/^f0100fad:	a3 40 42 2c f0       	mov    %eax,0xf02c4240$/;"	l
f0100fb2	obj/kern/kernel.asm	/^f0100fb2:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	8b 1d 40 42 2c f0    	mov    0xf02c4240,%ebx$/;"	l
f0100fbd	obj/kern/kernel.asm	/^f0100fbd:	eb 63                	jmp    f0101022 <check_page_free_list+0xeb>$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	89 d8                	mov    %ebx,%eax$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	2b 05 a4 4e 2c f0    	sub    0xf02c4ea4,%eax$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100fca	obj/kern/kernel.asm	/^f0100fca:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	89 c2                	mov    %eax,%edx$/;"	l
f0100fcf	obj/kern/kernel.asm	/^f0100fcf:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	39 f2                	cmp    %esi,%edx$/;"	l
f0100fd4	obj/kern/kernel.asm	/^f0100fd4:	73 4a                	jae    f0101020 <check_page_free_list+0xe9>$/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	89 c2                	mov    %eax,%edx$/;"	l
f0100fd8	obj/kern/kernel.asm	/^f0100fd8:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	3b 15 9c 4e 2c f0    	cmp    0xf02c4e9c,%edx$/;"	l
f0100fe1	obj/kern/kernel.asm	/^f0100fe1:	72 20                	jb     f0101003 <check_page_free_list+0xcc>$/;"	l
f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f0100fee	obj/kern/kernel.asm	/^f0100fee:	f0 $/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	00 $/;"	l
f0100ff7	obj/kern/kernel.asm	/^f0100ff7:	c7 04 24 29 92 10 f0 	movl   $0xf0109229,(%esp)$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	e8 9a f0 ff ff       	call   f010009d <_panic>$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f010100a	obj/kern/kernel.asm	/^f010100a:	00 $/;"	l
f010100b	obj/kern/kernel.asm	/^f010100b:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0101012	obj/kern/kernel.asm	/^f0101012:	00 $/;"	l
f0101013	obj/kern/kernel.asm	/^f0101013:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010101b	obj/kern/kernel.asm	/^f010101b:	e8 d7 58 00 00       	call   f01068f7 <memset>$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0101022	obj/kern/kernel.asm	/^f0101022:	85 db                	test   %ebx,%ebx$/;"	l
f0101024	obj/kern/kernel.asm	/^f0101024:	75 99                	jne    f0100fbf <check_page_free_list+0x88>$/;"	l
f0101026	obj/kern/kernel.asm	/^f0101026:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010102b	obj/kern/kernel.asm	/^f010102b:	e8 64 fe ff ff       	call   f0100e94 <boot_alloc>$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0101033	obj/kern/kernel.asm	/^f0101033:	8b 15 40 42 2c f0    	mov    0xf02c4240,%edx$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	8b 0d a4 4e 2c f0    	mov    0xf02c4ea4,%ecx$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	a1 9c 4e 2c f0       	mov    0xf02c4e9c,%eax$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0101047	obj/kern/kernel.asm	/^f0101047:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0101050	obj/kern/kernel.asm	/^f0101050:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0101055	obj/kern/kernel.asm	/^f0101055:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0101058	obj/kern/kernel.asm	/^f0101058:	e9 c4 01 00 00       	jmp    f0101221 <check_page_free_list+0x2ea>$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0101060	obj/kern/kernel.asm	/^f0101060:	73 24                	jae    f0101086 <check_page_free_list+0x14f>$/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062:	c7 44 24 0c 58 92 10 	movl   $0xf0109258,0xc(%esp)$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	f0 $/;"	l
f010106a	obj/kern/kernel.asm	/^f010106a:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	f0 $/;"	l
f0101072	obj/kern/kernel.asm	/^f0101072:	c7 44 24 04 5e 03 00 	movl   $0x35e,0x4(%esp)$/;"	l
f0101079	obj/kern/kernel.asm	/^f0101079:	00 $/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081:	e8 17 f0 ff ff       	call   f010009d <_panic>$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	72 24                	jb     f01010af <check_page_free_list+0x178>$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	c7 44 24 0c 64 92 10 	movl   $0xf0109264,0xc(%esp)$/;"	l
f0101092	obj/kern/kernel.asm	/^f0101092:	f0 $/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	f0 $/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	c7 44 24 04 5f 03 00 	movl   $0x35f,0x4(%esp)$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	00 $/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	e8 ee ef ff ff       	call   f010009d <_panic>$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	89 d0                	mov    %edx,%eax$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f01010b4	obj/kern/kernel.asm	/^f01010b4:	a8 07                	test   $0x7,%al$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	74 24                	je     f01010dc <check_page_free_list+0x1a5>$/;"	l
f01010b8	obj/kern/kernel.asm	/^f01010b8:	c7 44 24 0c 94 88 10 	movl   $0xf0108894,0xc(%esp)$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	f0 $/;"	l
f01010c0	obj/kern/kernel.asm	/^f01010c0:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01010c7	obj/kern/kernel.asm	/^f01010c7:	f0 $/;"	l
f01010c8	obj/kern/kernel.asm	/^f01010c8:	c7 44 24 04 60 03 00 	movl   $0x360,0x4(%esp)$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	00 $/;"	l
f01010d0	obj/kern/kernel.asm	/^f01010d0:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01010d7	obj/kern/kernel.asm	/^f01010d7:	e8 c1 ef ff ff       	call   f010009d <_panic>$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01010e2	obj/kern/kernel.asm	/^f01010e2:	85 c0                	test   %eax,%eax$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	75 24                	jne    f010110a <check_page_free_list+0x1d3>$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	c7 44 24 0c 78 92 10 	movl   $0xf0109278,0xc(%esp)$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	f0 $/;"	l
f01010ee	obj/kern/kernel.asm	/^f01010ee:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01010f5	obj/kern/kernel.asm	/^f01010f5:	f0 $/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	c7 44 24 04 63 03 00 	movl   $0x363,0x4(%esp)$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	00 $/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	e8 93 ef ff ff       	call   f010009d <_panic>$/;"	l
f010110a	obj/kern/kernel.asm	/^f010110a:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	75 24                	jne    f0101135 <check_page_free_list+0x1fe>$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	c7 44 24 0c 89 92 10 	movl   $0xf0109289,0xc(%esp)$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	f0 $/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101120	obj/kern/kernel.asm	/^f0101120:	f0 $/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	c7 44 24 04 64 03 00 	movl   $0x364,0x4(%esp)$/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	00 $/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	e8 68 ef ff ff       	call   f010009d <_panic>$/;"	l
f0101135	obj/kern/kernel.asm	/^f0101135:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a:	75 24                	jne    f0101160 <check_page_free_list+0x229>$/;"	l
f010113c	obj/kern/kernel.asm	/^f010113c:	c7 44 24 0c c8 88 10 	movl   $0xf01088c8,0xc(%esp)$/;"	l
f0101143	obj/kern/kernel.asm	/^f0101143:	f0 $/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	f0 $/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	c7 44 24 04 65 03 00 	movl   $0x365,0x4(%esp)$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	00 $/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	e8 3d ef ff ff       	call   f010009d <_panic>$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0101165	obj/kern/kernel.asm	/^f0101165:	75 24                	jne    f010118b <check_page_free_list+0x254>$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	c7 44 24 0c a2 92 10 	movl   $0xf01092a2,0xc(%esp)$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	f0 $/;"	l
f010116f	obj/kern/kernel.asm	/^f010116f:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	f0 $/;"	l
f0101177	obj/kern/kernel.asm	/^f0101177:	c7 44 24 04 66 03 00 	movl   $0x366,0x4(%esp)$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	00 $/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	e8 12 ef ff ff       	call   f010009d <_panic>$/;"	l
f010118b	obj/kern/kernel.asm	/^f010118b:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0101190	obj/kern/kernel.asm	/^f0101190:	0f 86 1c 01 00 00    	jbe    f01012b2 <check_page_free_list+0x37b>$/;"	l
f0101196	obj/kern/kernel.asm	/^f0101196:	89 c1                	mov    %eax,%ecx$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	39 4d c4             	cmp    %ecx,-0x3c(%ebp)$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	77 20                	ja     f01011c0 <check_page_free_list+0x289>$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01011a4	obj/kern/kernel.asm	/^f01011a4:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	f0 $/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01011b3	obj/kern/kernel.asm	/^f01011b3:	00 $/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	c7 04 24 29 92 10 f0 	movl   $0xf0109229,(%esp)$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	e8 dd ee ff ff       	call   f010009d <_panic>$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	8d 88 00 00 00 f0    	lea    -0x10000000(%eax),%ecx$/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9:	0f 86 d3 00 00 00    	jbe    f01012a2 <check_page_free_list+0x36b>$/;"	l
f01011cf	obj/kern/kernel.asm	/^f01011cf:	c7 44 24 0c ec 88 10 	movl   $0xf01088ec,0xc(%esp)$/;"	l
f01011d6	obj/kern/kernel.asm	/^f01011d6:	f0 $/;"	l
f01011d7	obj/kern/kernel.asm	/^f01011d7:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	f0 $/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	c7 44 24 04 67 03 00 	movl   $0x367,0x4(%esp)$/;"	l
f01011e6	obj/kern/kernel.asm	/^f01011e6:	00 $/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01011ee	obj/kern/kernel.asm	/^f01011ee:	e8 aa ee ff ff       	call   f010009d <_panic>$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	c7 44 24 0c bc 92 10 	movl   $0xf01092bc,0xc(%esp)$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	f0 $/;"	l
f01011fb	obj/kern/kernel.asm	/^f01011fb:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101202	obj/kern/kernel.asm	/^f0101202:	f0 $/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	c7 44 24 04 69 03 00 	movl   $0x369,0x4(%esp)$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	00 $/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	e8 86 ee ff ff       	call   f010009d <_panic>$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	eb 03                	jmp    f010121f <check_page_free_list+0x2e8>$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	83 c7 01             	add    $0x1,%edi$/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	8b 12                	mov    (%edx),%edx$/;"	l
f0101221	obj/kern/kernel.asm	/^f0101221:	85 d2                	test   %edx,%edx$/;"	l
f0101223	obj/kern/kernel.asm	/^f0101223:	0f 85 34 fe ff ff    	jne    f010105d <check_page_free_list+0x126>$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	85 db                	test   %ebx,%ebx$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	7f 24                	jg     f0101251 <check_page_free_list+0x31a>$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	c7 44 24 0c d9 92 10 	movl   $0xf01092d9,0xc(%esp)$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	f0 $/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010123c	obj/kern/kernel.asm	/^f010123c:	f0 $/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	c7 44 24 04 71 03 00 	movl   $0x371,0x4(%esp)$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	00 $/;"	l
f0101245	obj/kern/kernel.asm	/^f0101245:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	e8 4c ee ff ff       	call   f010009d <_panic>$/;"	l
f0101251	obj/kern/kernel.asm	/^f0101251:	85 ff                	test   %edi,%edi$/;"	l
f0101253	obj/kern/kernel.asm	/^f0101253:	7f 70                	jg     f01012c5 <check_page_free_list+0x38e>$/;"	l
f0101255	obj/kern/kernel.asm	/^f0101255:	c7 44 24 0c eb 92 10 	movl   $0xf01092eb,0xc(%esp)$/;"	l
f010125c	obj/kern/kernel.asm	/^f010125c:	f0 $/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101264	obj/kern/kernel.asm	/^f0101264:	f0 $/;"	l
f0101265	obj/kern/kernel.asm	/^f0101265:	c7 44 24 04 72 03 00 	movl   $0x372,0x4(%esp)$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	00 $/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	e8 24 ee ff ff       	call   f010009d <_panic>$/;"	l
f0101279	obj/kern/kernel.asm	/^f0101279:	a1 40 42 2c f0       	mov    0xf02c4240,%eax$/;"	l
f010127e	obj/kern/kernel.asm	/^f010127e:	85 c0                	test   %eax,%eax$/;"	l
f0101280	obj/kern/kernel.asm	/^f0101280:	0f 85 e3 fc ff ff    	jne    f0100f69 <check_page_free_list+0x32>$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	e9 c2 fc ff ff       	jmp    f0100f4d <check_page_free_list+0x16>$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	83 3d 40 42 2c f0 00 	cmpl   $0x0,0xf02c4240$/;"	l
f0101292	obj/kern/kernel.asm	/^f0101292:	0f 84 b5 fc ff ff    	je     f0100f4d <check_page_free_list+0x16>$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f010129d	obj/kern/kernel.asm	/^f010129d:	e9 15 fd ff ff       	jmp    f0100fb7 <check_page_free_list+0x80>$/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f01012a7	obj/kern/kernel.asm	/^f01012a7:	0f 85 6f ff ff ff    	jne    f010121c <check_page_free_list+0x2e5>$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	e9 41 ff ff ff       	jmp    f01011f3 <check_page_free_list+0x2bc>$/;"	l
f01012b2	obj/kern/kernel.asm	/^f01012b2:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	0f 85 5a ff ff ff    	jne    f0101217 <check_page_free_list+0x2e0>$/;"	l
f01012bd	obj/kern/kernel.asm	/^f01012bd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01012c0	obj/kern/kernel.asm	/^f01012c0:	e9 2e ff ff ff       	jmp    f01011f3 <check_page_free_list+0x2bc>$/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f01012c8	obj/kern/kernel.asm	/^f01012c8:	5b                   	pop    %ebx$/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9:	5e                   	pop    %esi$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	5f                   	pop    %edi$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	5d                   	pop    %ebp$/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	c3                   	ret    $/;"	l
f01012cd	obj/kern/kernel.asm	/^f01012cd <page_init>:$/;"	l
f01012cd	obj/kern/kernel.asm	/^f01012cd:	55                   	push   %ebp$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	89 e5                	mov    %esp,%ebp$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	53                   	push   %ebx$/;"	l
f01012d1	obj/kern/kernel.asm	/^f01012d1:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	a1 a4 4e 2c f0       	mov    0xf02c4ea4,%eax$/;"	l
f01012d9	obj/kern/kernel.asm	/^f01012d9:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	e9 8d 00 00 00       	jmp    f0101376 <page_init+0xa9>$/;"	l
f01012e9	obj/kern/kernel.asm	/^f01012e9:	8d 83 60 ff ff ff    	lea    -0xa0(%ebx),%eax$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	83 f8 5f             	cmp    $0x5f,%eax$/;"	l
f01012f2	obj/kern/kernel.asm	/^f01012f2:	76 4a                	jbe    f010133e <page_init+0x71>$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	83 fb 07             	cmp    $0x7,%ebx$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	74 45                	je     f010133e <page_init+0x71>$/;"	l
f01012f9	obj/kern/kernel.asm	/^f01012f9:	81 fb ff 00 00 00    	cmp    $0xff,%ebx$/;"	l
f01012ff	obj/kern/kernel.asm	/^f01012ff:	76 4a                	jbe    f010134b <page_init+0x7e>$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101306	obj/kern/kernel.asm	/^f0101306:	e8 89 fb ff ff       	call   f0100e94 <boot_alloc>$/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	77 20                	ja     f0101332 <page_init+0x65>$/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f010131d	obj/kern/kernel.asm	/^f010131d:	f0 $/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	c7 44 24 04 a8 01 00 	movl   $0x1a8,0x4(%esp)$/;"	l
f0101325	obj/kern/kernel.asm	/^f0101325:	00 $/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	e8 6b ed ff ff       	call   f010009d <_panic>$/;"	l
f0101332	obj/kern/kernel.asm	/^f0101332:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	39 c3                	cmp    %eax,%ebx$/;"	l
f010133c	obj/kern/kernel.asm	/^f010133c:	73 0d                	jae    f010134b <page_init+0x7e>$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	a1 a4 4e 2c f0       	mov    0xf02c4ea4,%eax$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	eb 28                	jmp    f0101373 <page_init+0xa6>$/;"	l
f010134b	obj/kern/kernel.asm	/^f010134b:	8d 04 dd 00 00 00 00 	lea    0x0(,%ebx,8),%eax$/;"	l
f0101352	obj/kern/kernel.asm	/^f0101352:	89 c2                	mov    %eax,%edx$/;"	l
f0101354	obj/kern/kernel.asm	/^f0101354:	03 15 a4 4e 2c f0    	add    0xf02c4ea4,%edx$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	66 c7 42 04 00 00    	movw   $0x0,0x4(%edx)$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	8b 0d 40 42 2c f0    	mov    0xf02c4240,%ecx$/;"	l
f0101366	obj/kern/kernel.asm	/^f0101366:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0101368	obj/kern/kernel.asm	/^f0101368:	03 05 a4 4e 2c f0    	add    0xf02c4ea4,%eax$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	a3 40 42 2c f0       	mov    %eax,0xf02c4240$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	3b 1d 9c 4e 2c f0    	cmp    0xf02c4e9c,%ebx$/;"	l
f010137c	obj/kern/kernel.asm	/^f010137c:	0f 82 67 ff ff ff    	jb     f01012e9 <page_init+0x1c>$/;"	l
f0101382	obj/kern/kernel.asm	/^f0101382:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101385	obj/kern/kernel.asm	/^f0101385:	5b                   	pop    %ebx$/;"	l
f0101386	obj/kern/kernel.asm	/^f0101386:	5d                   	pop    %ebp$/;"	l
f0101387	obj/kern/kernel.asm	/^f0101387:	c3                   	ret    $/;"	l
f0101388	obj/kern/kernel.asm	/^f0101388 <get_unallocated_page>:$/;"	l
f0101388	obj/kern/kernel.asm	/^f0101388:	55                   	push   %ebp$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	89 e5                	mov    %esp,%ebp$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	a1 40 42 2c f0       	mov    0xf02c4240,%eax$/;"	l
f0101390	obj/kern/kernel.asm	/^f0101390:	85 c0                	test   %eax,%eax$/;"	l
f0101392	obj/kern/kernel.asm	/^f0101392:	74 08                	je     f010139c <get_unallocated_page+0x14>$/;"	l
f0101394	obj/kern/kernel.asm	/^f0101394:	8b 10                	mov    (%eax),%edx$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	89 15 40 42 2c f0    	mov    %edx,0xf02c4240$/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c:	5d                   	pop    %ebp$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	c3                   	ret    $/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e <page_alloc>:$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	55                   	push   %ebp$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	89 e5                	mov    %esp,%ebp$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	53                   	push   %ebx$/;"	l
f01013a2	obj/kern/kernel.asm	/^f01013a2:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01013a5	obj/kern/kernel.asm	/^f01013a5:	e8 de ff ff ff       	call   f0101388 <get_unallocated_page>$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	89 c3                	mov    %eax,%ebx$/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	85 c0                	test   %eax,%eax$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	74 66                	je     f0101416 <page_alloc+0x78>$/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	74 56                	je     f010140c <page_alloc+0x6e>$/;"	l
f01013b6	obj/kern/kernel.asm	/^f01013b6:	2b 05 a4 4e 2c f0    	sub    0xf02c4ea4,%eax$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01013bf	obj/kern/kernel.asm	/^f01013bf:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01013c2	obj/kern/kernel.asm	/^f01013c2:	89 c2                	mov    %eax,%edx$/;"	l
f01013c4	obj/kern/kernel.asm	/^f01013c4:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01013c7	obj/kern/kernel.asm	/^f01013c7:	3b 15 9c 4e 2c f0    	cmp    0xf02c4e9c,%edx$/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	72 20                	jb     f01013ef <page_alloc+0x51>$/;"	l
f01013cf	obj/kern/kernel.asm	/^f01013cf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	f0 $/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01013e2	obj/kern/kernel.asm	/^f01013e2:	00 $/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	c7 04 24 29 92 10 f0 	movl   $0xf0109229,(%esp)$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	e8 ae ec ff ff       	call   f010009d <_panic>$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01013f6	obj/kern/kernel.asm	/^f01013f6:	00 $/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01013fe	obj/kern/kernel.asm	/^f01013fe:	00 $/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101404	obj/kern/kernel.asm	/^f0101404:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101407	obj/kern/kernel.asm	/^f0101407:	e8 eb 54 00 00       	call   f01068f7 <memset>$/;"	l
f010140c	obj/kern/kernel.asm	/^f010140c:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	89 d8                	mov    %ebx,%eax$/;"	l
f0101414	obj/kern/kernel.asm	/^f0101414:	eb 05                	jmp    f010141b <page_alloc+0x7d>$/;"	l
f0101416	obj/kern/kernel.asm	/^f0101416:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010141b	obj/kern/kernel.asm	/^f010141b:	83 c4 14             	add    $0x14,%esp$/;"	l
f010141e	obj/kern/kernel.asm	/^f010141e:	5b                   	pop    %ebx$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	5d                   	pop    %ebp$/;"	l
f0101420	obj/kern/kernel.asm	/^f0101420:	c3                   	ret    $/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421 <page_free>:$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	55                   	push   %ebp$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	89 e5                	mov    %esp,%ebp$/;"	l
f0101424	obj/kern/kernel.asm	/^f0101424:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010142a	obj/kern/kernel.asm	/^f010142a:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	75 05                	jne    f0101436 <page_free+0x15>$/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0101434	obj/kern/kernel.asm	/^f0101434:	74 1c                	je     f0101452 <page_free+0x31>$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	c7 44 24 08 34 89 10 	movl   $0xf0108934,0x8(%esp)$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	f0 $/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	c7 44 24 04 df 01 00 	movl   $0x1df,0x4(%esp)$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	00 $/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	e8 4b ec ff ff       	call   f010009d <_panic>$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	8b 15 40 42 2c f0    	mov    0xf02c4240,%edx$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	89 10                	mov    %edx,(%eax)$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	a3 40 42 2c f0       	mov    %eax,0xf02c4240$/;"	l
f010145f	obj/kern/kernel.asm	/^f010145f:	c9                   	leave  $/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	c3                   	ret    $/;"	l
f0101461	obj/kern/kernel.asm	/^f0101461 <page_decref>:$/;"	l
f0101461	obj/kern/kernel.asm	/^f0101461:	55                   	push   %ebp$/;"	l
f0101462	obj/kern/kernel.asm	/^f0101462:	89 e5                	mov    %esp,%ebp$/;"	l
f0101464	obj/kern/kernel.asm	/^f0101464:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	0f b7 48 04          	movzwl 0x4(%eax),%ecx$/;"	l
f010146e	obj/kern/kernel.asm	/^f010146e:	8d 51 ff             	lea    -0x1(%ecx),%edx$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101475	obj/kern/kernel.asm	/^f0101475:	66 85 d2             	test   %dx,%dx$/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	75 08                	jne    f0101482 <page_decref+0x21>$/;"	l
f010147a	obj/kern/kernel.asm	/^f010147a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010147d	obj/kern/kernel.asm	/^f010147d:	e8 9f ff ff ff       	call   f0101421 <page_free>$/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	c9                   	leave  $/;"	l
f0101483	obj/kern/kernel.asm	/^f0101483:	c3                   	ret    $/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484 <pgdir_walk>:$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	55                   	push   %ebp$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	89 e5                	mov    %esp,%ebp$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	56                   	push   %esi$/;"	l
f0101488	obj/kern/kernel.asm	/^f0101488:	53                   	push   %ebx$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010148f	obj/kern/kernel.asm	/^f010148f:	89 c3                	mov    %eax,%ebx$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f010149a	obj/kern/kernel.asm	/^f010149a:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f010149d	obj/kern/kernel.asm	/^f010149d:	8d 34 85 00 00 00 00 	lea    0x0(,%eax,4),%esi$/;"	l
f01014a4	obj/kern/kernel.asm	/^f01014a4:	03 75 08             	add    0x8(%ebp),%esi$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	8b 16                	mov    (%esi),%edx$/;"	l
f01014a9	obj/kern/kernel.asm	/^f01014a9:	f6 c2 01             	test   $0x1,%dl$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	74 3c                	je     f01014ea <pgdir_walk+0x66>$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	89 d0                	mov    %edx,%eax$/;"	l
f01014b6	obj/kern/kernel.asm	/^f01014b6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	3b 05 9c 4e 2c f0    	cmp    0xf02c4e9c,%eax$/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf:	72 20                	jb     f01014e1 <pgdir_walk+0x5d>$/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f01014cc	obj/kern/kernel.asm	/^f01014cc:	f0 $/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	c7 44 24 04 13 02 00 	movl   $0x213,0x4(%esp)$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	00 $/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01014dc	obj/kern/kernel.asm	/^f01014dc:	e8 bc eb ff ff       	call   f010009d <_panic>$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	8d 84 9a 00 00 00 f0 	lea    -0x10000000(%edx,%ebx,4),%eax$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	eb 70                	jmp    f010155a <pgdir_walk+0xd6>$/;"	l
f01014ea	obj/kern/kernel.asm	/^f01014ea:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	74 5e                	je     f010154e <pgdir_walk+0xca>$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01014f7	obj/kern/kernel.asm	/^f01014f7:	e8 a2 fe ff ff       	call   f010139e <page_alloc>$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	85 c0                	test   %eax,%eax$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	74 55                	je     f0101555 <pgdir_walk+0xd1>$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0101505	obj/kern/kernel.asm	/^f0101505:	2b 05 a4 4e 2c f0    	sub    0xf02c4ea4,%eax$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010150e	obj/kern/kernel.asm	/^f010150e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	89 c2                	mov    %eax,%edx$/;"	l
f0101513	obj/kern/kernel.asm	/^f0101513:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101516	obj/kern/kernel.asm	/^f0101516:	3b 15 9c 4e 2c f0    	cmp    0xf02c4e9c,%edx$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	72 20                	jb     f010153e <pgdir_walk+0xba>$/;"	l
f010151e	obj/kern/kernel.asm	/^f010151e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101522	obj/kern/kernel.asm	/^f0101522:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f0101529	obj/kern/kernel.asm	/^f0101529:	f0 $/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	c7 44 24 04 22 02 00 	movl   $0x222,0x4(%esp)$/;"	l
f0101531	obj/kern/kernel.asm	/^f0101531:	00 $/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101539	obj/kern/kernel.asm	/^f0101539:	e8 5f eb ff ff       	call   f010009d <_panic>$/;"	l
f010153e	obj/kern/kernel.asm	/^f010153e:	89 c2                	mov    %eax,%edx$/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	83 ca 07             	or     $0x7,%edx$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	89 16                	mov    %edx,(%esi)$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	8d 84 98 00 00 00 f0 	lea    -0x10000000(%eax,%ebx,4),%eax$/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	eb 0c                	jmp    f010155a <pgdir_walk+0xd6>$/;"	l
f010154e	obj/kern/kernel.asm	/^f010154e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	eb 05                	jmp    f010155a <pgdir_walk+0xd6>$/;"	l
f0101555	obj/kern/kernel.asm	/^f0101555:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010155d	obj/kern/kernel.asm	/^f010155d:	5b                   	pop    %ebx$/;"	l
f010155e	obj/kern/kernel.asm	/^f010155e:	5e                   	pop    %esi$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	5d                   	pop    %ebp$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	c3                   	ret    $/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561 <show_mappings>:$/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561:	55                   	push   %ebp$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	89 e5                	mov    %esp,%ebp$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	57                   	push   %edi$/;"	l
f0101565	obj/kern/kernel.asm	/^f0101565:	56                   	push   %esi$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	53                   	push   %ebx$/;"	l
f0101567	obj/kern/kernel.asm	/^f0101567:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010156a	obj/kern/kernel.asm	/^f010156a:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010156d	obj/kern/kernel.asm	/^f010156d:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	c7 04 24 80 89 10 f0 	movl   $0xf0108980,(%esp)$/;"	l
f0101577	obj/kern/kernel.asm	/^f0101577:	e8 8e 30 00 00       	call   f010460a <cprintf>$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	eb 7c                	jmp    f01015fa <show_mappings+0x99>$/;"	l
f010157e	obj/kern/kernel.asm	/^f010157e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	00 $/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010158a	obj/kern/kernel.asm	/^f010158a:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101592	obj/kern/kernel.asm	/^f0101592:	e8 ed fe ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f0101597	obj/kern/kernel.asm	/^f0101597:	89 da                	mov    %ebx,%edx$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f010159f	obj/kern/kernel.asm	/^f010159f:	8d 34 90             	lea    (%eax,%edx,4),%esi$/;"	l
f01015a2	obj/kern/kernel.asm	/^f01015a2:	8b 06                	mov    (%esi),%eax$/;"	l
f01015a4	obj/kern/kernel.asm	/^f01015a4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01015a8	obj/kern/kernel.asm	/^f01015a8:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01015ac	obj/kern/kernel.asm	/^f01015ac:	c7 04 24 fc 92 10 f0 	movl   $0xf01092fc,(%esp)$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	e8 52 30 00 00       	call   f010460a <cprintf>$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f01015bb	obj/kern/kernel.asm	/^f01015bb:	74 2e                	je     f01015eb <show_mappings+0x8a>$/;"	l
f01015bd	obj/kern/kernel.asm	/^f01015bd:	c7 04 24 27 95 10 f0 	movl   $0xf0109527,(%esp)$/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	e8 41 30 00 00       	call   f010460a <cprintf>$/;"	l
f01015c9	obj/kern/kernel.asm	/^f01015c9:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	74 1d                	je     f01015eb <show_mappings+0x8a>$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	c7 04 24 68 94 10 f0 	movl   $0xf0109468,(%esp)$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	e8 30 30 00 00       	call   f010460a <cprintf>$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f01015dd	obj/kern/kernel.asm	/^f01015dd:	74 0c                	je     f01015eb <show_mappings+0x8a>$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	c7 04 24 38 95 10 f0 	movl   $0xf0109538,(%esp)$/;"	l
f01015e6	obj/kern/kernel.asm	/^f01015e6:	e8 1f 30 00 00       	call   f010460a <cprintf>$/;"	l
f01015eb	obj/kern/kernel.asm	/^f01015eb:	83 c3 04             	add    $0x4,%ebx$/;"	l
f01015ee	obj/kern/kernel.asm	/^f01015ee:	c7 04 24 1b 95 10 f0 	movl   $0xf010951b,(%esp)$/;"	l
f01015f5	obj/kern/kernel.asm	/^f01015f5:	e8 10 30 00 00       	call   f010460a <cprintf>$/;"	l
f01015fa	obj/kern/kernel.asm	/^f01015fa:	39 fb                	cmp    %edi,%ebx$/;"	l
f01015fc	obj/kern/kernel.asm	/^f01015fc:	76 80                	jbe    f010157e <show_mappings+0x1d>$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101601	obj/kern/kernel.asm	/^f0101601:	5b                   	pop    %ebx$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	5e                   	pop    %esi$/;"	l
f0101603	obj/kern/kernel.asm	/^f0101603:	5f                   	pop    %edi$/;"	l
f0101604	obj/kern/kernel.asm	/^f0101604:	5d                   	pop    %ebp$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	c3                   	ret    $/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606 <set_perms>:$/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606:	55                   	push   %ebp$/;"	l
f0101607	obj/kern/kernel.asm	/^f0101607:	89 e5                	mov    %esp,%ebp$/;"	l
f0101609	obj/kern/kernel.asm	/^f0101609:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010160c	obj/kern/kernel.asm	/^f010160c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101613	obj/kern/kernel.asm	/^f0101613:	00 $/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101617	obj/kern/kernel.asm	/^f0101617:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010161b	obj/kern/kernel.asm	/^f010161b:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0101620	obj/kern/kernel.asm	/^f0101620:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	e8 5c fe ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f010162c	obj/kern/kernel.asm	/^f010162c:	74 03                	je     f0101631 <set_perms+0x2b>$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	83 08 04             	orl    $0x4,(%eax)$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101635	obj/kern/kernel.asm	/^f0101635:	74 03                	je     f010163a <set_perms+0x34>$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	83 08 01             	orl    $0x1,(%eax)$/;"	l
f010163a	obj/kern/kernel.asm	/^f010163a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	74 03                	je     f0101643 <set_perms+0x3d>$/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	83 08 02             	orl    $0x2,(%eax)$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	c9                   	leave  $/;"	l
f0101644	obj/kern/kernel.asm	/^f0101644:	c3                   	ret    $/;"	l
f0101645	obj/kern/kernel.asm	/^f0101645 <clear_perms>:$/;"	l
f0101645	obj/kern/kernel.asm	/^f0101645:	55                   	push   %ebp$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	89 e5                	mov    %esp,%ebp$/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010164b	obj/kern/kernel.asm	/^f010164b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101652	obj/kern/kernel.asm	/^f0101652:	00 $/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101656	obj/kern/kernel.asm	/^f0101656:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010165a	obj/kern/kernel.asm	/^f010165a:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101662	obj/kern/kernel.asm	/^f0101662:	e8 1d fe ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	c9                   	leave  $/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	c3                   	ret    $/;"	l
f010166f	obj/kern/kernel.asm	/^f010166f <change_perms>:$/;"	l
f010166f	obj/kern/kernel.asm	/^f010166f:	55                   	push   %ebp$/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	89 e5                	mov    %esp,%ebp$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	53                   	push   %ebx$/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101676	obj/kern/kernel.asm	/^f0101676:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0101679	obj/kern/kernel.asm	/^f0101679:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	e8 c4 ff ff ff       	call   f0101645 <clear_perms>$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101684	obj/kern/kernel.asm	/^f0101684:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101688	obj/kern/kernel.asm	/^f0101688:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101696	obj/kern/kernel.asm	/^f0101696:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101699	obj/kern/kernel.asm	/^f0101699:	e8 68 ff ff ff       	call   f0101606 <set_perms>$/;"	l
f010169e	obj/kern/kernel.asm	/^f010169e:	83 c4 14             	add    $0x14,%esp$/;"	l
f01016a1	obj/kern/kernel.asm	/^f01016a1:	5b                   	pop    %ebx$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	5d                   	pop    %ebp$/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	c3                   	ret    $/;"	l
f01016a4	obj/kern/kernel.asm	/^f01016a4 <dump_mem>:$/;"	l
f01016a4	obj/kern/kernel.asm	/^f01016a4:	55                   	push   %ebp$/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	56                   	push   %esi$/;"	l
f01016a8	obj/kern/kernel.asm	/^f01016a8:	53                   	push   %ebx$/;"	l
f01016a9	obj/kern/kernel.asm	/^f01016a9:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01016af	obj/kern/kernel.asm	/^f01016af:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01016b2	obj/kern/kernel.asm	/^f01016b2:	eb 43                	jmp    f01016f7 <dump_mem+0x53>$/;"	l
f01016b4	obj/kern/kernel.asm	/^f01016b4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	00 $/;"	l
f01016bc	obj/kern/kernel.asm	/^f01016bc:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01016c0	obj/kern/kernel.asm	/^f01016c0:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	e8 b7 fd ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	89 da                	mov    %ebx,%edx$/;"	l
f01016cf	obj/kern/kernel.asm	/^f01016cf:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
f01016d5	obj/kern/kernel.asm	/^f01016d5:	8b 04 90             	mov    (%eax,%edx,4),%eax$/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01016dc	obj/kern/kernel.asm	/^f01016dc:	c7 04 24 09 93 10 f0 	movl   $0xf0109309,(%esp)$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	e8 22 2f 00 00       	call   f010460a <cprintf>$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	83 c3 04             	add    $0x4,%ebx$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	c7 04 24 1b 95 10 f0 	movl   $0xf010951b,(%esp)$/;"	l
f01016f2	obj/kern/kernel.asm	/^f01016f2:	e8 13 2f 00 00       	call   f010460a <cprintf>$/;"	l
f01016f7	obj/kern/kernel.asm	/^f01016f7:	39 f3                	cmp    %esi,%ebx$/;"	l
f01016f9	obj/kern/kernel.asm	/^f01016f9:	76 b9                	jbe    f01016b4 <dump_mem+0x10>$/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016fe	obj/kern/kernel.asm	/^f01016fe:	5b                   	pop    %ebx$/;"	l
f01016ff	obj/kern/kernel.asm	/^f01016ff:	5e                   	pop    %esi$/;"	l
f0101700	obj/kern/kernel.asm	/^f0101700:	5d                   	pop    %ebp$/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	c3                   	ret    $/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702 <boot_map_region>:$/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	55                   	push   %ebp$/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	89 e5                	mov    %esp,%ebp$/;"	l
f0101705	obj/kern/kernel.asm	/^f0101705:	57                   	push   %edi$/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706:	56                   	push   %esi$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	53                   	push   %ebx$/;"	l
f0101708	obj/kern/kernel.asm	/^f0101708:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	89 c7                	mov    %eax,%edi$/;"	l
f010170d	obj/kern/kernel.asm	/^f010170d:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0101710	obj/kern/kernel.asm	/^f0101710:	89 d6                	mov    %edx,%esi$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	83 c8 01             	or     $0x1,%eax$/;"	l
f010171d	obj/kern/kernel.asm	/^f010171d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	eb 3f                	jmp    f0101761 <boot_map_region+0x5f>$/;"	l
f0101722	obj/kern/kernel.asm	/^f0101722:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101729	obj/kern/kernel.asm	/^f0101729:	00 $/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010172e	obj/kern/kernel.asm	/^f010172e:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101731	obj/kern/kernel.asm	/^f0101731:	e8 4e fd ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f0101736	obj/kern/kernel.asm	/^f0101736:	85 c0                	test   %eax,%eax$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	74 1b                	je     f0101755 <boot_map_region+0x53>$/;"	l
f010173a	obj/kern/kernel.asm	/^f010173a:	89 da                	mov    %ebx,%edx$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	03 55 08             	add    0x8(%ebp),%edx$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101745	obj/kern/kernel.asm	/^f0101745:	0b 55 e0             	or     -0x20(%ebp),%edx$/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748:	89 10                	mov    %edx,(%eax)$/;"	l
f010174a	obj/kern/kernel.asm	/^f010174a:	89 f0                	mov    %esi,%eax$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f010174f	obj/kern/kernel.asm	/^f010174f:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	09 0c 87             	or     %ecx,(%edi,%eax,4)$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0101761	obj/kern/kernel.asm	/^f0101761:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	72 bc                	jb     f0101722 <boot_map_region+0x20>$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101769	obj/kern/kernel.asm	/^f0101769:	5b                   	pop    %ebx$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	5e                   	pop    %esi$/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	5f                   	pop    %edi$/;"	l
f010176c	obj/kern/kernel.asm	/^f010176c:	5d                   	pop    %ebp$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	c3                   	ret    $/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e <page_lookup>:$/;"	l
f010176e	obj/kern/kernel.asm	/^f010176e:	55                   	push   %ebp$/;"	l
f010176f	obj/kern/kernel.asm	/^f010176f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	53                   	push   %ebx$/;"	l
f0101772	obj/kern/kernel.asm	/^f0101772:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	00 $/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101783	obj/kern/kernel.asm	/^f0101783:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010178d	obj/kern/kernel.asm	/^f010178d:	e8 f2 fc ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f0101792	obj/kern/kernel.asm	/^f0101792:	85 c0                	test   %eax,%eax$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	74 42                	je     f01017d8 <page_lookup+0x6a>$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	74 44                	je     f01017df <page_lookup+0x71>$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	85 db                	test   %ebx,%ebx$/;"	l
f010179d	obj/kern/kernel.asm	/^f010179d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	74 02                	je     f01017a4 <page_lookup+0x36>$/;"	l
f01017a2	obj/kern/kernel.asm	/^f01017a2:	89 03                	mov    %eax,(%ebx)$/;"	l
f01017a4	obj/kern/kernel.asm	/^f01017a4:	8b 00                	mov    (%eax),%eax$/;"	l
f01017a6	obj/kern/kernel.asm	/^f01017a6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01017a9	obj/kern/kernel.asm	/^f01017a9:	3b 05 9c 4e 2c f0    	cmp    0xf02c4e9c,%eax$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	72 1c                	jb     f01017cd <page_lookup+0x5f>$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	c7 44 24 08 b8 89 10 	movl   $0xf01089b8,0x8(%esp)$/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8:	f0 $/;"	l
f01017b9	obj/kern/kernel.asm	/^f01017b9:	c7 44 24 04 50 00 00 	movl   $0x50,0x4(%esp)$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	00 $/;"	l
f01017c1	obj/kern/kernel.asm	/^f01017c1:	c7 04 24 29 92 10 f0 	movl   $0xf0109229,(%esp)$/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	e8 d0 e8 ff ff       	call   f010009d <_panic>$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	8b 15 a4 4e 2c f0    	mov    0xf02c4ea4,%edx$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f01017d6	obj/kern/kernel.asm	/^f01017d6:	eb 0c                	jmp    f01017e4 <page_lookup+0x76>$/;"	l
f01017d8	obj/kern/kernel.asm	/^f01017d8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01017dd	obj/kern/kernel.asm	/^f01017dd:	eb 05                	jmp    f01017e4 <page_lookup+0x76>$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01017e4	obj/kern/kernel.asm	/^f01017e4:	83 c4 14             	add    $0x14,%esp$/;"	l
f01017e7	obj/kern/kernel.asm	/^f01017e7:	5b                   	pop    %ebx$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	5d                   	pop    %ebp$/;"	l
f01017e9	obj/kern/kernel.asm	/^f01017e9:	c3                   	ret    $/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea <tlb_invalidate>:$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	55                   	push   %ebp$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	89 e5                	mov    %esp,%ebp$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	e8 54 57 00 00       	call   f0106f49 <cpunum>$/;"	l
f01017f5	obj/kern/kernel.asm	/^f01017f5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	83 b8 28 50 2c f0 00 	cmpl   $0x0,-0xfd3afd8(%eax)$/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	74 16                	je     f0101817 <tlb_invalidate+0x2d>$/;"	l
f0101801	obj/kern/kernel.asm	/^f0101801:	e8 43 57 00 00       	call   f0106f49 <cpunum>$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101809	obj/kern/kernel.asm	/^f0101809:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f010180f	obj/kern/kernel.asm	/^f010180f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101812	obj/kern/kernel.asm	/^f0101812:	39 50 78             	cmp    %edx,0x78(%eax)$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	75 06                	jne    f010181d <tlb_invalidate+0x33>$/;"	l
f0101817	obj/kern/kernel.asm	/^f0101817:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010181a	obj/kern/kernel.asm	/^f010181a:	0f 01 38             	invlpg (%eax)$/;"	l
f010181d	obj/kern/kernel.asm	/^f010181d:	c9                   	leave  $/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	c3                   	ret    $/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f <page_remove>:$/;"	l
f010181f	obj/kern/kernel.asm	/^f010181f:	55                   	push   %ebp$/;"	l
f0101820	obj/kern/kernel.asm	/^f0101820:	89 e5                	mov    %esp,%ebp$/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	56                   	push   %esi$/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823:	53                   	push   %ebx$/;"	l
f0101824	obj/kern/kernel.asm	/^f0101824:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101830	obj/kern/kernel.asm	/^f0101830:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101834	obj/kern/kernel.asm	/^f0101834:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010183b	obj/kern/kernel.asm	/^f010183b:	e8 2e ff ff ff       	call   f010176e <page_lookup>$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	85 c0                	test   %eax,%eax$/;"	l
f0101842	obj/kern/kernel.asm	/^f0101842:	74 23                	je     f0101867 <page_remove+0x48>$/;"	l
f0101844	obj/kern/kernel.asm	/^f0101844:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101847	obj/kern/kernel.asm	/^f0101847:	e8 15 fc ff ff       	call   f0101461 <page_decref>$/;"	l
f010184c	obj/kern/kernel.asm	/^f010184c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0101850	obj/kern/kernel.asm	/^f0101850:	74 15                	je     f0101867 <page_remove+0x48>$/;"	l
f0101852	obj/kern/kernel.asm	/^f0101852:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101856	obj/kern/kernel.asm	/^f0101856:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	e8 8c ff ff ff       	call   f01017ea <tlb_invalidate>$/;"	l
f010185e	obj/kern/kernel.asm	/^f010185e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	83 c4 20             	add    $0x20,%esp$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	5b                   	pop    %ebx$/;"	l
f010186b	obj/kern/kernel.asm	/^f010186b:	5e                   	pop    %esi$/;"	l
f010186c	obj/kern/kernel.asm	/^f010186c:	5d                   	pop    %ebp$/;"	l
f010186d	obj/kern/kernel.asm	/^f010186d:	c3                   	ret    $/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e <page_insert>:$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	55                   	push   %ebp$/;"	l
f010186f	obj/kern/kernel.asm	/^f010186f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101871	obj/kern/kernel.asm	/^f0101871:	57                   	push   %edi$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	56                   	push   %esi$/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	53                   	push   %ebx$/;"	l
f0101874	obj/kern/kernel.asm	/^f0101874:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101877	obj/kern/kernel.asm	/^f0101877:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010187a	obj/kern/kernel.asm	/^f010187a:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	85 db                	test   %ebx,%ebx$/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	0f 84 8d 00 00 00    	je     f0101912 <page_insert+0xa4>$/;"	l
f0101885	obj/kern/kernel.asm	/^f0101885:	a1 a4 4e 2c f0       	mov    0xf02c4ea4,%eax$/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010188d	obj/kern/kernel.asm	/^f010188d:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	00 $/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010189f	obj/kern/kernel.asm	/^f010189f:	e8 e0 fb ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	89 c6                	mov    %eax,%esi$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	85 c0                	test   %eax,%eax$/;"	l
f01018a8	obj/kern/kernel.asm	/^f01018a8:	74 6f                	je     f0101919 <page_insert+0xab>$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	8b 00                	mov    (%eax),%eax$/;"	l
f01018ac	obj/kern/kernel.asm	/^f01018ac:	a8 01                	test   $0x1,%al$/;"	l
f01018ae	obj/kern/kernel.asm	/^f01018ae:	74 32                	je     f01018e2 <page_insert+0x74>$/;"	l
f01018b0	obj/kern/kernel.asm	/^f01018b0:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01018b5	obj/kern/kernel.asm	/^f01018b5:	89 fa                	mov    %edi,%edx$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	2b 55 e4             	sub    -0x1c(%ebp),%edx$/;"	l
f01018ba	obj/kern/kernel.asm	/^f01018ba:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01018bd	obj/kern/kernel.asm	/^f01018bd:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	39 d0                	cmp    %edx,%eax$/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	74 23                	je     f01018e7 <page_insert+0x79>$/;"	l
f01018c4	obj/kern/kernel.asm	/^f01018c4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01018c7	obj/kern/kernel.asm	/^f01018c7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01018ce	obj/kern/kernel.asm	/^f01018ce:	e8 4c ff ff ff       	call   f010181f <page_remove>$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01018d6	obj/kern/kernel.asm	/^f01018d6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	e8 08 ff ff ff       	call   f01017ea <tlb_invalidate>$/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	66 83 47 04 01       	addw   $0x1,0x4(%edi)$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	83 ca 01             	or     $0x1,%edx$/;"	l
f01018ed	obj/kern/kernel.asm	/^f01018ed:	89 f8                	mov    %edi,%eax$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	2b 05 a4 4e 2c f0    	sub    0xf02c4ea4,%eax$/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01018f8	obj/kern/kernel.asm	/^f01018f8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01018fb	obj/kern/kernel.asm	/^f01018fb:	09 d0                	or     %edx,%eax$/;"	l
f01018fd	obj/kern/kernel.asm	/^f01018fd:	89 06                	mov    %eax,(%esi)$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0101905	obj/kern/kernel.asm	/^f0101905:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f0101908	obj/kern/kernel.asm	/^f0101908:	09 0c 83             	or     %ecx,(%ebx,%eax,4)$/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101910	obj/kern/kernel.asm	/^f0101910:	eb 0c                	jmp    f010191e <page_insert+0xb0>$/;"	l
f0101912	obj/kern/kernel.asm	/^f0101912:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101917	obj/kern/kernel.asm	/^f0101917:	eb 05                	jmp    f010191e <page_insert+0xb0>$/;"	l
f0101919	obj/kern/kernel.asm	/^f0101919:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010191e	obj/kern/kernel.asm	/^f010191e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	5b                   	pop    %ebx$/;"	l
f0101922	obj/kern/kernel.asm	/^f0101922:	5e                   	pop    %esi$/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	5f                   	pop    %edi$/;"	l
f0101924	obj/kern/kernel.asm	/^f0101924:	5d                   	pop    %ebp$/;"	l
f0101925	obj/kern/kernel.asm	/^f0101925:	c3                   	ret    $/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926 <mmio_map_region>:$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	55                   	push   %ebp$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	89 e5                	mov    %esp,%ebp$/;"	l
f0101929	obj/kern/kernel.asm	/^f0101929:	53                   	push   %ebx$/;"	l
f010192a	obj/kern/kernel.asm	/^f010192a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101930	obj/kern/kernel.asm	/^f0101930:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f010193c	obj/kern/kernel.asm	/^f010193c:	8b 15 00 63 12 f0    	mov    0xf0126300,%edx$/;"	l
f0101942	obj/kern/kernel.asm	/^f0101942:	8d 04 13             	lea    (%ebx,%edx,1),%eax$/;"	l
f0101945	obj/kern/kernel.asm	/^f0101945:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	76 1c                	jbe    f0101968 <mmio_map_region+0x42>$/;"	l
f010194c	obj/kern/kernel.asm	/^f010194c:	c7 44 24 08 d8 89 10 	movl   $0xf01089d8,0x8(%esp)$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	f0 $/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	c7 44 24 04 ec 02 00 	movl   $0x2ec,0x4(%esp)$/;"	l
f010195b	obj/kern/kernel.asm	/^f010195b:	00 $/;"	l
f010195c	obj/kern/kernel.asm	/^f010195c:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101963	obj/kern/kernel.asm	/^f0101963:	e8 35 e7 ff ff       	call   f010009d <_panic>$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	00 $/;"	l
f0101970	obj/kern/kernel.asm	/^f0101970:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101976	obj/kern/kernel.asm	/^f0101976:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	e8 80 fd ff ff       	call   f0101702 <boot_map_region>$/;"	l
f0101982	obj/kern/kernel.asm	/^f0101982:	a1 00 63 12 f0       	mov    0xf0126300,%eax$/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987:	01 c3                	add    %eax,%ebx$/;"	l
f0101989	obj/kern/kernel.asm	/^f0101989:	89 1d 00 63 12 f0    	mov    %ebx,0xf0126300$/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101992	obj/kern/kernel.asm	/^f0101992:	5b                   	pop    %ebx$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	5d                   	pop    %ebp$/;"	l
f0101994	obj/kern/kernel.asm	/^f0101994:	c3                   	ret    $/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995 <mem_init>:$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	55                   	push   %ebp$/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	89 e5                	mov    %esp,%ebp$/;"	l
f0101998	obj/kern/kernel.asm	/^f0101998:	57                   	push   %edi$/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	56                   	push   %esi$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	53                   	push   %ebx$/;"	l
f010199b	obj/kern/kernel.asm	/^f010199b:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f010199e	obj/kern/kernel.asm	/^f010199e:	c7 04 24 15 00 00 00 	movl   $0x15,(%esp)$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	e8 e4 2a 00 00       	call   f010448e <mc146818_read>$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	89 c3                	mov    %eax,%ebx$/;"	l
f01019ac	obj/kern/kernel.asm	/^f01019ac:	c7 04 24 16 00 00 00 	movl   $0x16,(%esp)$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	e8 d6 2a 00 00       	call   f010448e <mc146818_read>$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01019bb	obj/kern/kernel.asm	/^f01019bb:	09 c3                	or     %eax,%ebx$/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	89 d8                	mov    %ebx,%eax$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01019c2	obj/kern/kernel.asm	/^f01019c2:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f01019c8	obj/kern/kernel.asm	/^f01019c8:	85 c0                	test   %eax,%eax$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01019cd	obj/kern/kernel.asm	/^f01019cd:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	a3 44 42 2c f0       	mov    %eax,0xf02c4244$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	c7 04 24 17 00 00 00 	movl   $0x17,(%esp)$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	e8 ad 2a 00 00       	call   f010448e <mc146818_read>$/;"	l
f01019e1	obj/kern/kernel.asm	/^f01019e1:	89 c3                	mov    %eax,%ebx$/;"	l
f01019e3	obj/kern/kernel.asm	/^f01019e3:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
f01019ea	obj/kern/kernel.asm	/^f01019ea:	e8 9f 2a 00 00       	call   f010448e <mc146818_read>$/;"	l
f01019ef	obj/kern/kernel.asm	/^f01019ef:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01019f2	obj/kern/kernel.asm	/^f01019f2:	09 c3                	or     %eax,%ebx$/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	89 d8                	mov    %ebx,%eax$/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01019f9	obj/kern/kernel.asm	/^f01019f9:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f01019ff	obj/kern/kernel.asm	/^f01019ff:	85 c0                	test   %eax,%eax$/;"	l
f0101a01	obj/kern/kernel.asm	/^f0101a01:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101a04	obj/kern/kernel.asm	/^f0101a04:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101a07	obj/kern/kernel.asm	/^f0101a07:	85 c0                	test   %eax,%eax$/;"	l
f0101a09	obj/kern/kernel.asm	/^f0101a09:	74 0e                	je     f0101a19 <mem_init+0x84>$/;"	l
f0101a0b	obj/kern/kernel.asm	/^f0101a0b:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0101a11	obj/kern/kernel.asm	/^f0101a11:	89 15 9c 4e 2c f0    	mov    %edx,0xf02c4e9c$/;"	l
f0101a17	obj/kern/kernel.asm	/^f0101a17:	eb 0c                	jmp    f0101a25 <mem_init+0x90>$/;"	l
f0101a19	obj/kern/kernel.asm	/^f0101a19:	8b 15 44 42 2c f0    	mov    0xf02c4244,%edx$/;"	l
f0101a1f	obj/kern/kernel.asm	/^f0101a1f:	89 15 9c 4e 2c f0    	mov    %edx,0xf02c4e9c$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101a28	obj/kern/kernel.asm	/^f0101a28:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101a2b	obj/kern/kernel.asm	/^f0101a2b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101a2f	obj/kern/kernel.asm	/^f0101a2f:	a1 44 42 2c f0       	mov    0xf02c4244,%eax$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101a37	obj/kern/kernel.asm	/^f0101a37:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	a1 9c 4e 2c f0       	mov    0xf02c4e9c,%eax$/;"	l
f0101a43	obj/kern/kernel.asm	/^f0101a43:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101a49	obj/kern/kernel.asm	/^f0101a49:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	c7 04 24 10 8a 10 f0 	movl   $0xf0108a10,(%esp)$/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	e8 b1 2b 00 00       	call   f010460a <cprintf>$/;"	l
f0101a59	obj/kern/kernel.asm	/^f0101a59:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101a5e	obj/kern/kernel.asm	/^f0101a5e:	e8 31 f4 ff ff       	call   f0100e94 <boot_alloc>$/;"	l
f0101a63	obj/kern/kernel.asm	/^f0101a63:	a3 a0 4e 2c f0       	mov    %eax,0xf02c4ea0$/;"	l
f0101a68	obj/kern/kernel.asm	/^f0101a68:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	00 $/;"	l
f0101a70	obj/kern/kernel.asm	/^f0101a70:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101a77	obj/kern/kernel.asm	/^f0101a77:	00 $/;"	l
f0101a78	obj/kern/kernel.asm	/^f0101a78:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a7b	obj/kern/kernel.asm	/^f0101a7b:	e8 77 4e 00 00       	call   f01068f7 <memset>$/;"	l
f0101a80	obj/kern/kernel.asm	/^f0101a80:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0101a85	obj/kern/kernel.asm	/^f0101a85:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	77 20                	ja     f0101aac <mem_init+0x117>$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101a90	obj/kern/kernel.asm	/^f0101a90:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	f0 $/;"	l
f0101a98	obj/kern/kernel.asm	/^f0101a98:	c7 44 24 04 dc 00 00 	movl   $0xdc,0x4(%esp)$/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	00 $/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	e8 f1 e5 ff ff       	call   f010009d <_panic>$/;"	l
f0101aac	obj/kern/kernel.asm	/^f0101aac:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101ab2	obj/kern/kernel.asm	/^f0101ab2:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101ab5	obj/kern/kernel.asm	/^f0101ab5:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101abb	obj/kern/kernel.asm	/^f0101abb:	a1 9c 4e 2c f0       	mov    0xf02c4e9c,%eax$/;"	l
f0101ac0	obj/kern/kernel.asm	/^f0101ac0:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101ac9	obj/kern/kernel.asm	/^f0101ac9:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	e8 bd f3 ff ff       	call   f0100e94 <boot_alloc>$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	a3 a4 4e 2c f0       	mov    %eax,0xf02c4ea4$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	8b 0d 9c 4e 2c f0    	mov    0xf02c4e9c,%ecx$/;"	l
f0101ae2	obj/kern/kernel.asm	/^f0101ae2:	8d 14 cd 00 00 00 00 	lea    0x0(,%ecx,8),%edx$/;"	l
f0101ae9	obj/kern/kernel.asm	/^f0101ae9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0101aed	obj/kern/kernel.asm	/^f0101aed:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101af4	obj/kern/kernel.asm	/^f0101af4:	00 $/;"	l
f0101af5	obj/kern/kernel.asm	/^f0101af5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101af8	obj/kern/kernel.asm	/^f0101af8:	e8 fa 4d 00 00       	call   f01068f7 <memset>$/;"	l
f0101afd	obj/kern/kernel.asm	/^f0101afd:	b8 00 00 02 00       	mov    $0x20000,%eax$/;"	l
f0101b02	obj/kern/kernel.asm	/^f0101b02:	e8 8d f3 ff ff       	call   f0100e94 <boot_alloc>$/;"	l
f0101b07	obj/kern/kernel.asm	/^f0101b07:	a3 48 42 2c f0       	mov    %eax,0xf02c4248$/;"	l
f0101b0c	obj/kern/kernel.asm	/^f0101b0c:	e8 bc f7 ff ff       	call   f01012cd <page_init>$/;"	l
f0101b11	obj/kern/kernel.asm	/^f0101b11:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101b16	obj/kern/kernel.asm	/^f0101b16:	e8 1c f4 ff ff       	call   f0100f37 <check_page_free_list>$/;"	l
f0101b1b	obj/kern/kernel.asm	/^f0101b1b:	83 3d a4 4e 2c f0 00 	cmpl   $0x0,0xf02c4ea4$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	75 1c                	jne    f0101b40 <mem_init+0x1ab>$/;"	l
f0101b24	obj/kern/kernel.asm	/^f0101b24:	c7 44 24 08 0e 93 10 	movl   $0xf010930e,0x8(%esp)$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	f0 $/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	c7 44 24 04 83 03 00 	movl   $0x383,0x4(%esp)$/;"	l
f0101b33	obj/kern/kernel.asm	/^f0101b33:	00 $/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101b3b	obj/kern/kernel.asm	/^f0101b3b:	e8 5d e5 ff ff       	call   f010009d <_panic>$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	a1 40 42 2c f0       	mov    0xf02c4240,%eax$/;"	l
f0101b45	obj/kern/kernel.asm	/^f0101b45:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101b4a	obj/kern/kernel.asm	/^f0101b4a:	eb 05                	jmp    f0101b51 <mem_init+0x1bc>$/;"	l
f0101b4c	obj/kern/kernel.asm	/^f0101b4c:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	8b 00                	mov    (%eax),%eax$/;"	l
f0101b51	obj/kern/kernel.asm	/^f0101b51:	85 c0                	test   %eax,%eax$/;"	l
f0101b53	obj/kern/kernel.asm	/^f0101b53:	75 f7                	jne    f0101b4c <mem_init+0x1b7>$/;"	l
f0101b55	obj/kern/kernel.asm	/^f0101b55:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	e8 3d f8 ff ff       	call   f010139e <page_alloc>$/;"	l
f0101b61	obj/kern/kernel.asm	/^f0101b61:	89 c7                	mov    %eax,%edi$/;"	l
f0101b63	obj/kern/kernel.asm	/^f0101b63:	85 c0                	test   %eax,%eax$/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	75 24                	jne    f0101b8b <mem_init+0x1f6>$/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	c7 44 24 0c 29 93 10 	movl   $0xf0109329,0xc(%esp)$/;"	l
f0101b6e	obj/kern/kernel.asm	/^f0101b6e:	f0 $/;"	l
f0101b6f	obj/kern/kernel.asm	/^f0101b6f:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101b76	obj/kern/kernel.asm	/^f0101b76:	f0 $/;"	l
f0101b77	obj/kern/kernel.asm	/^f0101b77:	c7 44 24 04 8b 03 00 	movl   $0x38b,0x4(%esp)$/;"	l
f0101b7e	obj/kern/kernel.asm	/^f0101b7e:	00 $/;"	l
f0101b7f	obj/kern/kernel.asm	/^f0101b7f:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101b86	obj/kern/kernel.asm	/^f0101b86:	e8 12 e5 ff ff       	call   f010009d <_panic>$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101b92	obj/kern/kernel.asm	/^f0101b92:	e8 07 f8 ff ff       	call   f010139e <page_alloc>$/;"	l
f0101b97	obj/kern/kernel.asm	/^f0101b97:	89 c6                	mov    %eax,%esi$/;"	l
f0101b99	obj/kern/kernel.asm	/^f0101b99:	85 c0                	test   %eax,%eax$/;"	l
f0101b9b	obj/kern/kernel.asm	/^f0101b9b:	75 24                	jne    f0101bc1 <mem_init+0x22c>$/;"	l
f0101b9d	obj/kern/kernel.asm	/^f0101b9d:	c7 44 24 0c 3f 93 10 	movl   $0xf010933f,0xc(%esp)$/;"	l
f0101ba4	obj/kern/kernel.asm	/^f0101ba4:	f0 $/;"	l
f0101ba5	obj/kern/kernel.asm	/^f0101ba5:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101bac	obj/kern/kernel.asm	/^f0101bac:	f0 $/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	c7 44 24 04 8c 03 00 	movl   $0x38c,0x4(%esp)$/;"	l
f0101bb4	obj/kern/kernel.asm	/^f0101bb4:	00 $/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101bbc	obj/kern/kernel.asm	/^f0101bbc:	e8 dc e4 ff ff       	call   f010009d <_panic>$/;"	l
f0101bc1	obj/kern/kernel.asm	/^f0101bc1:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101bc8	obj/kern/kernel.asm	/^f0101bc8:	e8 d1 f7 ff ff       	call   f010139e <page_alloc>$/;"	l
f0101bcd	obj/kern/kernel.asm	/^f0101bcd:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101bd0	obj/kern/kernel.asm	/^f0101bd0:	85 c0                	test   %eax,%eax$/;"	l
f0101bd2	obj/kern/kernel.asm	/^f0101bd2:	75 24                	jne    f0101bf8 <mem_init+0x263>$/;"	l
f0101bd4	obj/kern/kernel.asm	/^f0101bd4:	c7 44 24 0c 55 93 10 	movl   $0xf0109355,0xc(%esp)$/;"	l
f0101bdb	obj/kern/kernel.asm	/^f0101bdb:	f0 $/;"	l
f0101bdc	obj/kern/kernel.asm	/^f0101bdc:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101be3	obj/kern/kernel.asm	/^f0101be3:	f0 $/;"	l
f0101be4	obj/kern/kernel.asm	/^f0101be4:	c7 44 24 04 8d 03 00 	movl   $0x38d,0x4(%esp)$/;"	l
f0101beb	obj/kern/kernel.asm	/^f0101beb:	00 $/;"	l
f0101bec	obj/kern/kernel.asm	/^f0101bec:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101bf3	obj/kern/kernel.asm	/^f0101bf3:	e8 a5 e4 ff ff       	call   f010009d <_panic>$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	39 f7                	cmp    %esi,%edi$/;"	l
f0101bfa	obj/kern/kernel.asm	/^f0101bfa:	75 24                	jne    f0101c20 <mem_init+0x28b>$/;"	l
f0101bfc	obj/kern/kernel.asm	/^f0101bfc:	c7 44 24 0c 6b 93 10 	movl   $0xf010936b,0xc(%esp)$/;"	l
f0101c03	obj/kern/kernel.asm	/^f0101c03:	f0 $/;"	l
f0101c04	obj/kern/kernel.asm	/^f0101c04:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101c0b	obj/kern/kernel.asm	/^f0101c0b:	f0 $/;"	l
f0101c0c	obj/kern/kernel.asm	/^f0101c0c:	c7 44 24 04 90 03 00 	movl   $0x390,0x4(%esp)$/;"	l
f0101c13	obj/kern/kernel.asm	/^f0101c13:	00 $/;"	l
f0101c14	obj/kern/kernel.asm	/^f0101c14:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101c1b	obj/kern/kernel.asm	/^f0101c1b:	e8 7d e4 ff ff       	call   f010009d <_panic>$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101c23	obj/kern/kernel.asm	/^f0101c23:	39 c6                	cmp    %eax,%esi$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	74 04                	je     f0101c2b <mem_init+0x296>$/;"	l
f0101c27	obj/kern/kernel.asm	/^f0101c27:	39 c7                	cmp    %eax,%edi$/;"	l
f0101c29	obj/kern/kernel.asm	/^f0101c29:	75 24                	jne    f0101c4f <mem_init+0x2ba>$/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b:	c7 44 24 0c 4c 8a 10 	movl   $0xf0108a4c,0xc(%esp)$/;"	l
f0101c32	obj/kern/kernel.asm	/^f0101c32:	f0 $/;"	l
f0101c33	obj/kern/kernel.asm	/^f0101c33:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101c3a	obj/kern/kernel.asm	/^f0101c3a:	f0 $/;"	l
f0101c3b	obj/kern/kernel.asm	/^f0101c3b:	c7 44 24 04 91 03 00 	movl   $0x391,0x4(%esp)$/;"	l
f0101c42	obj/kern/kernel.asm	/^f0101c42:	00 $/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101c4a	obj/kern/kernel.asm	/^f0101c4a:	e8 4e e4 ff ff       	call   f010009d <_panic>$/;"	l
f0101c4f	obj/kern/kernel.asm	/^f0101c4f:	8b 15 a4 4e 2c f0    	mov    0xf02c4ea4,%edx$/;"	l
f0101c55	obj/kern/kernel.asm	/^f0101c55:	a1 9c 4e 2c f0       	mov    0xf02c4e9c,%eax$/;"	l
f0101c5a	obj/kern/kernel.asm	/^f0101c5a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101c5d	obj/kern/kernel.asm	/^f0101c5d:	89 f9                	mov    %edi,%ecx$/;"	l
f0101c5f	obj/kern/kernel.asm	/^f0101c5f:	29 d1                	sub    %edx,%ecx$/;"	l
f0101c61	obj/kern/kernel.asm	/^f0101c61:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101c64	obj/kern/kernel.asm	/^f0101c64:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	72 24                	jb     f0101c8f <mem_init+0x2fa>$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	c7 44 24 0c 7d 93 10 	movl   $0xf010937d,0xc(%esp)$/;"	l
f0101c72	obj/kern/kernel.asm	/^f0101c72:	f0 $/;"	l
f0101c73	obj/kern/kernel.asm	/^f0101c73:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101c7a	obj/kern/kernel.asm	/^f0101c7a:	f0 $/;"	l
f0101c7b	obj/kern/kernel.asm	/^f0101c7b:	c7 44 24 04 92 03 00 	movl   $0x392,0x4(%esp)$/;"	l
f0101c82	obj/kern/kernel.asm	/^f0101c82:	00 $/;"	l
f0101c83	obj/kern/kernel.asm	/^f0101c83:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101c8a	obj/kern/kernel.asm	/^f0101c8a:	e8 0e e4 ff ff       	call   f010009d <_panic>$/;"	l
f0101c8f	obj/kern/kernel.asm	/^f0101c8f:	89 f1                	mov    %esi,%ecx$/;"	l
f0101c91	obj/kern/kernel.asm	/^f0101c91:	29 d1                	sub    %edx,%ecx$/;"	l
f0101c93	obj/kern/kernel.asm	/^f0101c93:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101c96	obj/kern/kernel.asm	/^f0101c96:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101c99	obj/kern/kernel.asm	/^f0101c99:	39 c8                	cmp    %ecx,%eax$/;"	l
f0101c9b	obj/kern/kernel.asm	/^f0101c9b:	77 24                	ja     f0101cc1 <mem_init+0x32c>$/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	c7 44 24 0c 9a 93 10 	movl   $0xf010939a,0xc(%esp)$/;"	l
f0101ca4	obj/kern/kernel.asm	/^f0101ca4:	f0 $/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101cac	obj/kern/kernel.asm	/^f0101cac:	f0 $/;"	l
f0101cad	obj/kern/kernel.asm	/^f0101cad:	c7 44 24 04 93 03 00 	movl   $0x393,0x4(%esp)$/;"	l
f0101cb4	obj/kern/kernel.asm	/^f0101cb4:	00 $/;"	l
f0101cb5	obj/kern/kernel.asm	/^f0101cb5:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	e8 dc e3 ff ff       	call   f010009d <_panic>$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101cc4	obj/kern/kernel.asm	/^f0101cc4:	29 d1                	sub    %edx,%ecx$/;"	l
f0101cc6	obj/kern/kernel.asm	/^f0101cc6:	89 ca                	mov    %ecx,%edx$/;"	l
f0101cc8	obj/kern/kernel.asm	/^f0101cc8:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101ccb	obj/kern/kernel.asm	/^f0101ccb:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	39 d0                	cmp    %edx,%eax$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	77 24                	ja     f0101cf6 <mem_init+0x361>$/;"	l
f0101cd2	obj/kern/kernel.asm	/^f0101cd2:	c7 44 24 0c b7 93 10 	movl   $0xf01093b7,0xc(%esp)$/;"	l
f0101cd9	obj/kern/kernel.asm	/^f0101cd9:	f0 $/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101ce1	obj/kern/kernel.asm	/^f0101ce1:	f0 $/;"	l
f0101ce2	obj/kern/kernel.asm	/^f0101ce2:	c7 44 24 04 94 03 00 	movl   $0x394,0x4(%esp)$/;"	l
f0101ce9	obj/kern/kernel.asm	/^f0101ce9:	00 $/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101cf1	obj/kern/kernel.asm	/^f0101cf1:	e8 a7 e3 ff ff       	call   f010009d <_panic>$/;"	l
f0101cf6	obj/kern/kernel.asm	/^f0101cf6:	a1 40 42 2c f0       	mov    0xf02c4240,%eax$/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101cfe	obj/kern/kernel.asm	/^f0101cfe:	c7 05 40 42 2c f0 00 	movl   $0x0,0xf02c4240$/;"	l
f0101d05	obj/kern/kernel.asm	/^f0101d05:	00 00 00 $/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d0f	obj/kern/kernel.asm	/^f0101d0f:	e8 8a f6 ff ff       	call   f010139e <page_alloc>$/;"	l
f0101d14	obj/kern/kernel.asm	/^f0101d14:	85 c0                	test   %eax,%eax$/;"	l
f0101d16	obj/kern/kernel.asm	/^f0101d16:	74 24                	je     f0101d3c <mem_init+0x3a7>$/;"	l
f0101d18	obj/kern/kernel.asm	/^f0101d18:	c7 44 24 0c d4 93 10 	movl   $0xf01093d4,0xc(%esp)$/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	f0 $/;"	l
f0101d20	obj/kern/kernel.asm	/^f0101d20:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101d27	obj/kern/kernel.asm	/^f0101d27:	f0 $/;"	l
f0101d28	obj/kern/kernel.asm	/^f0101d28:	c7 44 24 04 9b 03 00 	movl   $0x39b,0x4(%esp)$/;"	l
f0101d2f	obj/kern/kernel.asm	/^f0101d2f:	00 $/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	e8 61 e3 ff ff       	call   f010009d <_panic>$/;"	l
f0101d3c	obj/kern/kernel.asm	/^f0101d3c:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101d3f	obj/kern/kernel.asm	/^f0101d3f:	e8 dd f6 ff ff       	call   f0101421 <page_free>$/;"	l
f0101d44	obj/kern/kernel.asm	/^f0101d44:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101d47	obj/kern/kernel.asm	/^f0101d47:	e8 d5 f6 ff ff       	call   f0101421 <page_free>$/;"	l
f0101d4c	obj/kern/kernel.asm	/^f0101d4c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101d4f	obj/kern/kernel.asm	/^f0101d4f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101d52	obj/kern/kernel.asm	/^f0101d52:	e8 ca f6 ff ff       	call   f0101421 <page_free>$/;"	l
f0101d57	obj/kern/kernel.asm	/^f0101d57:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d5e	obj/kern/kernel.asm	/^f0101d5e:	e8 3b f6 ff ff       	call   f010139e <page_alloc>$/;"	l
f0101d63	obj/kern/kernel.asm	/^f0101d63:	89 c6                	mov    %eax,%esi$/;"	l
f0101d65	obj/kern/kernel.asm	/^f0101d65:	85 c0                	test   %eax,%eax$/;"	l
f0101d67	obj/kern/kernel.asm	/^f0101d67:	75 24                	jne    f0101d8d <mem_init+0x3f8>$/;"	l
f0101d69	obj/kern/kernel.asm	/^f0101d69:	c7 44 24 0c 29 93 10 	movl   $0xf0109329,0xc(%esp)$/;"	l
f0101d70	obj/kern/kernel.asm	/^f0101d70:	f0 $/;"	l
f0101d71	obj/kern/kernel.asm	/^f0101d71:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101d78	obj/kern/kernel.asm	/^f0101d78:	f0 $/;"	l
f0101d79	obj/kern/kernel.asm	/^f0101d79:	c7 44 24 04 a2 03 00 	movl   $0x3a2,0x4(%esp)$/;"	l
f0101d80	obj/kern/kernel.asm	/^f0101d80:	00 $/;"	l
f0101d81	obj/kern/kernel.asm	/^f0101d81:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101d88	obj/kern/kernel.asm	/^f0101d88:	e8 10 e3 ff ff       	call   f010009d <_panic>$/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d94	obj/kern/kernel.asm	/^f0101d94:	e8 05 f6 ff ff       	call   f010139e <page_alloc>$/;"	l
f0101d99	obj/kern/kernel.asm	/^f0101d99:	89 c7                	mov    %eax,%edi$/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	85 c0                	test   %eax,%eax$/;"	l
f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	75 24                	jne    f0101dc3 <mem_init+0x42e>$/;"	l
f0101d9f	obj/kern/kernel.asm	/^f0101d9f:	c7 44 24 0c 3f 93 10 	movl   $0xf010933f,0xc(%esp)$/;"	l
f0101da6	obj/kern/kernel.asm	/^f0101da6:	f0 $/;"	l
f0101da7	obj/kern/kernel.asm	/^f0101da7:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101dae	obj/kern/kernel.asm	/^f0101dae:	f0 $/;"	l
f0101daf	obj/kern/kernel.asm	/^f0101daf:	c7 44 24 04 a3 03 00 	movl   $0x3a3,0x4(%esp)$/;"	l
f0101db6	obj/kern/kernel.asm	/^f0101db6:	00 $/;"	l
f0101db7	obj/kern/kernel.asm	/^f0101db7:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101dbe	obj/kern/kernel.asm	/^f0101dbe:	e8 da e2 ff ff       	call   f010009d <_panic>$/;"	l
f0101dc3	obj/kern/kernel.asm	/^f0101dc3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	e8 cf f5 ff ff       	call   f010139e <page_alloc>$/;"	l
f0101dcf	obj/kern/kernel.asm	/^f0101dcf:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101dd2	obj/kern/kernel.asm	/^f0101dd2:	85 c0                	test   %eax,%eax$/;"	l
f0101dd4	obj/kern/kernel.asm	/^f0101dd4:	75 24                	jne    f0101dfa <mem_init+0x465>$/;"	l
f0101dd6	obj/kern/kernel.asm	/^f0101dd6:	c7 44 24 0c 55 93 10 	movl   $0xf0109355,0xc(%esp)$/;"	l
f0101ddd	obj/kern/kernel.asm	/^f0101ddd:	f0 $/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101de5	obj/kern/kernel.asm	/^f0101de5:	f0 $/;"	l
f0101de6	obj/kern/kernel.asm	/^f0101de6:	c7 44 24 04 a4 03 00 	movl   $0x3a4,0x4(%esp)$/;"	l
f0101ded	obj/kern/kernel.asm	/^f0101ded:	00 $/;"	l
f0101dee	obj/kern/kernel.asm	/^f0101dee:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101df5	obj/kern/kernel.asm	/^f0101df5:	e8 a3 e2 ff ff       	call   f010009d <_panic>$/;"	l
f0101dfa	obj/kern/kernel.asm	/^f0101dfa:	39 fe                	cmp    %edi,%esi$/;"	l
f0101dfc	obj/kern/kernel.asm	/^f0101dfc:	75 24                	jne    f0101e22 <mem_init+0x48d>$/;"	l
f0101dfe	obj/kern/kernel.asm	/^f0101dfe:	c7 44 24 0c 6b 93 10 	movl   $0xf010936b,0xc(%esp)$/;"	l
f0101e05	obj/kern/kernel.asm	/^f0101e05:	f0 $/;"	l
f0101e06	obj/kern/kernel.asm	/^f0101e06:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101e0d	obj/kern/kernel.asm	/^f0101e0d:	f0 $/;"	l
f0101e0e	obj/kern/kernel.asm	/^f0101e0e:	c7 44 24 04 a6 03 00 	movl   $0x3a6,0x4(%esp)$/;"	l
f0101e15	obj/kern/kernel.asm	/^f0101e15:	00 $/;"	l
f0101e16	obj/kern/kernel.asm	/^f0101e16:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101e1d	obj/kern/kernel.asm	/^f0101e1d:	e8 7b e2 ff ff       	call   f010009d <_panic>$/;"	l
f0101e22	obj/kern/kernel.asm	/^f0101e22:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101e25	obj/kern/kernel.asm	/^f0101e25:	39 c7                	cmp    %eax,%edi$/;"	l
f0101e27	obj/kern/kernel.asm	/^f0101e27:	74 04                	je     f0101e2d <mem_init+0x498>$/;"	l
f0101e29	obj/kern/kernel.asm	/^f0101e29:	39 c6                	cmp    %eax,%esi$/;"	l
f0101e2b	obj/kern/kernel.asm	/^f0101e2b:	75 24                	jne    f0101e51 <mem_init+0x4bc>$/;"	l
f0101e2d	obj/kern/kernel.asm	/^f0101e2d:	c7 44 24 0c 4c 8a 10 	movl   $0xf0108a4c,0xc(%esp)$/;"	l
f0101e34	obj/kern/kernel.asm	/^f0101e34:	f0 $/;"	l
f0101e35	obj/kern/kernel.asm	/^f0101e35:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101e3c	obj/kern/kernel.asm	/^f0101e3c:	f0 $/;"	l
f0101e3d	obj/kern/kernel.asm	/^f0101e3d:	c7 44 24 04 a7 03 00 	movl   $0x3a7,0x4(%esp)$/;"	l
f0101e44	obj/kern/kernel.asm	/^f0101e44:	00 $/;"	l
f0101e45	obj/kern/kernel.asm	/^f0101e45:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	e8 4c e2 ff ff       	call   f010009d <_panic>$/;"	l
f0101e51	obj/kern/kernel.asm	/^f0101e51:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101e58	obj/kern/kernel.asm	/^f0101e58:	e8 41 f5 ff ff       	call   f010139e <page_alloc>$/;"	l
f0101e5d	obj/kern/kernel.asm	/^f0101e5d:	85 c0                	test   %eax,%eax$/;"	l
f0101e5f	obj/kern/kernel.asm	/^f0101e5f:	74 24                	je     f0101e85 <mem_init+0x4f0>$/;"	l
f0101e61	obj/kern/kernel.asm	/^f0101e61:	c7 44 24 0c d4 93 10 	movl   $0xf01093d4,0xc(%esp)$/;"	l
f0101e68	obj/kern/kernel.asm	/^f0101e68:	f0 $/;"	l
f0101e69	obj/kern/kernel.asm	/^f0101e69:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101e70	obj/kern/kernel.asm	/^f0101e70:	f0 $/;"	l
f0101e71	obj/kern/kernel.asm	/^f0101e71:	c7 44 24 04 a8 03 00 	movl   $0x3a8,0x4(%esp)$/;"	l
f0101e78	obj/kern/kernel.asm	/^f0101e78:	00 $/;"	l
f0101e79	obj/kern/kernel.asm	/^f0101e79:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101e80	obj/kern/kernel.asm	/^f0101e80:	e8 18 e2 ff ff       	call   f010009d <_panic>$/;"	l
f0101e85	obj/kern/kernel.asm	/^f0101e85:	89 f0                	mov    %esi,%eax$/;"	l
f0101e87	obj/kern/kernel.asm	/^f0101e87:	2b 05 a4 4e 2c f0    	sub    0xf02c4ea4,%eax$/;"	l
f0101e8d	obj/kern/kernel.asm	/^f0101e8d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101e90	obj/kern/kernel.asm	/^f0101e90:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101e93	obj/kern/kernel.asm	/^f0101e93:	89 c2                	mov    %eax,%edx$/;"	l
f0101e95	obj/kern/kernel.asm	/^f0101e95:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101e98	obj/kern/kernel.asm	/^f0101e98:	3b 15 9c 4e 2c f0    	cmp    0xf02c4e9c,%edx$/;"	l
f0101e9e	obj/kern/kernel.asm	/^f0101e9e:	72 20                	jb     f0101ec0 <mem_init+0x52b>$/;"	l
f0101ea0	obj/kern/kernel.asm	/^f0101ea0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101ea4	obj/kern/kernel.asm	/^f0101ea4:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f0101eab	obj/kern/kernel.asm	/^f0101eab:	f0 $/;"	l
f0101eac	obj/kern/kernel.asm	/^f0101eac:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0101eb3	obj/kern/kernel.asm	/^f0101eb3:	00 $/;"	l
f0101eb4	obj/kern/kernel.asm	/^f0101eb4:	c7 04 24 29 92 10 f0 	movl   $0xf0109229,(%esp)$/;"	l
f0101ebb	obj/kern/kernel.asm	/^f0101ebb:	e8 dd e1 ff ff       	call   f010009d <_panic>$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101ec7	obj/kern/kernel.asm	/^f0101ec7:	00 $/;"	l
f0101ec8	obj/kern/kernel.asm	/^f0101ec8:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0101ecf	obj/kern/kernel.asm	/^f0101ecf:	00 $/;"	l
f0101ed0	obj/kern/kernel.asm	/^f0101ed0:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101ed5	obj/kern/kernel.asm	/^f0101ed5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ed8	obj/kern/kernel.asm	/^f0101ed8:	e8 1a 4a 00 00       	call   f01068f7 <memset>$/;"	l
f0101edd	obj/kern/kernel.asm	/^f0101edd:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101ee0	obj/kern/kernel.asm	/^f0101ee0:	e8 3c f5 ff ff       	call   f0101421 <page_free>$/;"	l
f0101ee5	obj/kern/kernel.asm	/^f0101ee5:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101eec	obj/kern/kernel.asm	/^f0101eec:	e8 ad f4 ff ff       	call   f010139e <page_alloc>$/;"	l
f0101ef1	obj/kern/kernel.asm	/^f0101ef1:	85 c0                	test   %eax,%eax$/;"	l
f0101ef3	obj/kern/kernel.asm	/^f0101ef3:	75 24                	jne    f0101f19 <mem_init+0x584>$/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	c7 44 24 0c e3 93 10 	movl   $0xf01093e3,0xc(%esp)$/;"	l
f0101efc	obj/kern/kernel.asm	/^f0101efc:	f0 $/;"	l
f0101efd	obj/kern/kernel.asm	/^f0101efd:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101f04	obj/kern/kernel.asm	/^f0101f04:	f0 $/;"	l
f0101f05	obj/kern/kernel.asm	/^f0101f05:	c7 44 24 04 ad 03 00 	movl   $0x3ad,0x4(%esp)$/;"	l
f0101f0c	obj/kern/kernel.asm	/^f0101f0c:	00 $/;"	l
f0101f0d	obj/kern/kernel.asm	/^f0101f0d:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101f14	obj/kern/kernel.asm	/^f0101f14:	e8 84 e1 ff ff       	call   f010009d <_panic>$/;"	l
f0101f19	obj/kern/kernel.asm	/^f0101f19:	39 c6                	cmp    %eax,%esi$/;"	l
f0101f1b	obj/kern/kernel.asm	/^f0101f1b:	74 24                	je     f0101f41 <mem_init+0x5ac>$/;"	l
f0101f1d	obj/kern/kernel.asm	/^f0101f1d:	c7 44 24 0c 01 94 10 	movl   $0xf0109401,0xc(%esp)$/;"	l
f0101f24	obj/kern/kernel.asm	/^f0101f24:	f0 $/;"	l
f0101f25	obj/kern/kernel.asm	/^f0101f25:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101f2c	obj/kern/kernel.asm	/^f0101f2c:	f0 $/;"	l
f0101f2d	obj/kern/kernel.asm	/^f0101f2d:	c7 44 24 04 ae 03 00 	movl   $0x3ae,0x4(%esp)$/;"	l
f0101f34	obj/kern/kernel.asm	/^f0101f34:	00 $/;"	l
f0101f35	obj/kern/kernel.asm	/^f0101f35:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101f3c	obj/kern/kernel.asm	/^f0101f3c:	e8 5c e1 ff ff       	call   f010009d <_panic>$/;"	l
f0101f41	obj/kern/kernel.asm	/^f0101f41:	89 f0                	mov    %esi,%eax$/;"	l
f0101f43	obj/kern/kernel.asm	/^f0101f43:	2b 05 a4 4e 2c f0    	sub    0xf02c4ea4,%eax$/;"	l
f0101f49	obj/kern/kernel.asm	/^f0101f49:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101f4c	obj/kern/kernel.asm	/^f0101f4c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	89 c2                	mov    %eax,%edx$/;"	l
f0101f51	obj/kern/kernel.asm	/^f0101f51:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101f54	obj/kern/kernel.asm	/^f0101f54:	3b 15 9c 4e 2c f0    	cmp    0xf02c4e9c,%edx$/;"	l
f0101f5a	obj/kern/kernel.asm	/^f0101f5a:	72 20                	jb     f0101f7c <mem_init+0x5e7>$/;"	l
f0101f5c	obj/kern/kernel.asm	/^f0101f5c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101f60	obj/kern/kernel.asm	/^f0101f60:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f0101f67	obj/kern/kernel.asm	/^f0101f67:	f0 $/;"	l
f0101f68	obj/kern/kernel.asm	/^f0101f68:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	00 $/;"	l
f0101f70	obj/kern/kernel.asm	/^f0101f70:	c7 04 24 29 92 10 f0 	movl   $0xf0109229,(%esp)$/;"	l
f0101f77	obj/kern/kernel.asm	/^f0101f77:	e8 21 e1 ff ff       	call   f010009d <_panic>$/;"	l
f0101f7c	obj/kern/kernel.asm	/^f0101f7c:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101f82	obj/kern/kernel.asm	/^f0101f82:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f0101f88	obj/kern/kernel.asm	/^f0101f88:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	74 24                	je     f0101fb1 <mem_init+0x61c>$/;"	l
f0101f8d	obj/kern/kernel.asm	/^f0101f8d:	c7 44 24 0c 11 94 10 	movl   $0xf0109411,0xc(%esp)$/;"	l
f0101f94	obj/kern/kernel.asm	/^f0101f94:	f0 $/;"	l
f0101f95	obj/kern/kernel.asm	/^f0101f95:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101f9c	obj/kern/kernel.asm	/^f0101f9c:	f0 $/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	c7 44 24 04 b1 03 00 	movl   $0x3b1,0x4(%esp)$/;"	l
f0101fa4	obj/kern/kernel.asm	/^f0101fa4:	00 $/;"	l
f0101fa5	obj/kern/kernel.asm	/^f0101fa5:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0101fac	obj/kern/kernel.asm	/^f0101fac:	e8 ec e0 ff ff       	call   f010009d <_panic>$/;"	l
f0101fb1	obj/kern/kernel.asm	/^f0101fb1:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101fb4	obj/kern/kernel.asm	/^f0101fb4:	39 d0                	cmp    %edx,%eax$/;"	l
f0101fb6	obj/kern/kernel.asm	/^f0101fb6:	75 d0                	jne    f0101f88 <mem_init+0x5f3>$/;"	l
f0101fb8	obj/kern/kernel.asm	/^f0101fb8:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101fbb	obj/kern/kernel.asm	/^f0101fbb:	a3 40 42 2c f0       	mov    %eax,0xf02c4240$/;"	l
f0101fc0	obj/kern/kernel.asm	/^f0101fc0:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101fc3	obj/kern/kernel.asm	/^f0101fc3:	e8 59 f4 ff ff       	call   f0101421 <page_free>$/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101fcb	obj/kern/kernel.asm	/^f0101fcb:	e8 51 f4 ff ff       	call   f0101421 <page_free>$/;"	l
f0101fd0	obj/kern/kernel.asm	/^f0101fd0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101fd3	obj/kern/kernel.asm	/^f0101fd3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101fd6	obj/kern/kernel.asm	/^f0101fd6:	e8 46 f4 ff ff       	call   f0101421 <page_free>$/;"	l
f0101fdb	obj/kern/kernel.asm	/^f0101fdb:	a1 40 42 2c f0       	mov    0xf02c4240,%eax$/;"	l
f0101fe0	obj/kern/kernel.asm	/^f0101fe0:	eb 05                	jmp    f0101fe7 <mem_init+0x652>$/;"	l
f0101fe2	obj/kern/kernel.asm	/^f0101fe2:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101fe5	obj/kern/kernel.asm	/^f0101fe5:	8b 00                	mov    (%eax),%eax$/;"	l
f0101fe7	obj/kern/kernel.asm	/^f0101fe7:	85 c0                	test   %eax,%eax$/;"	l
f0101fe9	obj/kern/kernel.asm	/^f0101fe9:	75 f7                	jne    f0101fe2 <mem_init+0x64d>$/;"	l
f0101feb	obj/kern/kernel.asm	/^f0101feb:	85 db                	test   %ebx,%ebx$/;"	l
f0101fed	obj/kern/kernel.asm	/^f0101fed:	74 24                	je     f0102013 <mem_init+0x67e>$/;"	l
f0101fef	obj/kern/kernel.asm	/^f0101fef:	c7 44 24 0c 1b 94 10 	movl   $0xf010941b,0xc(%esp)$/;"	l
f0101ff6	obj/kern/kernel.asm	/^f0101ff6:	f0 $/;"	l
f0101ff7	obj/kern/kernel.asm	/^f0101ff7:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0101ffe	obj/kern/kernel.asm	/^f0101ffe:	f0 $/;"	l
f0101fff	obj/kern/kernel.asm	/^f0101fff:	c7 44 24 04 be 03 00 	movl   $0x3be,0x4(%esp)$/;"	l
f0102006	obj/kern/kernel.asm	/^f0102006:	00 $/;"	l
f0102007	obj/kern/kernel.asm	/^f0102007:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010200e	obj/kern/kernel.asm	/^f010200e:	e8 8a e0 ff ff       	call   f010009d <_panic>$/;"	l
f0102013	obj/kern/kernel.asm	/^f0102013:	c7 04 24 6c 8a 10 f0 	movl   $0xf0108a6c,(%esp)$/;"	l
f010201a	obj/kern/kernel.asm	/^f010201a:	e8 eb 25 00 00       	call   f010460a <cprintf>$/;"	l
f010201f	obj/kern/kernel.asm	/^f010201f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102026	obj/kern/kernel.asm	/^f0102026:	e8 73 f3 ff ff       	call   f010139e <page_alloc>$/;"	l
f010202b	obj/kern/kernel.asm	/^f010202b:	89 c6                	mov    %eax,%esi$/;"	l
f010202d	obj/kern/kernel.asm	/^f010202d:	85 c0                	test   %eax,%eax$/;"	l
f010202f	obj/kern/kernel.asm	/^f010202f:	75 24                	jne    f0102055 <mem_init+0x6c0>$/;"	l
f0102031	obj/kern/kernel.asm	/^f0102031:	c7 44 24 0c 29 93 10 	movl   $0xf0109329,0xc(%esp)$/;"	l
f0102038	obj/kern/kernel.asm	/^f0102038:	f0 $/;"	l
f0102039	obj/kern/kernel.asm	/^f0102039:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102040	obj/kern/kernel.asm	/^f0102040:	f0 $/;"	l
f0102041	obj/kern/kernel.asm	/^f0102041:	c7 44 24 04 29 04 00 	movl   $0x429,0x4(%esp)$/;"	l
f0102048	obj/kern/kernel.asm	/^f0102048:	00 $/;"	l
f0102049	obj/kern/kernel.asm	/^f0102049:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102050	obj/kern/kernel.asm	/^f0102050:	e8 48 e0 ff ff       	call   f010009d <_panic>$/;"	l
f0102055	obj/kern/kernel.asm	/^f0102055:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010205c	obj/kern/kernel.asm	/^f010205c:	e8 3d f3 ff ff       	call   f010139e <page_alloc>$/;"	l
f0102061	obj/kern/kernel.asm	/^f0102061:	89 c3                	mov    %eax,%ebx$/;"	l
f0102063	obj/kern/kernel.asm	/^f0102063:	85 c0                	test   %eax,%eax$/;"	l
f0102065	obj/kern/kernel.asm	/^f0102065:	75 24                	jne    f010208b <mem_init+0x6f6>$/;"	l
f0102067	obj/kern/kernel.asm	/^f0102067:	c7 44 24 0c 3f 93 10 	movl   $0xf010933f,0xc(%esp)$/;"	l
f010206e	obj/kern/kernel.asm	/^f010206e:	f0 $/;"	l
f010206f	obj/kern/kernel.asm	/^f010206f:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102076	obj/kern/kernel.asm	/^f0102076:	f0 $/;"	l
f0102077	obj/kern/kernel.asm	/^f0102077:	c7 44 24 04 2a 04 00 	movl   $0x42a,0x4(%esp)$/;"	l
f010207e	obj/kern/kernel.asm	/^f010207e:	00 $/;"	l
f010207f	obj/kern/kernel.asm	/^f010207f:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102086	obj/kern/kernel.asm	/^f0102086:	e8 12 e0 ff ff       	call   f010009d <_panic>$/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102092	obj/kern/kernel.asm	/^f0102092:	e8 07 f3 ff ff       	call   f010139e <page_alloc>$/;"	l
f0102097	obj/kern/kernel.asm	/^f0102097:	89 c7                	mov    %eax,%edi$/;"	l
f0102099	obj/kern/kernel.asm	/^f0102099:	85 c0                	test   %eax,%eax$/;"	l
f010209b	obj/kern/kernel.asm	/^f010209b:	75 24                	jne    f01020c1 <mem_init+0x72c>$/;"	l
f010209d	obj/kern/kernel.asm	/^f010209d:	c7 44 24 0c 55 93 10 	movl   $0xf0109355,0xc(%esp)$/;"	l
f01020a4	obj/kern/kernel.asm	/^f01020a4:	f0 $/;"	l
f01020a5	obj/kern/kernel.asm	/^f01020a5:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01020ac	obj/kern/kernel.asm	/^f01020ac:	f0 $/;"	l
f01020ad	obj/kern/kernel.asm	/^f01020ad:	c7 44 24 04 2b 04 00 	movl   $0x42b,0x4(%esp)$/;"	l
f01020b4	obj/kern/kernel.asm	/^f01020b4:	00 $/;"	l
f01020b5	obj/kern/kernel.asm	/^f01020b5:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01020bc	obj/kern/kernel.asm	/^f01020bc:	e8 dc df ff ff       	call   f010009d <_panic>$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	39 de                	cmp    %ebx,%esi$/;"	l
f01020c3	obj/kern/kernel.asm	/^f01020c3:	75 24                	jne    f01020e9 <mem_init+0x754>$/;"	l
f01020c5	obj/kern/kernel.asm	/^f01020c5:	c7 44 24 0c 6b 93 10 	movl   $0xf010936b,0xc(%esp)$/;"	l
f01020cc	obj/kern/kernel.asm	/^f01020cc:	f0 $/;"	l
f01020cd	obj/kern/kernel.asm	/^f01020cd:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01020d4	obj/kern/kernel.asm	/^f01020d4:	f0 $/;"	l
f01020d5	obj/kern/kernel.asm	/^f01020d5:	c7 44 24 04 2e 04 00 	movl   $0x42e,0x4(%esp)$/;"	l
f01020dc	obj/kern/kernel.asm	/^f01020dc:	00 $/;"	l
f01020dd	obj/kern/kernel.asm	/^f01020dd:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01020e4	obj/kern/kernel.asm	/^f01020e4:	e8 b4 df ff ff       	call   f010009d <_panic>$/;"	l
f01020e9	obj/kern/kernel.asm	/^f01020e9:	39 c3                	cmp    %eax,%ebx$/;"	l
f01020eb	obj/kern/kernel.asm	/^f01020eb:	74 04                	je     f01020f1 <mem_init+0x75c>$/;"	l
f01020ed	obj/kern/kernel.asm	/^f01020ed:	39 c6                	cmp    %eax,%esi$/;"	l
f01020ef	obj/kern/kernel.asm	/^f01020ef:	75 24                	jne    f0102115 <mem_init+0x780>$/;"	l
f01020f1	obj/kern/kernel.asm	/^f01020f1:	c7 44 24 0c 4c 8a 10 	movl   $0xf0108a4c,0xc(%esp)$/;"	l
f01020f8	obj/kern/kernel.asm	/^f01020f8:	f0 $/;"	l
f01020f9	obj/kern/kernel.asm	/^f01020f9:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102100	obj/kern/kernel.asm	/^f0102100:	f0 $/;"	l
f0102101	obj/kern/kernel.asm	/^f0102101:	c7 44 24 04 2f 04 00 	movl   $0x42f,0x4(%esp)$/;"	l
f0102108	obj/kern/kernel.asm	/^f0102108:	00 $/;"	l
f0102109	obj/kern/kernel.asm	/^f0102109:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102110	obj/kern/kernel.asm	/^f0102110:	e8 88 df ff ff       	call   f010009d <_panic>$/;"	l
f0102115	obj/kern/kernel.asm	/^f0102115:	a1 40 42 2c f0       	mov    0xf02c4240,%eax$/;"	l
f010211a	obj/kern/kernel.asm	/^f010211a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010211d	obj/kern/kernel.asm	/^f010211d:	c7 05 40 42 2c f0 00 	movl   $0x0,0xf02c4240$/;"	l
f0102124	obj/kern/kernel.asm	/^f0102124:	00 00 00 $/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010212e	obj/kern/kernel.asm	/^f010212e:	e8 6b f2 ff ff       	call   f010139e <page_alloc>$/;"	l
f0102133	obj/kern/kernel.asm	/^f0102133:	85 c0                	test   %eax,%eax$/;"	l
f0102135	obj/kern/kernel.asm	/^f0102135:	74 24                	je     f010215b <mem_init+0x7c6>$/;"	l
f0102137	obj/kern/kernel.asm	/^f0102137:	c7 44 24 0c d4 93 10 	movl   $0xf01093d4,0xc(%esp)$/;"	l
f010213e	obj/kern/kernel.asm	/^f010213e:	f0 $/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102146	obj/kern/kernel.asm	/^f0102146:	f0 $/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	c7 44 24 04 36 04 00 	movl   $0x436,0x4(%esp)$/;"	l
f010214e	obj/kern/kernel.asm	/^f010214e:	00 $/;"	l
f010214f	obj/kern/kernel.asm	/^f010214f:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102156	obj/kern/kernel.asm	/^f0102156:	e8 42 df ff ff       	call   f010009d <_panic>$/;"	l
f010215b	obj/kern/kernel.asm	/^f010215b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010215e	obj/kern/kernel.asm	/^f010215e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102162	obj/kern/kernel.asm	/^f0102162:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102169	obj/kern/kernel.asm	/^f0102169:	00 $/;"	l
f010216a	obj/kern/kernel.asm	/^f010216a:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f010216f	obj/kern/kernel.asm	/^f010216f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102172	obj/kern/kernel.asm	/^f0102172:	e8 f7 f5 ff ff       	call   f010176e <page_lookup>$/;"	l
f0102177	obj/kern/kernel.asm	/^f0102177:	85 c0                	test   %eax,%eax$/;"	l
f0102179	obj/kern/kernel.asm	/^f0102179:	74 24                	je     f010219f <mem_init+0x80a>$/;"	l
f010217b	obj/kern/kernel.asm	/^f010217b:	c7 44 24 0c 8c 8a 10 	movl   $0xf0108a8c,0xc(%esp)$/;"	l
f0102182	obj/kern/kernel.asm	/^f0102182:	f0 $/;"	l
f0102183	obj/kern/kernel.asm	/^f0102183:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010218a	obj/kern/kernel.asm	/^f010218a:	f0 $/;"	l
f010218b	obj/kern/kernel.asm	/^f010218b:	c7 44 24 04 39 04 00 	movl   $0x439,0x4(%esp)$/;"	l
f0102192	obj/kern/kernel.asm	/^f0102192:	00 $/;"	l
f0102193	obj/kern/kernel.asm	/^f0102193:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010219a	obj/kern/kernel.asm	/^f010219a:	e8 fe de ff ff       	call   f010009d <_panic>$/;"	l
f010219f	obj/kern/kernel.asm	/^f010219f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01021a6	obj/kern/kernel.asm	/^f01021a6:	00 $/;"	l
f01021a7	obj/kern/kernel.asm	/^f01021a7:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01021ae	obj/kern/kernel.asm	/^f01021ae:	00 $/;"	l
f01021af	obj/kern/kernel.asm	/^f01021af:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01021b3	obj/kern/kernel.asm	/^f01021b3:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f01021b8	obj/kern/kernel.asm	/^f01021b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01021bb	obj/kern/kernel.asm	/^f01021bb:	e8 ae f6 ff ff       	call   f010186e <page_insert>$/;"	l
f01021c0	obj/kern/kernel.asm	/^f01021c0:	85 c0                	test   %eax,%eax$/;"	l
f01021c2	obj/kern/kernel.asm	/^f01021c2:	78 24                	js     f01021e8 <mem_init+0x853>$/;"	l
f01021c4	obj/kern/kernel.asm	/^f01021c4:	c7 44 24 0c c4 8a 10 	movl   $0xf0108ac4,0xc(%esp)$/;"	l
f01021cb	obj/kern/kernel.asm	/^f01021cb:	f0 $/;"	l
f01021cc	obj/kern/kernel.asm	/^f01021cc:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01021d3	obj/kern/kernel.asm	/^f01021d3:	f0 $/;"	l
f01021d4	obj/kern/kernel.asm	/^f01021d4:	c7 44 24 04 3c 04 00 	movl   $0x43c,0x4(%esp)$/;"	l
f01021db	obj/kern/kernel.asm	/^f01021db:	00 $/;"	l
f01021dc	obj/kern/kernel.asm	/^f01021dc:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01021e3	obj/kern/kernel.asm	/^f01021e3:	e8 b5 de ff ff       	call   f010009d <_panic>$/;"	l
f01021e8	obj/kern/kernel.asm	/^f01021e8:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01021eb	obj/kern/kernel.asm	/^f01021eb:	e8 31 f2 ff ff       	call   f0101421 <page_free>$/;"	l
f01021f0	obj/kern/kernel.asm	/^f01021f0:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01021f7	obj/kern/kernel.asm	/^f01021f7:	00 $/;"	l
f01021f8	obj/kern/kernel.asm	/^f01021f8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01021ff	obj/kern/kernel.asm	/^f01021ff:	00 $/;"	l
f0102200	obj/kern/kernel.asm	/^f0102200:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102204	obj/kern/kernel.asm	/^f0102204:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0102209	obj/kern/kernel.asm	/^f0102209:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	e8 5d f6 ff ff       	call   f010186e <page_insert>$/;"	l
f0102211	obj/kern/kernel.asm	/^f0102211:	85 c0                	test   %eax,%eax$/;"	l
f0102213	obj/kern/kernel.asm	/^f0102213:	74 24                	je     f0102239 <mem_init+0x8a4>$/;"	l
f0102215	obj/kern/kernel.asm	/^f0102215:	c7 44 24 0c f4 8a 10 	movl   $0xf0108af4,0xc(%esp)$/;"	l
f010221c	obj/kern/kernel.asm	/^f010221c:	f0 $/;"	l
f010221d	obj/kern/kernel.asm	/^f010221d:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102224	obj/kern/kernel.asm	/^f0102224:	f0 $/;"	l
f0102225	obj/kern/kernel.asm	/^f0102225:	c7 44 24 04 41 04 00 	movl   $0x441,0x4(%esp)$/;"	l
f010222c	obj/kern/kernel.asm	/^f010222c:	00 $/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102234	obj/kern/kernel.asm	/^f0102234:	e8 64 de ff ff       	call   f010009d <_panic>$/;"	l
f0102239	obj/kern/kernel.asm	/^f0102239:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102240	obj/kern/kernel.asm	/^f0102240:	00 $/;"	l
f0102241	obj/kern/kernel.asm	/^f0102241:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102248	obj/kern/kernel.asm	/^f0102248:	00 $/;"	l
f0102249	obj/kern/kernel.asm	/^f0102249:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010224d	obj/kern/kernel.asm	/^f010224d:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0102252	obj/kern/kernel.asm	/^f0102252:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102255	obj/kern/kernel.asm	/^f0102255:	e8 14 f6 ff ff       	call   f010186e <page_insert>$/;"	l
f010225a	obj/kern/kernel.asm	/^f010225a:	85 c0                	test   %eax,%eax$/;"	l
f010225c	obj/kern/kernel.asm	/^f010225c:	74 24                	je     f0102282 <mem_init+0x8ed>$/;"	l
f010225e	obj/kern/kernel.asm	/^f010225e:	c7 44 24 0c f4 8a 10 	movl   $0xf0108af4,0xc(%esp)$/;"	l
f0102265	obj/kern/kernel.asm	/^f0102265:	f0 $/;"	l
f0102266	obj/kern/kernel.asm	/^f0102266:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010226d	obj/kern/kernel.asm	/^f010226d:	f0 $/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	c7 44 24 04 44 04 00 	movl   $0x444,0x4(%esp)$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	00 $/;"	l
f0102276	obj/kern/kernel.asm	/^f0102276:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010227d	obj/kern/kernel.asm	/^f010227d:	e8 1b de ff ff       	call   f010009d <_panic>$/;"	l
f0102282	obj/kern/kernel.asm	/^f0102282:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102289	obj/kern/kernel.asm	/^f0102289:	00 $/;"	l
f010228a	obj/kern/kernel.asm	/^f010228a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102291	obj/kern/kernel.asm	/^f0102291:	00 $/;"	l
f0102292	obj/kern/kernel.asm	/^f0102292:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102296	obj/kern/kernel.asm	/^f0102296:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f010229b	obj/kern/kernel.asm	/^f010229b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010229e	obj/kern/kernel.asm	/^f010229e:	e8 cb f5 ff ff       	call   f010186e <page_insert>$/;"	l
f01022a3	obj/kern/kernel.asm	/^f01022a3:	85 c0                	test   %eax,%eax$/;"	l
f01022a5	obj/kern/kernel.asm	/^f01022a5:	74 24                	je     f01022cb <mem_init+0x936>$/;"	l
f01022a7	obj/kern/kernel.asm	/^f01022a7:	c7 44 24 0c f4 8a 10 	movl   $0xf0108af4,0xc(%esp)$/;"	l
f01022ae	obj/kern/kernel.asm	/^f01022ae:	f0 $/;"	l
f01022af	obj/kern/kernel.asm	/^f01022af:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01022b6	obj/kern/kernel.asm	/^f01022b6:	f0 $/;"	l
f01022b7	obj/kern/kernel.asm	/^f01022b7:	c7 44 24 04 47 04 00 	movl   $0x447,0x4(%esp)$/;"	l
f01022be	obj/kern/kernel.asm	/^f01022be:	00 $/;"	l
f01022bf	obj/kern/kernel.asm	/^f01022bf:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01022c6	obj/kern/kernel.asm	/^f01022c6:	e8 d2 dd ff ff       	call   f010009d <_panic>$/;"	l
f01022cb	obj/kern/kernel.asm	/^f01022cb:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f01022d0	obj/kern/kernel.asm	/^f01022d0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01022d3	obj/kern/kernel.asm	/^f01022d3:	8b 0d a4 4e 2c f0    	mov    0xf02c4ea4,%ecx$/;"	l
f01022d9	obj/kern/kernel.asm	/^f01022d9:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f01022dc	obj/kern/kernel.asm	/^f01022dc:	8b 00                	mov    (%eax),%eax$/;"	l
f01022de	obj/kern/kernel.asm	/^f01022de:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f01022e1	obj/kern/kernel.asm	/^f01022e1:	89 c2                	mov    %eax,%edx$/;"	l
f01022e3	obj/kern/kernel.asm	/^f01022e3:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01022e9	obj/kern/kernel.asm	/^f01022e9:	89 f0                	mov    %esi,%eax$/;"	l
f01022eb	obj/kern/kernel.asm	/^f01022eb:	29 c8                	sub    %ecx,%eax$/;"	l
f01022ed	obj/kern/kernel.asm	/^f01022ed:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01022f3	obj/kern/kernel.asm	/^f01022f3:	39 c2                	cmp    %eax,%edx$/;"	l
f01022f5	obj/kern/kernel.asm	/^f01022f5:	74 24                	je     f010231b <mem_init+0x986>$/;"	l
f01022f7	obj/kern/kernel.asm	/^f01022f7:	c7 44 24 0c 24 8b 10 	movl   $0xf0108b24,0xc(%esp)$/;"	l
f01022fe	obj/kern/kernel.asm	/^f01022fe:	f0 $/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102306	obj/kern/kernel.asm	/^f0102306:	f0 $/;"	l
f0102307	obj/kern/kernel.asm	/^f0102307:	c7 44 24 04 4a 04 00 	movl   $0x44a,0x4(%esp)$/;"	l
f010230e	obj/kern/kernel.asm	/^f010230e:	00 $/;"	l
f010230f	obj/kern/kernel.asm	/^f010230f:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102316	obj/kern/kernel.asm	/^f0102316:	e8 82 dd ff ff       	call   f010009d <_panic>$/;"	l
f010231b	obj/kern/kernel.asm	/^f010231b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102320	obj/kern/kernel.asm	/^f0102320:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	e8 fd ea ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f0102328	obj/kern/kernel.asm	/^f0102328:	89 da                	mov    %ebx,%edx$/;"	l
f010232a	obj/kern/kernel.asm	/^f010232a:	2b 55 c8             	sub    -0x38(%ebp),%edx$/;"	l
f010232d	obj/kern/kernel.asm	/^f010232d:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102330	obj/kern/kernel.asm	/^f0102330:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102333	obj/kern/kernel.asm	/^f0102333:	39 d0                	cmp    %edx,%eax$/;"	l
f0102335	obj/kern/kernel.asm	/^f0102335:	74 24                	je     f010235b <mem_init+0x9c6>$/;"	l
f0102337	obj/kern/kernel.asm	/^f0102337:	c7 44 24 0c 4c 8b 10 	movl   $0xf0108b4c,0xc(%esp)$/;"	l
f010233e	obj/kern/kernel.asm	/^f010233e:	f0 $/;"	l
f010233f	obj/kern/kernel.asm	/^f010233f:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102346	obj/kern/kernel.asm	/^f0102346:	f0 $/;"	l
f0102347	obj/kern/kernel.asm	/^f0102347:	c7 44 24 04 4b 04 00 	movl   $0x44b,0x4(%esp)$/;"	l
f010234e	obj/kern/kernel.asm	/^f010234e:	00 $/;"	l
f010234f	obj/kern/kernel.asm	/^f010234f:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102356	obj/kern/kernel.asm	/^f0102356:	e8 42 dd ff ff       	call   f010009d <_panic>$/;"	l
f010235b	obj/kern/kernel.asm	/^f010235b:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102360	obj/kern/kernel.asm	/^f0102360:	74 24                	je     f0102386 <mem_init+0x9f1>$/;"	l
f0102362	obj/kern/kernel.asm	/^f0102362:	c7 44 24 0c 26 94 10 	movl   $0xf0109426,0xc(%esp)$/;"	l
f0102369	obj/kern/kernel.asm	/^f0102369:	f0 $/;"	l
f010236a	obj/kern/kernel.asm	/^f010236a:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102371	obj/kern/kernel.asm	/^f0102371:	f0 $/;"	l
f0102372	obj/kern/kernel.asm	/^f0102372:	c7 44 24 04 4c 04 00 	movl   $0x44c,0x4(%esp)$/;"	l
f0102379	obj/kern/kernel.asm	/^f0102379:	00 $/;"	l
f010237a	obj/kern/kernel.asm	/^f010237a:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	e8 17 dd ff ff       	call   f010009d <_panic>$/;"	l
f0102386	obj/kern/kernel.asm	/^f0102386:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f010238b	obj/kern/kernel.asm	/^f010238b:	74 24                	je     f01023b1 <mem_init+0xa1c>$/;"	l
f010238d	obj/kern/kernel.asm	/^f010238d:	c7 44 24 0c 37 94 10 	movl   $0xf0109437,0xc(%esp)$/;"	l
f0102394	obj/kern/kernel.asm	/^f0102394:	f0 $/;"	l
f0102395	obj/kern/kernel.asm	/^f0102395:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010239c	obj/kern/kernel.asm	/^f010239c:	f0 $/;"	l
f010239d	obj/kern/kernel.asm	/^f010239d:	c7 44 24 04 4d 04 00 	movl   $0x44d,0x4(%esp)$/;"	l
f01023a4	obj/kern/kernel.asm	/^f01023a4:	00 $/;"	l
f01023a5	obj/kern/kernel.asm	/^f01023a5:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01023ac	obj/kern/kernel.asm	/^f01023ac:	e8 ec dc ff ff       	call   f010009d <_panic>$/;"	l
f01023b1	obj/kern/kernel.asm	/^f01023b1:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01023b8	obj/kern/kernel.asm	/^f01023b8:	00 $/;"	l
f01023b9	obj/kern/kernel.asm	/^f01023b9:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01023c0	obj/kern/kernel.asm	/^f01023c0:	00 $/;"	l
f01023c1	obj/kern/kernel.asm	/^f01023c1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01023c5	obj/kern/kernel.asm	/^f01023c5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01023c8	obj/kern/kernel.asm	/^f01023c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01023cb	obj/kern/kernel.asm	/^f01023cb:	e8 9e f4 ff ff       	call   f010186e <page_insert>$/;"	l
f01023d0	obj/kern/kernel.asm	/^f01023d0:	85 c0                	test   %eax,%eax$/;"	l
f01023d2	obj/kern/kernel.asm	/^f01023d2:	74 24                	je     f01023f8 <mem_init+0xa63>$/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	c7 44 24 0c 7c 8b 10 	movl   $0xf0108b7c,0xc(%esp)$/;"	l
f01023db	obj/kern/kernel.asm	/^f01023db:	f0 $/;"	l
f01023dc	obj/kern/kernel.asm	/^f01023dc:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01023e3	obj/kern/kernel.asm	/^f01023e3:	f0 $/;"	l
f01023e4	obj/kern/kernel.asm	/^f01023e4:	c7 44 24 04 50 04 00 	movl   $0x450,0x4(%esp)$/;"	l
f01023eb	obj/kern/kernel.asm	/^f01023eb:	00 $/;"	l
f01023ec	obj/kern/kernel.asm	/^f01023ec:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01023f3	obj/kern/kernel.asm	/^f01023f3:	e8 a5 dc ff ff       	call   f010009d <_panic>$/;"	l
f01023f8	obj/kern/kernel.asm	/^f01023f8:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01023fd	obj/kern/kernel.asm	/^f01023fd:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402:	e8 1e ea ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f0102407	obj/kern/kernel.asm	/^f0102407:	89 fa                	mov    %edi,%edx$/;"	l
f0102409	obj/kern/kernel.asm	/^f0102409:	2b 15 a4 4e 2c f0    	sub    0xf02c4ea4,%edx$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102412	obj/kern/kernel.asm	/^f0102412:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102415	obj/kern/kernel.asm	/^f0102415:	39 d0                	cmp    %edx,%eax$/;"	l
f0102417	obj/kern/kernel.asm	/^f0102417:	74 24                	je     f010243d <mem_init+0xaa8>$/;"	l
f0102419	obj/kern/kernel.asm	/^f0102419:	c7 44 24 0c b8 8b 10 	movl   $0xf0108bb8,0xc(%esp)$/;"	l
f0102420	obj/kern/kernel.asm	/^f0102420:	f0 $/;"	l
f0102421	obj/kern/kernel.asm	/^f0102421:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102428	obj/kern/kernel.asm	/^f0102428:	f0 $/;"	l
f0102429	obj/kern/kernel.asm	/^f0102429:	c7 44 24 04 51 04 00 	movl   $0x451,0x4(%esp)$/;"	l
f0102430	obj/kern/kernel.asm	/^f0102430:	00 $/;"	l
f0102431	obj/kern/kernel.asm	/^f0102431:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102438	obj/kern/kernel.asm	/^f0102438:	e8 60 dc ff ff       	call   f010009d <_panic>$/;"	l
f010243d	obj/kern/kernel.asm	/^f010243d:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102442	obj/kern/kernel.asm	/^f0102442:	74 24                	je     f0102468 <mem_init+0xad3>$/;"	l
f0102444	obj/kern/kernel.asm	/^f0102444:	c7 44 24 0c 48 94 10 	movl   $0xf0109448,0xc(%esp)$/;"	l
f010244b	obj/kern/kernel.asm	/^f010244b:	f0 $/;"	l
f010244c	obj/kern/kernel.asm	/^f010244c:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102453	obj/kern/kernel.asm	/^f0102453:	f0 $/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	c7 44 24 04 52 04 00 	movl   $0x452,0x4(%esp)$/;"	l
f010245b	obj/kern/kernel.asm	/^f010245b:	00 $/;"	l
f010245c	obj/kern/kernel.asm	/^f010245c:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102463	obj/kern/kernel.asm	/^f0102463:	e8 35 dc ff ff       	call   f010009d <_panic>$/;"	l
f0102468	obj/kern/kernel.asm	/^f0102468:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010246f	obj/kern/kernel.asm	/^f010246f:	e8 2a ef ff ff       	call   f010139e <page_alloc>$/;"	l
f0102474	obj/kern/kernel.asm	/^f0102474:	85 c0                	test   %eax,%eax$/;"	l
f0102476	obj/kern/kernel.asm	/^f0102476:	74 24                	je     f010249c <mem_init+0xb07>$/;"	l
f0102478	obj/kern/kernel.asm	/^f0102478:	c7 44 24 0c d4 93 10 	movl   $0xf01093d4,0xc(%esp)$/;"	l
f010247f	obj/kern/kernel.asm	/^f010247f:	f0 $/;"	l
f0102480	obj/kern/kernel.asm	/^f0102480:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102487	obj/kern/kernel.asm	/^f0102487:	f0 $/;"	l
f0102488	obj/kern/kernel.asm	/^f0102488:	c7 44 24 04 55 04 00 	movl   $0x455,0x4(%esp)$/;"	l
f010248f	obj/kern/kernel.asm	/^f010248f:	00 $/;"	l
f0102490	obj/kern/kernel.asm	/^f0102490:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102497	obj/kern/kernel.asm	/^f0102497:	e8 01 dc ff ff       	call   f010009d <_panic>$/;"	l
f010249c	obj/kern/kernel.asm	/^f010249c:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01024a3	obj/kern/kernel.asm	/^f01024a3:	00 $/;"	l
f01024a4	obj/kern/kernel.asm	/^f01024a4:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01024ab	obj/kern/kernel.asm	/^f01024ab:	00 $/;"	l
f01024ac	obj/kern/kernel.asm	/^f01024ac:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01024b0	obj/kern/kernel.asm	/^f01024b0:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f01024b5	obj/kern/kernel.asm	/^f01024b5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01024b8	obj/kern/kernel.asm	/^f01024b8:	e8 b1 f3 ff ff       	call   f010186e <page_insert>$/;"	l
f01024bd	obj/kern/kernel.asm	/^f01024bd:	85 c0                	test   %eax,%eax$/;"	l
f01024bf	obj/kern/kernel.asm	/^f01024bf:	74 24                	je     f01024e5 <mem_init+0xb50>$/;"	l
f01024c1	obj/kern/kernel.asm	/^f01024c1:	c7 44 24 0c 7c 8b 10 	movl   $0xf0108b7c,0xc(%esp)$/;"	l
f01024c8	obj/kern/kernel.asm	/^f01024c8:	f0 $/;"	l
f01024c9	obj/kern/kernel.asm	/^f01024c9:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01024d0	obj/kern/kernel.asm	/^f01024d0:	f0 $/;"	l
f01024d1	obj/kern/kernel.asm	/^f01024d1:	c7 44 24 04 58 04 00 	movl   $0x458,0x4(%esp)$/;"	l
f01024d8	obj/kern/kernel.asm	/^f01024d8:	00 $/;"	l
f01024d9	obj/kern/kernel.asm	/^f01024d9:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01024e0	obj/kern/kernel.asm	/^f01024e0:	e8 b8 db ff ff       	call   f010009d <_panic>$/;"	l
f01024e5	obj/kern/kernel.asm	/^f01024e5:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01024ea	obj/kern/kernel.asm	/^f01024ea:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f01024ef	obj/kern/kernel.asm	/^f01024ef:	e8 31 e9 ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f01024f4	obj/kern/kernel.asm	/^f01024f4:	89 fa                	mov    %edi,%edx$/;"	l
f01024f6	obj/kern/kernel.asm	/^f01024f6:	2b 15 a4 4e 2c f0    	sub    0xf02c4ea4,%edx$/;"	l
f01024fc	obj/kern/kernel.asm	/^f01024fc:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01024ff	obj/kern/kernel.asm	/^f01024ff:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102502	obj/kern/kernel.asm	/^f0102502:	39 d0                	cmp    %edx,%eax$/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	74 24                	je     f010252a <mem_init+0xb95>$/;"	l
f0102506	obj/kern/kernel.asm	/^f0102506:	c7 44 24 0c b8 8b 10 	movl   $0xf0108bb8,0xc(%esp)$/;"	l
f010250d	obj/kern/kernel.asm	/^f010250d:	f0 $/;"	l
f010250e	obj/kern/kernel.asm	/^f010250e:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102515	obj/kern/kernel.asm	/^f0102515:	f0 $/;"	l
f0102516	obj/kern/kernel.asm	/^f0102516:	c7 44 24 04 59 04 00 	movl   $0x459,0x4(%esp)$/;"	l
f010251d	obj/kern/kernel.asm	/^f010251d:	00 $/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102525	obj/kern/kernel.asm	/^f0102525:	e8 73 db ff ff       	call   f010009d <_panic>$/;"	l
f010252a	obj/kern/kernel.asm	/^f010252a:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f010252f	obj/kern/kernel.asm	/^f010252f:	74 24                	je     f0102555 <mem_init+0xbc0>$/;"	l
f0102531	obj/kern/kernel.asm	/^f0102531:	c7 44 24 0c 48 94 10 	movl   $0xf0109448,0xc(%esp)$/;"	l
f0102538	obj/kern/kernel.asm	/^f0102538:	f0 $/;"	l
f0102539	obj/kern/kernel.asm	/^f0102539:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102540	obj/kern/kernel.asm	/^f0102540:	f0 $/;"	l
f0102541	obj/kern/kernel.asm	/^f0102541:	c7 44 24 04 5a 04 00 	movl   $0x45a,0x4(%esp)$/;"	l
f0102548	obj/kern/kernel.asm	/^f0102548:	00 $/;"	l
f0102549	obj/kern/kernel.asm	/^f0102549:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102550	obj/kern/kernel.asm	/^f0102550:	e8 48 db ff ff       	call   f010009d <_panic>$/;"	l
f0102555	obj/kern/kernel.asm	/^f0102555:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010255c	obj/kern/kernel.asm	/^f010255c:	e8 3d ee ff ff       	call   f010139e <page_alloc>$/;"	l
f0102561	obj/kern/kernel.asm	/^f0102561:	85 c0                	test   %eax,%eax$/;"	l
f0102563	obj/kern/kernel.asm	/^f0102563:	74 24                	je     f0102589 <mem_init+0xbf4>$/;"	l
f0102565	obj/kern/kernel.asm	/^f0102565:	c7 44 24 0c d4 93 10 	movl   $0xf01093d4,0xc(%esp)$/;"	l
f010256c	obj/kern/kernel.asm	/^f010256c:	f0 $/;"	l
f010256d	obj/kern/kernel.asm	/^f010256d:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102574	obj/kern/kernel.asm	/^f0102574:	f0 $/;"	l
f0102575	obj/kern/kernel.asm	/^f0102575:	c7 44 24 04 5e 04 00 	movl   $0x45e,0x4(%esp)$/;"	l
f010257c	obj/kern/kernel.asm	/^f010257c:	00 $/;"	l
f010257d	obj/kern/kernel.asm	/^f010257d:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102584	obj/kern/kernel.asm	/^f0102584:	e8 14 db ff ff       	call   f010009d <_panic>$/;"	l
f0102589	obj/kern/kernel.asm	/^f0102589:	8b 15 a0 4e 2c f0    	mov    0xf02c4ea0,%edx$/;"	l
f010258f	obj/kern/kernel.asm	/^f010258f:	8b 02                	mov    (%edx),%eax$/;"	l
f0102591	obj/kern/kernel.asm	/^f0102591:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102596	obj/kern/kernel.asm	/^f0102596:	89 c1                	mov    %eax,%ecx$/;"	l
f0102598	obj/kern/kernel.asm	/^f0102598:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010259b	obj/kern/kernel.asm	/^f010259b:	3b 0d 9c 4e 2c f0    	cmp    0xf02c4e9c,%ecx$/;"	l
f01025a1	obj/kern/kernel.asm	/^f01025a1:	72 20                	jb     f01025c3 <mem_init+0xc2e>$/;"	l
f01025a3	obj/kern/kernel.asm	/^f01025a3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01025a7	obj/kern/kernel.asm	/^f01025a7:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f01025ae	obj/kern/kernel.asm	/^f01025ae:	f0 $/;"	l
f01025af	obj/kern/kernel.asm	/^f01025af:	c7 44 24 04 61 04 00 	movl   $0x461,0x4(%esp)$/;"	l
f01025b6	obj/kern/kernel.asm	/^f01025b6:	00 $/;"	l
f01025b7	obj/kern/kernel.asm	/^f01025b7:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01025be	obj/kern/kernel.asm	/^f01025be:	e8 da da ff ff       	call   f010009d <_panic>$/;"	l
f01025c3	obj/kern/kernel.asm	/^f01025c3:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01025c8	obj/kern/kernel.asm	/^f01025c8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01025cb	obj/kern/kernel.asm	/^f01025cb:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01025d2	obj/kern/kernel.asm	/^f01025d2:	00 $/;"	l
f01025d3	obj/kern/kernel.asm	/^f01025d3:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01025da	obj/kern/kernel.asm	/^f01025da:	00 $/;"	l
f01025db	obj/kern/kernel.asm	/^f01025db:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01025de	obj/kern/kernel.asm	/^f01025de:	e8 a1 ee ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f01025e3	obj/kern/kernel.asm	/^f01025e3:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f01025e6	obj/kern/kernel.asm	/^f01025e6:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	39 d0                	cmp    %edx,%eax$/;"	l
f01025eb	obj/kern/kernel.asm	/^f01025eb:	74 24                	je     f0102611 <mem_init+0xc7c>$/;"	l
f01025ed	obj/kern/kernel.asm	/^f01025ed:	c7 44 24 0c e8 8b 10 	movl   $0xf0108be8,0xc(%esp)$/;"	l
f01025f4	obj/kern/kernel.asm	/^f01025f4:	f0 $/;"	l
f01025f5	obj/kern/kernel.asm	/^f01025f5:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01025fc	obj/kern/kernel.asm	/^f01025fc:	f0 $/;"	l
f01025fd	obj/kern/kernel.asm	/^f01025fd:	c7 44 24 04 62 04 00 	movl   $0x462,0x4(%esp)$/;"	l
f0102604	obj/kern/kernel.asm	/^f0102604:	00 $/;"	l
f0102605	obj/kern/kernel.asm	/^f0102605:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010260c	obj/kern/kernel.asm	/^f010260c:	e8 8c da ff ff       	call   f010009d <_panic>$/;"	l
f0102611	obj/kern/kernel.asm	/^f0102611:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0102618	obj/kern/kernel.asm	/^f0102618:	00 $/;"	l
f0102619	obj/kern/kernel.asm	/^f0102619:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102620	obj/kern/kernel.asm	/^f0102620:	00 $/;"	l
f0102621	obj/kern/kernel.asm	/^f0102621:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0102625	obj/kern/kernel.asm	/^f0102625:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f010262a	obj/kern/kernel.asm	/^f010262a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010262d	obj/kern/kernel.asm	/^f010262d:	e8 3c f2 ff ff       	call   f010186e <page_insert>$/;"	l
f0102632	obj/kern/kernel.asm	/^f0102632:	85 c0                	test   %eax,%eax$/;"	l
f0102634	obj/kern/kernel.asm	/^f0102634:	74 24                	je     f010265a <mem_init+0xcc5>$/;"	l
f0102636	obj/kern/kernel.asm	/^f0102636:	c7 44 24 0c 28 8c 10 	movl   $0xf0108c28,0xc(%esp)$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	f0 $/;"	l
f010263e	obj/kern/kernel.asm	/^f010263e:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102645	obj/kern/kernel.asm	/^f0102645:	f0 $/;"	l
f0102646	obj/kern/kernel.asm	/^f0102646:	c7 44 24 04 65 04 00 	movl   $0x465,0x4(%esp)$/;"	l
f010264d	obj/kern/kernel.asm	/^f010264d:	00 $/;"	l
f010264e	obj/kern/kernel.asm	/^f010264e:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102655	obj/kern/kernel.asm	/^f0102655:	e8 43 da ff ff       	call   f010009d <_panic>$/;"	l
f010265a	obj/kern/kernel.asm	/^f010265a:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f010265f	obj/kern/kernel.asm	/^f010265f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102662	obj/kern/kernel.asm	/^f0102662:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102667	obj/kern/kernel.asm	/^f0102667:	e8 b9 e7 ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f010266c	obj/kern/kernel.asm	/^f010266c:	89 fa                	mov    %edi,%edx$/;"	l
f010266e	obj/kern/kernel.asm	/^f010266e:	2b 15 a4 4e 2c f0    	sub    0xf02c4ea4,%edx$/;"	l
f0102674	obj/kern/kernel.asm	/^f0102674:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102677	obj/kern/kernel.asm	/^f0102677:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010267a	obj/kern/kernel.asm	/^f010267a:	39 d0                	cmp    %edx,%eax$/;"	l
f010267c	obj/kern/kernel.asm	/^f010267c:	74 24                	je     f01026a2 <mem_init+0xd0d>$/;"	l
f010267e	obj/kern/kernel.asm	/^f010267e:	c7 44 24 0c b8 8b 10 	movl   $0xf0108bb8,0xc(%esp)$/;"	l
f0102685	obj/kern/kernel.asm	/^f0102685:	f0 $/;"	l
f0102686	obj/kern/kernel.asm	/^f0102686:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010268d	obj/kern/kernel.asm	/^f010268d:	f0 $/;"	l
f010268e	obj/kern/kernel.asm	/^f010268e:	c7 44 24 04 66 04 00 	movl   $0x466,0x4(%esp)$/;"	l
f0102695	obj/kern/kernel.asm	/^f0102695:	00 $/;"	l
f0102696	obj/kern/kernel.asm	/^f0102696:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010269d	obj/kern/kernel.asm	/^f010269d:	e8 fb d9 ff ff       	call   f010009d <_panic>$/;"	l
f01026a2	obj/kern/kernel.asm	/^f01026a2:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f01026a7	obj/kern/kernel.asm	/^f01026a7:	74 24                	je     f01026cd <mem_init+0xd38>$/;"	l
f01026a9	obj/kern/kernel.asm	/^f01026a9:	c7 44 24 0c 48 94 10 	movl   $0xf0109448,0xc(%esp)$/;"	l
f01026b0	obj/kern/kernel.asm	/^f01026b0:	f0 $/;"	l
f01026b1	obj/kern/kernel.asm	/^f01026b1:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01026b8	obj/kern/kernel.asm	/^f01026b8:	f0 $/;"	l
f01026b9	obj/kern/kernel.asm	/^f01026b9:	c7 44 24 04 67 04 00 	movl   $0x467,0x4(%esp)$/;"	l
f01026c0	obj/kern/kernel.asm	/^f01026c0:	00 $/;"	l
f01026c1	obj/kern/kernel.asm	/^f01026c1:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01026c8	obj/kern/kernel.asm	/^f01026c8:	e8 d0 d9 ff ff       	call   f010009d <_panic>$/;"	l
f01026cd	obj/kern/kernel.asm	/^f01026cd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01026d4	obj/kern/kernel.asm	/^f01026d4:	00 $/;"	l
f01026d5	obj/kern/kernel.asm	/^f01026d5:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01026dc	obj/kern/kernel.asm	/^f01026dc:	00 $/;"	l
f01026dd	obj/kern/kernel.asm	/^f01026dd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01026e0	obj/kern/kernel.asm	/^f01026e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01026e3	obj/kern/kernel.asm	/^f01026e3:	e8 9c ed ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f01026e8	obj/kern/kernel.asm	/^f01026e8:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01026eb	obj/kern/kernel.asm	/^f01026eb:	75 24                	jne    f0102711 <mem_init+0xd7c>$/;"	l
f01026ed	obj/kern/kernel.asm	/^f01026ed:	c7 44 24 0c 68 8c 10 	movl   $0xf0108c68,0xc(%esp)$/;"	l
f01026f4	obj/kern/kernel.asm	/^f01026f4:	f0 $/;"	l
f01026f5	obj/kern/kernel.asm	/^f01026f5:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01026fc	obj/kern/kernel.asm	/^f01026fc:	f0 $/;"	l
f01026fd	obj/kern/kernel.asm	/^f01026fd:	c7 44 24 04 68 04 00 	movl   $0x468,0x4(%esp)$/;"	l
f0102704	obj/kern/kernel.asm	/^f0102704:	00 $/;"	l
f0102705	obj/kern/kernel.asm	/^f0102705:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010270c	obj/kern/kernel.asm	/^f010270c:	e8 8c d9 ff ff       	call   f010009d <_panic>$/;"	l
f0102711	obj/kern/kernel.asm	/^f0102711:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0102716	obj/kern/kernel.asm	/^f0102716:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102719	obj/kern/kernel.asm	/^f0102719:	75 24                	jne    f010273f <mem_init+0xdaa>$/;"	l
f010271b	obj/kern/kernel.asm	/^f010271b:	c7 44 24 0c 59 94 10 	movl   $0xf0109459,0xc(%esp)$/;"	l
f0102722	obj/kern/kernel.asm	/^f0102722:	f0 $/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010272a	obj/kern/kernel.asm	/^f010272a:	f0 $/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	c7 44 24 04 69 04 00 	movl   $0x469,0x4(%esp)$/;"	l
f0102732	obj/kern/kernel.asm	/^f0102732:	00 $/;"	l
f0102733	obj/kern/kernel.asm	/^f0102733:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010273a	obj/kern/kernel.asm	/^f010273a:	e8 5e d9 ff ff       	call   f010009d <_panic>$/;"	l
f010273f	obj/kern/kernel.asm	/^f010273f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102746	obj/kern/kernel.asm	/^f0102746:	00 $/;"	l
f0102747	obj/kern/kernel.asm	/^f0102747:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010274e	obj/kern/kernel.asm	/^f010274e:	00 $/;"	l
f010274f	obj/kern/kernel.asm	/^f010274f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0102753	obj/kern/kernel.asm	/^f0102753:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102756	obj/kern/kernel.asm	/^f0102756:	e8 13 f1 ff ff       	call   f010186e <page_insert>$/;"	l
f010275b	obj/kern/kernel.asm	/^f010275b:	85 c0                	test   %eax,%eax$/;"	l
f010275d	obj/kern/kernel.asm	/^f010275d:	74 24                	je     f0102783 <mem_init+0xdee>$/;"	l
f010275f	obj/kern/kernel.asm	/^f010275f:	c7 44 24 0c 7c 8b 10 	movl   $0xf0108b7c,0xc(%esp)$/;"	l
f0102766	obj/kern/kernel.asm	/^f0102766:	f0 $/;"	l
f0102767	obj/kern/kernel.asm	/^f0102767:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010276e	obj/kern/kernel.asm	/^f010276e:	f0 $/;"	l
f010276f	obj/kern/kernel.asm	/^f010276f:	c7 44 24 04 6c 04 00 	movl   $0x46c,0x4(%esp)$/;"	l
f0102776	obj/kern/kernel.asm	/^f0102776:	00 $/;"	l
f0102777	obj/kern/kernel.asm	/^f0102777:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010277e	obj/kern/kernel.asm	/^f010277e:	e8 1a d9 ff ff       	call   f010009d <_panic>$/;"	l
f0102783	obj/kern/kernel.asm	/^f0102783:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010278a	obj/kern/kernel.asm	/^f010278a:	00 $/;"	l
f010278b	obj/kern/kernel.asm	/^f010278b:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	00 $/;"	l
f0102793	obj/kern/kernel.asm	/^f0102793:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0102798	obj/kern/kernel.asm	/^f0102798:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010279b	obj/kern/kernel.asm	/^f010279b:	e8 e4 ec ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f01027a0	obj/kern/kernel.asm	/^f01027a0:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f01027a3	obj/kern/kernel.asm	/^f01027a3:	75 24                	jne    f01027c9 <mem_init+0xe34>$/;"	l
f01027a5	obj/kern/kernel.asm	/^f01027a5:	c7 44 24 0c 9c 8c 10 	movl   $0xf0108c9c,0xc(%esp)$/;"	l
f01027ac	obj/kern/kernel.asm	/^f01027ac:	f0 $/;"	l
f01027ad	obj/kern/kernel.asm	/^f01027ad:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01027b4	obj/kern/kernel.asm	/^f01027b4:	f0 $/;"	l
f01027b5	obj/kern/kernel.asm	/^f01027b5:	c7 44 24 04 6d 04 00 	movl   $0x46d,0x4(%esp)$/;"	l
f01027bc	obj/kern/kernel.asm	/^f01027bc:	00 $/;"	l
f01027bd	obj/kern/kernel.asm	/^f01027bd:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01027c4	obj/kern/kernel.asm	/^f01027c4:	e8 d4 d8 ff ff       	call   f010009d <_panic>$/;"	l
f01027c9	obj/kern/kernel.asm	/^f01027c9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01027d0	obj/kern/kernel.asm	/^f01027d0:	00 $/;"	l
f01027d1	obj/kern/kernel.asm	/^f01027d1:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	00 $/;"	l
f01027d9	obj/kern/kernel.asm	/^f01027d9:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f01027de	obj/kern/kernel.asm	/^f01027de:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01027e1	obj/kern/kernel.asm	/^f01027e1:	e8 9e ec ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f01027e6	obj/kern/kernel.asm	/^f01027e6:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01027e9	obj/kern/kernel.asm	/^f01027e9:	74 24                	je     f010280f <mem_init+0xe7a>$/;"	l
f01027eb	obj/kern/kernel.asm	/^f01027eb:	c7 44 24 0c d0 8c 10 	movl   $0xf0108cd0,0xc(%esp)$/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	f0 $/;"	l
f01027f3	obj/kern/kernel.asm	/^f01027f3:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01027fa	obj/kern/kernel.asm	/^f01027fa:	f0 $/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	c7 44 24 04 6e 04 00 	movl   $0x46e,0x4(%esp)$/;"	l
f0102802	obj/kern/kernel.asm	/^f0102802:	00 $/;"	l
f0102803	obj/kern/kernel.asm	/^f0102803:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010280a	obj/kern/kernel.asm	/^f010280a:	e8 8e d8 ff ff       	call   f010009d <_panic>$/;"	l
f010280f	obj/kern/kernel.asm	/^f010280f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102816	obj/kern/kernel.asm	/^f0102816:	00 $/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f010281e	obj/kern/kernel.asm	/^f010281e:	00 $/;"	l
f010281f	obj/kern/kernel.asm	/^f010281f:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102823	obj/kern/kernel.asm	/^f0102823:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0102828	obj/kern/kernel.asm	/^f0102828:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	e8 3e f0 ff ff       	call   f010186e <page_insert>$/;"	l
f0102830	obj/kern/kernel.asm	/^f0102830:	85 c0                	test   %eax,%eax$/;"	l
f0102832	obj/kern/kernel.asm	/^f0102832:	78 24                	js     f0102858 <mem_init+0xec3>$/;"	l
f0102834	obj/kern/kernel.asm	/^f0102834:	c7 44 24 0c 08 8d 10 	movl   $0xf0108d08,0xc(%esp)$/;"	l
f010283b	obj/kern/kernel.asm	/^f010283b:	f0 $/;"	l
f010283c	obj/kern/kernel.asm	/^f010283c:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102843	obj/kern/kernel.asm	/^f0102843:	f0 $/;"	l
f0102844	obj/kern/kernel.asm	/^f0102844:	c7 44 24 04 71 04 00 	movl   $0x471,0x4(%esp)$/;"	l
f010284b	obj/kern/kernel.asm	/^f010284b:	00 $/;"	l
f010284c	obj/kern/kernel.asm	/^f010284c:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102853	obj/kern/kernel.asm	/^f0102853:	e8 45 d8 ff ff       	call   f010009d <_panic>$/;"	l
f0102858	obj/kern/kernel.asm	/^f0102858:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010285f	obj/kern/kernel.asm	/^f010285f:	00 $/;"	l
f0102860	obj/kern/kernel.asm	/^f0102860:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102867	obj/kern/kernel.asm	/^f0102867:	00 $/;"	l
f0102868	obj/kern/kernel.asm	/^f0102868:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010286c	obj/kern/kernel.asm	/^f010286c:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0102871	obj/kern/kernel.asm	/^f0102871:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102874	obj/kern/kernel.asm	/^f0102874:	e8 f5 ef ff ff       	call   f010186e <page_insert>$/;"	l
f0102879	obj/kern/kernel.asm	/^f0102879:	85 c0                	test   %eax,%eax$/;"	l
f010287b	obj/kern/kernel.asm	/^f010287b:	74 24                	je     f01028a1 <mem_init+0xf0c>$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	c7 44 24 0c 40 8d 10 	movl   $0xf0108d40,0xc(%esp)$/;"	l
f0102884	obj/kern/kernel.asm	/^f0102884:	f0 $/;"	l
f0102885	obj/kern/kernel.asm	/^f0102885:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010288c	obj/kern/kernel.asm	/^f010288c:	f0 $/;"	l
f010288d	obj/kern/kernel.asm	/^f010288d:	c7 44 24 04 74 04 00 	movl   $0x474,0x4(%esp)$/;"	l
f0102894	obj/kern/kernel.asm	/^f0102894:	00 $/;"	l
f0102895	obj/kern/kernel.asm	/^f0102895:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010289c	obj/kern/kernel.asm	/^f010289c:	e8 fc d7 ff ff       	call   f010009d <_panic>$/;"	l
f01028a1	obj/kern/kernel.asm	/^f01028a1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01028a8	obj/kern/kernel.asm	/^f01028a8:	00 $/;"	l
f01028a9	obj/kern/kernel.asm	/^f01028a9:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01028b0	obj/kern/kernel.asm	/^f01028b0:	00 $/;"	l
f01028b1	obj/kern/kernel.asm	/^f01028b1:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f01028b6	obj/kern/kernel.asm	/^f01028b6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01028b9	obj/kern/kernel.asm	/^f01028b9:	e8 c6 eb ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f01028be	obj/kern/kernel.asm	/^f01028be:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01028c1	obj/kern/kernel.asm	/^f01028c1:	74 24                	je     f01028e7 <mem_init+0xf52>$/;"	l
f01028c3	obj/kern/kernel.asm	/^f01028c3:	c7 44 24 0c d0 8c 10 	movl   $0xf0108cd0,0xc(%esp)$/;"	l
f01028ca	obj/kern/kernel.asm	/^f01028ca:	f0 $/;"	l
f01028cb	obj/kern/kernel.asm	/^f01028cb:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01028d2	obj/kern/kernel.asm	/^f01028d2:	f0 $/;"	l
f01028d3	obj/kern/kernel.asm	/^f01028d3:	c7 44 24 04 75 04 00 	movl   $0x475,0x4(%esp)$/;"	l
f01028da	obj/kern/kernel.asm	/^f01028da:	00 $/;"	l
f01028db	obj/kern/kernel.asm	/^f01028db:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01028e2	obj/kern/kernel.asm	/^f01028e2:	e8 b6 d7 ff ff       	call   f010009d <_panic>$/;"	l
f01028e7	obj/kern/kernel.asm	/^f01028e7:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f01028ec	obj/kern/kernel.asm	/^f01028ec:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01028ef	obj/kern/kernel.asm	/^f01028ef:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01028f4	obj/kern/kernel.asm	/^f01028f4:	e8 2c e5 ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f01028f9	obj/kern/kernel.asm	/^f01028f9:	89 c1                	mov    %eax,%ecx$/;"	l
f01028fb	obj/kern/kernel.asm	/^f01028fb:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01028fe	obj/kern/kernel.asm	/^f01028fe:	89 d8                	mov    %ebx,%eax$/;"	l
f0102900	obj/kern/kernel.asm	/^f0102900:	2b 05 a4 4e 2c f0    	sub    0xf02c4ea4,%eax$/;"	l
f0102906	obj/kern/kernel.asm	/^f0102906:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102909	obj/kern/kernel.asm	/^f0102909:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010290c	obj/kern/kernel.asm	/^f010290c:	39 c1                	cmp    %eax,%ecx$/;"	l
f010290e	obj/kern/kernel.asm	/^f010290e:	74 24                	je     f0102934 <mem_init+0xf9f>$/;"	l
f0102910	obj/kern/kernel.asm	/^f0102910:	c7 44 24 0c 7c 8d 10 	movl   $0xf0108d7c,0xc(%esp)$/;"	l
f0102917	obj/kern/kernel.asm	/^f0102917:	f0 $/;"	l
f0102918	obj/kern/kernel.asm	/^f0102918:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010291f	obj/kern/kernel.asm	/^f010291f:	f0 $/;"	l
f0102920	obj/kern/kernel.asm	/^f0102920:	c7 44 24 04 78 04 00 	movl   $0x478,0x4(%esp)$/;"	l
f0102927	obj/kern/kernel.asm	/^f0102927:	00 $/;"	l
f0102928	obj/kern/kernel.asm	/^f0102928:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010292f	obj/kern/kernel.asm	/^f010292f:	e8 69 d7 ff ff       	call   f010009d <_panic>$/;"	l
f0102934	obj/kern/kernel.asm	/^f0102934:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102939	obj/kern/kernel.asm	/^f0102939:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010293c	obj/kern/kernel.asm	/^f010293c:	e8 e4 e4 ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f0102941	obj/kern/kernel.asm	/^f0102941:	39 45 c8             	cmp    %eax,-0x38(%ebp)$/;"	l
f0102944	obj/kern/kernel.asm	/^f0102944:	74 24                	je     f010296a <mem_init+0xfd5>$/;"	l
f0102946	obj/kern/kernel.asm	/^f0102946:	c7 44 24 0c a8 8d 10 	movl   $0xf0108da8,0xc(%esp)$/;"	l
f010294d	obj/kern/kernel.asm	/^f010294d:	f0 $/;"	l
f010294e	obj/kern/kernel.asm	/^f010294e:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102955	obj/kern/kernel.asm	/^f0102955:	f0 $/;"	l
f0102956	obj/kern/kernel.asm	/^f0102956:	c7 44 24 04 79 04 00 	movl   $0x479,0x4(%esp)$/;"	l
f010295d	obj/kern/kernel.asm	/^f010295d:	00 $/;"	l
f010295e	obj/kern/kernel.asm	/^f010295e:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102965	obj/kern/kernel.asm	/^f0102965:	e8 33 d7 ff ff       	call   f010009d <_panic>$/;"	l
f010296a	obj/kern/kernel.asm	/^f010296a:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f010296f	obj/kern/kernel.asm	/^f010296f:	74 24                	je     f0102995 <mem_init+0x1000>$/;"	l
f0102971	obj/kern/kernel.asm	/^f0102971:	c7 44 24 0c 6f 94 10 	movl   $0xf010946f,0xc(%esp)$/;"	l
f0102978	obj/kern/kernel.asm	/^f0102978:	f0 $/;"	l
f0102979	obj/kern/kernel.asm	/^f0102979:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102980	obj/kern/kernel.asm	/^f0102980:	f0 $/;"	l
f0102981	obj/kern/kernel.asm	/^f0102981:	c7 44 24 04 7b 04 00 	movl   $0x47b,0x4(%esp)$/;"	l
f0102988	obj/kern/kernel.asm	/^f0102988:	00 $/;"	l
f0102989	obj/kern/kernel.asm	/^f0102989:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102990	obj/kern/kernel.asm	/^f0102990:	e8 08 d7 ff ff       	call   f010009d <_panic>$/;"	l
f0102995	obj/kern/kernel.asm	/^f0102995:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f010299a	obj/kern/kernel.asm	/^f010299a:	74 24                	je     f01029c0 <mem_init+0x102b>$/;"	l
f010299c	obj/kern/kernel.asm	/^f010299c:	c7 44 24 0c 80 94 10 	movl   $0xf0109480,0xc(%esp)$/;"	l
f01029a3	obj/kern/kernel.asm	/^f01029a3:	f0 $/;"	l
f01029a4	obj/kern/kernel.asm	/^f01029a4:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01029ab	obj/kern/kernel.asm	/^f01029ab:	f0 $/;"	l
f01029ac	obj/kern/kernel.asm	/^f01029ac:	c7 44 24 04 7c 04 00 	movl   $0x47c,0x4(%esp)$/;"	l
f01029b3	obj/kern/kernel.asm	/^f01029b3:	00 $/;"	l
f01029b4	obj/kern/kernel.asm	/^f01029b4:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01029bb	obj/kern/kernel.asm	/^f01029bb:	e8 dd d6 ff ff       	call   f010009d <_panic>$/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01029c7	obj/kern/kernel.asm	/^f01029c7:	e8 d2 e9 ff ff       	call   f010139e <page_alloc>$/;"	l
f01029cc	obj/kern/kernel.asm	/^f01029cc:	85 c0                	test   %eax,%eax$/;"	l
f01029ce	obj/kern/kernel.asm	/^f01029ce:	74 04                	je     f01029d4 <mem_init+0x103f>$/;"	l
f01029d0	obj/kern/kernel.asm	/^f01029d0:	39 c7                	cmp    %eax,%edi$/;"	l
f01029d2	obj/kern/kernel.asm	/^f01029d2:	74 24                	je     f01029f8 <mem_init+0x1063>$/;"	l
f01029d4	obj/kern/kernel.asm	/^f01029d4:	c7 44 24 0c d8 8d 10 	movl   $0xf0108dd8,0xc(%esp)$/;"	l
f01029db	obj/kern/kernel.asm	/^f01029db:	f0 $/;"	l
f01029dc	obj/kern/kernel.asm	/^f01029dc:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01029e3	obj/kern/kernel.asm	/^f01029e3:	f0 $/;"	l
f01029e4	obj/kern/kernel.asm	/^f01029e4:	c7 44 24 04 7f 04 00 	movl   $0x47f,0x4(%esp)$/;"	l
f01029eb	obj/kern/kernel.asm	/^f01029eb:	00 $/;"	l
f01029ec	obj/kern/kernel.asm	/^f01029ec:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01029f3	obj/kern/kernel.asm	/^f01029f3:	e8 a5 d6 ff ff       	call   f010009d <_panic>$/;"	l
f01029f8	obj/kern/kernel.asm	/^f01029f8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01029ff	obj/kern/kernel.asm	/^f01029ff:	00 $/;"	l
f0102a00	obj/kern/kernel.asm	/^f0102a00:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0102a05	obj/kern/kernel.asm	/^f0102a05:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a08	obj/kern/kernel.asm	/^f0102a08:	e8 12 ee ff ff       	call   f010181f <page_remove>$/;"	l
f0102a0d	obj/kern/kernel.asm	/^f0102a0d:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0102a12	obj/kern/kernel.asm	/^f0102a12:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102a15	obj/kern/kernel.asm	/^f0102a15:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102a1a	obj/kern/kernel.asm	/^f0102a1a:	e8 06 e4 ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f0102a1f	obj/kern/kernel.asm	/^f0102a1f:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102a22	obj/kern/kernel.asm	/^f0102a22:	74 24                	je     f0102a48 <mem_init+0x10b3>$/;"	l
f0102a24	obj/kern/kernel.asm	/^f0102a24:	c7 44 24 0c fc 8d 10 	movl   $0xf0108dfc,0xc(%esp)$/;"	l
f0102a2b	obj/kern/kernel.asm	/^f0102a2b:	f0 $/;"	l
f0102a2c	obj/kern/kernel.asm	/^f0102a2c:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102a33	obj/kern/kernel.asm	/^f0102a33:	f0 $/;"	l
f0102a34	obj/kern/kernel.asm	/^f0102a34:	c7 44 24 04 83 04 00 	movl   $0x483,0x4(%esp)$/;"	l
f0102a3b	obj/kern/kernel.asm	/^f0102a3b:	00 $/;"	l
f0102a3c	obj/kern/kernel.asm	/^f0102a3c:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102a43	obj/kern/kernel.asm	/^f0102a43:	e8 55 d6 ff ff       	call   f010009d <_panic>$/;"	l
f0102a48	obj/kern/kernel.asm	/^f0102a48:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102a50	obj/kern/kernel.asm	/^f0102a50:	e8 d0 e3 ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f0102a55	obj/kern/kernel.asm	/^f0102a55:	89 da                	mov    %ebx,%edx$/;"	l
f0102a57	obj/kern/kernel.asm	/^f0102a57:	2b 15 a4 4e 2c f0    	sub    0xf02c4ea4,%edx$/;"	l
f0102a5d	obj/kern/kernel.asm	/^f0102a5d:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102a60	obj/kern/kernel.asm	/^f0102a60:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102a63	obj/kern/kernel.asm	/^f0102a63:	39 d0                	cmp    %edx,%eax$/;"	l
f0102a65	obj/kern/kernel.asm	/^f0102a65:	74 24                	je     f0102a8b <mem_init+0x10f6>$/;"	l
f0102a67	obj/kern/kernel.asm	/^f0102a67:	c7 44 24 0c a8 8d 10 	movl   $0xf0108da8,0xc(%esp)$/;"	l
f0102a6e	obj/kern/kernel.asm	/^f0102a6e:	f0 $/;"	l
f0102a6f	obj/kern/kernel.asm	/^f0102a6f:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102a76	obj/kern/kernel.asm	/^f0102a76:	f0 $/;"	l
f0102a77	obj/kern/kernel.asm	/^f0102a77:	c7 44 24 04 84 04 00 	movl   $0x484,0x4(%esp)$/;"	l
f0102a7e	obj/kern/kernel.asm	/^f0102a7e:	00 $/;"	l
f0102a7f	obj/kern/kernel.asm	/^f0102a7f:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102a86	obj/kern/kernel.asm	/^f0102a86:	e8 12 d6 ff ff       	call   f010009d <_panic>$/;"	l
f0102a8b	obj/kern/kernel.asm	/^f0102a8b:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102a90	obj/kern/kernel.asm	/^f0102a90:	74 24                	je     f0102ab6 <mem_init+0x1121>$/;"	l
f0102a92	obj/kern/kernel.asm	/^f0102a92:	c7 44 24 0c 26 94 10 	movl   $0xf0109426,0xc(%esp)$/;"	l
f0102a99	obj/kern/kernel.asm	/^f0102a99:	f0 $/;"	l
f0102a9a	obj/kern/kernel.asm	/^f0102a9a:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102aa1	obj/kern/kernel.asm	/^f0102aa1:	f0 $/;"	l
f0102aa2	obj/kern/kernel.asm	/^f0102aa2:	c7 44 24 04 85 04 00 	movl   $0x485,0x4(%esp)$/;"	l
f0102aa9	obj/kern/kernel.asm	/^f0102aa9:	00 $/;"	l
f0102aaa	obj/kern/kernel.asm	/^f0102aaa:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102ab1	obj/kern/kernel.asm	/^f0102ab1:	e8 e7 d5 ff ff       	call   f010009d <_panic>$/;"	l
f0102ab6	obj/kern/kernel.asm	/^f0102ab6:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102abb	obj/kern/kernel.asm	/^f0102abb:	74 24                	je     f0102ae1 <mem_init+0x114c>$/;"	l
f0102abd	obj/kern/kernel.asm	/^f0102abd:	c7 44 24 0c 80 94 10 	movl   $0xf0109480,0xc(%esp)$/;"	l
f0102ac4	obj/kern/kernel.asm	/^f0102ac4:	f0 $/;"	l
f0102ac5	obj/kern/kernel.asm	/^f0102ac5:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102acc	obj/kern/kernel.asm	/^f0102acc:	f0 $/;"	l
f0102acd	obj/kern/kernel.asm	/^f0102acd:	c7 44 24 04 86 04 00 	movl   $0x486,0x4(%esp)$/;"	l
f0102ad4	obj/kern/kernel.asm	/^f0102ad4:	00 $/;"	l
f0102ad5	obj/kern/kernel.asm	/^f0102ad5:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102adc	obj/kern/kernel.asm	/^f0102adc:	e8 bc d5 ff ff       	call   f010009d <_panic>$/;"	l
f0102ae1	obj/kern/kernel.asm	/^f0102ae1:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0102ae8	obj/kern/kernel.asm	/^f0102ae8:	00 $/;"	l
f0102ae9	obj/kern/kernel.asm	/^f0102ae9:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102af0	obj/kern/kernel.asm	/^f0102af0:	00 $/;"	l
f0102af1	obj/kern/kernel.asm	/^f0102af1:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102af5	obj/kern/kernel.asm	/^f0102af5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102af8	obj/kern/kernel.asm	/^f0102af8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102afb	obj/kern/kernel.asm	/^f0102afb:	e8 6e ed ff ff       	call   f010186e <page_insert>$/;"	l
f0102b00	obj/kern/kernel.asm	/^f0102b00:	85 c0                	test   %eax,%eax$/;"	l
f0102b02	obj/kern/kernel.asm	/^f0102b02:	74 24                	je     f0102b28 <mem_init+0x1193>$/;"	l
f0102b04	obj/kern/kernel.asm	/^f0102b04:	c7 44 24 0c 20 8e 10 	movl   $0xf0108e20,0xc(%esp)$/;"	l
f0102b0b	obj/kern/kernel.asm	/^f0102b0b:	f0 $/;"	l
f0102b0c	obj/kern/kernel.asm	/^f0102b0c:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102b13	obj/kern/kernel.asm	/^f0102b13:	f0 $/;"	l
f0102b14	obj/kern/kernel.asm	/^f0102b14:	c7 44 24 04 89 04 00 	movl   $0x489,0x4(%esp)$/;"	l
f0102b1b	obj/kern/kernel.asm	/^f0102b1b:	00 $/;"	l
f0102b1c	obj/kern/kernel.asm	/^f0102b1c:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102b23	obj/kern/kernel.asm	/^f0102b23:	e8 75 d5 ff ff       	call   f010009d <_panic>$/;"	l
f0102b28	obj/kern/kernel.asm	/^f0102b28:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102b2d	obj/kern/kernel.asm	/^f0102b2d:	75 24                	jne    f0102b53 <mem_init+0x11be>$/;"	l
f0102b2f	obj/kern/kernel.asm	/^f0102b2f:	c7 44 24 0c 91 94 10 	movl   $0xf0109491,0xc(%esp)$/;"	l
f0102b36	obj/kern/kernel.asm	/^f0102b36:	f0 $/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102b3e	obj/kern/kernel.asm	/^f0102b3e:	f0 $/;"	l
f0102b3f	obj/kern/kernel.asm	/^f0102b3f:	c7 44 24 04 8a 04 00 	movl   $0x48a,0x4(%esp)$/;"	l
f0102b46	obj/kern/kernel.asm	/^f0102b46:	00 $/;"	l
f0102b47	obj/kern/kernel.asm	/^f0102b47:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102b4e	obj/kern/kernel.asm	/^f0102b4e:	e8 4a d5 ff ff       	call   f010009d <_panic>$/;"	l
f0102b53	obj/kern/kernel.asm	/^f0102b53:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0102b56	obj/kern/kernel.asm	/^f0102b56:	74 24                	je     f0102b7c <mem_init+0x11e7>$/;"	l
f0102b58	obj/kern/kernel.asm	/^f0102b58:	c7 44 24 0c 9d 94 10 	movl   $0xf010949d,0xc(%esp)$/;"	l
f0102b5f	obj/kern/kernel.asm	/^f0102b5f:	f0 $/;"	l
f0102b60	obj/kern/kernel.asm	/^f0102b60:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102b67	obj/kern/kernel.asm	/^f0102b67:	f0 $/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	c7 44 24 04 8b 04 00 	movl   $0x48b,0x4(%esp)$/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	00 $/;"	l
f0102b70	obj/kern/kernel.asm	/^f0102b70:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102b77	obj/kern/kernel.asm	/^f0102b77:	e8 21 d5 ff ff       	call   f010009d <_panic>$/;"	l
f0102b7c	obj/kern/kernel.asm	/^f0102b7c:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	00 $/;"	l
f0102b84	obj/kern/kernel.asm	/^f0102b84:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0102b89	obj/kern/kernel.asm	/^f0102b89:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b8c	obj/kern/kernel.asm	/^f0102b8c:	e8 8e ec ff ff       	call   f010181f <page_remove>$/;"	l
f0102b91	obj/kern/kernel.asm	/^f0102b91:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102b99	obj/kern/kernel.asm	/^f0102b99:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102b9e	obj/kern/kernel.asm	/^f0102b9e:	e8 82 e2 ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f0102ba3	obj/kern/kernel.asm	/^f0102ba3:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102ba6	obj/kern/kernel.asm	/^f0102ba6:	74 24                	je     f0102bcc <mem_init+0x1237>$/;"	l
f0102ba8	obj/kern/kernel.asm	/^f0102ba8:	c7 44 24 0c fc 8d 10 	movl   $0xf0108dfc,0xc(%esp)$/;"	l
f0102baf	obj/kern/kernel.asm	/^f0102baf:	f0 $/;"	l
f0102bb0	obj/kern/kernel.asm	/^f0102bb0:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102bb7	obj/kern/kernel.asm	/^f0102bb7:	f0 $/;"	l
f0102bb8	obj/kern/kernel.asm	/^f0102bb8:	c7 44 24 04 8f 04 00 	movl   $0x48f,0x4(%esp)$/;"	l
f0102bbf	obj/kern/kernel.asm	/^f0102bbf:	00 $/;"	l
f0102bc0	obj/kern/kernel.asm	/^f0102bc0:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102bc7	obj/kern/kernel.asm	/^f0102bc7:	e8 d1 d4 ff ff       	call   f010009d <_panic>$/;"	l
f0102bcc	obj/kern/kernel.asm	/^f0102bcc:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102bd1	obj/kern/kernel.asm	/^f0102bd1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	e8 4c e2 ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f0102bd9	obj/kern/kernel.asm	/^f0102bd9:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	74 24                	je     f0102c02 <mem_init+0x126d>$/;"	l
f0102bde	obj/kern/kernel.asm	/^f0102bde:	c7 44 24 0c 58 8e 10 	movl   $0xf0108e58,0xc(%esp)$/;"	l
f0102be5	obj/kern/kernel.asm	/^f0102be5:	f0 $/;"	l
f0102be6	obj/kern/kernel.asm	/^f0102be6:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102bed	obj/kern/kernel.asm	/^f0102bed:	f0 $/;"	l
f0102bee	obj/kern/kernel.asm	/^f0102bee:	c7 44 24 04 90 04 00 	movl   $0x490,0x4(%esp)$/;"	l
f0102bf5	obj/kern/kernel.asm	/^f0102bf5:	00 $/;"	l
f0102bf6	obj/kern/kernel.asm	/^f0102bf6:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102bfd	obj/kern/kernel.asm	/^f0102bfd:	e8 9b d4 ff ff       	call   f010009d <_panic>$/;"	l
f0102c02	obj/kern/kernel.asm	/^f0102c02:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102c07	obj/kern/kernel.asm	/^f0102c07:	74 24                	je     f0102c2d <mem_init+0x1298>$/;"	l
f0102c09	obj/kern/kernel.asm	/^f0102c09:	c7 44 24 0c b2 94 10 	movl   $0xf01094b2,0xc(%esp)$/;"	l
f0102c10	obj/kern/kernel.asm	/^f0102c10:	f0 $/;"	l
f0102c11	obj/kern/kernel.asm	/^f0102c11:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102c18	obj/kern/kernel.asm	/^f0102c18:	f0 $/;"	l
f0102c19	obj/kern/kernel.asm	/^f0102c19:	c7 44 24 04 91 04 00 	movl   $0x491,0x4(%esp)$/;"	l
f0102c20	obj/kern/kernel.asm	/^f0102c20:	00 $/;"	l
f0102c21	obj/kern/kernel.asm	/^f0102c21:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102c28	obj/kern/kernel.asm	/^f0102c28:	e8 70 d4 ff ff       	call   f010009d <_panic>$/;"	l
f0102c2d	obj/kern/kernel.asm	/^f0102c2d:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102c32	obj/kern/kernel.asm	/^f0102c32:	74 24                	je     f0102c58 <mem_init+0x12c3>$/;"	l
f0102c34	obj/kern/kernel.asm	/^f0102c34:	c7 44 24 0c 80 94 10 	movl   $0xf0109480,0xc(%esp)$/;"	l
f0102c3b	obj/kern/kernel.asm	/^f0102c3b:	f0 $/;"	l
f0102c3c	obj/kern/kernel.asm	/^f0102c3c:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102c43	obj/kern/kernel.asm	/^f0102c43:	f0 $/;"	l
f0102c44	obj/kern/kernel.asm	/^f0102c44:	c7 44 24 04 92 04 00 	movl   $0x492,0x4(%esp)$/;"	l
f0102c4b	obj/kern/kernel.asm	/^f0102c4b:	00 $/;"	l
f0102c4c	obj/kern/kernel.asm	/^f0102c4c:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102c53	obj/kern/kernel.asm	/^f0102c53:	e8 45 d4 ff ff       	call   f010009d <_panic>$/;"	l
f0102c58	obj/kern/kernel.asm	/^f0102c58:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102c5f	obj/kern/kernel.asm	/^f0102c5f:	e8 3a e7 ff ff       	call   f010139e <page_alloc>$/;"	l
f0102c64	obj/kern/kernel.asm	/^f0102c64:	85 c0                	test   %eax,%eax$/;"	l
f0102c66	obj/kern/kernel.asm	/^f0102c66:	74 04                	je     f0102c6c <mem_init+0x12d7>$/;"	l
f0102c68	obj/kern/kernel.asm	/^f0102c68:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102c6a	obj/kern/kernel.asm	/^f0102c6a:	74 24                	je     f0102c90 <mem_init+0x12fb>$/;"	l
f0102c6c	obj/kern/kernel.asm	/^f0102c6c:	c7 44 24 0c 80 8e 10 	movl   $0xf0108e80,0xc(%esp)$/;"	l
f0102c73	obj/kern/kernel.asm	/^f0102c73:	f0 $/;"	l
f0102c74	obj/kern/kernel.asm	/^f0102c74:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102c7b	obj/kern/kernel.asm	/^f0102c7b:	f0 $/;"	l
f0102c7c	obj/kern/kernel.asm	/^f0102c7c:	c7 44 24 04 95 04 00 	movl   $0x495,0x4(%esp)$/;"	l
f0102c83	obj/kern/kernel.asm	/^f0102c83:	00 $/;"	l
f0102c84	obj/kern/kernel.asm	/^f0102c84:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102c8b	obj/kern/kernel.asm	/^f0102c8b:	e8 0d d4 ff ff       	call   f010009d <_panic>$/;"	l
f0102c90	obj/kern/kernel.asm	/^f0102c90:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102c97	obj/kern/kernel.asm	/^f0102c97:	e8 02 e7 ff ff       	call   f010139e <page_alloc>$/;"	l
f0102c9c	obj/kern/kernel.asm	/^f0102c9c:	85 c0                	test   %eax,%eax$/;"	l
f0102c9e	obj/kern/kernel.asm	/^f0102c9e:	74 24                	je     f0102cc4 <mem_init+0x132f>$/;"	l
f0102ca0	obj/kern/kernel.asm	/^f0102ca0:	c7 44 24 0c d4 93 10 	movl   $0xf01093d4,0xc(%esp)$/;"	l
f0102ca7	obj/kern/kernel.asm	/^f0102ca7:	f0 $/;"	l
f0102ca8	obj/kern/kernel.asm	/^f0102ca8:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102caf	obj/kern/kernel.asm	/^f0102caf:	f0 $/;"	l
f0102cb0	obj/kern/kernel.asm	/^f0102cb0:	c7 44 24 04 98 04 00 	movl   $0x498,0x4(%esp)$/;"	l
f0102cb7	obj/kern/kernel.asm	/^f0102cb7:	00 $/;"	l
f0102cb8	obj/kern/kernel.asm	/^f0102cb8:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	e8 d9 d3 ff ff       	call   f010009d <_panic>$/;"	l
f0102cc4	obj/kern/kernel.asm	/^f0102cc4:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0102cc9	obj/kern/kernel.asm	/^f0102cc9:	8b 08                	mov    (%eax),%ecx$/;"	l
f0102ccb	obj/kern/kernel.asm	/^f0102ccb:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102cd1	obj/kern/kernel.asm	/^f0102cd1:	89 f2                	mov    %esi,%edx$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	2b 15 a4 4e 2c f0    	sub    0xf02c4ea4,%edx$/;"	l
f0102cd9	obj/kern/kernel.asm	/^f0102cd9:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102cdc	obj/kern/kernel.asm	/^f0102cdc:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102cdf	obj/kern/kernel.asm	/^f0102cdf:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102ce1	obj/kern/kernel.asm	/^f0102ce1:	74 24                	je     f0102d07 <mem_init+0x1372>$/;"	l
f0102ce3	obj/kern/kernel.asm	/^f0102ce3:	c7 44 24 0c 24 8b 10 	movl   $0xf0108b24,0xc(%esp)$/;"	l
f0102cea	obj/kern/kernel.asm	/^f0102cea:	f0 $/;"	l
f0102ceb	obj/kern/kernel.asm	/^f0102ceb:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102cf2	obj/kern/kernel.asm	/^f0102cf2:	f0 $/;"	l
f0102cf3	obj/kern/kernel.asm	/^f0102cf3:	c7 44 24 04 9b 04 00 	movl   $0x49b,0x4(%esp)$/;"	l
f0102cfa	obj/kern/kernel.asm	/^f0102cfa:	00 $/;"	l
f0102cfb	obj/kern/kernel.asm	/^f0102cfb:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102d02	obj/kern/kernel.asm	/^f0102d02:	e8 96 d3 ff ff       	call   f010009d <_panic>$/;"	l
f0102d07	obj/kern/kernel.asm	/^f0102d07:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102d0d	obj/kern/kernel.asm	/^f0102d0d:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102d12	obj/kern/kernel.asm	/^f0102d12:	74 24                	je     f0102d38 <mem_init+0x13a3>$/;"	l
f0102d14	obj/kern/kernel.asm	/^f0102d14:	c7 44 24 0c 37 94 10 	movl   $0xf0109437,0xc(%esp)$/;"	l
f0102d1b	obj/kern/kernel.asm	/^f0102d1b:	f0 $/;"	l
f0102d1c	obj/kern/kernel.asm	/^f0102d1c:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102d23	obj/kern/kernel.asm	/^f0102d23:	f0 $/;"	l
f0102d24	obj/kern/kernel.asm	/^f0102d24:	c7 44 24 04 9d 04 00 	movl   $0x49d,0x4(%esp)$/;"	l
f0102d2b	obj/kern/kernel.asm	/^f0102d2b:	00 $/;"	l
f0102d2c	obj/kern/kernel.asm	/^f0102d2c:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102d33	obj/kern/kernel.asm	/^f0102d33:	e8 65 d3 ff ff       	call   f010009d <_panic>$/;"	l
f0102d38	obj/kern/kernel.asm	/^f0102d38:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0102d3e	obj/kern/kernel.asm	/^f0102d3e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	e8 db e6 ff ff       	call   f0101421 <page_free>$/;"	l
f0102d46	obj/kern/kernel.asm	/^f0102d46:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102d4d	obj/kern/kernel.asm	/^f0102d4d:	00 $/;"	l
f0102d4e	obj/kern/kernel.asm	/^f0102d4e:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f0102d55	obj/kern/kernel.asm	/^f0102d55:	00 $/;"	l
f0102d56	obj/kern/kernel.asm	/^f0102d56:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0102d5b	obj/kern/kernel.asm	/^f0102d5b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d5e	obj/kern/kernel.asm	/^f0102d5e:	e8 21 e7 ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f0102d63	obj/kern/kernel.asm	/^f0102d63:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102d66	obj/kern/kernel.asm	/^f0102d66:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102d69	obj/kern/kernel.asm	/^f0102d69:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0102d6e	obj/kern/kernel.asm	/^f0102d6e:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0102d71	obj/kern/kernel.asm	/^f0102d71:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0102d74	obj/kern/kernel.asm	/^f0102d74:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102d7a	obj/kern/kernel.asm	/^f0102d7a:	a1 9c 4e 2c f0       	mov    0xf02c4e9c,%eax$/;"	l
f0102d7f	obj/kern/kernel.asm	/^f0102d7f:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0102d82	obj/kern/kernel.asm	/^f0102d82:	89 d1                	mov    %edx,%ecx$/;"	l
f0102d84	obj/kern/kernel.asm	/^f0102d84:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102d87	obj/kern/kernel.asm	/^f0102d87:	39 c1                	cmp    %eax,%ecx$/;"	l
f0102d89	obj/kern/kernel.asm	/^f0102d89:	72 20                	jb     f0102dab <mem_init+0x1416>$/;"	l
f0102d8b	obj/kern/kernel.asm	/^f0102d8b:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f0102d96	obj/kern/kernel.asm	/^f0102d96:	f0 $/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	c7 44 24 04 a4 04 00 	movl   $0x4a4,0x4(%esp)$/;"	l
f0102d9e	obj/kern/kernel.asm	/^f0102d9e:	00 $/;"	l
f0102d9f	obj/kern/kernel.asm	/^f0102d9f:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102da6	obj/kern/kernel.asm	/^f0102da6:	e8 f2 d2 ff ff       	call   f010009d <_panic>$/;"	l
f0102dab	obj/kern/kernel.asm	/^f0102dab:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
f0102db1	obj/kern/kernel.asm	/^f0102db1:	39 55 d4             	cmp    %edx,-0x2c(%ebp)$/;"	l
f0102db4	obj/kern/kernel.asm	/^f0102db4:	74 24                	je     f0102dda <mem_init+0x1445>$/;"	l
f0102db6	obj/kern/kernel.asm	/^f0102db6:	c7 44 24 0c c3 94 10 	movl   $0xf01094c3,0xc(%esp)$/;"	l
f0102dbd	obj/kern/kernel.asm	/^f0102dbd:	f0 $/;"	l
f0102dbe	obj/kern/kernel.asm	/^f0102dbe:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102dc5	obj/kern/kernel.asm	/^f0102dc5:	f0 $/;"	l
f0102dc6	obj/kern/kernel.asm	/^f0102dc6:	c7 44 24 04 a5 04 00 	movl   $0x4a5,0x4(%esp)$/;"	l
f0102dcd	obj/kern/kernel.asm	/^f0102dcd:	00 $/;"	l
f0102dce	obj/kern/kernel.asm	/^f0102dce:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102dd5	obj/kern/kernel.asm	/^f0102dd5:	e8 c3 d2 ff ff       	call   f010009d <_panic>$/;"	l
f0102dda	obj/kern/kernel.asm	/^f0102dda:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0102ddd	obj/kern/kernel.asm	/^f0102ddd:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0102de4	obj/kern/kernel.asm	/^f0102de4:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0102dea	obj/kern/kernel.asm	/^f0102dea:	89 f0                	mov    %esi,%eax$/;"	l
f0102dec	obj/kern/kernel.asm	/^f0102dec:	2b 05 a4 4e 2c f0    	sub    0xf02c4ea4,%eax$/;"	l
f0102df2	obj/kern/kernel.asm	/^f0102df2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102df5	obj/kern/kernel.asm	/^f0102df5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102df8	obj/kern/kernel.asm	/^f0102df8:	89 c2                	mov    %eax,%edx$/;"	l
f0102dfa	obj/kern/kernel.asm	/^f0102dfa:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102dfd	obj/kern/kernel.asm	/^f0102dfd:	39 55 c4             	cmp    %edx,-0x3c(%ebp)$/;"	l
f0102e00	obj/kern/kernel.asm	/^f0102e00:	77 20                	ja     f0102e22 <mem_init+0x148d>$/;"	l
f0102e02	obj/kern/kernel.asm	/^f0102e02:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102e06	obj/kern/kernel.asm	/^f0102e06:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f0102e0d	obj/kern/kernel.asm	/^f0102e0d:	f0 $/;"	l
f0102e0e	obj/kern/kernel.asm	/^f0102e0e:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0102e15	obj/kern/kernel.asm	/^f0102e15:	00 $/;"	l
f0102e16	obj/kern/kernel.asm	/^f0102e16:	c7 04 24 29 92 10 f0 	movl   $0xf0109229,(%esp)$/;"	l
f0102e1d	obj/kern/kernel.asm	/^f0102e1d:	e8 7b d2 ff ff       	call   f010009d <_panic>$/;"	l
f0102e22	obj/kern/kernel.asm	/^f0102e22:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102e29	obj/kern/kernel.asm	/^f0102e29:	00 $/;"	l
f0102e2a	obj/kern/kernel.asm	/^f0102e2a:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f0102e31	obj/kern/kernel.asm	/^f0102e31:	00 $/;"	l
f0102e32	obj/kern/kernel.asm	/^f0102e32:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102e37	obj/kern/kernel.asm	/^f0102e37:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102e3a	obj/kern/kernel.asm	/^f0102e3a:	e8 b8 3a 00 00       	call   f01068f7 <memset>$/;"	l
f0102e3f	obj/kern/kernel.asm	/^f0102e3f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102e42	obj/kern/kernel.asm	/^f0102e42:	e8 da e5 ff ff       	call   f0101421 <page_free>$/;"	l
f0102e47	obj/kern/kernel.asm	/^f0102e47:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102e4e	obj/kern/kernel.asm	/^f0102e4e:	00 $/;"	l
f0102e4f	obj/kern/kernel.asm	/^f0102e4f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102e56	obj/kern/kernel.asm	/^f0102e56:	00 $/;"	l
f0102e57	obj/kern/kernel.asm	/^f0102e57:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0102e5c	obj/kern/kernel.asm	/^f0102e5c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102e5f	obj/kern/kernel.asm	/^f0102e5f:	e8 20 e6 ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f0102e64	obj/kern/kernel.asm	/^f0102e64:	89 f2                	mov    %esi,%edx$/;"	l
f0102e66	obj/kern/kernel.asm	/^f0102e66:	2b 15 a4 4e 2c f0    	sub    0xf02c4ea4,%edx$/;"	l
f0102e6c	obj/kern/kernel.asm	/^f0102e6c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102e6f	obj/kern/kernel.asm	/^f0102e6f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102e72	obj/kern/kernel.asm	/^f0102e72:	89 d0                	mov    %edx,%eax$/;"	l
f0102e74	obj/kern/kernel.asm	/^f0102e74:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102e77	obj/kern/kernel.asm	/^f0102e77:	3b 05 9c 4e 2c f0    	cmp    0xf02c4e9c,%eax$/;"	l
f0102e7d	obj/kern/kernel.asm	/^f0102e7d:	72 20                	jb     f0102e9f <mem_init+0x150a>$/;"	l
f0102e7f	obj/kern/kernel.asm	/^f0102e7f:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102e83	obj/kern/kernel.asm	/^f0102e83:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f0102e8a	obj/kern/kernel.asm	/^f0102e8a:	f0 $/;"	l
f0102e8b	obj/kern/kernel.asm	/^f0102e8b:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0102e92	obj/kern/kernel.asm	/^f0102e92:	00 $/;"	l
f0102e93	obj/kern/kernel.asm	/^f0102e93:	c7 04 24 29 92 10 f0 	movl   $0xf0109229,(%esp)$/;"	l
f0102e9a	obj/kern/kernel.asm	/^f0102e9a:	e8 fe d1 ff ff       	call   f010009d <_panic>$/;"	l
f0102e9f	obj/kern/kernel.asm	/^f0102e9f:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102ea5	obj/kern/kernel.asm	/^f0102ea5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102ea8	obj/kern/kernel.asm	/^f0102ea8:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102eae	obj/kern/kernel.asm	/^f0102eae:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102eb1	obj/kern/kernel.asm	/^f0102eb1:	74 24                	je     f0102ed7 <mem_init+0x1542>$/;"	l
f0102eb3	obj/kern/kernel.asm	/^f0102eb3:	c7 44 24 0c db 94 10 	movl   $0xf01094db,0xc(%esp)$/;"	l
f0102eba	obj/kern/kernel.asm	/^f0102eba:	f0 $/;"	l
f0102ebb	obj/kern/kernel.asm	/^f0102ebb:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102ec2	obj/kern/kernel.asm	/^f0102ec2:	f0 $/;"	l
f0102ec3	obj/kern/kernel.asm	/^f0102ec3:	c7 44 24 04 af 04 00 	movl   $0x4af,0x4(%esp)$/;"	l
f0102eca	obj/kern/kernel.asm	/^f0102eca:	00 $/;"	l
f0102ecb	obj/kern/kernel.asm	/^f0102ecb:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102ed2	obj/kern/kernel.asm	/^f0102ed2:	e8 c6 d1 ff ff       	call   f010009d <_panic>$/;"	l
f0102ed7	obj/kern/kernel.asm	/^f0102ed7:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102eda	obj/kern/kernel.asm	/^f0102eda:	39 d0                	cmp    %edx,%eax$/;"	l
f0102edc	obj/kern/kernel.asm	/^f0102edc:	75 d0                	jne    f0102eae <mem_init+0x1519>$/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0102ee3	obj/kern/kernel.asm	/^f0102ee3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102ee9	obj/kern/kernel.asm	/^f0102ee9:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	a3 40 42 2c f0       	mov    %eax,0xf02c4240$/;"	l
f0102ef7	obj/kern/kernel.asm	/^f0102ef7:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102efa	obj/kern/kernel.asm	/^f0102efa:	e8 22 e5 ff ff       	call   f0101421 <page_free>$/;"	l
f0102eff	obj/kern/kernel.asm	/^f0102eff:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102f02	obj/kern/kernel.asm	/^f0102f02:	e8 1a e5 ff ff       	call   f0101421 <page_free>$/;"	l
f0102f07	obj/kern/kernel.asm	/^f0102f07:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102f0a	obj/kern/kernel.asm	/^f0102f0a:	e8 12 e5 ff ff       	call   f0101421 <page_free>$/;"	l
f0102f0f	obj/kern/kernel.asm	/^f0102f0f:	c7 44 24 04 01 10 00 	movl   $0x1001,0x4(%esp)$/;"	l
f0102f16	obj/kern/kernel.asm	/^f0102f16:	00 $/;"	l
f0102f17	obj/kern/kernel.asm	/^f0102f17:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102f1e	obj/kern/kernel.asm	/^f0102f1e:	e8 03 ea ff ff       	call   f0101926 <mmio_map_region>$/;"	l
f0102f23	obj/kern/kernel.asm	/^f0102f23:	89 c3                	mov    %eax,%ebx$/;"	l
f0102f25	obj/kern/kernel.asm	/^f0102f25:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102f2c	obj/kern/kernel.asm	/^f0102f2c:	00 $/;"	l
f0102f2d	obj/kern/kernel.asm	/^f0102f2d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102f34	obj/kern/kernel.asm	/^f0102f34:	e8 ed e9 ff ff       	call   f0101926 <mmio_map_region>$/;"	l
f0102f39	obj/kern/kernel.asm	/^f0102f39:	89 c6                	mov    %eax,%esi$/;"	l
f0102f3b	obj/kern/kernel.asm	/^f0102f3b:	8d 83 a0 1f 00 00    	lea    0x1fa0(%ebx),%eax$/;"	l
f0102f41	obj/kern/kernel.asm	/^f0102f41:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102f46	obj/kern/kernel.asm	/^f0102f46:	77 08                	ja     f0102f50 <mem_init+0x15bb>$/;"	l
f0102f48	obj/kern/kernel.asm	/^f0102f48:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102f4e	obj/kern/kernel.asm	/^f0102f4e:	77 24                	ja     f0102f74 <mem_init+0x15df>$/;"	l
f0102f50	obj/kern/kernel.asm	/^f0102f50:	c7 44 24 0c a4 8e 10 	movl   $0xf0108ea4,0xc(%esp)$/;"	l
f0102f57	obj/kern/kernel.asm	/^f0102f57:	f0 $/;"	l
f0102f58	obj/kern/kernel.asm	/^f0102f58:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102f5f	obj/kern/kernel.asm	/^f0102f5f:	f0 $/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	c7 44 24 04 bf 04 00 	movl   $0x4bf,0x4(%esp)$/;"	l
f0102f67	obj/kern/kernel.asm	/^f0102f67:	00 $/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102f6f	obj/kern/kernel.asm	/^f0102f6f:	e8 29 d1 ff ff       	call   f010009d <_panic>$/;"	l
f0102f74	obj/kern/kernel.asm	/^f0102f74:	8d 96 a0 1f 00 00    	lea    0x1fa0(%esi),%edx$/;"	l
f0102f7a	obj/kern/kernel.asm	/^f0102f7a:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0102f80	obj/kern/kernel.asm	/^f0102f80:	77 08                	ja     f0102f8a <mem_init+0x15f5>$/;"	l
f0102f82	obj/kern/kernel.asm	/^f0102f82:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0102f88	obj/kern/kernel.asm	/^f0102f88:	77 24                	ja     f0102fae <mem_init+0x1619>$/;"	l
f0102f8a	obj/kern/kernel.asm	/^f0102f8a:	c7 44 24 0c cc 8e 10 	movl   $0xf0108ecc,0xc(%esp)$/;"	l
f0102f91	obj/kern/kernel.asm	/^f0102f91:	f0 $/;"	l
f0102f92	obj/kern/kernel.asm	/^f0102f92:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102f99	obj/kern/kernel.asm	/^f0102f99:	f0 $/;"	l
f0102f9a	obj/kern/kernel.asm	/^f0102f9a:	c7 44 24 04 c0 04 00 	movl   $0x4c0,0x4(%esp)$/;"	l
f0102fa1	obj/kern/kernel.asm	/^f0102fa1:	00 $/;"	l
f0102fa2	obj/kern/kernel.asm	/^f0102fa2:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102fa9	obj/kern/kernel.asm	/^f0102fa9:	e8 ef d0 ff ff       	call   f010009d <_panic>$/;"	l
f0102fae	obj/kern/kernel.asm	/^f0102fae:	89 da                	mov    %ebx,%edx$/;"	l
f0102fb0	obj/kern/kernel.asm	/^f0102fb0:	09 f2                	or     %esi,%edx$/;"	l
f0102fb2	obj/kern/kernel.asm	/^f0102fb2:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0102fb8	obj/kern/kernel.asm	/^f0102fb8:	74 24                	je     f0102fde <mem_init+0x1649>$/;"	l
f0102fba	obj/kern/kernel.asm	/^f0102fba:	c7 44 24 0c f4 8e 10 	movl   $0xf0108ef4,0xc(%esp)$/;"	l
f0102fc1	obj/kern/kernel.asm	/^f0102fc1:	f0 $/;"	l
f0102fc2	obj/kern/kernel.asm	/^f0102fc2:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102fc9	obj/kern/kernel.asm	/^f0102fc9:	f0 $/;"	l
f0102fca	obj/kern/kernel.asm	/^f0102fca:	c7 44 24 04 c2 04 00 	movl   $0x4c2,0x4(%esp)$/;"	l
f0102fd1	obj/kern/kernel.asm	/^f0102fd1:	00 $/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0102fd9	obj/kern/kernel.asm	/^f0102fd9:	e8 bf d0 ff ff       	call   f010009d <_panic>$/;"	l
f0102fde	obj/kern/kernel.asm	/^f0102fde:	39 c6                	cmp    %eax,%esi$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	73 24                	jae    f0103006 <mem_init+0x1671>$/;"	l
f0102fe2	obj/kern/kernel.asm	/^f0102fe2:	c7 44 24 0c f2 94 10 	movl   $0xf01094f2,0xc(%esp)$/;"	l
f0102fe9	obj/kern/kernel.asm	/^f0102fe9:	f0 $/;"	l
f0102fea	obj/kern/kernel.asm	/^f0102fea:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0102ff1	obj/kern/kernel.asm	/^f0102ff1:	f0 $/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	c7 44 24 04 c4 04 00 	movl   $0x4c4,0x4(%esp)$/;"	l
f0102ff9	obj/kern/kernel.asm	/^f0102ff9:	00 $/;"	l
f0102ffa	obj/kern/kernel.asm	/^f0102ffa:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	e8 97 d0 ff ff       	call   f010009d <_panic>$/;"	l
f0103006	obj/kern/kernel.asm	/^f0103006:	8b 3d a0 4e 2c f0    	mov    0xf02c4ea0,%edi$/;"	l
f010300c	obj/kern/kernel.asm	/^f010300c:	89 da                	mov    %ebx,%edx$/;"	l
f010300e	obj/kern/kernel.asm	/^f010300e:	89 f8                	mov    %edi,%eax$/;"	l
f0103010	obj/kern/kernel.asm	/^f0103010:	e8 10 de ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f0103015	obj/kern/kernel.asm	/^f0103015:	85 c0                	test   %eax,%eax$/;"	l
f0103017	obj/kern/kernel.asm	/^f0103017:	74 24                	je     f010303d <mem_init+0x16a8>$/;"	l
f0103019	obj/kern/kernel.asm	/^f0103019:	c7 44 24 0c 1c 8f 10 	movl   $0xf0108f1c,0xc(%esp)$/;"	l
f0103020	obj/kern/kernel.asm	/^f0103020:	f0 $/;"	l
f0103021	obj/kern/kernel.asm	/^f0103021:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0103028	obj/kern/kernel.asm	/^f0103028:	f0 $/;"	l
f0103029	obj/kern/kernel.asm	/^f0103029:	c7 44 24 04 c6 04 00 	movl   $0x4c6,0x4(%esp)$/;"	l
f0103030	obj/kern/kernel.asm	/^f0103030:	00 $/;"	l
f0103031	obj/kern/kernel.asm	/^f0103031:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0103038	obj/kern/kernel.asm	/^f0103038:	e8 60 d0 ff ff       	call   f010009d <_panic>$/;"	l
f010303d	obj/kern/kernel.asm	/^f010303d:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0103043	obj/kern/kernel.asm	/^f0103043:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103046	obj/kern/kernel.asm	/^f0103046:	89 c2                	mov    %eax,%edx$/;"	l
f0103048	obj/kern/kernel.asm	/^f0103048:	89 f8                	mov    %edi,%eax$/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	e8 d6 dd ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f010304f	obj/kern/kernel.asm	/^f010304f:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0103054	obj/kern/kernel.asm	/^f0103054:	74 24                	je     f010307a <mem_init+0x16e5>$/;"	l
f0103056	obj/kern/kernel.asm	/^f0103056:	c7 44 24 0c 40 8f 10 	movl   $0xf0108f40,0xc(%esp)$/;"	l
f010305d	obj/kern/kernel.asm	/^f010305d:	f0 $/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0103065	obj/kern/kernel.asm	/^f0103065:	f0 $/;"	l
f0103066	obj/kern/kernel.asm	/^f0103066:	c7 44 24 04 c7 04 00 	movl   $0x4c7,0x4(%esp)$/;"	l
f010306d	obj/kern/kernel.asm	/^f010306d:	00 $/;"	l
f010306e	obj/kern/kernel.asm	/^f010306e:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0103075	obj/kern/kernel.asm	/^f0103075:	e8 23 d0 ff ff       	call   f010009d <_panic>$/;"	l
f010307a	obj/kern/kernel.asm	/^f010307a:	89 f2                	mov    %esi,%edx$/;"	l
f010307c	obj/kern/kernel.asm	/^f010307c:	89 f8                	mov    %edi,%eax$/;"	l
f010307e	obj/kern/kernel.asm	/^f010307e:	e8 a2 dd ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f0103083	obj/kern/kernel.asm	/^f0103083:	85 c0                	test   %eax,%eax$/;"	l
f0103085	obj/kern/kernel.asm	/^f0103085:	74 24                	je     f01030ab <mem_init+0x1716>$/;"	l
f0103087	obj/kern/kernel.asm	/^f0103087:	c7 44 24 0c 70 8f 10 	movl   $0xf0108f70,0xc(%esp)$/;"	l
f010308e	obj/kern/kernel.asm	/^f010308e:	f0 $/;"	l
f010308f	obj/kern/kernel.asm	/^f010308f:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0103096	obj/kern/kernel.asm	/^f0103096:	f0 $/;"	l
f0103097	obj/kern/kernel.asm	/^f0103097:	c7 44 24 04 c8 04 00 	movl   $0x4c8,0x4(%esp)$/;"	l
f010309e	obj/kern/kernel.asm	/^f010309e:	00 $/;"	l
f010309f	obj/kern/kernel.asm	/^f010309f:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	e8 f2 cf ff ff       	call   f010009d <_panic>$/;"	l
f01030ab	obj/kern/kernel.asm	/^f01030ab:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f01030b1	obj/kern/kernel.asm	/^f01030b1:	89 f8                	mov    %edi,%eax$/;"	l
f01030b3	obj/kern/kernel.asm	/^f01030b3:	e8 6d dd ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f01030b8	obj/kern/kernel.asm	/^f01030b8:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01030bb	obj/kern/kernel.asm	/^f01030bb:	74 24                	je     f01030e1 <mem_init+0x174c>$/;"	l
f01030bd	obj/kern/kernel.asm	/^f01030bd:	c7 44 24 0c 94 8f 10 	movl   $0xf0108f94,0xc(%esp)$/;"	l
f01030c4	obj/kern/kernel.asm	/^f01030c4:	f0 $/;"	l
f01030c5	obj/kern/kernel.asm	/^f01030c5:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01030cc	obj/kern/kernel.asm	/^f01030cc:	f0 $/;"	l
f01030cd	obj/kern/kernel.asm	/^f01030cd:	c7 44 24 04 c9 04 00 	movl   $0x4c9,0x4(%esp)$/;"	l
f01030d4	obj/kern/kernel.asm	/^f01030d4:	00 $/;"	l
f01030d5	obj/kern/kernel.asm	/^f01030d5:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01030dc	obj/kern/kernel.asm	/^f01030dc:	e8 bc cf ff ff       	call   f010009d <_panic>$/;"	l
f01030e1	obj/kern/kernel.asm	/^f01030e1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01030e8	obj/kern/kernel.asm	/^f01030e8:	00 $/;"	l
f01030e9	obj/kern/kernel.asm	/^f01030e9:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01030ed	obj/kern/kernel.asm	/^f01030ed:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01030f0	obj/kern/kernel.asm	/^f01030f0:	e8 8f e3 ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f01030f5	obj/kern/kernel.asm	/^f01030f5:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	75 24                	jne    f010311e <mem_init+0x1789>$/;"	l
f01030fa	obj/kern/kernel.asm	/^f01030fa:	c7 44 24 0c c0 8f 10 	movl   $0xf0108fc0,0xc(%esp)$/;"	l
f0103101	obj/kern/kernel.asm	/^f0103101:	f0 $/;"	l
f0103102	obj/kern/kernel.asm	/^f0103102:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0103109	obj/kern/kernel.asm	/^f0103109:	f0 $/;"	l
f010310a	obj/kern/kernel.asm	/^f010310a:	c7 44 24 04 cb 04 00 	movl   $0x4cb,0x4(%esp)$/;"	l
f0103111	obj/kern/kernel.asm	/^f0103111:	00 $/;"	l
f0103112	obj/kern/kernel.asm	/^f0103112:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0103119	obj/kern/kernel.asm	/^f0103119:	e8 7f cf ff ff       	call   f010009d <_panic>$/;"	l
f010311e	obj/kern/kernel.asm	/^f010311e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103125	obj/kern/kernel.asm	/^f0103125:	00 $/;"	l
f0103126	obj/kern/kernel.asm	/^f0103126:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010312a	obj/kern/kernel.asm	/^f010312a:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f010312f	obj/kern/kernel.asm	/^f010312f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103132	obj/kern/kernel.asm	/^f0103132:	e8 4d e3 ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f0103137	obj/kern/kernel.asm	/^f0103137:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010313a	obj/kern/kernel.asm	/^f010313a:	74 24                	je     f0103160 <mem_init+0x17cb>$/;"	l
f010313c	obj/kern/kernel.asm	/^f010313c:	c7 44 24 0c 04 90 10 	movl   $0xf0109004,0xc(%esp)$/;"	l
f0103143	obj/kern/kernel.asm	/^f0103143:	f0 $/;"	l
f0103144	obj/kern/kernel.asm	/^f0103144:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010314b	obj/kern/kernel.asm	/^f010314b:	f0 $/;"	l
f010314c	obj/kern/kernel.asm	/^f010314c:	c7 44 24 04 cc 04 00 	movl   $0x4cc,0x4(%esp)$/;"	l
f0103153	obj/kern/kernel.asm	/^f0103153:	00 $/;"	l
f0103154	obj/kern/kernel.asm	/^f0103154:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010315b	obj/kern/kernel.asm	/^f010315b:	e8 3d cf ff ff       	call   f010009d <_panic>$/;"	l
f0103160	obj/kern/kernel.asm	/^f0103160:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103167	obj/kern/kernel.asm	/^f0103167:	00 $/;"	l
f0103168	obj/kern/kernel.asm	/^f0103168:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010316c	obj/kern/kernel.asm	/^f010316c:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0103171	obj/kern/kernel.asm	/^f0103171:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174:	e8 0b e3 ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f0103179	obj/kern/kernel.asm	/^f0103179:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010317f	obj/kern/kernel.asm	/^f010317f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103186	obj/kern/kernel.asm	/^f0103186:	00 $/;"	l
f0103187	obj/kern/kernel.asm	/^f0103187:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010318a	obj/kern/kernel.asm	/^f010318a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010318e	obj/kern/kernel.asm	/^f010318e:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0103193	obj/kern/kernel.asm	/^f0103193:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103196	obj/kern/kernel.asm	/^f0103196:	e8 e9 e2 ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f010319b	obj/kern/kernel.asm	/^f010319b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01031a1	obj/kern/kernel.asm	/^f01031a1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01031a8	obj/kern/kernel.asm	/^f01031a8:	00 $/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01031ad	obj/kern/kernel.asm	/^f01031ad:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f01031b2	obj/kern/kernel.asm	/^f01031b2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031b5	obj/kern/kernel.asm	/^f01031b5:	e8 ca e2 ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f01031ba	obj/kern/kernel.asm	/^f01031ba:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01031c0	obj/kern/kernel.asm	/^f01031c0:	c7 04 24 04 95 10 f0 	movl   $0xf0109504,(%esp)$/;"	l
f01031c7	obj/kern/kernel.asm	/^f01031c7:	e8 3e 14 00 00       	call   f010460a <cprintf>$/;"	l
f01031cc	obj/kern/kernel.asm	/^f01031cc:	a1 a4 4e 2c f0       	mov    0xf02c4ea4,%eax$/;"	l
f01031d1	obj/kern/kernel.asm	/^f01031d1:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01031d6	obj/kern/kernel.asm	/^f01031d6:	77 20                	ja     f01031f8 <mem_init+0x1863>$/;"	l
f01031d8	obj/kern/kernel.asm	/^f01031d8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01031dc	obj/kern/kernel.asm	/^f01031dc:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f01031e3	obj/kern/kernel.asm	/^f01031e3:	f0 $/;"	l
f01031e4	obj/kern/kernel.asm	/^f01031e4:	c7 44 24 04 08 01 00 	movl   $0x108,0x4(%esp)$/;"	l
f01031eb	obj/kern/kernel.asm	/^f01031eb:	00 $/;"	l
f01031ec	obj/kern/kernel.asm	/^f01031ec:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01031f3	obj/kern/kernel.asm	/^f01031f3:	e8 a5 ce ff ff       	call   f010009d <_panic>$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f01031ff	obj/kern/kernel.asm	/^f01031ff:	00 $/;"	l
f0103200	obj/kern/kernel.asm	/^f0103200:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103205	obj/kern/kernel.asm	/^f0103205:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103208	obj/kern/kernel.asm	/^f0103208:	b9 00 00 40 00       	mov    $0x400000,%ecx$/;"	l
f010320d	obj/kern/kernel.asm	/^f010320d:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0103212	obj/kern/kernel.asm	/^f0103212:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0103217	obj/kern/kernel.asm	/^f0103217:	e8 e6 e4 ff ff       	call   f0101702 <boot_map_region>$/;"	l
f010321c	obj/kern/kernel.asm	/^f010321c:	8b 15 a4 4e 2c f0    	mov    0xf02c4ea4,%edx$/;"	l
f0103222	obj/kern/kernel.asm	/^f0103222:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0103228	obj/kern/kernel.asm	/^f0103228:	77 20                	ja     f010324a <mem_init+0x18b5>$/;"	l
f010322a	obj/kern/kernel.asm	/^f010322a:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010322e	obj/kern/kernel.asm	/^f010322e:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235:	f0 $/;"	l
f0103236	obj/kern/kernel.asm	/^f0103236:	c7 44 24 04 09 01 00 	movl   $0x109,0x4(%esp)$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	00 $/;"	l
f010323e	obj/kern/kernel.asm	/^f010323e:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	e8 53 ce ff ff       	call   f010009d <_panic>$/;"	l
f010324a	obj/kern/kernel.asm	/^f010324a:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f0103251	obj/kern/kernel.asm	/^f0103251:	00 $/;"	l
f0103252	obj/kern/kernel.asm	/^f0103252:	8d 82 00 00 00 10    	lea    0x10000000(%edx),%eax$/;"	l
f0103258	obj/kern/kernel.asm	/^f0103258:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010325b	obj/kern/kernel.asm	/^f010325b:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f010325e	obj/kern/kernel.asm	/^f010325e:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0103263	obj/kern/kernel.asm	/^f0103263:	e8 9a e4 ff ff       	call   f0101702 <boot_map_region>$/;"	l
f0103268	obj/kern/kernel.asm	/^f0103268:	a1 48 42 2c f0       	mov    0xf02c4248,%eax$/;"	l
f010326d	obj/kern/kernel.asm	/^f010326d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103272	obj/kern/kernel.asm	/^f0103272:	77 20                	ja     f0103294 <mem_init+0x18ff>$/;"	l
f0103274	obj/kern/kernel.asm	/^f0103274:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103278	obj/kern/kernel.asm	/^f0103278:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f010327f	obj/kern/kernel.asm	/^f010327f:	f0 $/;"	l
f0103280	obj/kern/kernel.asm	/^f0103280:	c7 44 24 04 13 01 00 	movl   $0x113,0x4(%esp)$/;"	l
f0103287	obj/kern/kernel.asm	/^f0103287:	00 $/;"	l
f0103288	obj/kern/kernel.asm	/^f0103288:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010328f	obj/kern/kernel.asm	/^f010328f:	e8 09 ce ff ff       	call   f010009d <_panic>$/;"	l
f0103294	obj/kern/kernel.asm	/^f0103294:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f010329b	obj/kern/kernel.asm	/^f010329b:	00 $/;"	l
f010329c	obj/kern/kernel.asm	/^f010329c:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01032a1	obj/kern/kernel.asm	/^f01032a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01032a4	obj/kern/kernel.asm	/^f01032a4:	b9 00 00 02 00       	mov    $0x20000,%ecx$/;"	l
f01032a9	obj/kern/kernel.asm	/^f01032a9:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f01032ae	obj/kern/kernel.asm	/^f01032ae:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f01032b3	obj/kern/kernel.asm	/^f01032b3:	e8 4a e4 ff ff       	call   f0101702 <boot_map_region>$/;"	l
f01032b8	obj/kern/kernel.asm	/^f01032b8:	8b 15 48 42 2c f0    	mov    0xf02c4248,%edx$/;"	l
f01032be	obj/kern/kernel.asm	/^f01032be:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f01032c4	obj/kern/kernel.asm	/^f01032c4:	77 20                	ja     f01032e6 <mem_init+0x1951>$/;"	l
f01032c6	obj/kern/kernel.asm	/^f01032c6:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01032ca	obj/kern/kernel.asm	/^f01032ca:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f01032d1	obj/kern/kernel.asm	/^f01032d1:	f0 $/;"	l
f01032d2	obj/kern/kernel.asm	/^f01032d2:	c7 44 24 04 14 01 00 	movl   $0x114,0x4(%esp)$/;"	l
f01032d9	obj/kern/kernel.asm	/^f01032d9:	00 $/;"	l
f01032da	obj/kern/kernel.asm	/^f01032da:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01032e1	obj/kern/kernel.asm	/^f01032e1:	e8 b7 cd ff ff       	call   f010009d <_panic>$/;"	l
f01032e6	obj/kern/kernel.asm	/^f01032e6:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f01032ed	obj/kern/kernel.asm	/^f01032ed:	00 $/;"	l
f01032ee	obj/kern/kernel.asm	/^f01032ee:	8d 82 00 00 00 10    	lea    0x10000000(%edx),%eax$/;"	l
f01032f4	obj/kern/kernel.asm	/^f01032f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01032f7	obj/kern/kernel.asm	/^f01032f7:	b9 00 00 02 00       	mov    $0x20000,%ecx$/;"	l
f01032fc	obj/kern/kernel.asm	/^f01032fc:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0103301	obj/kern/kernel.asm	/^f0103301:	e8 fc e3 ff ff       	call   f0101702 <boot_map_region>$/;"	l
f0103306	obj/kern/kernel.asm	/^f0103306:	b8 00 c0 11 f0       	mov    $0xf011c000,%eax$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103310	obj/kern/kernel.asm	/^f0103310:	77 20                	ja     f0103332 <mem_init+0x199d>$/;"	l
f0103312	obj/kern/kernel.asm	/^f0103312:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103316	obj/kern/kernel.asm	/^f0103316:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	f0 $/;"	l
f010331e	obj/kern/kernel.asm	/^f010331e:	c7 44 24 04 22 01 00 	movl   $0x122,0x4(%esp)$/;"	l
f0103325	obj/kern/kernel.asm	/^f0103325:	00 $/;"	l
f0103326	obj/kern/kernel.asm	/^f0103326:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010332d	obj/kern/kernel.asm	/^f010332d:	e8 6b cd ff ff       	call   f010009d <_panic>$/;"	l
f0103332	obj/kern/kernel.asm	/^f0103332:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103339	obj/kern/kernel.asm	/^f0103339:	00 $/;"	l
f010333a	obj/kern/kernel.asm	/^f010333a:	c7 04 24 00 c0 11 00 	movl   $0x11c000,(%esp)$/;"	l
f0103341	obj/kern/kernel.asm	/^f0103341:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0103346	obj/kern/kernel.asm	/^f0103346:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f010334b	obj/kern/kernel.asm	/^f010334b:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0103350	obj/kern/kernel.asm	/^f0103350:	e8 ad e3 ff ff       	call   f0101702 <boot_map_region>$/;"	l
f0103355	obj/kern/kernel.asm	/^f0103355:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f010335c	obj/kern/kernel.asm	/^f010335c:	00 $/;"	l
f010335d	obj/kern/kernel.asm	/^f010335d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103364	obj/kern/kernel.asm	/^f0103364:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f0103369	obj/kern/kernel.asm	/^f0103369:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f010336e	obj/kern/kernel.asm	/^f010336e:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0103373	obj/kern/kernel.asm	/^f0103373:	e8 8a e3 ff ff       	call   f0101702 <boot_map_region>$/;"	l
f0103378	obj/kern/kernel.asm	/^f0103378:	bf 00 60 30 f0       	mov    $0xf0306000,%edi$/;"	l
f010337d	obj/kern/kernel.asm	/^f010337d:	bb 00 60 2c f0       	mov    $0xf02c6000,%ebx$/;"	l
f0103382	obj/kern/kernel.asm	/^f0103382:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0103387	obj/kern/kernel.asm	/^f0103387:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f010338d	obj/kern/kernel.asm	/^f010338d:	77 20                	ja     f01033af <mem_init+0x1a1a>$/;"	l
f010338f	obj/kern/kernel.asm	/^f010338f:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0103393	obj/kern/kernel.asm	/^f0103393:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f010339a	obj/kern/kernel.asm	/^f010339a:	f0 $/;"	l
f010339b	obj/kern/kernel.asm	/^f010339b:	c7 44 24 04 69 01 00 	movl   $0x169,0x4(%esp)$/;"	l
f01033a2	obj/kern/kernel.asm	/^f01033a2:	00 $/;"	l
f01033a3	obj/kern/kernel.asm	/^f01033a3:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01033aa	obj/kern/kernel.asm	/^f01033aa:	e8 ee cc ff ff       	call   f010009d <_panic>$/;"	l
f01033af	obj/kern/kernel.asm	/^f01033af:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f01033b6	obj/kern/kernel.asm	/^f01033b6:	00 $/;"	l
f01033b7	obj/kern/kernel.asm	/^f01033b7:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f01033bd	obj/kern/kernel.asm	/^f01033bd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01033c0	obj/kern/kernel.asm	/^f01033c0:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	89 f2                	mov    %esi,%edx$/;"	l
f01033c7	obj/kern/kernel.asm	/^f01033c7:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f01033cc	obj/kern/kernel.asm	/^f01033cc:	e8 31 e3 ff ff       	call   f0101702 <boot_map_region>$/;"	l
f01033d1	obj/kern/kernel.asm	/^f01033d1:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f01033d7	obj/kern/kernel.asm	/^f01033d7:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f01033dd	obj/kern/kernel.asm	/^f01033dd:	39 fb                	cmp    %edi,%ebx$/;"	l
f01033df	obj/kern/kernel.asm	/^f01033df:	75 a6                	jne    f0103387 <mem_init+0x19f2>$/;"	l
f01033e1	obj/kern/kernel.asm	/^f01033e1:	8b 3d a0 4e 2c f0    	mov    0xf02c4ea0,%edi$/;"	l
f01033e7	obj/kern/kernel.asm	/^f01033e7:	a1 9c 4e 2c f0       	mov    0xf02c4e9c,%eax$/;"	l
f01033ec	obj/kern/kernel.asm	/^f01033ec:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01033ef	obj/kern/kernel.asm	/^f01033ef:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f01033f6	obj/kern/kernel.asm	/^f01033f6:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01033fb	obj/kern/kernel.asm	/^f01033fb:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01033fe	obj/kern/kernel.asm	/^f01033fe:	8b 35 a4 4e 2c f0    	mov    0xf02c4ea4,%esi$/;"	l
f0103404	obj/kern/kernel.asm	/^f0103404:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eax$/;"	l
f010340d	obj/kern/kernel.asm	/^f010340d:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0103410	obj/kern/kernel.asm	/^f0103410:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103415	obj/kern/kernel.asm	/^f0103415:	eb 6a                	jmp    f0103481 <mem_init+0x1aec>$/;"	l
f0103417	obj/kern/kernel.asm	/^f0103417:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f010341d	obj/kern/kernel.asm	/^f010341d:	89 f8                	mov    %edi,%eax$/;"	l
f010341f	obj/kern/kernel.asm	/^f010341f:	e8 01 da ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f0103424	obj/kern/kernel.asm	/^f0103424:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)$/;"	l
f010342b	obj/kern/kernel.asm	/^f010342b:	77 20                	ja     f010344d <mem_init+0x1ab8>$/;"	l
f010342d	obj/kern/kernel.asm	/^f010342d:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103431	obj/kern/kernel.asm	/^f0103431:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f0103438	obj/kern/kernel.asm	/^f0103438:	f0 $/;"	l
f0103439	obj/kern/kernel.asm	/^f0103439:	c7 44 24 04 d6 03 00 	movl   $0x3d6,0x4(%esp)$/;"	l
f0103440	obj/kern/kernel.asm	/^f0103440:	00 $/;"	l
f0103441	obj/kern/kernel.asm	/^f0103441:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0103448	obj/kern/kernel.asm	/^f0103448:	e8 50 cc ff ff       	call   f010009d <_panic>$/;"	l
f010344d	obj/kern/kernel.asm	/^f010344d:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0103450	obj/kern/kernel.asm	/^f0103450:	8d 14 0b             	lea    (%ebx,%ecx,1),%edx$/;"	l
f0103453	obj/kern/kernel.asm	/^f0103453:	39 d0                	cmp    %edx,%eax$/;"	l
f0103455	obj/kern/kernel.asm	/^f0103455:	74 24                	je     f010347b <mem_init+0x1ae6>$/;"	l
f0103457	obj/kern/kernel.asm	/^f0103457:	c7 44 24 0c 38 90 10 	movl   $0xf0109038,0xc(%esp)$/;"	l
f010345e	obj/kern/kernel.asm	/^f010345e:	f0 $/;"	l
f010345f	obj/kern/kernel.asm	/^f010345f:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0103466	obj/kern/kernel.asm	/^f0103466:	f0 $/;"	l
f0103467	obj/kern/kernel.asm	/^f0103467:	c7 44 24 04 d6 03 00 	movl   $0x3d6,0x4(%esp)$/;"	l
f010346e	obj/kern/kernel.asm	/^f010346e:	00 $/;"	l
f010346f	obj/kern/kernel.asm	/^f010346f:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0103476	obj/kern/kernel.asm	/^f0103476:	e8 22 cc ff ff       	call   f010009d <_panic>$/;"	l
f010347b	obj/kern/kernel.asm	/^f010347b:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103481	obj/kern/kernel.asm	/^f0103481:	39 5d d0             	cmp    %ebx,-0x30(%ebp)$/;"	l
f0103484	obj/kern/kernel.asm	/^f0103484:	77 91                	ja     f0103417 <mem_init+0x1a82>$/;"	l
f0103486	obj/kern/kernel.asm	/^f0103486:	8b 1d 48 42 2c f0    	mov    0xf02c4248,%ebx$/;"	l
f010348c	obj/kern/kernel.asm	/^f010348c:	89 de                	mov    %ebx,%esi$/;"	l
f010348e	obj/kern/kernel.asm	/^f010348e:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0103493	obj/kern/kernel.asm	/^f0103493:	89 f8                	mov    %edi,%eax$/;"	l
f0103495	obj/kern/kernel.asm	/^f0103495:	e8 8b d9 ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f010349a	obj/kern/kernel.asm	/^f010349a:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f01034a0	obj/kern/kernel.asm	/^f01034a0:	77 20                	ja     f01034c2 <mem_init+0x1b2d>$/;"	l
f01034a2	obj/kern/kernel.asm	/^f01034a2:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f01034ad	obj/kern/kernel.asm	/^f01034ad:	f0 $/;"	l
f01034ae	obj/kern/kernel.asm	/^f01034ae:	c7 44 24 04 db 03 00 	movl   $0x3db,0x4(%esp)$/;"	l
f01034b5	obj/kern/kernel.asm	/^f01034b5:	00 $/;"	l
f01034b6	obj/kern/kernel.asm	/^f01034b6:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01034bd	obj/kern/kernel.asm	/^f01034bd:	e8 db cb ff ff       	call   f010009d <_panic>$/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f01034c7	obj/kern/kernel.asm	/^f01034c7:	81 c6 00 00 40 21    	add    $0x21400000,%esi$/;"	l
f01034cd	obj/kern/kernel.asm	/^f01034cd:	8d 14 1e             	lea    (%esi,%ebx,1),%edx$/;"	l
f01034d0	obj/kern/kernel.asm	/^f01034d0:	39 d0                	cmp    %edx,%eax$/;"	l
f01034d2	obj/kern/kernel.asm	/^f01034d2:	74 24                	je     f01034f8 <mem_init+0x1b63>$/;"	l
f01034d4	obj/kern/kernel.asm	/^f01034d4:	c7 44 24 0c 6c 90 10 	movl   $0xf010906c,0xc(%esp)$/;"	l
f01034db	obj/kern/kernel.asm	/^f01034db:	f0 $/;"	l
f01034dc	obj/kern/kernel.asm	/^f01034dc:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01034e3	obj/kern/kernel.asm	/^f01034e3:	f0 $/;"	l
f01034e4	obj/kern/kernel.asm	/^f01034e4:	c7 44 24 04 db 03 00 	movl   $0x3db,0x4(%esp)$/;"	l
f01034eb	obj/kern/kernel.asm	/^f01034eb:	00 $/;"	l
f01034ec	obj/kern/kernel.asm	/^f01034ec:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01034f3	obj/kern/kernel.asm	/^f01034f3:	e8 a5 cb ff ff       	call   f010009d <_panic>$/;"	l
f01034f8	obj/kern/kernel.asm	/^f01034f8:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01034fe	obj/kern/kernel.asm	/^f01034fe:	81 fb 00 00 c2 ee    	cmp    $0xeec20000,%ebx$/;"	l
f0103504	obj/kern/kernel.asm	/^f0103504:	0f 85 ab 05 00 00    	jne    f0103ab5 <mem_init+0x2120>$/;"	l
f010350a	obj/kern/kernel.asm	/^f010350a:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0103510	obj/kern/kernel.asm	/^f0103510:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103515	obj/kern/kernel.asm	/^f0103515:	eb 3b                	jmp    f0103552 <mem_init+0x1bbd>$/;"	l
f0103517	obj/kern/kernel.asm	/^f0103517:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f010351d	obj/kern/kernel.asm	/^f010351d:	89 f8                	mov    %edi,%eax$/;"	l
f010351f	obj/kern/kernel.asm	/^f010351f:	e8 01 d9 ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f0103524	obj/kern/kernel.asm	/^f0103524:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103526	obj/kern/kernel.asm	/^f0103526:	74 24                	je     f010354c <mem_init+0x1bb7>$/;"	l
f0103528	obj/kern/kernel.asm	/^f0103528:	c7 44 24 0c a0 90 10 	movl   $0xf01090a0,0xc(%esp)$/;"	l
f010352f	obj/kern/kernel.asm	/^f010352f:	f0 $/;"	l
f0103530	obj/kern/kernel.asm	/^f0103530:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0103537	obj/kern/kernel.asm	/^f0103537:	f0 $/;"	l
f0103538	obj/kern/kernel.asm	/^f0103538:	c7 44 24 04 df 03 00 	movl   $0x3df,0x4(%esp)$/;"	l
f010353f	obj/kern/kernel.asm	/^f010353f:	00 $/;"	l
f0103540	obj/kern/kernel.asm	/^f0103540:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0103547	obj/kern/kernel.asm	/^f0103547:	e8 51 cb ff ff       	call   f010009d <_panic>$/;"	l
f010354c	obj/kern/kernel.asm	/^f010354c:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103552	obj/kern/kernel.asm	/^f0103552:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103554	obj/kern/kernel.asm	/^f0103554:	72 c1                	jb     f0103517 <mem_init+0x1b82>$/;"	l
f0103556	obj/kern/kernel.asm	/^f0103556:	c7 45 d0 00 60 2c f0 	movl   $0xf02c6000,-0x30(%ebp)$/;"	l
f010355d	obj/kern/kernel.asm	/^f010355d:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f0103564	obj/kern/kernel.asm	/^f0103564:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0103569	obj/kern/kernel.asm	/^f0103569:	b8 00 60 2c f0       	mov    $0xf02c6000,%eax$/;"	l
f010356e	obj/kern/kernel.asm	/^f010356e:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f0103573	obj/kern/kernel.asm	/^f0103573:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0103576	obj/kern/kernel.asm	/^f0103576:	8d 86 00 80 00 00    	lea    0x8000(%esi),%eax$/;"	l
f010357c	obj/kern/kernel.asm	/^f010357c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010357f	obj/kern/kernel.asm	/^f010357f:	89 f2                	mov    %esi,%edx$/;"	l
f0103581	obj/kern/kernel.asm	/^f0103581:	89 f8                	mov    %edi,%eax$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	e8 9d d8 ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f010358b	obj/kern/kernel.asm	/^f010358b:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f0103591	obj/kern/kernel.asm	/^f0103591:	77 20                	ja     f01035b3 <mem_init+0x1c1e>$/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0103597	obj/kern/kernel.asm	/^f0103597:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	f0 $/;"	l
f010359f	obj/kern/kernel.asm	/^f010359f:	c7 44 24 04 e7 03 00 	movl   $0x3e7,0x4(%esp)$/;"	l
f01035a6	obj/kern/kernel.asm	/^f01035a6:	00 $/;"	l
f01035a7	obj/kern/kernel.asm	/^f01035a7:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01035ae	obj/kern/kernel.asm	/^f01035ae:	e8 ea ca ff ff       	call   f010009d <_panic>$/;"	l
f01035b3	obj/kern/kernel.asm	/^f01035b3:	89 f3                	mov    %esi,%ebx$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f01035b8	obj/kern/kernel.asm	/^f01035b8:	03 4d d4             	add    -0x2c(%ebp),%ecx$/;"	l
f01035bb	obj/kern/kernel.asm	/^f01035bb:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f01035be	obj/kern/kernel.asm	/^f01035be:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f01035c1	obj/kern/kernel.asm	/^f01035c1:	8d 14 19             	lea    (%ecx,%ebx,1),%edx$/;"	l
f01035c4	obj/kern/kernel.asm	/^f01035c4:	39 c2                	cmp    %eax,%edx$/;"	l
f01035c6	obj/kern/kernel.asm	/^f01035c6:	74 24                	je     f01035ec <mem_init+0x1c57>$/;"	l
f01035c8	obj/kern/kernel.asm	/^f01035c8:	c7 44 24 0c c8 90 10 	movl   $0xf01090c8,0xc(%esp)$/;"	l
f01035cf	obj/kern/kernel.asm	/^f01035cf:	f0 $/;"	l
f01035d0	obj/kern/kernel.asm	/^f01035d0:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01035d7	obj/kern/kernel.asm	/^f01035d7:	f0 $/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	c7 44 24 04 e7 03 00 	movl   $0x3e7,0x4(%esp)$/;"	l
f01035df	obj/kern/kernel.asm	/^f01035df:	00 $/;"	l
f01035e0	obj/kern/kernel.asm	/^f01035e0:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01035e7	obj/kern/kernel.asm	/^f01035e7:	e8 b1 ca ff ff       	call   f010009d <_panic>$/;"	l
f01035ec	obj/kern/kernel.asm	/^f01035ec:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01035f2	obj/kern/kernel.asm	/^f01035f2:	3b 5d cc             	cmp    -0x34(%ebp),%ebx$/;"	l
f01035f5	obj/kern/kernel.asm	/^f01035f5:	0f 85 a9 04 00 00    	jne    f0103aa4 <mem_init+0x210f>$/;"	l
f01035fb	obj/kern/kernel.asm	/^f01035fb:	8d 9e 00 80 ff ff    	lea    -0x8000(%esi),%ebx$/;"	l
f0103601	obj/kern/kernel.asm	/^f0103601:	89 da                	mov    %ebx,%edx$/;"	l
f0103603	obj/kern/kernel.asm	/^f0103603:	89 f8                	mov    %edi,%eax$/;"	l
f0103605	obj/kern/kernel.asm	/^f0103605:	e8 1b d8 ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f010360a	obj/kern/kernel.asm	/^f010360a:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010360d	obj/kern/kernel.asm	/^f010360d:	74 24                	je     f0103633 <mem_init+0x1c9e>$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	c7 44 24 0c 10 91 10 	movl   $0xf0109110,0xc(%esp)$/;"	l
f0103616	obj/kern/kernel.asm	/^f0103616:	f0 $/;"	l
f0103617	obj/kern/kernel.asm	/^f0103617:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010361e	obj/kern/kernel.asm	/^f010361e:	f0 $/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f:	c7 44 24 04 e9 03 00 	movl   $0x3e9,0x4(%esp)$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	00 $/;"	l
f0103627	obj/kern/kernel.asm	/^f0103627:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	e8 6a ca ff ff       	call   f010009d <_panic>$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103639	obj/kern/kernel.asm	/^f0103639:	39 de                	cmp    %ebx,%esi$/;"	l
f010363b	obj/kern/kernel.asm	/^f010363b:	75 c4                	jne    f0103601 <mem_init+0x1c6c>$/;"	l
f010363d	obj/kern/kernel.asm	/^f010363d:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	81 45 d4 00 80 01 00 	addl   $0x18000,-0x2c(%ebp)$/;"	l
f010364a	obj/kern/kernel.asm	/^f010364a:	81 45 d0 00 80 00 00 	addl   $0x8000,-0x30(%ebp)$/;"	l
f0103651	obj/kern/kernel.asm	/^f0103651:	81 fe 00 80 f7 ef    	cmp    $0xeff78000,%esi$/;"	l
f0103657	obj/kern/kernel.asm	/^f0103657:	0f 85 19 ff ff ff    	jne    f0103576 <mem_init+0x1be1>$/;"	l
f010365d	obj/kern/kernel.asm	/^f010365d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103662	obj/kern/kernel.asm	/^f0103662:	e9 c2 00 00 00       	jmp    f0103729 <mem_init+0x1d94>$/;"	l
f0103667	obj/kern/kernel.asm	/^f0103667:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f010366d	obj/kern/kernel.asm	/^f010366d:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0103670	obj/kern/kernel.asm	/^f0103670:	77 2e                	ja     f01036a0 <mem_init+0x1d0b>$/;"	l
f0103672	obj/kern/kernel.asm	/^f0103672:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f0103676	obj/kern/kernel.asm	/^f0103676:	0f 85 aa 00 00 00    	jne    f0103726 <mem_init+0x1d91>$/;"	l
f010367c	obj/kern/kernel.asm	/^f010367c:	c7 44 24 0c 1d 95 10 	movl   $0xf010951d,0xc(%esp)$/;"	l
f0103683	obj/kern/kernel.asm	/^f0103683:	f0 $/;"	l
f0103684	obj/kern/kernel.asm	/^f0103684:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010368b	obj/kern/kernel.asm	/^f010368b:	f0 $/;"	l
f010368c	obj/kern/kernel.asm	/^f010368c:	c7 44 24 04 f7 03 00 	movl   $0x3f7,0x4(%esp)$/;"	l
f0103693	obj/kern/kernel.asm	/^f0103693:	00 $/;"	l
f0103694	obj/kern/kernel.asm	/^f0103694:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	e8 fd c9 ff ff       	call   f010009d <_panic>$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f01036a5	obj/kern/kernel.asm	/^f01036a5:	76 55                	jbe    f01036fc <mem_init+0x1d67>$/;"	l
f01036a7	obj/kern/kernel.asm	/^f01036a7:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f01036aa	obj/kern/kernel.asm	/^f01036aa:	f6 c2 01             	test   $0x1,%dl$/;"	l
f01036ad	obj/kern/kernel.asm	/^f01036ad:	75 24                	jne    f01036d3 <mem_init+0x1d3e>$/;"	l
f01036af	obj/kern/kernel.asm	/^f01036af:	c7 44 24 0c 1d 95 10 	movl   $0xf010951d,0xc(%esp)$/;"	l
f01036b6	obj/kern/kernel.asm	/^f01036b6:	f0 $/;"	l
f01036b7	obj/kern/kernel.asm	/^f01036b7:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be:	f0 $/;"	l
f01036bf	obj/kern/kernel.asm	/^f01036bf:	c7 44 24 04 fb 03 00 	movl   $0x3fb,0x4(%esp)$/;"	l
f01036c6	obj/kern/kernel.asm	/^f01036c6:	00 $/;"	l
f01036c7	obj/kern/kernel.asm	/^f01036c7:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01036ce	obj/kern/kernel.asm	/^f01036ce:	e8 ca c9 ff ff       	call   f010009d <_panic>$/;"	l
f01036d3	obj/kern/kernel.asm	/^f01036d3:	f6 c2 02             	test   $0x2,%dl$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	75 4e                	jne    f0103726 <mem_init+0x1d91>$/;"	l
f01036d8	obj/kern/kernel.asm	/^f01036d8:	c7 44 24 0c 2e 95 10 	movl   $0xf010952e,0xc(%esp)$/;"	l
f01036df	obj/kern/kernel.asm	/^f01036df:	f0 $/;"	l
f01036e0	obj/kern/kernel.asm	/^f01036e0:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01036e7	obj/kern/kernel.asm	/^f01036e7:	f0 $/;"	l
f01036e8	obj/kern/kernel.asm	/^f01036e8:	c7 44 24 04 fc 03 00 	movl   $0x3fc,0x4(%esp)$/;"	l
f01036ef	obj/kern/kernel.asm	/^f01036ef:	00 $/;"	l
f01036f0	obj/kern/kernel.asm	/^f01036f0:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01036f7	obj/kern/kernel.asm	/^f01036f7:	e8 a1 c9 ff ff       	call   f010009d <_panic>$/;"	l
f01036fc	obj/kern/kernel.asm	/^f01036fc:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f0103700	obj/kern/kernel.asm	/^f0103700:	74 24                	je     f0103726 <mem_init+0x1d91>$/;"	l
f0103702	obj/kern/kernel.asm	/^f0103702:	c7 44 24 0c 3f 95 10 	movl   $0xf010953f,0xc(%esp)$/;"	l
f0103709	obj/kern/kernel.asm	/^f0103709:	f0 $/;"	l
f010370a	obj/kern/kernel.asm	/^f010370a:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0103711	obj/kern/kernel.asm	/^f0103711:	f0 $/;"	l
f0103712	obj/kern/kernel.asm	/^f0103712:	c7 44 24 04 fe 03 00 	movl   $0x3fe,0x4(%esp)$/;"	l
f0103719	obj/kern/kernel.asm	/^f0103719:	00 $/;"	l
f010371a	obj/kern/kernel.asm	/^f010371a:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0103721	obj/kern/kernel.asm	/^f0103721:	e8 77 c9 ff ff       	call   f010009d <_panic>$/;"	l
f0103726	obj/kern/kernel.asm	/^f0103726:	83 c0 01             	add    $0x1,%eax$/;"	l
f0103729	obj/kern/kernel.asm	/^f0103729:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	0f 85 33 ff ff ff    	jne    f0103667 <mem_init+0x1cd2>$/;"	l
f0103734	obj/kern/kernel.asm	/^f0103734:	c7 04 24 34 91 10 f0 	movl   $0xf0109134,(%esp)$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	e8 ca 0e 00 00       	call   f010460a <cprintf>$/;"	l
f0103740	obj/kern/kernel.asm	/^f0103740:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0103745	obj/kern/kernel.asm	/^f0103745:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010374a	obj/kern/kernel.asm	/^f010374a:	77 20                	ja     f010376c <mem_init+0x1dd7>$/;"	l
f010374c	obj/kern/kernel.asm	/^f010374c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103750	obj/kern/kernel.asm	/^f0103750:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	f0 $/;"	l
f0103758	obj/kern/kernel.asm	/^f0103758:	c7 44 24 04 3a 01 00 	movl   $0x13a,0x4(%esp)$/;"	l
f010375f	obj/kern/kernel.asm	/^f010375f:	00 $/;"	l
f0103760	obj/kern/kernel.asm	/^f0103760:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0103767	obj/kern/kernel.asm	/^f0103767:	e8 31 c9 ff ff       	call   f010009d <_panic>$/;"	l
f010376c	obj/kern/kernel.asm	/^f010376c:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103774	obj/kern/kernel.asm	/^f0103774:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103779	obj/kern/kernel.asm	/^f0103779:	e8 b9 d7 ff ff       	call   f0100f37 <check_page_free_list>$/;"	l
f010377e	obj/kern/kernel.asm	/^f010377e:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0103781	obj/kern/kernel.asm	/^f0103781:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0103784	obj/kern/kernel.asm	/^f0103784:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f0103789	obj/kern/kernel.asm	/^f0103789:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f010378c	obj/kern/kernel.asm	/^f010378c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103793	obj/kern/kernel.asm	/^f0103793:	e8 06 dc ff ff       	call   f010139e <page_alloc>$/;"	l
f0103798	obj/kern/kernel.asm	/^f0103798:	89 c3                	mov    %eax,%ebx$/;"	l
f010379a	obj/kern/kernel.asm	/^f010379a:	85 c0                	test   %eax,%eax$/;"	l
f010379c	obj/kern/kernel.asm	/^f010379c:	75 24                	jne    f01037c2 <mem_init+0x1e2d>$/;"	l
f010379e	obj/kern/kernel.asm	/^f010379e:	c7 44 24 0c 29 93 10 	movl   $0xf0109329,0xc(%esp)$/;"	l
f01037a5	obj/kern/kernel.asm	/^f01037a5:	f0 $/;"	l
f01037a6	obj/kern/kernel.asm	/^f01037a6:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01037ad	obj/kern/kernel.asm	/^f01037ad:	f0 $/;"	l
f01037ae	obj/kern/kernel.asm	/^f01037ae:	c7 44 24 04 e1 04 00 	movl   $0x4e1,0x4(%esp)$/;"	l
f01037b5	obj/kern/kernel.asm	/^f01037b5:	00 $/;"	l
f01037b6	obj/kern/kernel.asm	/^f01037b6:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01037bd	obj/kern/kernel.asm	/^f01037bd:	e8 db c8 ff ff       	call   f010009d <_panic>$/;"	l
f01037c2	obj/kern/kernel.asm	/^f01037c2:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01037c9	obj/kern/kernel.asm	/^f01037c9:	e8 d0 db ff ff       	call   f010139e <page_alloc>$/;"	l
f01037ce	obj/kern/kernel.asm	/^f01037ce:	89 c7                	mov    %eax,%edi$/;"	l
f01037d0	obj/kern/kernel.asm	/^f01037d0:	85 c0                	test   %eax,%eax$/;"	l
f01037d2	obj/kern/kernel.asm	/^f01037d2:	75 24                	jne    f01037f8 <mem_init+0x1e63>$/;"	l
f01037d4	obj/kern/kernel.asm	/^f01037d4:	c7 44 24 0c 3f 93 10 	movl   $0xf010933f,0xc(%esp)$/;"	l
f01037db	obj/kern/kernel.asm	/^f01037db:	f0 $/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01037e3	obj/kern/kernel.asm	/^f01037e3:	f0 $/;"	l
f01037e4	obj/kern/kernel.asm	/^f01037e4:	c7 44 24 04 e2 04 00 	movl   $0x4e2,0x4(%esp)$/;"	l
f01037eb	obj/kern/kernel.asm	/^f01037eb:	00 $/;"	l
f01037ec	obj/kern/kernel.asm	/^f01037ec:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01037f3	obj/kern/kernel.asm	/^f01037f3:	e8 a5 c8 ff ff       	call   f010009d <_panic>$/;"	l
f01037f8	obj/kern/kernel.asm	/^f01037f8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01037ff	obj/kern/kernel.asm	/^f01037ff:	e8 9a db ff ff       	call   f010139e <page_alloc>$/;"	l
f0103804	obj/kern/kernel.asm	/^f0103804:	89 c6                	mov    %eax,%esi$/;"	l
f0103806	obj/kern/kernel.asm	/^f0103806:	85 c0                	test   %eax,%eax$/;"	l
f0103808	obj/kern/kernel.asm	/^f0103808:	75 24                	jne    f010382e <mem_init+0x1e99>$/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a:	c7 44 24 0c 55 93 10 	movl   $0xf0109355,0xc(%esp)$/;"	l
f0103811	obj/kern/kernel.asm	/^f0103811:	f0 $/;"	l
f0103812	obj/kern/kernel.asm	/^f0103812:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0103819	obj/kern/kernel.asm	/^f0103819:	f0 $/;"	l
f010381a	obj/kern/kernel.asm	/^f010381a:	c7 44 24 04 e3 04 00 	movl   $0x4e3,0x4(%esp)$/;"	l
f0103821	obj/kern/kernel.asm	/^f0103821:	00 $/;"	l
f0103822	obj/kern/kernel.asm	/^f0103822:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0103829	obj/kern/kernel.asm	/^f0103829:	e8 6f c8 ff ff       	call   f010009d <_panic>$/;"	l
f010382e	obj/kern/kernel.asm	/^f010382e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103831	obj/kern/kernel.asm	/^f0103831:	e8 eb db ff ff       	call   f0101421 <page_free>$/;"	l
f0103836	obj/kern/kernel.asm	/^f0103836:	89 f8                	mov    %edi,%eax$/;"	l
f0103838	obj/kern/kernel.asm	/^f0103838:	e8 a3 d5 ff ff       	call   f0100de0 <page2kva>$/;"	l
f010383d	obj/kern/kernel.asm	/^f010383d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103844	obj/kern/kernel.asm	/^f0103844:	00 $/;"	l
f0103845	obj/kern/kernel.asm	/^f0103845:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f010384c	obj/kern/kernel.asm	/^f010384c:	00 $/;"	l
f010384d	obj/kern/kernel.asm	/^f010384d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	e8 a2 30 00 00       	call   f01068f7 <memset>$/;"	l
f0103855	obj/kern/kernel.asm	/^f0103855:	89 f0                	mov    %esi,%eax$/;"	l
f0103857	obj/kern/kernel.asm	/^f0103857:	e8 84 d5 ff ff       	call   f0100de0 <page2kva>$/;"	l
f010385c	obj/kern/kernel.asm	/^f010385c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103863	obj/kern/kernel.asm	/^f0103863:	00 $/;"	l
f0103864	obj/kern/kernel.asm	/^f0103864:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f010386b	obj/kern/kernel.asm	/^f010386b:	00 $/;"	l
f010386c	obj/kern/kernel.asm	/^f010386c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010386f	obj/kern/kernel.asm	/^f010386f:	e8 83 30 00 00       	call   f01068f7 <memset>$/;"	l
f0103874	obj/kern/kernel.asm	/^f0103874:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010387b	obj/kern/kernel.asm	/^f010387b:	00 $/;"	l
f010387c	obj/kern/kernel.asm	/^f010387c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103883	obj/kern/kernel.asm	/^f0103883:	00 $/;"	l
f0103884	obj/kern/kernel.asm	/^f0103884:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0103888	obj/kern/kernel.asm	/^f0103888:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f010388d	obj/kern/kernel.asm	/^f010388d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103890	obj/kern/kernel.asm	/^f0103890:	e8 d9 df ff ff       	call   f010186e <page_insert>$/;"	l
f0103895	obj/kern/kernel.asm	/^f0103895:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f010389a	obj/kern/kernel.asm	/^f010389a:	74 24                	je     f01038c0 <mem_init+0x1f2b>$/;"	l
f010389c	obj/kern/kernel.asm	/^f010389c:	c7 44 24 0c 26 94 10 	movl   $0xf0109426,0xc(%esp)$/;"	l
f01038a3	obj/kern/kernel.asm	/^f01038a3:	f0 $/;"	l
f01038a4	obj/kern/kernel.asm	/^f01038a4:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01038ab	obj/kern/kernel.asm	/^f01038ab:	f0 $/;"	l
f01038ac	obj/kern/kernel.asm	/^f01038ac:	c7 44 24 04 e8 04 00 	movl   $0x4e8,0x4(%esp)$/;"	l
f01038b3	obj/kern/kernel.asm	/^f01038b3:	00 $/;"	l
f01038b4	obj/kern/kernel.asm	/^f01038b4:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01038bb	obj/kern/kernel.asm	/^f01038bb:	e8 dd c7 ff ff       	call   f010009d <_panic>$/;"	l
f01038c0	obj/kern/kernel.asm	/^f01038c0:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f01038c7	obj/kern/kernel.asm	/^f01038c7:	01 01 01 $/;"	l
f01038ca	obj/kern/kernel.asm	/^f01038ca:	74 24                	je     f01038f0 <mem_init+0x1f5b>$/;"	l
f01038cc	obj/kern/kernel.asm	/^f01038cc:	c7 44 24 0c 54 91 10 	movl   $0xf0109154,0xc(%esp)$/;"	l
f01038d3	obj/kern/kernel.asm	/^f01038d3:	f0 $/;"	l
f01038d4	obj/kern/kernel.asm	/^f01038d4:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01038db	obj/kern/kernel.asm	/^f01038db:	f0 $/;"	l
f01038dc	obj/kern/kernel.asm	/^f01038dc:	c7 44 24 04 e9 04 00 	movl   $0x4e9,0x4(%esp)$/;"	l
f01038e3	obj/kern/kernel.asm	/^f01038e3:	00 $/;"	l
f01038e4	obj/kern/kernel.asm	/^f01038e4:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01038eb	obj/kern/kernel.asm	/^f01038eb:	e8 ad c7 ff ff       	call   f010009d <_panic>$/;"	l
f01038f0	obj/kern/kernel.asm	/^f01038f0:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01038f7	obj/kern/kernel.asm	/^f01038f7:	00 $/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01038ff	obj/kern/kernel.asm	/^f01038ff:	00 $/;"	l
f0103900	obj/kern/kernel.asm	/^f0103900:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0103904	obj/kern/kernel.asm	/^f0103904:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0103909	obj/kern/kernel.asm	/^f0103909:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010390c	obj/kern/kernel.asm	/^f010390c:	e8 5d df ff ff       	call   f010186e <page_insert>$/;"	l
f0103911	obj/kern/kernel.asm	/^f0103911:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0103918	obj/kern/kernel.asm	/^f0103918:	02 02 02 $/;"	l
f010391b	obj/kern/kernel.asm	/^f010391b:	74 24                	je     f0103941 <mem_init+0x1fac>$/;"	l
f010391d	obj/kern/kernel.asm	/^f010391d:	c7 44 24 0c 78 91 10 	movl   $0xf0109178,0xc(%esp)$/;"	l
f0103924	obj/kern/kernel.asm	/^f0103924:	f0 $/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010392c	obj/kern/kernel.asm	/^f010392c:	f0 $/;"	l
f010392d	obj/kern/kernel.asm	/^f010392d:	c7 44 24 04 eb 04 00 	movl   $0x4eb,0x4(%esp)$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	00 $/;"	l
f0103935	obj/kern/kernel.asm	/^f0103935:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	e8 5c c7 ff ff       	call   f010009d <_panic>$/;"	l
f0103941	obj/kern/kernel.asm	/^f0103941:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0103946	obj/kern/kernel.asm	/^f0103946:	74 24                	je     f010396c <mem_init+0x1fd7>$/;"	l
f0103948	obj/kern/kernel.asm	/^f0103948:	c7 44 24 0c 48 94 10 	movl   $0xf0109448,0xc(%esp)$/;"	l
f010394f	obj/kern/kernel.asm	/^f010394f:	f0 $/;"	l
f0103950	obj/kern/kernel.asm	/^f0103950:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0103957	obj/kern/kernel.asm	/^f0103957:	f0 $/;"	l
f0103958	obj/kern/kernel.asm	/^f0103958:	c7 44 24 04 ec 04 00 	movl   $0x4ec,0x4(%esp)$/;"	l
f010395f	obj/kern/kernel.asm	/^f010395f:	00 $/;"	l
f0103960	obj/kern/kernel.asm	/^f0103960:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0103967	obj/kern/kernel.asm	/^f0103967:	e8 31 c7 ff ff       	call   f010009d <_panic>$/;"	l
f010396c	obj/kern/kernel.asm	/^f010396c:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0103971	obj/kern/kernel.asm	/^f0103971:	74 24                	je     f0103997 <mem_init+0x2002>$/;"	l
f0103973	obj/kern/kernel.asm	/^f0103973:	c7 44 24 0c b2 94 10 	movl   $0xf01094b2,0xc(%esp)$/;"	l
f010397a	obj/kern/kernel.asm	/^f010397a:	f0 $/;"	l
f010397b	obj/kern/kernel.asm	/^f010397b:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0103982	obj/kern/kernel.asm	/^f0103982:	f0 $/;"	l
f0103983	obj/kern/kernel.asm	/^f0103983:	c7 44 24 04 ed 04 00 	movl   $0x4ed,0x4(%esp)$/;"	l
f010398a	obj/kern/kernel.asm	/^f010398a:	00 $/;"	l
f010398b	obj/kern/kernel.asm	/^f010398b:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0103992	obj/kern/kernel.asm	/^f0103992:	e8 06 c7 ff ff       	call   f010009d <_panic>$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f010399e	obj/kern/kernel.asm	/^f010399e:	03 03 03 $/;"	l
f01039a1	obj/kern/kernel.asm	/^f01039a1:	89 f0                	mov    %esi,%eax$/;"	l
f01039a3	obj/kern/kernel.asm	/^f01039a3:	e8 38 d4 ff ff       	call   f0100de0 <page2kva>$/;"	l
f01039a8	obj/kern/kernel.asm	/^f01039a8:	81 38 03 03 03 03    	cmpl   $0x3030303,(%eax)$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	74 24                	je     f01039d4 <mem_init+0x203f>$/;"	l
f01039b0	obj/kern/kernel.asm	/^f01039b0:	c7 44 24 0c 9c 91 10 	movl   $0xf010919c,0xc(%esp)$/;"	l
f01039b7	obj/kern/kernel.asm	/^f01039b7:	f0 $/;"	l
f01039b8	obj/kern/kernel.asm	/^f01039b8:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01039bf	obj/kern/kernel.asm	/^f01039bf:	f0 $/;"	l
f01039c0	obj/kern/kernel.asm	/^f01039c0:	c7 44 24 04 ef 04 00 	movl   $0x4ef,0x4(%esp)$/;"	l
f01039c7	obj/kern/kernel.asm	/^f01039c7:	00 $/;"	l
f01039c8	obj/kern/kernel.asm	/^f01039c8:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f01039cf	obj/kern/kernel.asm	/^f01039cf:	e8 c9 c6 ff ff       	call   f010009d <_panic>$/;"	l
f01039d4	obj/kern/kernel.asm	/^f01039d4:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01039db	obj/kern/kernel.asm	/^f01039db:	00 $/;"	l
f01039dc	obj/kern/kernel.asm	/^f01039dc:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f01039e1	obj/kern/kernel.asm	/^f01039e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01039e4	obj/kern/kernel.asm	/^f01039e4:	e8 36 de ff ff       	call   f010181f <page_remove>$/;"	l
f01039e9	obj/kern/kernel.asm	/^f01039e9:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f01039ee	obj/kern/kernel.asm	/^f01039ee:	74 24                	je     f0103a14 <mem_init+0x207f>$/;"	l
f01039f0	obj/kern/kernel.asm	/^f01039f0:	c7 44 24 0c 80 94 10 	movl   $0xf0109480,0xc(%esp)$/;"	l
f01039f7	obj/kern/kernel.asm	/^f01039f7:	f0 $/;"	l
f01039f8	obj/kern/kernel.asm	/^f01039f8:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01039ff	obj/kern/kernel.asm	/^f01039ff:	f0 $/;"	l
f0103a00	obj/kern/kernel.asm	/^f0103a00:	c7 44 24 04 f1 04 00 	movl   $0x4f1,0x4(%esp)$/;"	l
f0103a07	obj/kern/kernel.asm	/^f0103a07:	00 $/;"	l
f0103a08	obj/kern/kernel.asm	/^f0103a08:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0103a0f	obj/kern/kernel.asm	/^f0103a0f:	e8 89 c6 ff ff       	call   f010009d <_panic>$/;"	l
f0103a14	obj/kern/kernel.asm	/^f0103a14:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0103a19	obj/kern/kernel.asm	/^f0103a19:	8b 08                	mov    (%eax),%ecx$/;"	l
f0103a1b	obj/kern/kernel.asm	/^f0103a1b:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	89 da                	mov    %ebx,%edx$/;"	l
f0103a23	obj/kern/kernel.asm	/^f0103a23:	2b 15 a4 4e 2c f0    	sub    0xf02c4ea4,%edx$/;"	l
f0103a29	obj/kern/kernel.asm	/^f0103a29:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103a2c	obj/kern/kernel.asm	/^f0103a2c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103a2f	obj/kern/kernel.asm	/^f0103a2f:	39 d1                	cmp    %edx,%ecx$/;"	l
f0103a31	obj/kern/kernel.asm	/^f0103a31:	74 24                	je     f0103a57 <mem_init+0x20c2>$/;"	l
f0103a33	obj/kern/kernel.asm	/^f0103a33:	c7 44 24 0c 24 8b 10 	movl   $0xf0108b24,0xc(%esp)$/;"	l
f0103a3a	obj/kern/kernel.asm	/^f0103a3a:	f0 $/;"	l
f0103a3b	obj/kern/kernel.asm	/^f0103a3b:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	f0 $/;"	l
f0103a43	obj/kern/kernel.asm	/^f0103a43:	c7 44 24 04 f4 04 00 	movl   $0x4f4,0x4(%esp)$/;"	l
f0103a4a	obj/kern/kernel.asm	/^f0103a4a:	00 $/;"	l
f0103a4b	obj/kern/kernel.asm	/^f0103a4b:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0103a52	obj/kern/kernel.asm	/^f0103a52:	e8 46 c6 ff ff       	call   f010009d <_panic>$/;"	l
f0103a57	obj/kern/kernel.asm	/^f0103a57:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103a5d	obj/kern/kernel.asm	/^f0103a5d:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0103a62	obj/kern/kernel.asm	/^f0103a62:	74 24                	je     f0103a88 <mem_init+0x20f3>$/;"	l
f0103a64	obj/kern/kernel.asm	/^f0103a64:	c7 44 24 0c 37 94 10 	movl   $0xf0109437,0xc(%esp)$/;"	l
f0103a6b	obj/kern/kernel.asm	/^f0103a6b:	f0 $/;"	l
f0103a6c	obj/kern/kernel.asm	/^f0103a6c:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0103a73	obj/kern/kernel.asm	/^f0103a73:	f0 $/;"	l
f0103a74	obj/kern/kernel.asm	/^f0103a74:	c7 44 24 04 f6 04 00 	movl   $0x4f6,0x4(%esp)$/;"	l
f0103a7b	obj/kern/kernel.asm	/^f0103a7b:	00 $/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	c7 04 24 37 92 10 f0 	movl   $0xf0109237,(%esp)$/;"	l
f0103a83	obj/kern/kernel.asm	/^f0103a83:	e8 15 c6 ff ff       	call   f010009d <_panic>$/;"	l
f0103a88	obj/kern/kernel.asm	/^f0103a88:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f0103a8e	obj/kern/kernel.asm	/^f0103a8e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103a91	obj/kern/kernel.asm	/^f0103a91:	e8 8b d9 ff ff       	call   f0101421 <page_free>$/;"	l
f0103a96	obj/kern/kernel.asm	/^f0103a96:	c7 04 24 c8 91 10 f0 	movl   $0xf01091c8,(%esp)$/;"	l
f0103a9d	obj/kern/kernel.asm	/^f0103a9d:	e8 68 0b 00 00       	call   f010460a <cprintf>$/;"	l
f0103aa2	obj/kern/kernel.asm	/^f0103aa2:	eb 21                	jmp    f0103ac5 <mem_init+0x2130>$/;"	l
f0103aa4	obj/kern/kernel.asm	/^f0103aa4:	89 da                	mov    %ebx,%edx$/;"	l
f0103aa6	obj/kern/kernel.asm	/^f0103aa6:	89 f8                	mov    %edi,%eax$/;"	l
f0103aa8	obj/kern/kernel.asm	/^f0103aa8:	e8 78 d3 ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f0103aad	obj/kern/kernel.asm	/^f0103aad:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	e9 09 fb ff ff       	jmp    f01035be <mem_init+0x1c29>$/;"	l
f0103ab5	obj/kern/kernel.asm	/^f0103ab5:	89 da                	mov    %ebx,%edx$/;"	l
f0103ab7	obj/kern/kernel.asm	/^f0103ab7:	89 f8                	mov    %edi,%eax$/;"	l
f0103ab9	obj/kern/kernel.asm	/^f0103ab9:	e8 67 d3 ff ff       	call   f0100e25 <check_va2pa>$/;"	l
f0103abe	obj/kern/kernel.asm	/^f0103abe:	66 90                	xchg   %ax,%ax$/;"	l
f0103ac0	obj/kern/kernel.asm	/^f0103ac0:	e9 08 fa ff ff       	jmp    f01034cd <mem_init+0x1b38>$/;"	l
f0103ac5	obj/kern/kernel.asm	/^f0103ac5:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0103ac8	obj/kern/kernel.asm	/^f0103ac8:	5b                   	pop    %ebx$/;"	l
f0103ac9	obj/kern/kernel.asm	/^f0103ac9:	5e                   	pop    %esi$/;"	l
f0103aca	obj/kern/kernel.asm	/^f0103aca:	5f                   	pop    %edi$/;"	l
f0103acb	obj/kern/kernel.asm	/^f0103acb:	5d                   	pop    %ebp$/;"	l
f0103acc	obj/kern/kernel.asm	/^f0103acc:	c3                   	ret    $/;"	l
f0103acd	obj/kern/kernel.asm	/^f0103acd <user_mem_check>:$/;"	l
f0103acd	obj/kern/kernel.asm	/^f0103acd:	55                   	push   %ebp$/;"	l
f0103ace	obj/kern/kernel.asm	/^f0103ace:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ad0	obj/kern/kernel.asm	/^f0103ad0:	57                   	push   %edi$/;"	l
f0103ad1	obj/kern/kernel.asm	/^f0103ad1:	56                   	push   %esi$/;"	l
f0103ad2	obj/kern/kernel.asm	/^f0103ad2:	53                   	push   %ebx$/;"	l
f0103ad3	obj/kern/kernel.asm	/^f0103ad3:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103ad6	obj/kern/kernel.asm	/^f0103ad6:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103ad9	obj/kern/kernel.asm	/^f0103ad9:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0103adc	obj/kern/kernel.asm	/^f0103adc:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103adf	obj/kern/kernel.asm	/^f0103adf:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103ae5	obj/kern/kernel.asm	/^f0103ae5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103ae8	obj/kern/kernel.asm	/^f0103ae8:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0103af0	obj/kern/kernel.asm	/^f0103af0:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0103af5	obj/kern/kernel.asm	/^f0103af5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103af8	obj/kern/kernel.asm	/^f0103af8:	eb 56                	jmp    f0103b50 <user_mem_check+0x83>$/;"	l
f0103afa	obj/kern/kernel.asm	/^f0103afa:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103b01	obj/kern/kernel.asm	/^f0103b01:	00 $/;"	l
f0103b02	obj/kern/kernel.asm	/^f0103b02:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103b06	obj/kern/kernel.asm	/^f0103b06:	8b 47 78             	mov    0x78(%edi),%eax$/;"	l
f0103b09	obj/kern/kernel.asm	/^f0103b09:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103b0c	obj/kern/kernel.asm	/^f0103b0c:	e8 73 d9 ff ff       	call   f0101484 <pgdir_walk>$/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	85 c0                	test   %eax,%eax$/;"	l
f0103b13	obj/kern/kernel.asm	/^f0103b13:	74 14                	je     f0103b29 <user_mem_check+0x5c>$/;"	l
f0103b15	obj/kern/kernel.asm	/^f0103b15:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0103b1b	obj/kern/kernel.asm	/^f0103b1b:	77 0c                	ja     f0103b29 <user_mem_check+0x5c>$/;"	l
f0103b1d	obj/kern/kernel.asm	/^f0103b1d:	8b 00                	mov    (%eax),%eax$/;"	l
f0103b1f	obj/kern/kernel.asm	/^f0103b1f:	a8 01                	test   $0x1,%al$/;"	l
f0103b21	obj/kern/kernel.asm	/^f0103b21:	74 06                	je     f0103b29 <user_mem_check+0x5c>$/;"	l
f0103b23	obj/kern/kernel.asm	/^f0103b23:	21 f0                	and    %esi,%eax$/;"	l
f0103b25	obj/kern/kernel.asm	/^f0103b25:	39 c6                	cmp    %eax,%esi$/;"	l
f0103b27	obj/kern/kernel.asm	/^f0103b27:	74 21                	je     f0103b4a <user_mem_check+0x7d>$/;"	l
f0103b29	obj/kern/kernel.asm	/^f0103b29:	39 5d 0c             	cmp    %ebx,0xc(%ebp)$/;"	l
f0103b2c	obj/kern/kernel.asm	/^f0103b2c:	76 0f                	jbe    f0103b3d <user_mem_check+0x70>$/;"	l
f0103b2e	obj/kern/kernel.asm	/^f0103b2e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103b31	obj/kern/kernel.asm	/^f0103b31:	a3 3c 42 2c f0       	mov    %eax,0xf02c423c$/;"	l
f0103b36	obj/kern/kernel.asm	/^f0103b36:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103b3b	obj/kern/kernel.asm	/^f0103b3b:	eb 1d                	jmp    f0103b5a <user_mem_check+0x8d>$/;"	l
f0103b3d	obj/kern/kernel.asm	/^f0103b3d:	89 1d 3c 42 2c f0    	mov    %ebx,0xf02c423c$/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	eb 10                	jmp    f0103b5a <user_mem_check+0x8d>$/;"	l
f0103b4a	obj/kern/kernel.asm	/^f0103b4a:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103b50	obj/kern/kernel.asm	/^f0103b50:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0103b53	obj/kern/kernel.asm	/^f0103b53:	72 a5                	jb     f0103afa <user_mem_check+0x2d>$/;"	l
f0103b55	obj/kern/kernel.asm	/^f0103b55:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103b5a	obj/kern/kernel.asm	/^f0103b5a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103b5d	obj/kern/kernel.asm	/^f0103b5d:	5b                   	pop    %ebx$/;"	l
f0103b5e	obj/kern/kernel.asm	/^f0103b5e:	5e                   	pop    %esi$/;"	l
f0103b5f	obj/kern/kernel.asm	/^f0103b5f:	5f                   	pop    %edi$/;"	l
f0103b60	obj/kern/kernel.asm	/^f0103b60:	5d                   	pop    %ebp$/;"	l
f0103b61	obj/kern/kernel.asm	/^f0103b61:	c3                   	ret    $/;"	l
f0103b62	obj/kern/kernel.asm	/^f0103b62 <user_mem_assert>:$/;"	l
f0103b62	obj/kern/kernel.asm	/^f0103b62:	55                   	push   %ebp$/;"	l
f0103b63	obj/kern/kernel.asm	/^f0103b63:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b65	obj/kern/kernel.asm	/^f0103b65:	53                   	push   %ebx$/;"	l
f0103b66	obj/kern/kernel.asm	/^f0103b66:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103b69	obj/kern/kernel.asm	/^f0103b69:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103b6c	obj/kern/kernel.asm	/^f0103b6c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103b6f	obj/kern/kernel.asm	/^f0103b6f:	83 c8 04             	or     $0x4,%eax$/;"	l
f0103b72	obj/kern/kernel.asm	/^f0103b72:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103b76	obj/kern/kernel.asm	/^f0103b76:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103b79	obj/kern/kernel.asm	/^f0103b79:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103b7d	obj/kern/kernel.asm	/^f0103b7d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103b80	obj/kern/kernel.asm	/^f0103b80:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103b87	obj/kern/kernel.asm	/^f0103b87:	e8 41 ff ff ff       	call   f0103acd <user_mem_check>$/;"	l
f0103b8c	obj/kern/kernel.asm	/^f0103b8c:	85 c0                	test   %eax,%eax$/;"	l
f0103b8e	obj/kern/kernel.asm	/^f0103b8e:	79 24                	jns    f0103bb4 <user_mem_assert+0x52>$/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	a1 3c 42 2c f0       	mov    0xf02c423c,%eax$/;"	l
f0103b95	obj/kern/kernel.asm	/^f0103b95:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103b99	obj/kern/kernel.asm	/^f0103b99:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103b9c	obj/kern/kernel.asm	/^f0103b9c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ba0	obj/kern/kernel.asm	/^f0103ba0:	c7 04 24 f4 91 10 f0 	movl   $0xf01091f4,(%esp)$/;"	l
f0103ba7	obj/kern/kernel.asm	/^f0103ba7:	e8 5e 0a 00 00       	call   f010460a <cprintf>$/;"	l
f0103bac	obj/kern/kernel.asm	/^f0103bac:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103baf	obj/kern/kernel.asm	/^f0103baf:	e8 78 07 00 00       	call   f010432c <env_destroy>$/;"	l
f0103bb4	obj/kern/kernel.asm	/^f0103bb4:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103bb7	obj/kern/kernel.asm	/^f0103bb7:	5b                   	pop    %ebx$/;"	l
f0103bb8	obj/kern/kernel.asm	/^f0103bb8:	5d                   	pop    %ebp$/;"	l
f0103bb9	obj/kern/kernel.asm	/^f0103bb9:	c3                   	ret    $/;"	l
f0103bba	obj/kern/kernel.asm	/^f0103bba <region_alloc>:$/;"	l
f0103bba	obj/kern/kernel.asm	/^f0103bba:	55                   	push   %ebp$/;"	l
f0103bbb	obj/kern/kernel.asm	/^f0103bbb:	89 e5                	mov    %esp,%ebp$/;"	l
f0103bbd	obj/kern/kernel.asm	/^f0103bbd:	57                   	push   %edi$/;"	l
f0103bbe	obj/kern/kernel.asm	/^f0103bbe:	56                   	push   %esi$/;"	l
f0103bbf	obj/kern/kernel.asm	/^f0103bbf:	53                   	push   %ebx$/;"	l
f0103bc0	obj/kern/kernel.asm	/^f0103bc0:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103bc3	obj/kern/kernel.asm	/^f0103bc3:	89 c7                	mov    %eax,%edi$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	8d b4 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%esi$/;"	l
f0103bcc	obj/kern/kernel.asm	/^f0103bcc:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103bd2	obj/kern/kernel.asm	/^f0103bd2:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0103bd8	obj/kern/kernel.asm	/^f0103bd8:	89 d3                	mov    %edx,%ebx$/;"	l
f0103bda	obj/kern/kernel.asm	/^f0103bda:	eb 6e                	jmp    f0103c4a <region_alloc+0x90>$/;"	l
f0103bdc	obj/kern/kernel.asm	/^f0103bdc:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103be3	obj/kern/kernel.asm	/^f0103be3:	e8 b6 d7 ff ff       	call   f010139e <page_alloc>$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	85 c0                	test   %eax,%eax$/;"	l
f0103bea	obj/kern/kernel.asm	/^f0103bea:	75 1c                	jne    f0103c08 <region_alloc+0x4e>$/;"	l
f0103bec	obj/kern/kernel.asm	/^f0103bec:	c7 44 24 08 50 95 10 	movl   $0xf0109550,0x8(%esp)$/;"	l
f0103bf3	obj/kern/kernel.asm	/^f0103bf3:	f0 $/;"	l
f0103bf4	obj/kern/kernel.asm	/^f0103bf4:	c7 44 24 04 44 01 00 	movl   $0x144,0x4(%esp)$/;"	l
f0103bfb	obj/kern/kernel.asm	/^f0103bfb:	00 $/;"	l
f0103bfc	obj/kern/kernel.asm	/^f0103bfc:	c7 04 24 da 95 10 f0 	movl   $0xf01095da,(%esp)$/;"	l
f0103c03	obj/kern/kernel.asm	/^f0103c03:	e8 95 c4 ff ff       	call   f010009d <_panic>$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	c7 44 24 0c 07 00 00 	movl   $0x7,0xc(%esp)$/;"	l
f0103c0f	obj/kern/kernel.asm	/^f0103c0f:	00 $/;"	l
f0103c10	obj/kern/kernel.asm	/^f0103c10:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103c14	obj/kern/kernel.asm	/^f0103c14:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103c18	obj/kern/kernel.asm	/^f0103c18:	8b 47 78             	mov    0x78(%edi),%eax$/;"	l
f0103c1b	obj/kern/kernel.asm	/^f0103c1b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103c1e	obj/kern/kernel.asm	/^f0103c1e:	e8 4b dc ff ff       	call   f010186e <page_insert>$/;"	l
f0103c23	obj/kern/kernel.asm	/^f0103c23:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f0103c26	obj/kern/kernel.asm	/^f0103c26:	75 1c                	jne    f0103c44 <region_alloc+0x8a>$/;"	l
f0103c28	obj/kern/kernel.asm	/^f0103c28:	c7 44 24 08 80 95 10 	movl   $0xf0109580,0x8(%esp)$/;"	l
f0103c2f	obj/kern/kernel.asm	/^f0103c2f:	f0 $/;"	l
f0103c30	obj/kern/kernel.asm	/^f0103c30:	c7 44 24 04 48 01 00 	movl   $0x148,0x4(%esp)$/;"	l
f0103c37	obj/kern/kernel.asm	/^f0103c37:	00 $/;"	l
f0103c38	obj/kern/kernel.asm	/^f0103c38:	c7 04 24 da 95 10 f0 	movl   $0xf01095da,(%esp)$/;"	l
f0103c3f	obj/kern/kernel.asm	/^f0103c3f:	e8 59 c4 ff ff       	call   f010009d <_panic>$/;"	l
f0103c44	obj/kern/kernel.asm	/^f0103c44:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103c4a	obj/kern/kernel.asm	/^f0103c4a:	39 de                	cmp    %ebx,%esi$/;"	l
f0103c4c	obj/kern/kernel.asm	/^f0103c4c:	77 8e                	ja     f0103bdc <region_alloc+0x22>$/;"	l
f0103c4e	obj/kern/kernel.asm	/^f0103c4e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103c51	obj/kern/kernel.asm	/^f0103c51:	5b                   	pop    %ebx$/;"	l
f0103c52	obj/kern/kernel.asm	/^f0103c52:	5e                   	pop    %esi$/;"	l
f0103c53	obj/kern/kernel.asm	/^f0103c53:	5f                   	pop    %edi$/;"	l
f0103c54	obj/kern/kernel.asm	/^f0103c54:	5d                   	pop    %ebp$/;"	l
f0103c55	obj/kern/kernel.asm	/^f0103c55:	c3                   	ret    $/;"	l
f0103c56	obj/kern/kernel.asm	/^f0103c56 <envid2env>:$/;"	l
f0103c56	obj/kern/kernel.asm	/^f0103c56:	55                   	push   %ebp$/;"	l
f0103c57	obj/kern/kernel.asm	/^f0103c57:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c59	obj/kern/kernel.asm	/^f0103c59:	56                   	push   %esi$/;"	l
f0103c5a	obj/kern/kernel.asm	/^f0103c5a:	53                   	push   %ebx$/;"	l
f0103c5b	obj/kern/kernel.asm	/^f0103c5b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103c5e	obj/kern/kernel.asm	/^f0103c5e:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0103c61	obj/kern/kernel.asm	/^f0103c61:	85 c0                	test   %eax,%eax$/;"	l
f0103c63	obj/kern/kernel.asm	/^f0103c63:	75 1a                	jne    f0103c7f <envid2env+0x29>$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	e8 df 32 00 00       	call   f0106f49 <cpunum>$/;"	l
f0103c6a	obj/kern/kernel.asm	/^f0103c6a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c6d	obj/kern/kernel.asm	/^f0103c6d:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0103c73	obj/kern/kernel.asm	/^f0103c73:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103c76	obj/kern/kernel.asm	/^f0103c76:	89 01                	mov    %eax,(%ecx)$/;"	l
f0103c78	obj/kern/kernel.asm	/^f0103c78:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103c7d	obj/kern/kernel.asm	/^f0103c7d:	eb 70                	jmp    f0103cef <envid2env+0x99>$/;"	l
f0103c7f	obj/kern/kernel.asm	/^f0103c7f:	89 c3                	mov    %eax,%ebx$/;"	l
f0103c81	obj/kern/kernel.asm	/^f0103c81:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0103c87	obj/kern/kernel.asm	/^f0103c87:	c1 e3 07             	shl    $0x7,%ebx$/;"	l
f0103c8a	obj/kern/kernel.asm	/^f0103c8a:	03 1d 48 42 2c f0    	add    0xf02c4248,%ebx$/;"	l
f0103c90	obj/kern/kernel.asm	/^f0103c90:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0103c94	obj/kern/kernel.asm	/^f0103c94:	74 05                	je     f0103c9b <envid2env+0x45>$/;"	l
f0103c96	obj/kern/kernel.asm	/^f0103c96:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	74 10                	je     f0103cab <envid2env+0x55>$/;"	l
f0103c9b	obj/kern/kernel.asm	/^f0103c9b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103c9e	obj/kern/kernel.asm	/^f0103c9e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103ca4	obj/kern/kernel.asm	/^f0103ca4:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103ca9	obj/kern/kernel.asm	/^f0103ca9:	eb 44                	jmp    f0103cef <envid2env+0x99>$/;"	l
f0103cab	obj/kern/kernel.asm	/^f0103cab:	84 d2                	test   %dl,%dl$/;"	l
f0103cad	obj/kern/kernel.asm	/^f0103cad:	74 36                	je     f0103ce5 <envid2env+0x8f>$/;"	l
f0103caf	obj/kern/kernel.asm	/^f0103caf:	e8 95 32 00 00       	call   f0106f49 <cpunum>$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cb7	obj/kern/kernel.asm	/^f0103cb7:	39 98 28 50 2c f0    	cmp    %ebx,-0xfd3afd8(%eax)$/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd:	74 26                	je     f0103ce5 <envid2env+0x8f>$/;"	l
f0103cbf	obj/kern/kernel.asm	/^f0103cbf:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f0103cc2	obj/kern/kernel.asm	/^f0103cc2:	e8 82 32 00 00       	call   f0106f49 <cpunum>$/;"	l
f0103cc7	obj/kern/kernel.asm	/^f0103cc7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cca	obj/kern/kernel.asm	/^f0103cca:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0103cd0	obj/kern/kernel.asm	/^f0103cd0:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f0103cd3	obj/kern/kernel.asm	/^f0103cd3:	74 10                	je     f0103ce5 <envid2env+0x8f>$/;"	l
f0103cd5	obj/kern/kernel.asm	/^f0103cd5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103cd8	obj/kern/kernel.asm	/^f0103cd8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103cde	obj/kern/kernel.asm	/^f0103cde:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103ce3	obj/kern/kernel.asm	/^f0103ce3:	eb 0a                	jmp    f0103cef <envid2env+0x99>$/;"	l
f0103ce5	obj/kern/kernel.asm	/^f0103ce5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103ce8	obj/kern/kernel.asm	/^f0103ce8:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103cea	obj/kern/kernel.asm	/^f0103cea:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103cef	obj/kern/kernel.asm	/^f0103cef:	5b                   	pop    %ebx$/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	5e                   	pop    %esi$/;"	l
f0103cf1	obj/kern/kernel.asm	/^f0103cf1:	5d                   	pop    %ebp$/;"	l
f0103cf2	obj/kern/kernel.asm	/^f0103cf2:	c3                   	ret    $/;"	l
f0103cf3	obj/kern/kernel.asm	/^f0103cf3 <insert_in_list>:$/;"	l
f0103cf3	obj/kern/kernel.asm	/^f0103cf3:	55                   	push   %ebp$/;"	l
f0103cf4	obj/kern/kernel.asm	/^f0103cf4:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cf6	obj/kern/kernel.asm	/^f0103cf6:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	8b 15 4c 42 2c f0    	mov    0xf02c424c,%edx$/;"	l
f0103cff	obj/kern/kernel.asm	/^f0103cff:	85 d2                	test   %edx,%edx$/;"	l
f0103d01	obj/kern/kernel.asm	/^f0103d01:	75 08                	jne    f0103d0b <insert_in_list+0x18>$/;"	l
f0103d03	obj/kern/kernel.asm	/^f0103d03:	89 0d 4c 42 2c f0    	mov    %ecx,0xf02c424c$/;"	l
f0103d09	obj/kern/kernel.asm	/^f0103d09:	eb 0e                	jmp    f0103d19 <insert_in_list+0x26>$/;"	l
f0103d0b	obj/kern/kernel.asm	/^f0103d0b:	8b 42 44             	mov    0x44(%edx),%eax$/;"	l
f0103d0e	obj/kern/kernel.asm	/^f0103d0e:	85 c0                	test   %eax,%eax$/;"	l
f0103d10	obj/kern/kernel.asm	/^f0103d10:	74 04                	je     f0103d16 <insert_in_list+0x23>$/;"	l
f0103d12	obj/kern/kernel.asm	/^f0103d12:	89 c2                	mov    %eax,%edx$/;"	l
f0103d14	obj/kern/kernel.asm	/^f0103d14:	eb f5                	jmp    f0103d0b <insert_in_list+0x18>$/;"	l
f0103d16	obj/kern/kernel.asm	/^f0103d16:	89 4a 44             	mov    %ecx,0x44(%edx)$/;"	l
f0103d19	obj/kern/kernel.asm	/^f0103d19:	5d                   	pop    %ebp$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	c3                   	ret    $/;"	l
f0103d1b	obj/kern/kernel.asm	/^f0103d1b <env_init_percpu>:$/;"	l
f0103d1b	obj/kern/kernel.asm	/^f0103d1b:	55                   	push   %ebp$/;"	l
f0103d1c	obj/kern/kernel.asm	/^f0103d1c:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d1e	obj/kern/kernel.asm	/^f0103d1e:	b8 20 63 12 f0       	mov    $0xf0126320,%eax$/;"	l
f0103d23	obj/kern/kernel.asm	/^f0103d23:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0103d26	obj/kern/kernel.asm	/^f0103d26:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0103d2b	obj/kern/kernel.asm	/^f0103d2b:	8e e8                	mov    %eax,%gs$/;"	l
f0103d2d	obj/kern/kernel.asm	/^f0103d2d:	8e e0                	mov    %eax,%fs$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	b0 10                	mov    $0x10,%al$/;"	l
f0103d31	obj/kern/kernel.asm	/^f0103d31:	8e c0                	mov    %eax,%es$/;"	l
f0103d33	obj/kern/kernel.asm	/^f0103d33:	8e d8                	mov    %eax,%ds$/;"	l
f0103d35	obj/kern/kernel.asm	/^f0103d35:	8e d0                	mov    %eax,%ss$/;"	l
f0103d37	obj/kern/kernel.asm	/^f0103d37:	ea 3e 3d 10 f0 08 00 	ljmp   $0x8,$0xf0103d3e$/;"	l
f0103d3e	obj/kern/kernel.asm	/^f0103d3e:	b0 00                	mov    $0x0,%al$/;"	l
f0103d40	obj/kern/kernel.asm	/^f0103d40:	0f 00 d0             	lldt   %ax$/;"	l
f0103d43	obj/kern/kernel.asm	/^f0103d43:	5d                   	pop    %ebp$/;"	l
f0103d44	obj/kern/kernel.asm	/^f0103d44:	c3                   	ret    $/;"	l
f0103d45	obj/kern/kernel.asm	/^f0103d45 <env_init>:$/;"	l
f0103d45	obj/kern/kernel.asm	/^f0103d45:	55                   	push   %ebp$/;"	l
f0103d46	obj/kern/kernel.asm	/^f0103d46:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d48	obj/kern/kernel.asm	/^f0103d48:	56                   	push   %esi$/;"	l
f0103d49	obj/kern/kernel.asm	/^f0103d49:	53                   	push   %ebx$/;"	l
f0103d4a	obj/kern/kernel.asm	/^f0103d4a:	8b 35 48 42 2c f0    	mov    0xf02c4248,%esi$/;"	l
f0103d50	obj/kern/kernel.asm	/^f0103d50:	8d 86 80 ff 01 00    	lea    0x1ff80(%esi),%eax$/;"	l
f0103d56	obj/kern/kernel.asm	/^f0103d56:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0103d5b	obj/kern/kernel.asm	/^f0103d5b:	ba ff 03 00 00       	mov    $0x3ff,%edx$/;"	l
f0103d60	obj/kern/kernel.asm	/^f0103d60:	89 c3                	mov    %eax,%ebx$/;"	l
f0103d62	obj/kern/kernel.asm	/^f0103d62:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f0103d69	obj/kern/kernel.asm	/^f0103d69:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0103d70	obj/kern/kernel.asm	/^f0103d70:	85 d2                	test   %edx,%edx$/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	75 0c                	jne    f0103d80 <env_init+0x3b>$/;"	l
f0103d74	obj/kern/kernel.asm	/^f0103d74:	c7 46 78 f4 01 00 00 	movl   $0x1f4,0x78(%esi)$/;"	l
f0103d7b	obj/kern/kernel.asm	/^f0103d7b:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	eb 12                	jmp    f0103d92 <env_init+0x4d>$/;"	l
f0103d80	obj/kern/kernel.asm	/^f0103d80:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f0103d83	obj/kern/kernel.asm	/^f0103d83:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0103d86	obj/kern/kernel.asm	/^f0103d86:	83 c0 80             	add    $0xffffff80,%eax$/;"	l
f0103d89	obj/kern/kernel.asm	/^f0103d89:	83 fa ff             	cmp    $0xffffffff,%edx$/;"	l
f0103d8c	obj/kern/kernel.asm	/^f0103d8c:	74 04                	je     f0103d92 <env_init+0x4d>$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103d90	obj/kern/kernel.asm	/^f0103d90:	eb ce                	jmp    f0103d60 <env_init+0x1b>$/;"	l
f0103d92	obj/kern/kernel.asm	/^f0103d92:	89 35 4c 42 2c f0    	mov    %esi,0xf02c424c$/;"	l
f0103d98	obj/kern/kernel.asm	/^f0103d98:	e8 7e ff ff ff       	call   f0103d1b <env_init_percpu>$/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	5b                   	pop    %ebx$/;"	l
f0103d9e	obj/kern/kernel.asm	/^f0103d9e:	5e                   	pop    %esi$/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f:	5d                   	pop    %ebp$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0:	c3                   	ret    $/;"	l
f0103da1	obj/kern/kernel.asm	/^f0103da1 <env_alloc>:$/;"	l
f0103da1	obj/kern/kernel.asm	/^f0103da1:	55                   	push   %ebp$/;"	l
f0103da2	obj/kern/kernel.asm	/^f0103da2:	89 e5                	mov    %esp,%ebp$/;"	l
f0103da4	obj/kern/kernel.asm	/^f0103da4:	53                   	push   %ebx$/;"	l
f0103da5	obj/kern/kernel.asm	/^f0103da5:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	8b 1d 4c 42 2c f0    	mov    0xf02c424c,%ebx$/;"	l
f0103dae	obj/kern/kernel.asm	/^f0103dae:	85 db                	test   %ebx,%ebx$/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0:	0f 84 22 01 00 00    	je     f0103ed8 <env_alloc+0x137>$/;"	l
f0103db6	obj/kern/kernel.asm	/^f0103db6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0103dbd	obj/kern/kernel.asm	/^f0103dbd:	e8 dc d5 ff ff       	call   f010139e <page_alloc>$/;"	l
f0103dc2	obj/kern/kernel.asm	/^f0103dc2:	85 c0                	test   %eax,%eax$/;"	l
f0103dc4	obj/kern/kernel.asm	/^f0103dc4:	0f 84 18 01 00 00    	je     f0103ee2 <env_alloc+0x141>$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	2b 05 a4 4e 2c f0    	sub    0xf02c4ea4,%eax$/;"	l
f0103dd5	obj/kern/kernel.asm	/^f0103dd5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103ddb	obj/kern/kernel.asm	/^f0103ddb:	89 c2                	mov    %eax,%edx$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103de0	obj/kern/kernel.asm	/^f0103de0:	3b 15 9c 4e 2c f0    	cmp    0xf02c4e9c,%edx$/;"	l
f0103de6	obj/kern/kernel.asm	/^f0103de6:	72 20                	jb     f0103e08 <env_alloc+0x67>$/;"	l
f0103de8	obj/kern/kernel.asm	/^f0103de8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103dec	obj/kern/kernel.asm	/^f0103dec:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f0103df3	obj/kern/kernel.asm	/^f0103df3:	f0 $/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0103dfb	obj/kern/kernel.asm	/^f0103dfb:	00 $/;"	l
f0103dfc	obj/kern/kernel.asm	/^f0103dfc:	c7 04 24 29 92 10 f0 	movl   $0xf0109229,(%esp)$/;"	l
f0103e03	obj/kern/kernel.asm	/^f0103e03:	e8 95 c2 ff ff       	call   f010009d <_panic>$/;"	l
f0103e08	obj/kern/kernel.asm	/^f0103e08:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103e0d	obj/kern/kernel.asm	/^f0103e0d:	89 43 78             	mov    %eax,0x78(%ebx)$/;"	l
f0103e10	obj/kern/kernel.asm	/^f0103e10:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103e17	obj/kern/kernel.asm	/^f0103e17:	00 $/;"	l
f0103e18	obj/kern/kernel.asm	/^f0103e18:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103e1f	obj/kern/kernel.asm	/^f0103e1f:	00 $/;"	l
f0103e20	obj/kern/kernel.asm	/^f0103e20:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103e23	obj/kern/kernel.asm	/^f0103e23:	e8 cf 2a 00 00       	call   f01068f7 <memset>$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	b8 ec 0e 00 00       	mov    $0xeec,%eax$/;"	l
f0103e2d	obj/kern/kernel.asm	/^f0103e2d:	8b 15 a0 4e 2c f0    	mov    0xf02c4ea0,%edx$/;"	l
f0103e33	obj/kern/kernel.asm	/^f0103e33:	8b 0c 02             	mov    (%edx,%eax,1),%ecx$/;"	l
f0103e36	obj/kern/kernel.asm	/^f0103e36:	8b 53 78             	mov    0x78(%ebx),%edx$/;"	l
f0103e39	obj/kern/kernel.asm	/^f0103e39:	89 0c 02             	mov    %ecx,(%edx,%eax,1)$/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	83 c0 04             	add    $0x4,%eax$/;"	l
f0103e3f	obj/kern/kernel.asm	/^f0103e3f:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0103e44	obj/kern/kernel.asm	/^f0103e44:	75 e7                	jne    f0103e2d <env_alloc+0x8c>$/;"	l
f0103e46	obj/kern/kernel.asm	/^f0103e46:	8b 43 78             	mov    0x78(%ebx),%eax$/;"	l
f0103e49	obj/kern/kernel.asm	/^f0103e49:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103e4e	obj/kern/kernel.asm	/^f0103e4e:	77 20                	ja     f0103e70 <env_alloc+0xcf>$/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	f0 $/;"	l
f0103e5c	obj/kern/kernel.asm	/^f0103e5c:	c7 44 24 04 dc 00 00 	movl   $0xdc,0x4(%esp)$/;"	l
f0103e63	obj/kern/kernel.asm	/^f0103e63:	00 $/;"	l
f0103e64	obj/kern/kernel.asm	/^f0103e64:	c7 04 24 da 95 10 f0 	movl   $0xf01095da,(%esp)$/;"	l
f0103e6b	obj/kern/kernel.asm	/^f0103e6b:	e8 2d c2 ff ff       	call   f010009d <_panic>$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0103e76	obj/kern/kernel.asm	/^f0103e76:	83 ca 05             	or     $0x5,%edx$/;"	l
f0103e79	obj/kern/kernel.asm	/^f0103e79:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0103e7f	obj/kern/kernel.asm	/^f0103e7f:	8b 43 78             	mov    0x78(%ebx),%eax$/;"	l
f0103e82	obj/kern/kernel.asm	/^f0103e82:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103e87	obj/kern/kernel.asm	/^f0103e87:	77 63                	ja     f0103eec <env_alloc+0x14b>$/;"	l
f0103e89	obj/kern/kernel.asm	/^f0103e89:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103e8d	obj/kern/kernel.asm	/^f0103e8d:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f0103e94	obj/kern/kernel.asm	/^f0103e94:	f0 $/;"	l
f0103e95	obj/kern/kernel.asm	/^f0103e95:	c7 44 24 04 dd 00 00 	movl   $0xdd,0x4(%esp)$/;"	l
f0103e9c	obj/kern/kernel.asm	/^f0103e9c:	00 $/;"	l
f0103e9d	obj/kern/kernel.asm	/^f0103e9d:	c7 04 24 da 95 10 f0 	movl   $0xf01095da,(%esp)$/;"	l
f0103ea4	obj/kern/kernel.asm	/^f0103ea4:	e8 f4 c1 ff ff       	call   f010009d <_panic>$/;"	l
f0103ea9	obj/kern/kernel.asm	/^f0103ea9:	e8 9b 30 00 00       	call   f0106f49 <cpunum>$/;"	l
f0103eae	obj/kern/kernel.asm	/^f0103eae:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103eb1	obj/kern/kernel.asm	/^f0103eb1:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0103eb7	obj/kern/kernel.asm	/^f0103eb7:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103eba	obj/kern/kernel.asm	/^f0103eba:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103ebe	obj/kern/kernel.asm	/^f0103ebe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	c7 04 24 e5 95 10 f0 	movl   $0xf01095e5,(%esp)$/;"	l
f0103ec9	obj/kern/kernel.asm	/^f0103ec9:	e8 3c 07 00 00       	call   f010460a <cprintf>$/;"	l
f0103ece	obj/kern/kernel.asm	/^f0103ece:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103ed3	obj/kern/kernel.asm	/^f0103ed3:	e9 cc 00 00 00       	jmp    f0103fa4 <env_alloc+0x203>$/;"	l
f0103ed8	obj/kern/kernel.asm	/^f0103ed8:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103edd	obj/kern/kernel.asm	/^f0103edd:	e9 c2 00 00 00       	jmp    f0103fa4 <env_alloc+0x203>$/;"	l
f0103ee2	obj/kern/kernel.asm	/^f0103ee2:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0103ee7	obj/kern/kernel.asm	/^f0103ee7:	e9 b8 00 00 00       	jmp    f0103fa4 <env_alloc+0x203>$/;"	l
f0103eec	obj/kern/kernel.asm	/^f0103eec:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103ef4	obj/kern/kernel.asm	/^f0103ef4:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0103ef9	obj/kern/kernel.asm	/^f0103ef9:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0103efe	obj/kern/kernel.asm	/^f0103efe:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0103f01	obj/kern/kernel.asm	/^f0103f01:	89 da                	mov    %ebx,%edx$/;"	l
f0103f03	obj/kern/kernel.asm	/^f0103f03:	2b 15 48 42 2c f0    	sub    0xf02c4248,%edx$/;"	l
f0103f09	obj/kern/kernel.asm	/^f0103f09:	c1 fa 07             	sar    $0x7,%edx$/;"	l
f0103f0c	obj/kern/kernel.asm	/^f0103f0c:	09 d0                	or     %edx,%eax$/;"	l
f0103f0e	obj/kern/kernel.asm	/^f0103f0e:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0103f11	obj/kern/kernel.asm	/^f0103f11:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0103f2c	obj/kern/kernel.asm	/^f0103f2c:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0103f33	obj/kern/kernel.asm	/^f0103f33:	00 $/;"	l
f0103f34	obj/kern/kernel.asm	/^f0103f34:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103f3b	obj/kern/kernel.asm	/^f0103f3b:	00 $/;"	l
f0103f3c	obj/kern/kernel.asm	/^f0103f3c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	e8 b3 29 00 00       	call   f01068f7 <memset>$/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103f4a	obj/kern/kernel.asm	/^f0103f4a:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0103f50	obj/kern/kernel.asm	/^f0103f50:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103f56	obj/kern/kernel.asm	/^f0103f56:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103f5d	obj/kern/kernel.asm	/^f0103f5d:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	c7 43 38 00 02 00 00 	movl   $0x200,0x38(%ebx)$/;"	l
f0103f6a	obj/kern/kernel.asm	/^f0103f6a:	c7 43 60 00 00 00 00 	movl   $0x0,0x60(%ebx)$/;"	l
f0103f71	obj/kern/kernel.asm	/^f0103f71:	c6 43 64 00          	movb   $0x0,0x64(%ebx)$/;"	l
f0103f75	obj/kern/kernel.asm	/^f0103f75:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0103f78	obj/kern/kernel.asm	/^f0103f78:	a3 4c 42 2c f0       	mov    %eax,0xf02c424c$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103f80	obj/kern/kernel.asm	/^f0103f80:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103f82	obj/kern/kernel.asm	/^f0103f82:	8b 5b 48             	mov    0x48(%ebx),%ebx$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	e8 bf 2f 00 00       	call   f0106f49 <cpunum>$/;"	l
f0103f8a	obj/kern/kernel.asm	/^f0103f8a:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0103f8d	obj/kern/kernel.asm	/^f0103f8d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103f92	obj/kern/kernel.asm	/^f0103f92:	83 ba 28 50 2c f0 00 	cmpl   $0x0,-0xfd3afd8(%edx)$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	0f 85 0a ff ff ff    	jne    f0103ea9 <env_alloc+0x108>$/;"	l
f0103f9f	obj/kern/kernel.asm	/^f0103f9f:	e9 16 ff ff ff       	jmp    f0103eba <env_alloc+0x119>$/;"	l
f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103fa7	obj/kern/kernel.asm	/^f0103fa7:	5b                   	pop    %ebx$/;"	l
f0103fa8	obj/kern/kernel.asm	/^f0103fa8:	5d                   	pop    %ebp$/;"	l
f0103fa9	obj/kern/kernel.asm	/^f0103fa9:	c3                   	ret    $/;"	l
f0103faa	obj/kern/kernel.asm	/^f0103faa <env_create>:$/;"	l
f0103faa	obj/kern/kernel.asm	/^f0103faa:	55                   	push   %ebp$/;"	l
f0103fab	obj/kern/kernel.asm	/^f0103fab:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fad	obj/kern/kernel.asm	/^f0103fad:	57                   	push   %edi$/;"	l
f0103fae	obj/kern/kernel.asm	/^f0103fae:	56                   	push   %esi$/;"	l
f0103faf	obj/kern/kernel.asm	/^f0103faf:	53                   	push   %ebx$/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103fb3	obj/kern/kernel.asm	/^f0103fb3:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103fb6	obj/kern/kernel.asm	/^f0103fb6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0103fbd	obj/kern/kernel.asm	/^f0103fbd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103fc4	obj/kern/kernel.asm	/^f0103fc4:	00 $/;"	l
f0103fc5	obj/kern/kernel.asm	/^f0103fc5:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	e8 d1 fd ff ff       	call   f0103da1 <env_alloc>$/;"	l
f0103fd0	obj/kern/kernel.asm	/^f0103fd0:	83 f8 fb             	cmp    $0xfffffffb,%eax$/;"	l
f0103fd3	obj/kern/kernel.asm	/^f0103fd3:	75 1c                	jne    f0103ff1 <env_create+0x47>$/;"	l
f0103fd5	obj/kern/kernel.asm	/^f0103fd5:	c7 44 24 08 fa 95 10 	movl   $0xf01095fa,0x8(%esp)$/;"	l
f0103fdc	obj/kern/kernel.asm	/^f0103fdc:	f0 $/;"	l
f0103fdd	obj/kern/kernel.asm	/^f0103fdd:	c7 44 24 04 c3 01 00 	movl   $0x1c3,0x4(%esp)$/;"	l
f0103fe4	obj/kern/kernel.asm	/^f0103fe4:	00 $/;"	l
f0103fe5	obj/kern/kernel.asm	/^f0103fe5:	c7 04 24 da 95 10 f0 	movl   $0xf01095da,(%esp)$/;"	l
f0103fec	obj/kern/kernel.asm	/^f0103fec:	e8 ac c0 ff ff       	call   f010009d <_panic>$/;"	l
f0103ff1	obj/kern/kernel.asm	/^f0103ff1:	83 fb 01             	cmp    $0x1,%ebx$/;"	l
f0103ff4	obj/kern/kernel.asm	/^f0103ff4:	75 0a                	jne    f0104000 <env_create+0x56>$/;"	l
f0103ff6	obj/kern/kernel.asm	/^f0103ff6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	81 48 38 00 30 00 00 	orl    $0x3000,0x38(%eax)$/;"	l
f0104000	obj/kern/kernel.asm	/^f0104000:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0104003	obj/kern/kernel.asm	/^f0104003:	89 5f 50             	mov    %ebx,0x50(%edi)$/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	81 38 7f 45 4c 46    	cmpl   $0x464c457f,(%eax)$/;"	l
f010400f	obj/kern/kernel.asm	/^f010400f:	74 1c                	je     f010402d <env_create+0x83>$/;"	l
f0104011	obj/kern/kernel.asm	/^f0104011:	c7 44 24 08 16 96 10 	movl   $0xf0109616,0x8(%esp)$/;"	l
f0104018	obj/kern/kernel.asm	/^f0104018:	f0 $/;"	l
f0104019	obj/kern/kernel.asm	/^f0104019:	c7 44 24 04 88 01 00 	movl   $0x188,0x4(%esp)$/;"	l
f0104020	obj/kern/kernel.asm	/^f0104020:	00 $/;"	l
f0104021	obj/kern/kernel.asm	/^f0104021:	c7 04 24 da 95 10 f0 	movl   $0xf01095da,(%esp)$/;"	l
f0104028	obj/kern/kernel.asm	/^f0104028:	e8 70 c0 ff ff       	call   f010009d <_panic>$/;"	l
f010402d	obj/kern/kernel.asm	/^f010402d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104030	obj/kern/kernel.asm	/^f0104030:	89 c3                	mov    %eax,%ebx$/;"	l
f0104032	obj/kern/kernel.asm	/^f0104032:	03 58 1c             	add    0x1c(%eax),%ebx$/;"	l
f0104035	obj/kern/kernel.asm	/^f0104035:	0f b7 70 2c          	movzwl 0x2c(%eax),%esi$/;"	l
f0104039	obj/kern/kernel.asm	/^f0104039:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f010403c	obj/kern/kernel.asm	/^f010403c:	01 de                	add    %ebx,%esi$/;"	l
f010403e	obj/kern/kernel.asm	/^f010403e:	e9 ba 00 00 00       	jmp    f01040fd <env_create+0x153>$/;"	l
f0104043	obj/kern/kernel.asm	/^f0104043:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046:	0f 85 ae 00 00 00    	jne    f01040fa <env_create+0x150>$/;"	l
f010404c	obj/kern/kernel.asm	/^f010404c:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f010404f	obj/kern/kernel.asm	/^f010404f:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0104052	obj/kern/kernel.asm	/^f0104052:	89 f8                	mov    %edi,%eax$/;"	l
f0104054	obj/kern/kernel.asm	/^f0104054:	e8 61 fb ff ff       	call   f0103bba <region_alloc>$/;"	l
f0104059	obj/kern/kernel.asm	/^f0104059:	8b 47 78             	mov    0x78(%edi),%eax$/;"	l
f010405c	obj/kern/kernel.asm	/^f010405c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104061	obj/kern/kernel.asm	/^f0104061:	77 20                	ja     f0104083 <env_create+0xd9>$/;"	l
f0104063	obj/kern/kernel.asm	/^f0104063:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	f0 $/;"	l
f010406f	obj/kern/kernel.asm	/^f010406f:	c7 44 24 04 9f 01 00 	movl   $0x19f,0x4(%esp)$/;"	l
f0104076	obj/kern/kernel.asm	/^f0104076:	00 $/;"	l
f0104077	obj/kern/kernel.asm	/^f0104077:	c7 04 24 da 95 10 f0 	movl   $0xf01095da,(%esp)$/;"	l
f010407e	obj/kern/kernel.asm	/^f010407e:	e8 1a c0 ff ff       	call   f010009d <_panic>$/;"	l
f0104083	obj/kern/kernel.asm	/^f0104083:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010408b	obj/kern/kernel.asm	/^f010408b:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f010408e	obj/kern/kernel.asm	/^f010408e:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f0104091	obj/kern/kernel.asm	/^f0104091:	29 c2                	sub    %eax,%edx$/;"	l
f0104093	obj/kern/kernel.asm	/^f0104093:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104097	obj/kern/kernel.asm	/^f0104097:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010409e	obj/kern/kernel.asm	/^f010409e:	00 $/;"	l
f010409f	obj/kern/kernel.asm	/^f010409f:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f01040a2	obj/kern/kernel.asm	/^f01040a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01040a5	obj/kern/kernel.asm	/^f01040a5:	e8 4d 28 00 00       	call   f01068f7 <memset>$/;"	l
f01040aa	obj/kern/kernel.asm	/^f01040aa:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01040ad	obj/kern/kernel.asm	/^f01040ad:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01040b1	obj/kern/kernel.asm	/^f01040b1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01040b4	obj/kern/kernel.asm	/^f01040b4:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f01040b7	obj/kern/kernel.asm	/^f01040b7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01040bb	obj/kern/kernel.asm	/^f01040bb:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01040be	obj/kern/kernel.asm	/^f01040be:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01040c1	obj/kern/kernel.asm	/^f01040c1:	e8 7e 28 00 00       	call   f0106944 <memmove>$/;"	l
f01040c6	obj/kern/kernel.asm	/^f01040c6:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f01040cb	obj/kern/kernel.asm	/^f01040cb:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0:	77 20                	ja     f01040f2 <env_create+0x148>$/;"	l
f01040d2	obj/kern/kernel.asm	/^f01040d2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01040d6	obj/kern/kernel.asm	/^f01040d6:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f01040dd	obj/kern/kernel.asm	/^f01040dd:	f0 $/;"	l
f01040de	obj/kern/kernel.asm	/^f01040de:	c7 44 24 04 a2 01 00 	movl   $0x1a2,0x4(%esp)$/;"	l
f01040e5	obj/kern/kernel.asm	/^f01040e5:	00 $/;"	l
f01040e6	obj/kern/kernel.asm	/^f01040e6:	c7 04 24 da 95 10 f0 	movl   $0xf01095da,(%esp)$/;"	l
f01040ed	obj/kern/kernel.asm	/^f01040ed:	e8 ab bf ff ff       	call   f010009d <_panic>$/;"	l
f01040f2	obj/kern/kernel.asm	/^f01040f2:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01040f7	obj/kern/kernel.asm	/^f01040f7:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01040fa	obj/kern/kernel.asm	/^f01040fa:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01040fd	obj/kern/kernel.asm	/^f01040fd:	39 de                	cmp    %ebx,%esi$/;"	l
f01040ff	obj/kern/kernel.asm	/^f01040ff:	0f 87 3e ff ff ff    	ja     f0104043 <env_create+0x99>$/;"	l
f0104105	obj/kern/kernel.asm	/^f0104105:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104108	obj/kern/kernel.asm	/^f0104108:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
f010410b	obj/kern/kernel.asm	/^f010410b:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f010410e	obj/kern/kernel.asm	/^f010410e:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0104113	obj/kern/kernel.asm	/^f0104113:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0104118	obj/kern/kernel.asm	/^f0104118:	89 f8                	mov    %edi,%eax$/;"	l
f010411a	obj/kern/kernel.asm	/^f010411a:	e8 9b fa ff ff       	call   f0103bba <region_alloc>$/;"	l
f010411f	obj/kern/kernel.asm	/^f010411f:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0104122	obj/kern/kernel.asm	/^f0104122:	5b                   	pop    %ebx$/;"	l
f0104123	obj/kern/kernel.asm	/^f0104123:	5e                   	pop    %esi$/;"	l
f0104124	obj/kern/kernel.asm	/^f0104124:	5f                   	pop    %edi$/;"	l
f0104125	obj/kern/kernel.asm	/^f0104125:	5d                   	pop    %ebp$/;"	l
f0104126	obj/kern/kernel.asm	/^f0104126:	c3                   	ret    $/;"	l
f0104127	obj/kern/kernel.asm	/^f0104127 <env_free>:$/;"	l
f0104127	obj/kern/kernel.asm	/^f0104127:	55                   	push   %ebp$/;"	l
f0104128	obj/kern/kernel.asm	/^f0104128:	89 e5                	mov    %esp,%ebp$/;"	l
f010412a	obj/kern/kernel.asm	/^f010412a:	57                   	push   %edi$/;"	l
f010412b	obj/kern/kernel.asm	/^f010412b:	56                   	push   %esi$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	53                   	push   %ebx$/;"	l
f010412d	obj/kern/kernel.asm	/^f010412d:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0104130	obj/kern/kernel.asm	/^f0104130:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104133	obj/kern/kernel.asm	/^f0104133:	e8 11 2e 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010413b	obj/kern/kernel.asm	/^f010413b:	39 b8 28 50 2c f0    	cmp    %edi,-0xfd3afd8(%eax)$/;"	l
f0104141	obj/kern/kernel.asm	/^f0104141:	75 34                	jne    f0104177 <env_free+0x50>$/;"	l
f0104143	obj/kern/kernel.asm	/^f0104143:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010414d	obj/kern/kernel.asm	/^f010414d:	77 20                	ja     f010416f <env_free+0x48>$/;"	l
f010414f	obj/kern/kernel.asm	/^f010414f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104153	obj/kern/kernel.asm	/^f0104153:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f010415a	obj/kern/kernel.asm	/^f010415a:	f0 $/;"	l
f010415b	obj/kern/kernel.asm	/^f010415b:	c7 44 24 04 db 01 00 	movl   $0x1db,0x4(%esp)$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	00 $/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	c7 04 24 da 95 10 f0 	movl   $0xf01095da,(%esp)$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	e8 2e bf ff ff       	call   f010009d <_panic>$/;"	l
f010416f	obj/kern/kernel.asm	/^f010416f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104174	obj/kern/kernel.asm	/^f0104174:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104177	obj/kern/kernel.asm	/^f0104177:	8b 5f 48             	mov    0x48(%edi),%ebx$/;"	l
f010417a	obj/kern/kernel.asm	/^f010417a:	e8 ca 2d 00 00       	call   f0106f49 <cpunum>$/;"	l
f010417f	obj/kern/kernel.asm	/^f010417f:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104182	obj/kern/kernel.asm	/^f0104182:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104187	obj/kern/kernel.asm	/^f0104187:	83 ba 28 50 2c f0 00 	cmpl   $0x0,-0xfd3afd8(%edx)$/;"	l
f010418e	obj/kern/kernel.asm	/^f010418e:	74 11                	je     f01041a1 <env_free+0x7a>$/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	e8 b4 2d 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104195	obj/kern/kernel.asm	/^f0104195:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104198	obj/kern/kernel.asm	/^f0104198:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f010419e	obj/kern/kernel.asm	/^f010419e:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01041a1	obj/kern/kernel.asm	/^f01041a1:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01041a5	obj/kern/kernel.asm	/^f01041a5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01041a9	obj/kern/kernel.asm	/^f01041a9:	c7 04 24 28 96 10 f0 	movl   $0xf0109628,(%esp)$/;"	l
f01041b0	obj/kern/kernel.asm	/^f01041b0:	e8 55 04 00 00       	call   f010460a <cprintf>$/;"	l
f01041b5	obj/kern/kernel.asm	/^f01041b5:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01041bc	obj/kern/kernel.asm	/^f01041bc:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f01041bf	obj/kern/kernel.asm	/^f01041bf:	89 c8                	mov    %ecx,%eax$/;"	l
f01041c1	obj/kern/kernel.asm	/^f01041c1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01041c4	obj/kern/kernel.asm	/^f01041c4:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01041c7	obj/kern/kernel.asm	/^f01041c7:	8b 47 78             	mov    0x78(%edi),%eax$/;"	l
f01041ca	obj/kern/kernel.asm	/^f01041ca:	8b 34 88             	mov    (%eax,%ecx,4),%esi$/;"	l
f01041cd	obj/kern/kernel.asm	/^f01041cd:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f01041d3	obj/kern/kernel.asm	/^f01041d3:	0f 84 b7 00 00 00    	je     f0104290 <env_free+0x169>$/;"	l
f01041d9	obj/kern/kernel.asm	/^f01041d9:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f01041df	obj/kern/kernel.asm	/^f01041df:	89 f0                	mov    %esi,%eax$/;"	l
f01041e1	obj/kern/kernel.asm	/^f01041e1:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01041e7	obj/kern/kernel.asm	/^f01041e7:	3b 05 9c 4e 2c f0    	cmp    0xf02c4e9c,%eax$/;"	l
f01041ed	obj/kern/kernel.asm	/^f01041ed:	72 20                	jb     f010420f <env_free+0xe8>$/;"	l
f01041ef	obj/kern/kernel.asm	/^f01041ef:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f01041fa	obj/kern/kernel.asm	/^f01041fa:	f0 $/;"	l
f01041fb	obj/kern/kernel.asm	/^f01041fb:	c7 44 24 04 eb 01 00 	movl   $0x1eb,0x4(%esp)$/;"	l
f0104202	obj/kern/kernel.asm	/^f0104202:	00 $/;"	l
f0104203	obj/kern/kernel.asm	/^f0104203:	c7 04 24 da 95 10 f0 	movl   $0xf01095da,(%esp)$/;"	l
f010420a	obj/kern/kernel.asm	/^f010420a:	e8 8e be ff ff       	call   f010009d <_panic>$/;"	l
f010420f	obj/kern/kernel.asm	/^f010420f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104212	obj/kern/kernel.asm	/^f0104212:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0104215	obj/kern/kernel.asm	/^f0104215:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010421d	obj/kern/kernel.asm	/^f010421d:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0104224	obj/kern/kernel.asm	/^f0104224:	01 $/;"	l
f0104225	obj/kern/kernel.asm	/^f0104225:	74 17                	je     f010423e <env_free+0x117>$/;"	l
f0104227	obj/kern/kernel.asm	/^f0104227:	89 d8                	mov    %ebx,%eax$/;"	l
f0104229	obj/kern/kernel.asm	/^f0104229:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010422c	obj/kern/kernel.asm	/^f010422c:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f010422f	obj/kern/kernel.asm	/^f010422f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104233	obj/kern/kernel.asm	/^f0104233:	8b 47 78             	mov    0x78(%edi),%eax$/;"	l
f0104236	obj/kern/kernel.asm	/^f0104236:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104239	obj/kern/kernel.asm	/^f0104239:	e8 e1 d5 ff ff       	call   f010181f <page_remove>$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0104241	obj/kern/kernel.asm	/^f0104241:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0104247	obj/kern/kernel.asm	/^f0104247:	75 d4                	jne    f010421d <env_free+0xf6>$/;"	l
f0104249	obj/kern/kernel.asm	/^f0104249:	8b 47 78             	mov    0x78(%edi),%eax$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010424f	obj/kern/kernel.asm	/^f010424f:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0104259	obj/kern/kernel.asm	/^f0104259:	3b 05 9c 4e 2c f0    	cmp    0xf02c4e9c,%eax$/;"	l
f010425f	obj/kern/kernel.asm	/^f010425f:	72 1c                	jb     f010427d <env_free+0x156>$/;"	l
f0104261	obj/kern/kernel.asm	/^f0104261:	c7 44 24 08 b8 89 10 	movl   $0xf01089b8,0x8(%esp)$/;"	l
f0104268	obj/kern/kernel.asm	/^f0104268:	f0 $/;"	l
f0104269	obj/kern/kernel.asm	/^f0104269:	c7 44 24 04 50 00 00 	movl   $0x50,0x4(%esp)$/;"	l
f0104270	obj/kern/kernel.asm	/^f0104270:	00 $/;"	l
f0104271	obj/kern/kernel.asm	/^f0104271:	c7 04 24 29 92 10 f0 	movl   $0xf0109229,(%esp)$/;"	l
f0104278	obj/kern/kernel.asm	/^f0104278:	e8 20 be ff ff       	call   f010009d <_panic>$/;"	l
f010427d	obj/kern/kernel.asm	/^f010427d:	a1 a4 4e 2c f0       	mov    0xf02c4ea4,%eax$/;"	l
f0104282	obj/kern/kernel.asm	/^f0104282:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0104285	obj/kern/kernel.asm	/^f0104285:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0104288	obj/kern/kernel.asm	/^f0104288:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010428b	obj/kern/kernel.asm	/^f010428b:	e8 d1 d1 ff ff       	call   f0101461 <page_decref>$/;"	l
f0104290	obj/kern/kernel.asm	/^f0104290:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0104294	obj/kern/kernel.asm	/^f0104294:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f010429b	obj/kern/kernel.asm	/^f010429b:	0f 85 1b ff ff ff    	jne    f01041bc <env_free+0x95>$/;"	l
f01042a1	obj/kern/kernel.asm	/^f01042a1:	8b 47 78             	mov    0x78(%edi),%eax$/;"	l
f01042a4	obj/kern/kernel.asm	/^f01042a4:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01042a9	obj/kern/kernel.asm	/^f01042a9:	77 20                	ja     f01042cb <env_free+0x1a4>$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01042af	obj/kern/kernel.asm	/^f01042af:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6:	f0 $/;"	l
f01042b7	obj/kern/kernel.asm	/^f01042b7:	c7 44 24 04 f9 01 00 	movl   $0x1f9,0x4(%esp)$/;"	l
f01042be	obj/kern/kernel.asm	/^f01042be:	00 $/;"	l
f01042bf	obj/kern/kernel.asm	/^f01042bf:	c7 04 24 da 95 10 f0 	movl   $0xf01095da,(%esp)$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	e8 d2 bd ff ff       	call   f010009d <_panic>$/;"	l
f01042cb	obj/kern/kernel.asm	/^f01042cb:	c7 47 78 00 00 00 00 	movl   $0x0,0x78(%edi)$/;"	l
f01042d2	obj/kern/kernel.asm	/^f01042d2:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01042d7	obj/kern/kernel.asm	/^f01042d7:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01042da	obj/kern/kernel.asm	/^f01042da:	3b 05 9c 4e 2c f0    	cmp    0xf02c4e9c,%eax$/;"	l
f01042e0	obj/kern/kernel.asm	/^f01042e0:	72 1c                	jb     f01042fe <env_free+0x1d7>$/;"	l
f01042e2	obj/kern/kernel.asm	/^f01042e2:	c7 44 24 08 b8 89 10 	movl   $0xf01089b8,0x8(%esp)$/;"	l
f01042e9	obj/kern/kernel.asm	/^f01042e9:	f0 $/;"	l
f01042ea	obj/kern/kernel.asm	/^f01042ea:	c7 44 24 04 50 00 00 	movl   $0x50,0x4(%esp)$/;"	l
f01042f1	obj/kern/kernel.asm	/^f01042f1:	00 $/;"	l
f01042f2	obj/kern/kernel.asm	/^f01042f2:	c7 04 24 29 92 10 f0 	movl   $0xf0109229,(%esp)$/;"	l
f01042f9	obj/kern/kernel.asm	/^f01042f9:	e8 9f bd ff ff       	call   f010009d <_panic>$/;"	l
f01042fe	obj/kern/kernel.asm	/^f01042fe:	8b 15 a4 4e 2c f0    	mov    0xf02c4ea4,%edx$/;"	l
f0104304	obj/kern/kernel.asm	/^f0104304:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0104307	obj/kern/kernel.asm	/^f0104307:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010430a	obj/kern/kernel.asm	/^f010430a:	e8 52 d1 ff ff       	call   f0101461 <page_decref>$/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0104316	obj/kern/kernel.asm	/^f0104316:	a1 4c 42 2c f0       	mov    0xf02c424c,%eax$/;"	l
f010431b	obj/kern/kernel.asm	/^f010431b:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f010431e	obj/kern/kernel.asm	/^f010431e:	89 3d 4c 42 2c f0    	mov    %edi,0xf02c424c$/;"	l
f0104324	obj/kern/kernel.asm	/^f0104324:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0104327	obj/kern/kernel.asm	/^f0104327:	5b                   	pop    %ebx$/;"	l
f0104328	obj/kern/kernel.asm	/^f0104328:	5e                   	pop    %esi$/;"	l
f0104329	obj/kern/kernel.asm	/^f0104329:	5f                   	pop    %edi$/;"	l
f010432a	obj/kern/kernel.asm	/^f010432a:	5d                   	pop    %ebp$/;"	l
f010432b	obj/kern/kernel.asm	/^f010432b:	c3                   	ret    $/;"	l
f010432c	obj/kern/kernel.asm	/^f010432c <env_destroy>:$/;"	l
f010432c	obj/kern/kernel.asm	/^f010432c:	55                   	push   %ebp$/;"	l
f010432d	obj/kern/kernel.asm	/^f010432d:	89 e5                	mov    %esp,%ebp$/;"	l
f010432f	obj/kern/kernel.asm	/^f010432f:	53                   	push   %ebx$/;"	l
f0104330	obj/kern/kernel.asm	/^f0104330:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104333	obj/kern/kernel.asm	/^f0104333:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104336	obj/kern/kernel.asm	/^f0104336:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f010433a	obj/kern/kernel.asm	/^f010433a:	75 19                	jne    f0104355 <env_destroy+0x29>$/;"	l
f010433c	obj/kern/kernel.asm	/^f010433c:	e8 08 2c 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104341	obj/kern/kernel.asm	/^f0104341:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104344	obj/kern/kernel.asm	/^f0104344:	39 98 28 50 2c f0    	cmp    %ebx,-0xfd3afd8(%eax)$/;"	l
f010434a	obj/kern/kernel.asm	/^f010434a:	74 09                	je     f0104355 <env_destroy+0x29>$/;"	l
f010434c	obj/kern/kernel.asm	/^f010434c:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0104353	obj/kern/kernel.asm	/^f0104353:	eb 2f                	jmp    f0104384 <env_destroy+0x58>$/;"	l
f0104355	obj/kern/kernel.asm	/^f0104355:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104358	obj/kern/kernel.asm	/^f0104358:	e8 ca fd ff ff       	call   f0104127 <env_free>$/;"	l
f010435d	obj/kern/kernel.asm	/^f010435d:	e8 e7 2b 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104362	obj/kern/kernel.asm	/^f0104362:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	39 98 28 50 2c f0    	cmp    %ebx,-0xfd3afd8(%eax)$/;"	l
f010436b	obj/kern/kernel.asm	/^f010436b:	75 17                	jne    f0104384 <env_destroy+0x58>$/;"	l
f010436d	obj/kern/kernel.asm	/^f010436d:	e8 d7 2b 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104372	obj/kern/kernel.asm	/^f0104372:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104375	obj/kern/kernel.asm	/^f0104375:	c7 80 28 50 2c f0 00 	movl   $0x0,-0xfd3afd8(%eax)$/;"	l
f010437c	obj/kern/kernel.asm	/^f010437c:	00 00 00 $/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	e8 e0 10 00 00       	call   f0105464 <sched_yield>$/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104387	obj/kern/kernel.asm	/^f0104387:	5b                   	pop    %ebx$/;"	l
f0104388	obj/kern/kernel.asm	/^f0104388:	5d                   	pop    %ebp$/;"	l
f0104389	obj/kern/kernel.asm	/^f0104389:	c3                   	ret    $/;"	l
f010438a	obj/kern/kernel.asm	/^f010438a <env_pop_tf>:$/;"	l
f010438a	obj/kern/kernel.asm	/^f010438a:	55                   	push   %ebp$/;"	l
f010438b	obj/kern/kernel.asm	/^f010438b:	89 e5                	mov    %esp,%ebp$/;"	l
f010438d	obj/kern/kernel.asm	/^f010438d:	53                   	push   %ebx$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104391	obj/kern/kernel.asm	/^f0104391:	e8 b3 2b 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104396	obj/kern/kernel.asm	/^f0104396:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104399	obj/kern/kernel.asm	/^f0104399:	8b 98 28 50 2c f0    	mov    -0xfd3afd8(%eax),%ebx$/;"	l
f010439f	obj/kern/kernel.asm	/^f010439f:	e8 a5 2b 00 00       	call   f0106f49 <cpunum>$/;"	l
f01043a4	obj/kern/kernel.asm	/^f01043a4:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f01043a7	obj/kern/kernel.asm	/^f01043a7:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f01043aa	obj/kern/kernel.asm	/^f01043aa:	61                   	popa   $/;"	l
f01043ab	obj/kern/kernel.asm	/^f01043ab:	07                   	pop    %es$/;"	l
f01043ac	obj/kern/kernel.asm	/^f01043ac:	1f                   	pop    %ds$/;"	l
f01043ad	obj/kern/kernel.asm	/^f01043ad:	83 c4 08             	add    $0x8,%esp$/;"	l
f01043b0	obj/kern/kernel.asm	/^f01043b0:	cf                   	iret   $/;"	l
f01043b1	obj/kern/kernel.asm	/^f01043b1:	c7 44 24 08 3e 96 10 	movl   $0xf010963e,0x8(%esp)$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	f0 $/;"	l
f01043b9	obj/kern/kernel.asm	/^f01043b9:	c7 44 24 04 2f 02 00 	movl   $0x22f,0x4(%esp)$/;"	l
f01043c0	obj/kern/kernel.asm	/^f01043c0:	00 $/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	c7 04 24 da 95 10 f0 	movl   $0xf01095da,(%esp)$/;"	l
f01043c8	obj/kern/kernel.asm	/^f01043c8:	e8 d0 bc ff ff       	call   f010009d <_panic>$/;"	l
f01043cd	obj/kern/kernel.asm	/^f01043cd <env_run>:$/;"	l
f01043cd	obj/kern/kernel.asm	/^f01043cd:	55                   	push   %ebp$/;"	l
f01043ce	obj/kern/kernel.asm	/^f01043ce:	89 e5                	mov    %esp,%ebp$/;"	l
f01043d0	obj/kern/kernel.asm	/^f01043d0:	53                   	push   %ebx$/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01043d4	obj/kern/kernel.asm	/^f01043d4:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01043d7	obj/kern/kernel.asm	/^f01043d7:	e8 6d 2b 00 00       	call   f0106f49 <cpunum>$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043df	obj/kern/kernel.asm	/^f01043df:	83 b8 28 50 2c f0 00 	cmpl   $0x0,-0xfd3afd8(%eax)$/;"	l
f01043e6	obj/kern/kernel.asm	/^f01043e6:	74 29                	je     f0104411 <env_run+0x44>$/;"	l
f01043e8	obj/kern/kernel.asm	/^f01043e8:	e8 5c 2b 00 00       	call   f0106f49 <cpunum>$/;"	l
f01043ed	obj/kern/kernel.asm	/^f01043ed:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043f0	obj/kern/kernel.asm	/^f01043f0:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f01043f6	obj/kern/kernel.asm	/^f01043f6:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	75 15                	jne    f0104411 <env_run+0x44>$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	e8 48 2b 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104401	obj/kern/kernel.asm	/^f0104401:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104404	obj/kern/kernel.asm	/^f0104404:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f010440a	obj/kern/kernel.asm	/^f010440a:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0104411	obj/kern/kernel.asm	/^f0104411:	e8 33 2b 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104419	obj/kern/kernel.asm	/^f0104419:	89 98 28 50 2c f0    	mov    %ebx,-0xfd3afd8(%eax)$/;"	l
f010441f	obj/kern/kernel.asm	/^f010441f:	e8 25 2b 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104424	obj/kern/kernel.asm	/^f0104424:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104427	obj/kern/kernel.asm	/^f0104427:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0104434	obj/kern/kernel.asm	/^f0104434:	e8 10 2b 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0104442	obj/kern/kernel.asm	/^f0104442:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f0104446	obj/kern/kernel.asm	/^f0104446:	8b 43 78             	mov    0x78(%ebx),%eax$/;"	l
f0104449	obj/kern/kernel.asm	/^f0104449:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010444e	obj/kern/kernel.asm	/^f010444e:	77 20                	ja     f0104470 <env_run+0xa3>$/;"	l
f0104450	obj/kern/kernel.asm	/^f0104450:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f010445b	obj/kern/kernel.asm	/^f010445b:	f0 $/;"	l
f010445c	obj/kern/kernel.asm	/^f010445c:	c7 44 24 04 55 02 00 	movl   $0x255,0x4(%esp)$/;"	l
f0104463	obj/kern/kernel.asm	/^f0104463:	00 $/;"	l
f0104464	obj/kern/kernel.asm	/^f0104464:	c7 04 24 da 95 10 f0 	movl   $0xf01095da,(%esp)$/;"	l
f010446b	obj/kern/kernel.asm	/^f010446b:	e8 2d bc ff ff       	call   f010009d <_panic>$/;"	l
f0104470	obj/kern/kernel.asm	/^f0104470:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104475	obj/kern/kernel.asm	/^f0104475:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104478	obj/kern/kernel.asm	/^f0104478:	c7 04 24 00 64 12 f0 	movl   $0xf0126400,(%esp)$/;"	l
f010447f	obj/kern/kernel.asm	/^f010447f:	e8 ef 2d 00 00       	call   f0107273 <spin_unlock>$/;"	l
f0104484	obj/kern/kernel.asm	/^f0104484:	f3 90                	pause  $/;"	l
f0104486	obj/kern/kernel.asm	/^f0104486:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104489	obj/kern/kernel.asm	/^f0104489:	e8 fc fe ff ff       	call   f010438a <env_pop_tf>$/;"	l
f010448e	obj/kern/kernel.asm	/^f010448e <mc146818_read>:$/;"	l
f010448e	obj/kern/kernel.asm	/^f010448e:	55                   	push   %ebp$/;"	l
f010448f	obj/kern/kernel.asm	/^f010448f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104491	obj/kern/kernel.asm	/^f0104491:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0104495	obj/kern/kernel.asm	/^f0104495:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010449a	obj/kern/kernel.asm	/^f010449a:	ee                   	out    %al,(%dx)$/;"	l
f010449b	obj/kern/kernel.asm	/^f010449b:	b2 71                	mov    $0x71,%dl$/;"	l
f010449d	obj/kern/kernel.asm	/^f010449d:	ec                   	in     (%dx),%al$/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01044a1	obj/kern/kernel.asm	/^f01044a1:	5d                   	pop    %ebp$/;"	l
f01044a2	obj/kern/kernel.asm	/^f01044a2:	c3                   	ret    $/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3 <mc146818_write>:$/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	55                   	push   %ebp$/;"	l
f01044a4	obj/kern/kernel.asm	/^f01044a4:	89 e5                	mov    %esp,%ebp$/;"	l
f01044a6	obj/kern/kernel.asm	/^f01044a6:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f01044aa	obj/kern/kernel.asm	/^f01044aa:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01044af	obj/kern/kernel.asm	/^f01044af:	ee                   	out    %al,(%dx)$/;"	l
f01044b0	obj/kern/kernel.asm	/^f01044b0:	b2 71                	mov    $0x71,%dl$/;"	l
f01044b2	obj/kern/kernel.asm	/^f01044b2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01044b5	obj/kern/kernel.asm	/^f01044b5:	ee                   	out    %al,(%dx)$/;"	l
f01044b6	obj/kern/kernel.asm	/^f01044b6:	5d                   	pop    %ebp$/;"	l
f01044b7	obj/kern/kernel.asm	/^f01044b7:	c3                   	ret    $/;"	l
f01044b8	obj/kern/kernel.asm	/^f01044b8 <irq_setmask_8259A>:$/;"	l
f01044b8	obj/kern/kernel.asm	/^f01044b8:	55                   	push   %ebp$/;"	l
f01044b9	obj/kern/kernel.asm	/^f01044b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01044bb	obj/kern/kernel.asm	/^f01044bb:	56                   	push   %esi$/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	53                   	push   %ebx$/;"	l
f01044bd	obj/kern/kernel.asm	/^f01044bd:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01044c0	obj/kern/kernel.asm	/^f01044c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01044c3	obj/kern/kernel.asm	/^f01044c3:	66 a3 a8 63 12 f0    	mov    %ax,0xf01263a8$/;"	l
f01044c9	obj/kern/kernel.asm	/^f01044c9:	80 3d 50 42 2c f0 00 	cmpb   $0x0,0xf02c4250$/;"	l
f01044d0	obj/kern/kernel.asm	/^f01044d0:	74 4e                	je     f0104520 <irq_setmask_8259A+0x68>$/;"	l
f01044d2	obj/kern/kernel.asm	/^f01044d2:	89 c6                	mov    %eax,%esi$/;"	l
f01044d4	obj/kern/kernel.asm	/^f01044d4:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01044d9	obj/kern/kernel.asm	/^f01044d9:	ee                   	out    %al,(%dx)$/;"	l
f01044da	obj/kern/kernel.asm	/^f01044da:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01044de	obj/kern/kernel.asm	/^f01044de:	b2 a1                	mov    $0xa1,%dl$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0:	ee                   	out    %al,(%dx)$/;"	l
f01044e1	obj/kern/kernel.asm	/^f01044e1:	c7 04 24 4a 96 10 f0 	movl   $0xf010964a,(%esp)$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	e8 1d 01 00 00       	call   f010460a <cprintf>$/;"	l
f01044ed	obj/kern/kernel.asm	/^f01044ed:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01044f2	obj/kern/kernel.asm	/^f01044f2:	0f b7 f6             	movzwl %si,%esi$/;"	l
f01044f5	obj/kern/kernel.asm	/^f01044f5:	f7 d6                	not    %esi$/;"	l
f01044f7	obj/kern/kernel.asm	/^f01044f7:	0f a3 de             	bt     %ebx,%esi$/;"	l
f01044fa	obj/kern/kernel.asm	/^f01044fa:	73 10                	jae    f010450c <irq_setmask_8259A+0x54>$/;"	l
f01044fc	obj/kern/kernel.asm	/^f01044fc:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104500	obj/kern/kernel.asm	/^f0104500:	c7 04 24 29 9d 10 f0 	movl   $0xf0109d29,(%esp)$/;"	l
f0104507	obj/kern/kernel.asm	/^f0104507:	e8 fe 00 00 00       	call   f010460a <cprintf>$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010450f	obj/kern/kernel.asm	/^f010450f:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0104512	obj/kern/kernel.asm	/^f0104512:	75 e3                	jne    f01044f7 <irq_setmask_8259A+0x3f>$/;"	l
f0104514	obj/kern/kernel.asm	/^f0104514:	c7 04 24 1b 95 10 f0 	movl   $0xf010951b,(%esp)$/;"	l
f010451b	obj/kern/kernel.asm	/^f010451b:	e8 ea 00 00 00       	call   f010460a <cprintf>$/;"	l
f0104520	obj/kern/kernel.asm	/^f0104520:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104523	obj/kern/kernel.asm	/^f0104523:	5b                   	pop    %ebx$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	5e                   	pop    %esi$/;"	l
f0104525	obj/kern/kernel.asm	/^f0104525:	5d                   	pop    %ebp$/;"	l
f0104526	obj/kern/kernel.asm	/^f0104526:	c3                   	ret    $/;"	l
f0104527	obj/kern/kernel.asm	/^f0104527 <pic_init>:$/;"	l
f0104527	obj/kern/kernel.asm	/^f0104527:	c6 05 50 42 2c f0 01 	movb   $0x1,0xf02c4250$/;"	l
f010452e	obj/kern/kernel.asm	/^f010452e:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0104533	obj/kern/kernel.asm	/^f0104533:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104538	obj/kern/kernel.asm	/^f0104538:	ee                   	out    %al,(%dx)$/;"	l
f0104539	obj/kern/kernel.asm	/^f0104539:	b2 a1                	mov    $0xa1,%dl$/;"	l
f010453b	obj/kern/kernel.asm	/^f010453b:	ee                   	out    %al,(%dx)$/;"	l
f010453c	obj/kern/kernel.asm	/^f010453c:	b2 20                	mov    $0x20,%dl$/;"	l
f010453e	obj/kern/kernel.asm	/^f010453e:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0104543	obj/kern/kernel.asm	/^f0104543:	ee                   	out    %al,(%dx)$/;"	l
f0104544	obj/kern/kernel.asm	/^f0104544:	b2 21                	mov    $0x21,%dl$/;"	l
f0104546	obj/kern/kernel.asm	/^f0104546:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010454b	obj/kern/kernel.asm	/^f010454b:	ee                   	out    %al,(%dx)$/;"	l
f010454c	obj/kern/kernel.asm	/^f010454c:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0104551	obj/kern/kernel.asm	/^f0104551:	ee                   	out    %al,(%dx)$/;"	l
f0104552	obj/kern/kernel.asm	/^f0104552:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0104557	obj/kern/kernel.asm	/^f0104557:	ee                   	out    %al,(%dx)$/;"	l
f0104558	obj/kern/kernel.asm	/^f0104558:	b2 a0                	mov    $0xa0,%dl$/;"	l
f010455a	obj/kern/kernel.asm	/^f010455a:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f010455f	obj/kern/kernel.asm	/^f010455f:	ee                   	out    %al,(%dx)$/;"	l
f0104560	obj/kern/kernel.asm	/^f0104560:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0104562	obj/kern/kernel.asm	/^f0104562:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0104567	obj/kern/kernel.asm	/^f0104567:	ee                   	out    %al,(%dx)$/;"	l
f0104568	obj/kern/kernel.asm	/^f0104568:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f010456d	obj/kern/kernel.asm	/^f010456d:	ee                   	out    %al,(%dx)$/;"	l
f010456e	obj/kern/kernel.asm	/^f010456e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104573	obj/kern/kernel.asm	/^f0104573:	ee                   	out    %al,(%dx)$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	b2 20                	mov    $0x20,%dl$/;"	l
f0104576	obj/kern/kernel.asm	/^f0104576:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f010457b	obj/kern/kernel.asm	/^f010457b:	ee                   	out    %al,(%dx)$/;"	l
f010457c	obj/kern/kernel.asm	/^f010457c:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104581	obj/kern/kernel.asm	/^f0104581:	ee                   	out    %al,(%dx)$/;"	l
f0104582	obj/kern/kernel.asm	/^f0104582:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0104584	obj/kern/kernel.asm	/^f0104584:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0104589	obj/kern/kernel.asm	/^f0104589:	ee                   	out    %al,(%dx)$/;"	l
f010458a	obj/kern/kernel.asm	/^f010458a:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010458f	obj/kern/kernel.asm	/^f010458f:	ee                   	out    %al,(%dx)$/;"	l
f0104590	obj/kern/kernel.asm	/^f0104590:	0f b7 05 a8 63 12 f0 	movzwl 0xf01263a8,%eax$/;"	l
f0104597	obj/kern/kernel.asm	/^f0104597:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f010459b	obj/kern/kernel.asm	/^f010459b:	74 12                	je     f01045af <pic_init+0x88>$/;"	l
f010459d	obj/kern/kernel.asm	/^f010459d:	55                   	push   %ebp$/;"	l
f010459e	obj/kern/kernel.asm	/^f010459e:	89 e5                	mov    %esp,%ebp$/;"	l
f01045a0	obj/kern/kernel.asm	/^f01045a0:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01045a3	obj/kern/kernel.asm	/^f01045a3:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01045a6	obj/kern/kernel.asm	/^f01045a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01045a9	obj/kern/kernel.asm	/^f01045a9:	e8 0a ff ff ff       	call   f01044b8 <irq_setmask_8259A>$/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	c9                   	leave  $/;"	l
f01045af	obj/kern/kernel.asm	/^f01045af:	f3 c3                	repz ret $/;"	l
f01045b1	obj/kern/kernel.asm	/^f01045b1 <irq_eoi>:$/;"	l
f01045b1	obj/kern/kernel.asm	/^f01045b1:	55                   	push   %ebp$/;"	l
f01045b2	obj/kern/kernel.asm	/^f01045b2:	89 e5                	mov    %esp,%ebp$/;"	l
f01045b4	obj/kern/kernel.asm	/^f01045b4:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f01045b9	obj/kern/kernel.asm	/^f01045b9:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01045be	obj/kern/kernel.asm	/^f01045be:	ee                   	out    %al,(%dx)$/;"	l
f01045bf	obj/kern/kernel.asm	/^f01045bf:	b2 a0                	mov    $0xa0,%dl$/;"	l
f01045c1	obj/kern/kernel.asm	/^f01045c1:	ee                   	out    %al,(%dx)$/;"	l
f01045c2	obj/kern/kernel.asm	/^f01045c2:	5d                   	pop    %ebp$/;"	l
f01045c3	obj/kern/kernel.asm	/^f01045c3:	c3                   	ret    $/;"	l
f01045c4	obj/kern/kernel.asm	/^f01045c4 <putch>:$/;"	l
f01045c4	obj/kern/kernel.asm	/^f01045c4:	55                   	push   %ebp$/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01045c7	obj/kern/kernel.asm	/^f01045c7:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01045ca	obj/kern/kernel.asm	/^f01045ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01045cd	obj/kern/kernel.asm	/^f01045cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01045d0	obj/kern/kernel.asm	/^f01045d0:	e8 66 c2 ff ff       	call   f010083b <cputchar>$/;"	l
f01045d5	obj/kern/kernel.asm	/^f01045d5:	c9                   	leave  $/;"	l
f01045d6	obj/kern/kernel.asm	/^f01045d6:	c3                   	ret    $/;"	l
f01045d7	obj/kern/kernel.asm	/^f01045d7 <vcprintf>:$/;"	l
f01045d7	obj/kern/kernel.asm	/^f01045d7:	55                   	push   %ebp$/;"	l
f01045d8	obj/kern/kernel.asm	/^f01045d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01045da	obj/kern/kernel.asm	/^f01045da:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01045dd	obj/kern/kernel.asm	/^f01045dd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01045e4	obj/kern/kernel.asm	/^f01045e4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01045eb	obj/kern/kernel.asm	/^f01045eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01045ee	obj/kern/kernel.asm	/^f01045ee:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01045f2	obj/kern/kernel.asm	/^f01045f2:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01045f5	obj/kern/kernel.asm	/^f01045f5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	c7 04 24 c4 45 10 f0 	movl   $0xf01045c4,(%esp)$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	e8 a9 1b 00 00       	call   f01061ae <vprintfmt>$/;"	l
f0104605	obj/kern/kernel.asm	/^f0104605:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104608	obj/kern/kernel.asm	/^f0104608:	c9                   	leave  $/;"	l
f0104609	obj/kern/kernel.asm	/^f0104609:	c3                   	ret    $/;"	l
f010460a	obj/kern/kernel.asm	/^f010460a <cprintf>:$/;"	l
f010460a	obj/kern/kernel.asm	/^f010460a:	55                   	push   %ebp$/;"	l
f010460b	obj/kern/kernel.asm	/^f010460b:	89 e5                	mov    %esp,%ebp$/;"	l
f010460d	obj/kern/kernel.asm	/^f010460d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104610	obj/kern/kernel.asm	/^f0104610:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0104613	obj/kern/kernel.asm	/^f0104613:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104617	obj/kern/kernel.asm	/^f0104617:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010461a	obj/kern/kernel.asm	/^f010461a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010461d	obj/kern/kernel.asm	/^f010461d:	e8 b5 ff ff ff       	call   f01045d7 <vcprintf>$/;"	l
f0104622	obj/kern/kernel.asm	/^f0104622:	c9                   	leave  $/;"	l
f0104623	obj/kern/kernel.asm	/^f0104623:	c3                   	ret    $/;"	l
f0104624	obj/kern/kernel.asm	/^f0104624:	66 90                	xchg   %ax,%ax$/;"	l
f0104626	obj/kern/kernel.asm	/^f0104626:	66 90                	xchg   %ax,%ax$/;"	l
f0104628	obj/kern/kernel.asm	/^f0104628:	66 90                	xchg   %ax,%ax$/;"	l
f010462a	obj/kern/kernel.asm	/^f010462a:	66 90                	xchg   %ax,%ax$/;"	l
f010462c	obj/kern/kernel.asm	/^f010462c:	66 90                	xchg   %ax,%ax$/;"	l
f010462e	obj/kern/kernel.asm	/^f010462e:	66 90                	xchg   %ax,%ax$/;"	l
f0104630	obj/kern/kernel.asm	/^f0104630 <trap_init_percpu>:$/;"	l
f0104630	obj/kern/kernel.asm	/^f0104630:	55                   	push   %ebp$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	89 e5                	mov    %esp,%ebp$/;"	l
f0104633	obj/kern/kernel.asm	/^f0104633:	53                   	push   %ebx$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104637	obj/kern/kernel.asm	/^f0104637:	e8 0d 29 00 00       	call   f0106f49 <cpunum>$/;"	l
f010463c	obj/kern/kernel.asm	/^f010463c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010463f	obj/kern/kernel.asm	/^f010463f:	0f b6 98 20 50 2c f0 	movzbl -0xfd3afe0(%eax),%ebx$/;"	l
f0104646	obj/kern/kernel.asm	/^f0104646:	e8 fe 28 00 00       	call   f0106f49 <cpunum>$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010464e	obj/kern/kernel.asm	/^f010464e:	0f b6 d3             	movzbl %bl,%edx$/;"	l
f0104651	obj/kern/kernel.asm	/^f0104651:	89 d1                	mov    %edx,%ecx$/;"	l
f0104653	obj/kern/kernel.asm	/^f0104653:	f7 d9                	neg    %ecx$/;"	l
f0104655	obj/kern/kernel.asm	/^f0104655:	c1 e1 10             	shl    $0x10,%ecx$/;"	l
f0104658	obj/kern/kernel.asm	/^f0104658:	81 e9 00 00 00 10    	sub    $0x10000000,%ecx$/;"	l
f010465e	obj/kern/kernel.asm	/^f010465e:	89 88 30 50 2c f0    	mov    %ecx,-0xfd3afd0(%eax)$/;"	l
f0104664	obj/kern/kernel.asm	/^f0104664:	66 c7 80 34 50 2c f0 	movw   $0x10,-0xfd3afcc(%eax)$/;"	l
f010466b	obj/kern/kernel.asm	/^f010466b:	10 00 $/;"	l
f010466d	obj/kern/kernel.asm	/^f010466d:	05 2c 50 2c f0       	add    $0xf02c502c,%eax$/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	83 c2 05             	add    $0x5,%edx$/;"	l
f0104675	obj/kern/kernel.asm	/^f0104675:	66 c7 04 d5 40 63 12 	movw   $0x68,-0xfed9cc0(,%edx,8)$/;"	l
f010467c	obj/kern/kernel.asm	/^f010467c:	f0 68 00 $/;"	l
f010467f	obj/kern/kernel.asm	/^f010467f:	66 89 04 d5 42 63 12 	mov    %ax,-0xfed9cbe(,%edx,8)$/;"	l
f0104686	obj/kern/kernel.asm	/^f0104686:	f0 $/;"	l
f0104687	obj/kern/kernel.asm	/^f0104687:	89 c1                	mov    %eax,%ecx$/;"	l
f0104689	obj/kern/kernel.asm	/^f0104689:	c1 e9 10             	shr    $0x10,%ecx$/;"	l
f010468c	obj/kern/kernel.asm	/^f010468c:	88 0c d5 44 63 12 f0 	mov    %cl,-0xfed9cbc(,%edx,8)$/;"	l
f0104693	obj/kern/kernel.asm	/^f0104693:	c6 04 d5 46 63 12 f0 	movb   $0x40,-0xfed9cba(,%edx,8)$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a:	40 $/;"	l
f010469b	obj/kern/kernel.asm	/^f010469b:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010469e	obj/kern/kernel.asm	/^f010469e:	88 04 d5 47 63 12 f0 	mov    %al,-0xfed9cb9(,%edx,8)$/;"	l
f01046a5	obj/kern/kernel.asm	/^f01046a5:	c6 04 d5 45 63 12 f0 	movb   $0x89,-0xfed9cbb(,%edx,8)$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	89 $/;"	l
f01046ad	obj/kern/kernel.asm	/^f01046ad:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f01046b0	obj/kern/kernel.asm	/^f01046b0:	0f 00 da             	ltr    %dx$/;"	l
f01046b3	obj/kern/kernel.asm	/^f01046b3:	b8 aa 63 12 f0       	mov    $0xf01263aa,%eax$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	0f 01 18             	lidtl  (%eax)$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	83 c4 04             	add    $0x4,%esp$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	5b                   	pop    %ebx$/;"	l
f01046bf	obj/kern/kernel.asm	/^f01046bf:	5d                   	pop    %ebp$/;"	l
f01046c0	obj/kern/kernel.asm	/^f01046c0:	c3                   	ret    $/;"	l
f01046c1	obj/kern/kernel.asm	/^f01046c1 <print_regs>:$/;"	l
f01046c1	obj/kern/kernel.asm	/^f01046c1:	55                   	push   %ebp$/;"	l
f01046c2	obj/kern/kernel.asm	/^f01046c2:	89 e5                	mov    %esp,%ebp$/;"	l
f01046c4	obj/kern/kernel.asm	/^f01046c4:	53                   	push   %ebx$/;"	l
f01046c5	obj/kern/kernel.asm	/^f01046c5:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01046c8	obj/kern/kernel.asm	/^f01046c8:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01046cb	obj/kern/kernel.asm	/^f01046cb:	8b 03                	mov    (%ebx),%eax$/;"	l
f01046cd	obj/kern/kernel.asm	/^f01046cd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046d1	obj/kern/kernel.asm	/^f01046d1:	c7 04 24 5e 96 10 f0 	movl   $0xf010965e,(%esp)$/;"	l
f01046d8	obj/kern/kernel.asm	/^f01046d8:	e8 2d ff ff ff       	call   f010460a <cprintf>$/;"	l
f01046dd	obj/kern/kernel.asm	/^f01046dd:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046e4	obj/kern/kernel.asm	/^f01046e4:	c7 04 24 6d 96 10 f0 	movl   $0xf010966d,(%esp)$/;"	l
f01046eb	obj/kern/kernel.asm	/^f01046eb:	e8 1a ff ff ff       	call   f010460a <cprintf>$/;"	l
f01046f0	obj/kern/kernel.asm	/^f01046f0:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01046f3	obj/kern/kernel.asm	/^f01046f3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	c7 04 24 7c 96 10 f0 	movl   $0xf010967c,(%esp)$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	e8 07 ff ff ff       	call   f010460a <cprintf>$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a:	c7 04 24 8b 96 10 f0 	movl   $0xf010968b,(%esp)$/;"	l
f0104711	obj/kern/kernel.asm	/^f0104711:	e8 f4 fe ff ff       	call   f010460a <cprintf>$/;"	l
f0104716	obj/kern/kernel.asm	/^f0104716:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104719	obj/kern/kernel.asm	/^f0104719:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010471d	obj/kern/kernel.asm	/^f010471d:	c7 04 24 9a 96 10 f0 	movl   $0xf010969a,(%esp)$/;"	l
f0104724	obj/kern/kernel.asm	/^f0104724:	e8 e1 fe ff ff       	call   f010460a <cprintf>$/;"	l
f0104729	obj/kern/kernel.asm	/^f0104729:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104730	obj/kern/kernel.asm	/^f0104730:	c7 04 24 a9 96 10 f0 	movl   $0xf01096a9,(%esp)$/;"	l
f0104737	obj/kern/kernel.asm	/^f0104737:	e8 ce fe ff ff       	call   f010460a <cprintf>$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f010473f	obj/kern/kernel.asm	/^f010473f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104743	obj/kern/kernel.asm	/^f0104743:	c7 04 24 b8 96 10 f0 	movl   $0xf01096b8,(%esp)$/;"	l
f010474a	obj/kern/kernel.asm	/^f010474a:	e8 bb fe ff ff       	call   f010460a <cprintf>$/;"	l
f010474f	obj/kern/kernel.asm	/^f010474f:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f0104752	obj/kern/kernel.asm	/^f0104752:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756:	c7 04 24 c7 96 10 f0 	movl   $0xf01096c7,(%esp)$/;"	l
f010475d	obj/kern/kernel.asm	/^f010475d:	e8 a8 fe ff ff       	call   f010460a <cprintf>$/;"	l
f0104762	obj/kern/kernel.asm	/^f0104762:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104765	obj/kern/kernel.asm	/^f0104765:	5b                   	pop    %ebx$/;"	l
f0104766	obj/kern/kernel.asm	/^f0104766:	5d                   	pop    %ebp$/;"	l
f0104767	obj/kern/kernel.asm	/^f0104767:	c3                   	ret    $/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768 <print_trapframe>:$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	55                   	push   %ebp$/;"	l
f0104769	obj/kern/kernel.asm	/^f0104769:	89 e5                	mov    %esp,%ebp$/;"	l
f010476b	obj/kern/kernel.asm	/^f010476b:	56                   	push   %esi$/;"	l
f010476c	obj/kern/kernel.asm	/^f010476c:	53                   	push   %ebx$/;"	l
f010476d	obj/kern/kernel.asm	/^f010476d:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104770	obj/kern/kernel.asm	/^f0104770:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104773	obj/kern/kernel.asm	/^f0104773:	e8 d1 27 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104778	obj/kern/kernel.asm	/^f0104778:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780:	c7 04 24 2b 97 10 f0 	movl   $0xf010972b,(%esp)$/;"	l
f0104787	obj/kern/kernel.asm	/^f0104787:	e8 7e fe ff ff       	call   f010460a <cprintf>$/;"	l
f010478c	obj/kern/kernel.asm	/^f010478c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010478f	obj/kern/kernel.asm	/^f010478f:	e8 2d ff ff ff       	call   f01046c1 <print_regs>$/;"	l
f0104794	obj/kern/kernel.asm	/^f0104794:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0104798	obj/kern/kernel.asm	/^f0104798:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010479c	obj/kern/kernel.asm	/^f010479c:	c7 04 24 49 97 10 f0 	movl   $0xf0109749,(%esp)$/;"	l
f01047a3	obj/kern/kernel.asm	/^f01047a3:	e8 62 fe ff ff       	call   f010460a <cprintf>$/;"	l
f01047a8	obj/kern/kernel.asm	/^f01047a8:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f01047ac	obj/kern/kernel.asm	/^f01047ac:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047b0	obj/kern/kernel.asm	/^f01047b0:	c7 04 24 5a 97 10 f0 	movl   $0xf010975a,(%esp)$/;"	l
f01047b7	obj/kern/kernel.asm	/^f01047b7:	e8 4e fe ff ff       	call   f010460a <cprintf>$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f01047bf	obj/kern/kernel.asm	/^f01047bf:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	77 09                	ja     f01047cd <print_trapframe+0x65>$/;"	l
f01047c4	obj/kern/kernel.asm	/^f01047c4:	8b 14 85 40 9a 10 f0 	mov    -0xfef65c0(,%eax,4),%edx$/;"	l
f01047cb	obj/kern/kernel.asm	/^f01047cb:	eb 1f                	jmp    f01047ec <print_trapframe+0x84>$/;"	l
f01047cd	obj/kern/kernel.asm	/^f01047cd:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f01047d0	obj/kern/kernel.asm	/^f01047d0:	74 15                	je     f01047e7 <print_trapframe+0x7f>$/;"	l
f01047d2	obj/kern/kernel.asm	/^f01047d2:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f01047d5	obj/kern/kernel.asm	/^f01047d5:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f01047d8	obj/kern/kernel.asm	/^f01047d8:	ba e2 96 10 f0       	mov    $0xf01096e2,%edx$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	b9 f5 96 10 f0       	mov    $0xf01096f5,%ecx$/;"	l
f01047e2	obj/kern/kernel.asm	/^f01047e2:	0f 47 d1             	cmova  %ecx,%edx$/;"	l
f01047e5	obj/kern/kernel.asm	/^f01047e5:	eb 05                	jmp    f01047ec <print_trapframe+0x84>$/;"	l
f01047e7	obj/kern/kernel.asm	/^f01047e7:	ba d6 96 10 f0       	mov    $0xf01096d6,%edx$/;"	l
f01047ec	obj/kern/kernel.asm	/^f01047ec:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01047f0	obj/kern/kernel.asm	/^f01047f0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047f4	obj/kern/kernel.asm	/^f01047f4:	c7 04 24 6b 97 10 f0 	movl   $0xf010976b,(%esp)$/;"	l
f01047fb	obj/kern/kernel.asm	/^f01047fb:	e8 0a fe ff ff       	call   f010460a <cprintf>$/;"	l
f0104800	obj/kern/kernel.asm	/^f0104800:	3b 1d 60 4a 2c f0    	cmp    0xf02c4a60,%ebx$/;"	l
f0104806	obj/kern/kernel.asm	/^f0104806:	75 19                	jne    f0104821 <print_trapframe+0xb9>$/;"	l
f0104808	obj/kern/kernel.asm	/^f0104808:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f010480c	obj/kern/kernel.asm	/^f010480c:	75 13                	jne    f0104821 <print_trapframe+0xb9>$/;"	l
f010480e	obj/kern/kernel.asm	/^f010480e:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0104811	obj/kern/kernel.asm	/^f0104811:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104815	obj/kern/kernel.asm	/^f0104815:	c7 04 24 7d 97 10 f0 	movl   $0xf010977d,(%esp)$/;"	l
f010481c	obj/kern/kernel.asm	/^f010481c:	e8 e9 fd ff ff       	call   f010460a <cprintf>$/;"	l
f0104821	obj/kern/kernel.asm	/^f0104821:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104824	obj/kern/kernel.asm	/^f0104824:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104828	obj/kern/kernel.asm	/^f0104828:	c7 04 24 8a 97 10 f0 	movl   $0xf010978a,(%esp)$/;"	l
f010482f	obj/kern/kernel.asm	/^f010482f:	e8 d6 fd ff ff       	call   f010460a <cprintf>$/;"	l
f0104834	obj/kern/kernel.asm	/^f0104834:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104838	obj/kern/kernel.asm	/^f0104838:	75 51                	jne    f010488b <print_trapframe+0x123>$/;"	l
f010483a	obj/kern/kernel.asm	/^f010483a:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f010483d	obj/kern/kernel.asm	/^f010483d:	89 c2                	mov    %eax,%edx$/;"	l
f010483f	obj/kern/kernel.asm	/^f010483f:	83 e2 01             	and    $0x1,%edx$/;"	l
f0104842	obj/kern/kernel.asm	/^f0104842:	ba 04 97 10 f0       	mov    $0xf0109704,%edx$/;"	l
f0104847	obj/kern/kernel.asm	/^f0104847:	b9 0f 97 10 f0       	mov    $0xf010970f,%ecx$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	0f 45 ca             	cmovne %edx,%ecx$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	89 c2                	mov    %eax,%edx$/;"	l
f0104851	obj/kern/kernel.asm	/^f0104851:	83 e2 02             	and    $0x2,%edx$/;"	l
f0104854	obj/kern/kernel.asm	/^f0104854:	ba 1b 97 10 f0       	mov    $0xf010971b,%edx$/;"	l
f0104859	obj/kern/kernel.asm	/^f0104859:	be 21 97 10 f0       	mov    $0xf0109721,%esi$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	0f 44 d6             	cmove  %esi,%edx$/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	83 e0 04             	and    $0x4,%eax$/;"	l
f0104864	obj/kern/kernel.asm	/^f0104864:	b8 26 97 10 f0       	mov    $0xf0109726,%eax$/;"	l
f0104869	obj/kern/kernel.asm	/^f0104869:	be 51 98 10 f0       	mov    $0xf0109851,%esi$/;"	l
f010486e	obj/kern/kernel.asm	/^f010486e:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f0104871	obj/kern/kernel.asm	/^f0104871:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0104875	obj/kern/kernel.asm	/^f0104875:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104879	obj/kern/kernel.asm	/^f0104879:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010487d	obj/kern/kernel.asm	/^f010487d:	c7 04 24 98 97 10 f0 	movl   $0xf0109798,(%esp)$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884:	e8 81 fd ff ff       	call   f010460a <cprintf>$/;"	l
f0104889	obj/kern/kernel.asm	/^f0104889:	eb 0c                	jmp    f0104897 <print_trapframe+0x12f>$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	c7 04 24 1b 95 10 f0 	movl   $0xf010951b,(%esp)$/;"	l
f0104892	obj/kern/kernel.asm	/^f0104892:	e8 73 fd ff ff       	call   f010460a <cprintf>$/;"	l
f0104897	obj/kern/kernel.asm	/^f0104897:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f010489a	obj/kern/kernel.asm	/^f010489a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010489e	obj/kern/kernel.asm	/^f010489e:	c7 04 24 a7 97 10 f0 	movl   $0xf01097a7,(%esp)$/;"	l
f01048a5	obj/kern/kernel.asm	/^f01048a5:	e8 60 fd ff ff       	call   f010460a <cprintf>$/;"	l
f01048aa	obj/kern/kernel.asm	/^f01048aa:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f01048ae	obj/kern/kernel.asm	/^f01048ae:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048b2	obj/kern/kernel.asm	/^f01048b2:	c7 04 24 b6 97 10 f0 	movl   $0xf01097b6,(%esp)$/;"	l
f01048b9	obj/kern/kernel.asm	/^f01048b9:	e8 4c fd ff ff       	call   f010460a <cprintf>$/;"	l
f01048be	obj/kern/kernel.asm	/^f01048be:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	c7 04 24 c7 97 10 f0 	movl   $0xf01097c7,(%esp)$/;"	l
f01048cc	obj/kern/kernel.asm	/^f01048cc:	e8 39 fd ff ff       	call   f010460a <cprintf>$/;"	l
f01048d1	obj/kern/kernel.asm	/^f01048d1:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f01048d5	obj/kern/kernel.asm	/^f01048d5:	74 27                	je     f01048fe <print_trapframe+0x196>$/;"	l
f01048d7	obj/kern/kernel.asm	/^f01048d7:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f01048da	obj/kern/kernel.asm	/^f01048da:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048de	obj/kern/kernel.asm	/^f01048de:	c7 04 24 d6 97 10 f0 	movl   $0xf01097d6,(%esp)$/;"	l
f01048e5	obj/kern/kernel.asm	/^f01048e5:	e8 20 fd ff ff       	call   f010460a <cprintf>$/;"	l
f01048ea	obj/kern/kernel.asm	/^f01048ea:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f01048ee	obj/kern/kernel.asm	/^f01048ee:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048f2	obj/kern/kernel.asm	/^f01048f2:	c7 04 24 e3 97 10 f0 	movl   $0xf01097e3,(%esp)$/;"	l
f01048f9	obj/kern/kernel.asm	/^f01048f9:	e8 0c fd ff ff       	call   f010460a <cprintf>$/;"	l
f01048fe	obj/kern/kernel.asm	/^f01048fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104901	obj/kern/kernel.asm	/^f0104901:	5b                   	pop    %ebx$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	5e                   	pop    %esi$/;"	l
f0104903	obj/kern/kernel.asm	/^f0104903:	5d                   	pop    %ebp$/;"	l
f0104904	obj/kern/kernel.asm	/^f0104904:	c3                   	ret    $/;"	l
f0104905	obj/kern/kernel.asm	/^f0104905 <page_fault_handler>:$/;"	l
f0104905	obj/kern/kernel.asm	/^f0104905:	55                   	push   %ebp$/;"	l
f0104906	obj/kern/kernel.asm	/^f0104906:	89 e5                	mov    %esp,%ebp$/;"	l
f0104908	obj/kern/kernel.asm	/^f0104908:	57                   	push   %edi$/;"	l
f0104909	obj/kern/kernel.asm	/^f0104909:	56                   	push   %esi$/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	53                   	push   %ebx$/;"	l
f010490b	obj/kern/kernel.asm	/^f010490b:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010490e	obj/kern/kernel.asm	/^f010490e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104911	obj/kern/kernel.asm	/^f0104911:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0104914	obj/kern/kernel.asm	/^f0104914:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104918	obj/kern/kernel.asm	/^f0104918:	75 1c                	jne    f0104936 <page_fault_handler+0x31>$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	c7 44 24 08 9c 99 10 	movl   $0xf010999c,0x8(%esp)$/;"	l
f0104921	obj/kern/kernel.asm	/^f0104921:	f0 $/;"	l
f0104922	obj/kern/kernel.asm	/^f0104922:	c7 44 24 04 76 01 00 	movl   $0x176,0x4(%esp)$/;"	l
f0104929	obj/kern/kernel.asm	/^f0104929:	00 $/;"	l
f010492a	obj/kern/kernel.asm	/^f010492a:	c7 04 24 f6 97 10 f0 	movl   $0xf01097f6,(%esp)$/;"	l
f0104931	obj/kern/kernel.asm	/^f0104931:	e8 67 b7 ff ff       	call   f010009d <_panic>$/;"	l
f0104936	obj/kern/kernel.asm	/^f0104936:	e8 0e 26 00 00       	call   f0106f49 <cpunum>$/;"	l
f010493b	obj/kern/kernel.asm	/^f010493b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010493e	obj/kern/kernel.asm	/^f010493e:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0104944	obj/kern/kernel.asm	/^f0104944:	83 78 60 00          	cmpl   $0x0,0x60(%eax)$/;"	l
f0104948	obj/kern/kernel.asm	/^f0104948:	0f 84 e5 00 00 00    	je     f0104a33 <page_fault_handler+0x12e>$/;"	l
f010494e	obj/kern/kernel.asm	/^f010494e:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104951	obj/kern/kernel.asm	/^f0104951:	8d 90 00 10 40 11    	lea    0x11401000(%eax),%edx$/;"	l
f0104957	obj/kern/kernel.asm	/^f0104957:	83 e8 04             	sub    $0x4,%eax$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	81 fa ff 0f 00 00    	cmp    $0xfff,%edx$/;"	l
f0104960	obj/kern/kernel.asm	/^f0104960:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0104965	obj/kern/kernel.asm	/^f0104965:	0f 46 d0             	cmovbe %eax,%edx$/;"	l
f0104968	obj/kern/kernel.asm	/^f0104968:	89 d7                	mov    %edx,%edi$/;"	l
f010496a	obj/kern/kernel.asm	/^f010496a:	8d 42 cc             	lea    -0x34(%edx),%eax$/;"	l
f010496d	obj/kern/kernel.asm	/^f010496d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104970	obj/kern/kernel.asm	/^f0104970:	e8 d4 25 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104975	obj/kern/kernel.asm	/^f0104975:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010497c	obj/kern/kernel.asm	/^f010497c:	00 $/;"	l
f010497d	obj/kern/kernel.asm	/^f010497d:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
f0104984	obj/kern/kernel.asm	/^f0104984:	00 $/;"	l
f0104985	obj/kern/kernel.asm	/^f0104985:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104988	obj/kern/kernel.asm	/^f0104988:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010498c	obj/kern/kernel.asm	/^f010498c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010498f	obj/kern/kernel.asm	/^f010498f:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104998	obj/kern/kernel.asm	/^f0104998:	e8 c5 f1 ff ff       	call   f0103b62 <user_mem_assert>$/;"	l
f010499d	obj/kern/kernel.asm	/^f010499d:	89 77 cc             	mov    %esi,-0x34(%edi)$/;"	l
f01049a0	obj/kern/kernel.asm	/^f01049a0:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01049a3	obj/kern/kernel.asm	/^f01049a3:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01049a6	obj/kern/kernel.asm	/^f01049a6:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
f01049a9	obj/kern/kernel.asm	/^f01049a9:	83 ef 2c             	sub    $0x2c,%edi$/;"	l
f01049ac	obj/kern/kernel.asm	/^f01049ac:	89 de                	mov    %ebx,%esi$/;"	l
f01049ae	obj/kern/kernel.asm	/^f01049ae:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01049b3	obj/kern/kernel.asm	/^f01049b3:	f7 c7 01 00 00 00    	test   $0x1,%edi$/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	74 03                	je     f01049be <page_fault_handler+0xb9>$/;"	l
f01049bb	obj/kern/kernel.asm	/^f01049bb:	a4                   	movsb  %ds:(%esi),%es:(%edi)$/;"	l
f01049bc	obj/kern/kernel.asm	/^f01049bc:	b0 1f                	mov    $0x1f,%al$/;"	l
f01049be	obj/kern/kernel.asm	/^f01049be:	f7 c7 02 00 00 00    	test   $0x2,%edi$/;"	l
f01049c4	obj/kern/kernel.asm	/^f01049c4:	74 05                	je     f01049cb <page_fault_handler+0xc6>$/;"	l
f01049c6	obj/kern/kernel.asm	/^f01049c6:	66 a5                	movsw  %ds:(%esi),%es:(%edi)$/;"	l
f01049c8	obj/kern/kernel.asm	/^f01049c8:	83 e8 02             	sub    $0x2,%eax$/;"	l
f01049cb	obj/kern/kernel.asm	/^f01049cb:	89 c1                	mov    %eax,%ecx$/;"	l
f01049cd	obj/kern/kernel.asm	/^f01049cd:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01049d0	obj/kern/kernel.asm	/^f01049d0:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01049d2	obj/kern/kernel.asm	/^f01049d2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01049d7	obj/kern/kernel.asm	/^f01049d7:	a8 02                	test   $0x2,%al$/;"	l
f01049d9	obj/kern/kernel.asm	/^f01049d9:	74 0b                	je     f01049e6 <page_fault_handler+0xe1>$/;"	l
f01049db	obj/kern/kernel.asm	/^f01049db:	0f b7 16             	movzwl (%esi),%edx$/;"	l
f01049de	obj/kern/kernel.asm	/^f01049de:	66 89 17             	mov    %dx,(%edi)$/;"	l
f01049e1	obj/kern/kernel.asm	/^f01049e1:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
f01049e6	obj/kern/kernel.asm	/^f01049e6:	a8 01                	test   $0x1,%al$/;"	l
f01049e8	obj/kern/kernel.asm	/^f01049e8:	74 07                	je     f01049f1 <page_fault_handler+0xec>$/;"	l
f01049ea	obj/kern/kernel.asm	/^f01049ea:	0f b6 04 16          	movzbl (%esi,%edx,1),%eax$/;"	l
f01049ee	obj/kern/kernel.asm	/^f01049ee:	88 04 17             	mov    %al,(%edi,%edx,1)$/;"	l
f01049f1	obj/kern/kernel.asm	/^f01049f1:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f01049f4	obj/kern/kernel.asm	/^f01049f4:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01049f7	obj/kern/kernel.asm	/^f01049f7:	89 46 28             	mov    %eax,0x28(%esi)$/;"	l
f01049fa	obj/kern/kernel.asm	/^f01049fa:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f01049fd	obj/kern/kernel.asm	/^f01049fd:	89 46 2c             	mov    %eax,0x2c(%esi)$/;"	l
f0104a00	obj/kern/kernel.asm	/^f0104a00:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104a03	obj/kern/kernel.asm	/^f0104a03:	89 46 30             	mov    %eax,0x30(%esi)$/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	e8 3e 25 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104a0b	obj/kern/kernel.asm	/^f0104a0b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a0e	obj/kern/kernel.asm	/^f0104a0e:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0104a14	obj/kern/kernel.asm	/^f0104a14:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104a17	obj/kern/kernel.asm	/^f0104a17:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f0104a1a	obj/kern/kernel.asm	/^f0104a1a:	89 73 3c             	mov    %esi,0x3c(%ebx)$/;"	l
f0104a1d	obj/kern/kernel.asm	/^f0104a1d:	e8 27 25 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104a22	obj/kern/kernel.asm	/^f0104a22:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a25	obj/kern/kernel.asm	/^f0104a25:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0104a2b	obj/kern/kernel.asm	/^f0104a2b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104a2e	obj/kern/kernel.asm	/^f0104a2e:	e8 9a f9 ff ff       	call   f01043cd <env_run>$/;"	l
f0104a33	obj/kern/kernel.asm	/^f0104a33:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0104a36	obj/kern/kernel.asm	/^f0104a36:	e8 0e 25 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104a3b	obj/kern/kernel.asm	/^f0104a3b:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0104a3f	obj/kern/kernel.asm	/^f0104a3f:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0104a43	obj/kern/kernel.asm	/^f0104a43:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a46	obj/kern/kernel.asm	/^f0104a46:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0104a4c	obj/kern/kernel.asm	/^f0104a4c:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a53	obj/kern/kernel.asm	/^f0104a53:	c7 04 24 e0 99 10 f0 	movl   $0xf01099e0,(%esp)$/;"	l
f0104a5a	obj/kern/kernel.asm	/^f0104a5a:	e8 ab fb ff ff       	call   f010460a <cprintf>$/;"	l
f0104a5f	obj/kern/kernel.asm	/^f0104a5f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	e8 01 fd ff ff       	call   f0104768 <print_trapframe>$/;"	l
f0104a67	obj/kern/kernel.asm	/^f0104a67:	e8 dd 24 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a6f	obj/kern/kernel.asm	/^f0104a6f:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0104a75	obj/kern/kernel.asm	/^f0104a75:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104a78	obj/kern/kernel.asm	/^f0104a78:	e8 af f8 ff ff       	call   f010432c <env_destroy>$/;"	l
f0104a7d	obj/kern/kernel.asm	/^f0104a7d:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	5b                   	pop    %ebx$/;"	l
f0104a81	obj/kern/kernel.asm	/^f0104a81:	5e                   	pop    %esi$/;"	l
f0104a82	obj/kern/kernel.asm	/^f0104a82:	5f                   	pop    %edi$/;"	l
f0104a83	obj/kern/kernel.asm	/^f0104a83:	5d                   	pop    %ebp$/;"	l
f0104a84	obj/kern/kernel.asm	/^f0104a84:	c3                   	ret    $/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85 <trap>:$/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85:	55                   	push   %ebp$/;"	l
f0104a86	obj/kern/kernel.asm	/^f0104a86:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a88	obj/kern/kernel.asm	/^f0104a88:	57                   	push   %edi$/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89:	56                   	push   %esi$/;"	l
f0104a8a	obj/kern/kernel.asm	/^f0104a8a:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0104a8d	obj/kern/kernel.asm	/^f0104a8d:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104a90	obj/kern/kernel.asm	/^f0104a90:	fc                   	cld    $/;"	l
f0104a91	obj/kern/kernel.asm	/^f0104a91:	83 3d 94 4e 2c f0 00 	cmpl   $0x0,0xf02c4e94$/;"	l
f0104a98	obj/kern/kernel.asm	/^f0104a98:	74 01                	je     f0104a9b <trap+0x16>$/;"	l
f0104a9a	obj/kern/kernel.asm	/^f0104a9a:	f4                   	hlt    $/;"	l
f0104a9b	obj/kern/kernel.asm	/^f0104a9b:	e8 a9 24 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104aa3	obj/kern/kernel.asm	/^f0104aa3:	81 c2 20 50 2c f0    	add    $0xf02c5020,%edx$/;"	l
f0104aa9	obj/kern/kernel.asm	/^f0104aa9:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104aae	obj/kern/kernel.asm	/^f0104aae:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104ab2	obj/kern/kernel.asm	/^f0104ab2:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104ab5	obj/kern/kernel.asm	/^f0104ab5:	75 0c                	jne    f0104ac3 <trap+0x3e>$/;"	l
f0104ab7	obj/kern/kernel.asm	/^f0104ab7:	c7 04 24 00 64 12 f0 	movl   $0xf0126400,(%esp)$/;"	l
f0104abe	obj/kern/kernel.asm	/^f0104abe:	e8 04 27 00 00       	call   f01071c7 <spin_lock>$/;"	l
f0104ac3	obj/kern/kernel.asm	/^f0104ac3:	9c                   	pushf  $/;"	l
f0104ac4	obj/kern/kernel.asm	/^f0104ac4:	58                   	pop    %eax$/;"	l
f0104ac5	obj/kern/kernel.asm	/^f0104ac5:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	74 24                	je     f0104aee <trap+0x69>$/;"	l
f0104aca	obj/kern/kernel.asm	/^f0104aca:	c7 44 24 0c 02 98 10 	movl   $0xf0109802,0xc(%esp)$/;"	l
f0104ad1	obj/kern/kernel.asm	/^f0104ad1:	f0 $/;"	l
f0104ad2	obj/kern/kernel.asm	/^f0104ad2:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0104ad9	obj/kern/kernel.asm	/^f0104ad9:	f0 $/;"	l
f0104ada	obj/kern/kernel.asm	/^f0104ada:	c7 44 24 04 47 01 00 	movl   $0x147,0x4(%esp)$/;"	l
f0104ae1	obj/kern/kernel.asm	/^f0104ae1:	00 $/;"	l
f0104ae2	obj/kern/kernel.asm	/^f0104ae2:	c7 04 24 f6 97 10 f0 	movl   $0xf01097f6,(%esp)$/;"	l
f0104ae9	obj/kern/kernel.asm	/^f0104ae9:	e8 af b5 ff ff       	call   f010009d <_panic>$/;"	l
f0104aee	obj/kern/kernel.asm	/^f0104aee:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104af2	obj/kern/kernel.asm	/^f0104af2:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104af5	obj/kern/kernel.asm	/^f0104af5:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0104af9	obj/kern/kernel.asm	/^f0104af9:	0f 85 a7 00 00 00    	jne    f0104ba6 <trap+0x121>$/;"	l
f0104aff	obj/kern/kernel.asm	/^f0104aff:	c7 04 24 00 64 12 f0 	movl   $0xf0126400,(%esp)$/;"	l
f0104b06	obj/kern/kernel.asm	/^f0104b06:	e8 bc 26 00 00       	call   f01071c7 <spin_lock>$/;"	l
f0104b0b	obj/kern/kernel.asm	/^f0104b0b:	e8 39 24 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104b10	obj/kern/kernel.asm	/^f0104b10:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b13	obj/kern/kernel.asm	/^f0104b13:	83 b8 28 50 2c f0 00 	cmpl   $0x0,-0xfd3afd8(%eax)$/;"	l
f0104b1a	obj/kern/kernel.asm	/^f0104b1a:	75 24                	jne    f0104b40 <trap+0xbb>$/;"	l
f0104b1c	obj/kern/kernel.asm	/^f0104b1c:	c7 44 24 0c 1b 98 10 	movl   $0xf010981b,0xc(%esp)$/;"	l
f0104b23	obj/kern/kernel.asm	/^f0104b23:	f0 $/;"	l
f0104b24	obj/kern/kernel.asm	/^f0104b24:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0104b2b	obj/kern/kernel.asm	/^f0104b2b:	f0 $/;"	l
f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	c7 44 24 04 4c 01 00 	movl   $0x14c,0x4(%esp)$/;"	l
f0104b33	obj/kern/kernel.asm	/^f0104b33:	00 $/;"	l
f0104b34	obj/kern/kernel.asm	/^f0104b34:	c7 04 24 f6 97 10 f0 	movl   $0xf01097f6,(%esp)$/;"	l
f0104b3b	obj/kern/kernel.asm	/^f0104b3b:	e8 5d b5 ff ff       	call   f010009d <_panic>$/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	e8 04 24 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104b45	obj/kern/kernel.asm	/^f0104b45:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b48	obj/kern/kernel.asm	/^f0104b48:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0104b4e	obj/kern/kernel.asm	/^f0104b4e:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104b52	obj/kern/kernel.asm	/^f0104b52:	75 2d                	jne    f0104b81 <trap+0xfc>$/;"	l
f0104b54	obj/kern/kernel.asm	/^f0104b54:	e8 f0 23 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104b59	obj/kern/kernel.asm	/^f0104b59:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0104b62	obj/kern/kernel.asm	/^f0104b62:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b65	obj/kern/kernel.asm	/^f0104b65:	e8 bd f5 ff ff       	call   f0104127 <env_free>$/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a:	e8 da 23 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104b6f	obj/kern/kernel.asm	/^f0104b6f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b72	obj/kern/kernel.asm	/^f0104b72:	c7 80 28 50 2c f0 00 	movl   $0x0,-0xfd3afd8(%eax)$/;"	l
f0104b79	obj/kern/kernel.asm	/^f0104b79:	00 00 00 $/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	e8 e3 08 00 00       	call   f0105464 <sched_yield>$/;"	l
f0104b81	obj/kern/kernel.asm	/^f0104b81:	e8 c3 23 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104b86	obj/kern/kernel.asm	/^f0104b86:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b89	obj/kern/kernel.asm	/^f0104b89:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0104b8f	obj/kern/kernel.asm	/^f0104b8f:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	89 c7                	mov    %eax,%edi$/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104b98	obj/kern/kernel.asm	/^f0104b98:	e8 ac 23 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104b9d	obj/kern/kernel.asm	/^f0104b9d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ba0	obj/kern/kernel.asm	/^f0104ba0:	8b b0 28 50 2c f0    	mov    -0xfd3afd8(%eax),%esi$/;"	l
f0104ba6	obj/kern/kernel.asm	/^f0104ba6:	89 35 60 4a 2c f0    	mov    %esi,0xf02c4a60$/;"	l
f0104bac	obj/kern/kernel.asm	/^f0104bac:	83 7e 28 0e          	cmpl   $0xe,0x28(%esi)$/;"	l
f0104bb0	obj/kern/kernel.asm	/^f0104bb0:	75 08                	jne    f0104bba <trap+0x135>$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104bb5	obj/kern/kernel.asm	/^f0104bb5:	e8 4b fd ff ff       	call   f0104905 <page_fault_handler>$/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba:	83 7e 28 03          	cmpl   $0x3,0x28(%esi)$/;"	l
f0104bbe	obj/kern/kernel.asm	/^f0104bbe:	75 08                	jne    f0104bc8 <trap+0x143>$/;"	l
f0104bc0	obj/kern/kernel.asm	/^f0104bc0:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104bc3	obj/kern/kernel.asm	/^f0104bc3:	e8 c6 c0 ff ff       	call   f0100c8e <monitor>$/;"	l
f0104bc8	obj/kern/kernel.asm	/^f0104bc8:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104bcb	obj/kern/kernel.asm	/^f0104bcb:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	75 35                	jne    f0104c05 <trap+0x180>$/;"	l
f0104bd0	obj/kern/kernel.asm	/^f0104bd0:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0104bd3	obj/kern/kernel.asm	/^f0104bd3:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0104bd7	obj/kern/kernel.asm	/^f0104bd7:	8b 06                	mov    (%esi),%eax$/;"	l
f0104bd9	obj/kern/kernel.asm	/^f0104bd9:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104bdd	obj/kern/kernel.asm	/^f0104bdd:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f0104be0	obj/kern/kernel.asm	/^f0104be0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104be4	obj/kern/kernel.asm	/^f0104be4:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0104be7	obj/kern/kernel.asm	/^f0104be7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104beb	obj/kern/kernel.asm	/^f0104beb:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0104bee	obj/kern/kernel.asm	/^f0104bee:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f0104bf5	obj/kern/kernel.asm	/^f0104bf5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104bf8	obj/kern/kernel.asm	/^f0104bf8:	e8 3d 09 00 00       	call   f010553a <syscall>$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00:	e9 9a 00 00 00       	jmp    f0104c9f <trap+0x21a>$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	75 16                	jne    f0104c20 <trap+0x19b>$/;"	l
f0104c0a	obj/kern/kernel.asm	/^f0104c0a:	c7 04 24 22 98 10 f0 	movl   $0xf0109822,(%esp)$/;"	l
f0104c11	obj/kern/kernel.asm	/^f0104c11:	e8 f4 f9 ff ff       	call   f010460a <cprintf>$/;"	l
f0104c16	obj/kern/kernel.asm	/^f0104c16:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104c19	obj/kern/kernel.asm	/^f0104c19:	e8 4a fb ff ff       	call   f0104768 <print_trapframe>$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	eb 7f                	jmp    f0104c9f <trap+0x21a>$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0104c23	obj/kern/kernel.asm	/^f0104c23:	75 10                	jne    f0104c35 <trap+0x1b0>$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	e8 87 31 00 00       	call   f0107db1 <time_tick>$/;"	l
f0104c2a	obj/kern/kernel.asm	/^f0104c2a:	e8 67 24 00 00       	call   f0107096 <lapic_eoi>$/;"	l
f0104c2f	obj/kern/kernel.asm	/^f0104c2f:	90                   	nop$/;"	l
f0104c30	obj/kern/kernel.asm	/^f0104c30:	e8 2f 08 00 00       	call   f0105464 <sched_yield>$/;"	l
f0104c35	obj/kern/kernel.asm	/^f0104c35:	83 f8 21             	cmp    $0x21,%eax$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	75 08                	jne    f0104c42 <trap+0x1bd>$/;"	l
f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	e8 7f ba ff ff       	call   f01006be <kbd_intr>$/;"	l
f0104c3f	obj/kern/kernel.asm	/^f0104c3f:	90                   	nop$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	eb 5d                	jmp    f0104c9f <trap+0x21a>$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	83 f8 24             	cmp    $0x24,%eax$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	75 0b                	jne    f0104c52 <trap+0x1cd>$/;"	l
f0104c47	obj/kern/kernel.asm	/^f0104c47:	e8 56 ba ff ff       	call   f01006a2 <serial_intr>$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	eb 4d                	jmp    f0104c9f <trap+0x21a>$/;"	l
f0104c52	obj/kern/kernel.asm	/^f0104c52:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104c55	obj/kern/kernel.asm	/^f0104c55:	e8 0e fb ff ff       	call   f0104768 <print_trapframe>$/;"	l
f0104c5a	obj/kern/kernel.asm	/^f0104c5a:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104c5f	obj/kern/kernel.asm	/^f0104c5f:	75 28                	jne    f0104c89 <trap+0x204>$/;"	l
f0104c61	obj/kern/kernel.asm	/^f0104c61:	c7 04 24 04 9a 10 f0 	movl   $0xf0109a04,(%esp)$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68:	e8 9d f9 ff ff       	call   f010460a <cprintf>$/;"	l
f0104c6d	obj/kern/kernel.asm	/^f0104c6d:	c7 44 24 08 3f 98 10 	movl   $0xf010983f,0x8(%esp)$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	f0 $/;"	l
f0104c75	obj/kern/kernel.asm	/^f0104c75:	c7 44 24 04 2d 01 00 	movl   $0x12d,0x4(%esp)$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c:	00 $/;"	l
f0104c7d	obj/kern/kernel.asm	/^f0104c7d:	c7 04 24 f6 97 10 f0 	movl   $0xf01097f6,(%esp)$/;"	l
f0104c84	obj/kern/kernel.asm	/^f0104c84:	e8 14 b4 ff ff       	call   f010009d <_panic>$/;"	l
f0104c89	obj/kern/kernel.asm	/^f0104c89:	e8 bb 22 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104c8e	obj/kern/kernel.asm	/^f0104c8e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104c91	obj/kern/kernel.asm	/^f0104c91:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0104c97	obj/kern/kernel.asm	/^f0104c97:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c9a	obj/kern/kernel.asm	/^f0104c9a:	e8 8d f6 ff ff       	call   f010432c <env_destroy>$/;"	l
f0104c9f	obj/kern/kernel.asm	/^f0104c9f:	e8 a5 22 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104ca4	obj/kern/kernel.asm	/^f0104ca4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ca7	obj/kern/kernel.asm	/^f0104ca7:	83 b8 28 50 2c f0 00 	cmpl   $0x0,-0xfd3afd8(%eax)$/;"	l
f0104cae	obj/kern/kernel.asm	/^f0104cae:	74 2a                	je     f0104cda <trap+0x255>$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0:	e8 94 22 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104cb5	obj/kern/kernel.asm	/^f0104cb5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cb8	obj/kern/kernel.asm	/^f0104cb8:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0104cbe	obj/kern/kernel.asm	/^f0104cbe:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	75 16                	jne    f0104cda <trap+0x255>$/;"	l
f0104cc4	obj/kern/kernel.asm	/^f0104cc4:	e8 80 22 00 00       	call   f0106f49 <cpunum>$/;"	l
f0104cc9	obj/kern/kernel.asm	/^f0104cc9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0104cd2	obj/kern/kernel.asm	/^f0104cd2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	e8 f3 f6 ff ff       	call   f01043cd <env_run>$/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda:	e8 85 07 00 00       	call   f0105464 <sched_yield>$/;"	l
f0104cdf	obj/kern/kernel.asm	/^f0104cdf <init_interrupts>:$/;"	l
f0104cdf	obj/kern/kernel.asm	/^f0104cdf:	55                   	push   %ebp$/;"	l
f0104ce0	obj/kern/kernel.asm	/^f0104ce0:	89 e5                	mov    %esp,%ebp$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	c7 05 c0 4e 2c f0 38 	movl   $0xf0105138,0xf02c4ec0$/;"	l
f0104ce9	obj/kern/kernel.asm	/^f0104ce9:	51 10 f0 $/;"	l
f0104cec	obj/kern/kernel.asm	/^f0104cec:	c7 05 e8 4e 2c f0 90 	movl   $0xf0105190,0xf02c4ee8$/;"	l
f0104cf3	obj/kern/kernel.asm	/^f0104cf3:	51 10 f0 $/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	c7 05 ec 4e 2c f0 98 	movl   $0xf0105198,0xf02c4eec$/;"	l
f0104cfd	obj/kern/kernel.asm	/^f0104cfd:	51 10 f0 $/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	c7 05 c4 4e 2c f0 42 	movl   $0xf0105142,0xf02c4ec4$/;"	l
f0104d07	obj/kern/kernel.asm	/^f0104d07:	51 10 f0 $/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a:	c7 05 f0 4e 2c f0 a0 	movl   $0xf01051a0,0xf02c4ef0$/;"	l
f0104d11	obj/kern/kernel.asm	/^f0104d11:	51 10 f0 $/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	c7 05 c8 4e 2c f0 4c 	movl   $0xf010514c,0xf02c4ec8$/;"	l
f0104d1b	obj/kern/kernel.asm	/^f0104d1b:	51 10 f0 $/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	c7 05 f4 4e 2c f0 a8 	movl   $0xf01051a8,0xf02c4ef4$/;"	l
f0104d25	obj/kern/kernel.asm	/^f0104d25:	51 10 f0 $/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	c7 05 cc 4e 2c f0 56 	movl   $0xf0105156,0xf02c4ecc$/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	51 10 f0 $/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	c7 05 f8 4e 2c f0 b0 	movl   $0xf01051b0,0xf02c4ef8$/;"	l
f0104d39	obj/kern/kernel.asm	/^f0104d39:	51 10 f0 $/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	c7 05 d0 4e 2c f0 60 	movl   $0xf0105160,0xf02c4ed0$/;"	l
f0104d43	obj/kern/kernel.asm	/^f0104d43:	51 10 f0 $/;"	l
f0104d46	obj/kern/kernel.asm	/^f0104d46:	c7 05 d4 4e 2c f0 6a 	movl   $0xf010516a,0xf02c4ed4$/;"	l
f0104d4d	obj/kern/kernel.asm	/^f0104d4d:	51 10 f0 $/;"	l
f0104d50	obj/kern/kernel.asm	/^f0104d50:	c7 05 00 4f 2c f0 b8 	movl   $0xf01051b8,0xf02c4f00$/;"	l
f0104d57	obj/kern/kernel.asm	/^f0104d57:	51 10 f0 $/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	c7 05 d8 4e 2c f0 74 	movl   $0xf0105174,0xf02c4ed8$/;"	l
f0104d61	obj/kern/kernel.asm	/^f0104d61:	51 10 f0 $/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64:	c7 05 04 4f 2c f0 c2 	movl   $0xf01051c2,0xf02c4f04$/;"	l
f0104d6b	obj/kern/kernel.asm	/^f0104d6b:	51 10 f0 $/;"	l
f0104d6e	obj/kern/kernel.asm	/^f0104d6e:	c7 05 dc 4e 2c f0 7e 	movl   $0xf010517e,0xf02c4edc$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	51 10 f0 $/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78:	c7 05 08 4f 2c f0 ca 	movl   $0xf01051ca,0xf02c4f08$/;"	l
f0104d7f	obj/kern/kernel.asm	/^f0104d7f:	51 10 f0 $/;"	l
f0104d82	obj/kern/kernel.asm	/^f0104d82:	c7 05 e0 4e 2c f0 88 	movl   $0xf0105188,0xf02c4ee0$/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	51 10 f0 $/;"	l
f0104d8c	obj/kern/kernel.asm	/^f0104d8c:	c7 05 0c 4f 2c f0 d4 	movl   $0xf01051d4,0xf02c4f0c$/;"	l
f0104d93	obj/kern/kernel.asm	/^f0104d93:	51 10 f0 $/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	c7 05 80 4f 2c f0 de 	movl   $0xf01051de,0xf02c4f80$/;"	l
f0104d9d	obj/kern/kernel.asm	/^f0104d9d:	51 10 f0 $/;"	l
f0104da0	obj/kern/kernel.asm	/^f0104da0:	5d                   	pop    %ebp$/;"	l
f0104da1	obj/kern/kernel.asm	/^f0104da1:	c3                   	ret    $/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2 <trap_init>:$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	55                   	push   %ebp$/;"	l
f0104da3	obj/kern/kernel.asm	/^f0104da3:	89 e5                	mov    %esp,%ebp$/;"	l
f0104da5	obj/kern/kernel.asm	/^f0104da5:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104da8	obj/kern/kernel.asm	/^f0104da8:	e8 32 ff ff ff       	call   f0104cdf <init_interrupts>$/;"	l
f0104dad	obj/kern/kernel.asm	/^f0104dad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	8b 14 85 c0 4e 2c f0 	mov    -0xfd3b140(,%eax,4),%edx$/;"	l
f0104db9	obj/kern/kernel.asm	/^f0104db9:	66 89 14 c5 60 42 2c 	mov    %dx,-0xfd3bda0(,%eax,8)$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	f0 $/;"	l
f0104dc1	obj/kern/kernel.asm	/^f0104dc1:	66 c7 04 c5 62 42 2c 	movw   $0x8,-0xfd3bd9e(,%eax,8)$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8:	f0 08 00 $/;"	l
f0104dcb	obj/kern/kernel.asm	/^f0104dcb:	c6 04 c5 64 42 2c f0 	movb   $0x0,-0xfd3bd9c(,%eax,8)$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	00 $/;"	l
f0104dd3	obj/kern/kernel.asm	/^f0104dd3:	c6 04 c5 65 42 2c f0 	movb   $0xee,-0xfd3bd9b(,%eax,8)$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	ee $/;"	l
f0104ddb	obj/kern/kernel.asm	/^f0104ddb:	89 d1                	mov    %edx,%ecx$/;"	l
f0104ddd	obj/kern/kernel.asm	/^f0104ddd:	c1 e9 10             	shr    $0x10,%ecx$/;"	l
f0104de0	obj/kern/kernel.asm	/^f0104de0:	66 89 0c c5 66 42 2c 	mov    %cx,-0xfd3bd9a(,%eax,8)$/;"	l
f0104de7	obj/kern/kernel.asm	/^f0104de7:	f0 $/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104deb	obj/kern/kernel.asm	/^f0104deb:	75 2a                	jne    f0104e17 <trap_init+0x75>$/;"	l
f0104ded	obj/kern/kernel.asm	/^f0104ded:	66 89 15 d0 42 2c f0 	mov    %dx,0xf02c42d0$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	66 c7 05 d2 42 2c f0 	movw   $0x8,0xf02c42d2$/;"	l
f0104dfb	obj/kern/kernel.asm	/^f0104dfb:	08 00 $/;"	l
f0104dfd	obj/kern/kernel.asm	/^f0104dfd:	c6 05 d4 42 2c f0 00 	movb   $0x0,0xf02c42d4$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	c6 05 d5 42 2c f0 8e 	movb   $0x8e,0xf02c42d5$/;"	l
f0104e0b	obj/kern/kernel.asm	/^f0104e0b:	66 89 0d d6 42 2c f0 	mov    %cx,0xf02c42d6$/;"	l
f0104e12	obj/kern/kernel.asm	/^f0104e12:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104e15	obj/kern/kernel.asm	/^f0104e15:	eb 9b                	jmp    f0104db2 <trap_init+0x10>$/;"	l
f0104e17	obj/kern/kernel.asm	/^f0104e17:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104e1a	obj/kern/kernel.asm	/^f0104e1a:	83 f8 14             	cmp    $0x14,%eax$/;"	l
f0104e1d	obj/kern/kernel.asm	/^f0104e1d:	75 93                	jne    f0104db2 <trap_init+0x10>$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	c7 04 24 1b 95 10 f0 	movl   $0xf010951b,(%esp)$/;"	l
f0104e26	obj/kern/kernel.asm	/^f0104e26:	e8 df f7 ff ff       	call   f010460a <cprintf>$/;"	l
f0104e2b	obj/kern/kernel.asm	/^f0104e2b:	b8 b0 51 10 f0       	mov    $0xf01051b0,%eax$/;"	l
f0104e30	obj/kern/kernel.asm	/^f0104e30:	66 a3 d0 42 2c f0    	mov    %ax,0xf02c42d0$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	66 c7 05 d2 42 2c f0 	movw   $0x8,0xf02c42d2$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	08 00 $/;"	l
f0104e3f	obj/kern/kernel.asm	/^f0104e3f:	c6 05 d4 42 2c f0 00 	movb   $0x0,0xf02c42d4$/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46:	c6 05 d5 42 2c f0 8e 	movb   $0x8e,0xf02c42d5$/;"	l
f0104e4d	obj/kern/kernel.asm	/^f0104e4d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50:	66 a3 d6 42 2c f0    	mov    %ax,0xf02c42d6$/;"	l
f0104e56	obj/kern/kernel.asm	/^f0104e56:	b8 de 51 10 f0       	mov    $0xf01051de,%eax$/;"	l
f0104e5b	obj/kern/kernel.asm	/^f0104e5b:	66 a3 e0 43 2c f0    	mov    %ax,0xf02c43e0$/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61:	66 c7 05 e2 43 2c f0 	movw   $0x8,0xf02c43e2$/;"	l
f0104e68	obj/kern/kernel.asm	/^f0104e68:	08 00 $/;"	l
f0104e6a	obj/kern/kernel.asm	/^f0104e6a:	c6 05 e4 43 2c f0 00 	movb   $0x0,0xf02c43e4$/;"	l
f0104e71	obj/kern/kernel.asm	/^f0104e71:	c6 05 e5 43 2c f0 ee 	movb   $0xee,0xf02c43e5$/;"	l
f0104e78	obj/kern/kernel.asm	/^f0104e78:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104e7b	obj/kern/kernel.asm	/^f0104e7b:	66 a3 e6 43 2c f0    	mov    %ax,0xf02c43e6$/;"	l
f0104e81	obj/kern/kernel.asm	/^f0104e81:	b8 e8 51 10 f0       	mov    $0xf01051e8,%eax$/;"	l
f0104e86	obj/kern/kernel.asm	/^f0104e86:	66 a3 60 43 2c f0    	mov    %ax,0xf02c4360$/;"	l
f0104e8c	obj/kern/kernel.asm	/^f0104e8c:	66 c7 05 62 43 2c f0 	movw   $0x8,0xf02c4362$/;"	l
f0104e93	obj/kern/kernel.asm	/^f0104e93:	08 00 $/;"	l
f0104e95	obj/kern/kernel.asm	/^f0104e95:	c6 05 64 43 2c f0 00 	movb   $0x0,0xf02c4364$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	c6 05 65 43 2c f0 ee 	movb   $0xee,0xf02c4365$/;"	l
f0104ea3	obj/kern/kernel.asm	/^f0104ea3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104ea6	obj/kern/kernel.asm	/^f0104ea6:	66 a3 66 43 2c f0    	mov    %ax,0xf02c4366$/;"	l
f0104eac	obj/kern/kernel.asm	/^f0104eac:	b8 f2 51 10 f0       	mov    $0xf01051f2,%eax$/;"	l
f0104eb1	obj/kern/kernel.asm	/^f0104eb1:	66 a3 68 43 2c f0    	mov    %ax,0xf02c4368$/;"	l
f0104eb7	obj/kern/kernel.asm	/^f0104eb7:	66 c7 05 6a 43 2c f0 	movw   $0x8,0xf02c436a$/;"	l
f0104ebe	obj/kern/kernel.asm	/^f0104ebe:	08 00 $/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0:	c6 05 6c 43 2c f0 00 	movb   $0x0,0xf02c436c$/;"	l
f0104ec7	obj/kern/kernel.asm	/^f0104ec7:	c6 05 6d 43 2c f0 8e 	movb   $0x8e,0xf02c436d$/;"	l
f0104ece	obj/kern/kernel.asm	/^f0104ece:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104ed1	obj/kern/kernel.asm	/^f0104ed1:	66 a3 6e 43 2c f0    	mov    %ax,0xf02c436e$/;"	l
f0104ed7	obj/kern/kernel.asm	/^f0104ed7:	b8 fc 51 10 f0       	mov    $0xf01051fc,%eax$/;"	l
f0104edc	obj/kern/kernel.asm	/^f0104edc:	66 a3 70 43 2c f0    	mov    %ax,0xf02c4370$/;"	l
f0104ee2	obj/kern/kernel.asm	/^f0104ee2:	66 c7 05 72 43 2c f0 	movw   $0x8,0xf02c4372$/;"	l
f0104ee9	obj/kern/kernel.asm	/^f0104ee9:	08 00 $/;"	l
f0104eeb	obj/kern/kernel.asm	/^f0104eeb:	c6 05 74 43 2c f0 00 	movb   $0x0,0xf02c4374$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	c6 05 75 43 2c f0 8e 	movb   $0x8e,0xf02c4375$/;"	l
f0104ef9	obj/kern/kernel.asm	/^f0104ef9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc:	66 a3 76 43 2c f0    	mov    %ax,0xf02c4376$/;"	l
f0104f02	obj/kern/kernel.asm	/^f0104f02:	b8 06 52 10 f0       	mov    $0xf0105206,%eax$/;"	l
f0104f07	obj/kern/kernel.asm	/^f0104f07:	66 a3 78 43 2c f0    	mov    %ax,0xf02c4378$/;"	l
f0104f0d	obj/kern/kernel.asm	/^f0104f0d:	66 c7 05 7a 43 2c f0 	movw   $0x8,0xf02c437a$/;"	l
f0104f14	obj/kern/kernel.asm	/^f0104f14:	08 00 $/;"	l
f0104f16	obj/kern/kernel.asm	/^f0104f16:	c6 05 7c 43 2c f0 00 	movb   $0x0,0xf02c437c$/;"	l
f0104f1d	obj/kern/kernel.asm	/^f0104f1d:	c6 05 7d 43 2c f0 8e 	movb   $0x8e,0xf02c437d$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	66 a3 7e 43 2c f0    	mov    %ax,0xf02c437e$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	b8 10 52 10 f0       	mov    $0xf0105210,%eax$/;"	l
f0104f32	obj/kern/kernel.asm	/^f0104f32:	66 a3 80 43 2c f0    	mov    %ax,0xf02c4380$/;"	l
f0104f38	obj/kern/kernel.asm	/^f0104f38:	66 c7 05 82 43 2c f0 	movw   $0x8,0xf02c4382$/;"	l
f0104f3f	obj/kern/kernel.asm	/^f0104f3f:	08 00 $/;"	l
f0104f41	obj/kern/kernel.asm	/^f0104f41:	c6 05 84 43 2c f0 00 	movb   $0x0,0xf02c4384$/;"	l
f0104f48	obj/kern/kernel.asm	/^f0104f48:	c6 05 85 43 2c f0 8e 	movb   $0x8e,0xf02c4385$/;"	l
f0104f4f	obj/kern/kernel.asm	/^f0104f4f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104f52	obj/kern/kernel.asm	/^f0104f52:	66 a3 86 43 2c f0    	mov    %ax,0xf02c4386$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	b8 1a 52 10 f0       	mov    $0xf010521a,%eax$/;"	l
f0104f5d	obj/kern/kernel.asm	/^f0104f5d:	66 a3 88 43 2c f0    	mov    %ax,0xf02c4388$/;"	l
f0104f63	obj/kern/kernel.asm	/^f0104f63:	66 c7 05 8a 43 2c f0 	movw   $0x8,0xf02c438a$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a:	08 00 $/;"	l
f0104f6c	obj/kern/kernel.asm	/^f0104f6c:	c6 05 8c 43 2c f0 00 	movb   $0x0,0xf02c438c$/;"	l
f0104f73	obj/kern/kernel.asm	/^f0104f73:	c6 05 8d 43 2c f0 8e 	movb   $0x8e,0xf02c438d$/;"	l
f0104f7a	obj/kern/kernel.asm	/^f0104f7a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104f7d	obj/kern/kernel.asm	/^f0104f7d:	66 a3 8e 43 2c f0    	mov    %ax,0xf02c438e$/;"	l
f0104f83	obj/kern/kernel.asm	/^f0104f83:	b8 24 52 10 f0       	mov    $0xf0105224,%eax$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	66 a3 90 43 2c f0    	mov    %ax,0xf02c4390$/;"	l
f0104f8e	obj/kern/kernel.asm	/^f0104f8e:	66 c7 05 92 43 2c f0 	movw   $0x8,0xf02c4392$/;"	l
f0104f95	obj/kern/kernel.asm	/^f0104f95:	08 00 $/;"	l
f0104f97	obj/kern/kernel.asm	/^f0104f97:	c6 05 94 43 2c f0 00 	movb   $0x0,0xf02c4394$/;"	l
f0104f9e	obj/kern/kernel.asm	/^f0104f9e:	c6 05 95 43 2c f0 8e 	movb   $0x8e,0xf02c4395$/;"	l
f0104fa5	obj/kern/kernel.asm	/^f0104fa5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104fa8	obj/kern/kernel.asm	/^f0104fa8:	66 a3 96 43 2c f0    	mov    %ax,0xf02c4396$/;"	l
f0104fae	obj/kern/kernel.asm	/^f0104fae:	b8 2e 52 10 f0       	mov    $0xf010522e,%eax$/;"	l
f0104fb3	obj/kern/kernel.asm	/^f0104fb3:	66 a3 98 43 2c f0    	mov    %ax,0xf02c4398$/;"	l
f0104fb9	obj/kern/kernel.asm	/^f0104fb9:	66 c7 05 9a 43 2c f0 	movw   $0x8,0xf02c439a$/;"	l
f0104fc0	obj/kern/kernel.asm	/^f0104fc0:	08 00 $/;"	l
f0104fc2	obj/kern/kernel.asm	/^f0104fc2:	c6 05 9c 43 2c f0 00 	movb   $0x0,0xf02c439c$/;"	l
f0104fc9	obj/kern/kernel.asm	/^f0104fc9:	c6 05 9d 43 2c f0 8e 	movb   $0x8e,0xf02c439d$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104fd3	obj/kern/kernel.asm	/^f0104fd3:	66 a3 9e 43 2c f0    	mov    %ax,0xf02c439e$/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	b8 38 52 10 f0       	mov    $0xf0105238,%eax$/;"	l
f0104fde	obj/kern/kernel.asm	/^f0104fde:	66 a3 a0 43 2c f0    	mov    %ax,0xf02c43a0$/;"	l
f0104fe4	obj/kern/kernel.asm	/^f0104fe4:	66 c7 05 a2 43 2c f0 	movw   $0x8,0xf02c43a2$/;"	l
f0104feb	obj/kern/kernel.asm	/^f0104feb:	08 00 $/;"	l
f0104fed	obj/kern/kernel.asm	/^f0104fed:	c6 05 a4 43 2c f0 00 	movb   $0x0,0xf02c43a4$/;"	l
f0104ff4	obj/kern/kernel.asm	/^f0104ff4:	c6 05 a5 43 2c f0 8e 	movb   $0x8e,0xf02c43a5$/;"	l
f0104ffb	obj/kern/kernel.asm	/^f0104ffb:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104ffe	obj/kern/kernel.asm	/^f0104ffe:	66 a3 a6 43 2c f0    	mov    %ax,0xf02c43a6$/;"	l
f0105004	obj/kern/kernel.asm	/^f0105004:	b8 42 52 10 f0       	mov    $0xf0105242,%eax$/;"	l
f0105009	obj/kern/kernel.asm	/^f0105009:	66 a3 a8 43 2c f0    	mov    %ax,0xf02c43a8$/;"	l
f010500f	obj/kern/kernel.asm	/^f010500f:	66 c7 05 aa 43 2c f0 	movw   $0x8,0xf02c43aa$/;"	l
f0105016	obj/kern/kernel.asm	/^f0105016:	08 00 $/;"	l
f0105018	obj/kern/kernel.asm	/^f0105018:	c6 05 ac 43 2c f0 00 	movb   $0x0,0xf02c43ac$/;"	l
f010501f	obj/kern/kernel.asm	/^f010501f:	c6 05 ad 43 2c f0 8e 	movb   $0x8e,0xf02c43ad$/;"	l
f0105026	obj/kern/kernel.asm	/^f0105026:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	66 a3 ae 43 2c f0    	mov    %ax,0xf02c43ae$/;"	l
f010502f	obj/kern/kernel.asm	/^f010502f:	b8 4c 52 10 f0       	mov    $0xf010524c,%eax$/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	66 a3 b0 43 2c f0    	mov    %ax,0xf02c43b0$/;"	l
f010503a	obj/kern/kernel.asm	/^f010503a:	66 c7 05 b2 43 2c f0 	movw   $0x8,0xf02c43b2$/;"	l
f0105041	obj/kern/kernel.asm	/^f0105041:	08 00 $/;"	l
f0105043	obj/kern/kernel.asm	/^f0105043:	c6 05 b4 43 2c f0 00 	movb   $0x0,0xf02c43b4$/;"	l
f010504a	obj/kern/kernel.asm	/^f010504a:	c6 05 b5 43 2c f0 8e 	movb   $0x8e,0xf02c43b5$/;"	l
f0105051	obj/kern/kernel.asm	/^f0105051:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105054	obj/kern/kernel.asm	/^f0105054:	66 a3 b6 43 2c f0    	mov    %ax,0xf02c43b6$/;"	l
f010505a	obj/kern/kernel.asm	/^f010505a:	b8 56 52 10 f0       	mov    $0xf0105256,%eax$/;"	l
f010505f	obj/kern/kernel.asm	/^f010505f:	66 a3 b8 43 2c f0    	mov    %ax,0xf02c43b8$/;"	l
f0105065	obj/kern/kernel.asm	/^f0105065:	66 c7 05 ba 43 2c f0 	movw   $0x8,0xf02c43ba$/;"	l
f010506c	obj/kern/kernel.asm	/^f010506c:	08 00 $/;"	l
f010506e	obj/kern/kernel.asm	/^f010506e:	c6 05 bc 43 2c f0 00 	movb   $0x0,0xf02c43bc$/;"	l
f0105075	obj/kern/kernel.asm	/^f0105075:	c6 05 bd 43 2c f0 8e 	movb   $0x8e,0xf02c43bd$/;"	l
f010507c	obj/kern/kernel.asm	/^f010507c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010507f	obj/kern/kernel.asm	/^f010507f:	66 a3 be 43 2c f0    	mov    %ax,0xf02c43be$/;"	l
f0105085	obj/kern/kernel.asm	/^f0105085:	b8 60 52 10 f0       	mov    $0xf0105260,%eax$/;"	l
f010508a	obj/kern/kernel.asm	/^f010508a:	66 a3 c0 43 2c f0    	mov    %ax,0xf02c43c0$/;"	l
f0105090	obj/kern/kernel.asm	/^f0105090:	66 c7 05 c2 43 2c f0 	movw   $0x8,0xf02c43c2$/;"	l
f0105097	obj/kern/kernel.asm	/^f0105097:	08 00 $/;"	l
f0105099	obj/kern/kernel.asm	/^f0105099:	c6 05 c4 43 2c f0 00 	movb   $0x0,0xf02c43c4$/;"	l
f01050a0	obj/kern/kernel.asm	/^f01050a0:	c6 05 c5 43 2c f0 8e 	movb   $0x8e,0xf02c43c5$/;"	l
f01050a7	obj/kern/kernel.asm	/^f01050a7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01050aa	obj/kern/kernel.asm	/^f01050aa:	66 a3 c6 43 2c f0    	mov    %ax,0xf02c43c6$/;"	l
f01050b0	obj/kern/kernel.asm	/^f01050b0:	b8 6a 52 10 f0       	mov    $0xf010526a,%eax$/;"	l
f01050b5	obj/kern/kernel.asm	/^f01050b5:	66 a3 c8 43 2c f0    	mov    %ax,0xf02c43c8$/;"	l
f01050bb	obj/kern/kernel.asm	/^f01050bb:	66 c7 05 ca 43 2c f0 	movw   $0x8,0xf02c43ca$/;"	l
f01050c2	obj/kern/kernel.asm	/^f01050c2:	08 00 $/;"	l
f01050c4	obj/kern/kernel.asm	/^f01050c4:	c6 05 cc 43 2c f0 00 	movb   $0x0,0xf02c43cc$/;"	l
f01050cb	obj/kern/kernel.asm	/^f01050cb:	c6 05 cd 43 2c f0 8e 	movb   $0x8e,0xf02c43cd$/;"	l
f01050d2	obj/kern/kernel.asm	/^f01050d2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01050d5	obj/kern/kernel.asm	/^f01050d5:	66 a3 ce 43 2c f0    	mov    %ax,0xf02c43ce$/;"	l
f01050db	obj/kern/kernel.asm	/^f01050db:	b8 74 52 10 f0       	mov    $0xf0105274,%eax$/;"	l
f01050e0	obj/kern/kernel.asm	/^f01050e0:	66 a3 d0 43 2c f0    	mov    %ax,0xf02c43d0$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6:	66 c7 05 d2 43 2c f0 	movw   $0x8,0xf02c43d2$/;"	l
f01050ed	obj/kern/kernel.asm	/^f01050ed:	08 00 $/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	c6 05 d4 43 2c f0 00 	movb   $0x0,0xf02c43d4$/;"	l
f01050f6	obj/kern/kernel.asm	/^f01050f6:	c6 05 d5 43 2c f0 8e 	movb   $0x8e,0xf02c43d5$/;"	l
f01050fd	obj/kern/kernel.asm	/^f01050fd:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105100	obj/kern/kernel.asm	/^f0105100:	66 a3 d6 43 2c f0    	mov    %ax,0xf02c43d6$/;"	l
f0105106	obj/kern/kernel.asm	/^f0105106:	b8 7e 52 10 f0       	mov    $0xf010527e,%eax$/;"	l
f010510b	obj/kern/kernel.asm	/^f010510b:	66 a3 d8 43 2c f0    	mov    %ax,0xf02c43d8$/;"	l
f0105111	obj/kern/kernel.asm	/^f0105111:	66 c7 05 da 43 2c f0 	movw   $0x8,0xf02c43da$/;"	l
f0105118	obj/kern/kernel.asm	/^f0105118:	08 00 $/;"	l
f010511a	obj/kern/kernel.asm	/^f010511a:	c6 05 dc 43 2c f0 00 	movb   $0x0,0xf02c43dc$/;"	l
f0105121	obj/kern/kernel.asm	/^f0105121:	c6 05 dd 43 2c f0 8e 	movb   $0x8e,0xf02c43dd$/;"	l
f0105128	obj/kern/kernel.asm	/^f0105128:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010512b	obj/kern/kernel.asm	/^f010512b:	66 a3 de 43 2c f0    	mov    %ax,0xf02c43de$/;"	l
f0105131	obj/kern/kernel.asm	/^f0105131:	e8 fa f4 ff ff       	call   f0104630 <trap_init_percpu>$/;"	l
f0105136	obj/kern/kernel.asm	/^f0105136:	c9                   	leave  $/;"	l
f0105137	obj/kern/kernel.asm	/^f0105137:	c3                   	ret    $/;"	l
f0105138	obj/kern/kernel.asm	/^f0105138 <DivideError>:$/;"	l
f0105138	obj/kern/kernel.asm	/^f0105138:	6a 00                	push   $0x0$/;"	l
f010513a	obj/kern/kernel.asm	/^f010513a:	6a 00                	push   $0x0$/;"	l
f010513c	obj/kern/kernel.asm	/^f010513c:	e9 46 01 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	90                   	nop$/;"	l
f0105142	obj/kern/kernel.asm	/^f0105142 <Debug>:$/;"	l
f0105142	obj/kern/kernel.asm	/^f0105142:	6a 00                	push   $0x0$/;"	l
f0105144	obj/kern/kernel.asm	/^f0105144:	6a 01                	push   $0x1$/;"	l
f0105146	obj/kern/kernel.asm	/^f0105146:	e9 3c 01 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f010514b	obj/kern/kernel.asm	/^f010514b:	90                   	nop$/;"	l
f010514c	obj/kern/kernel.asm	/^f010514c <NonMaskableInt>:$/;"	l
f010514c	obj/kern/kernel.asm	/^f010514c:	6a 00                	push   $0x0$/;"	l
f010514e	obj/kern/kernel.asm	/^f010514e:	6a 02                	push   $0x2$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	e9 32 01 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f0105155	obj/kern/kernel.asm	/^f0105155:	90                   	nop$/;"	l
f0105156	obj/kern/kernel.asm	/^f0105156 <BrkPoint>:$/;"	l
f0105156	obj/kern/kernel.asm	/^f0105156:	6a 00                	push   $0x0$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	6a 03                	push   $0x3$/;"	l
f010515a	obj/kern/kernel.asm	/^f010515a:	e9 28 01 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f010515f	obj/kern/kernel.asm	/^f010515f:	90                   	nop$/;"	l
f0105160	obj/kern/kernel.asm	/^f0105160 <Overflow>:$/;"	l
f0105160	obj/kern/kernel.asm	/^f0105160:	6a 00                	push   $0x0$/;"	l
f0105162	obj/kern/kernel.asm	/^f0105162:	6a 04                	push   $0x4$/;"	l
f0105164	obj/kern/kernel.asm	/^f0105164:	e9 1e 01 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f0105169	obj/kern/kernel.asm	/^f0105169:	90                   	nop$/;"	l
f010516a	obj/kern/kernel.asm	/^f010516a <RangeExceeded>:$/;"	l
f010516a	obj/kern/kernel.asm	/^f010516a:	6a 00                	push   $0x0$/;"	l
f010516c	obj/kern/kernel.asm	/^f010516c:	6a 05                	push   $0x5$/;"	l
f010516e	obj/kern/kernel.asm	/^f010516e:	e9 14 01 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f0105173	obj/kern/kernel.asm	/^f0105173:	90                   	nop$/;"	l
f0105174	obj/kern/kernel.asm	/^f0105174 <InvalidOpcode>:$/;"	l
f0105174	obj/kern/kernel.asm	/^f0105174:	6a 00                	push   $0x0$/;"	l
f0105176	obj/kern/kernel.asm	/^f0105176:	6a 06                	push   $0x6$/;"	l
f0105178	obj/kern/kernel.asm	/^f0105178:	e9 0a 01 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f010517d	obj/kern/kernel.asm	/^f010517d:	90                   	nop$/;"	l
f010517e	obj/kern/kernel.asm	/^f010517e <DeviceUnavail>:$/;"	l
f010517e	obj/kern/kernel.asm	/^f010517e:	6a 00                	push   $0x0$/;"	l
f0105180	obj/kern/kernel.asm	/^f0105180:	6a 07                	push   $0x7$/;"	l
f0105182	obj/kern/kernel.asm	/^f0105182:	e9 00 01 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f0105187	obj/kern/kernel.asm	/^f0105187:	90                   	nop$/;"	l
f0105188	obj/kern/kernel.asm	/^f0105188 <DoubleFault>:$/;"	l
f0105188	obj/kern/kernel.asm	/^f0105188:	6a 08                	push   $0x8$/;"	l
f010518a	obj/kern/kernel.asm	/^f010518a:	e9 f8 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f010518f	obj/kern/kernel.asm	/^f010518f:	90                   	nop$/;"	l
f0105190	obj/kern/kernel.asm	/^f0105190 <InvalidTSS>:$/;"	l
f0105190	obj/kern/kernel.asm	/^f0105190:	6a 0a                	push   $0xa$/;"	l
f0105192	obj/kern/kernel.asm	/^f0105192:	e9 f0 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f0105197	obj/kern/kernel.asm	/^f0105197:	90                   	nop$/;"	l
f0105198	obj/kern/kernel.asm	/^f0105198 <SegNotPresent>:$/;"	l
f0105198	obj/kern/kernel.asm	/^f0105198:	6a 0b                	push   $0xb$/;"	l
f010519a	obj/kern/kernel.asm	/^f010519a:	e9 e8 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f010519f	obj/kern/kernel.asm	/^f010519f:	90                   	nop$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0 <StackFault>:$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0:	6a 0c                	push   $0xc$/;"	l
f01051a2	obj/kern/kernel.asm	/^f01051a2:	e9 e0 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f01051a7	obj/kern/kernel.asm	/^f01051a7:	90                   	nop$/;"	l
f01051a8	obj/kern/kernel.asm	/^f01051a8 <GenProtection>:$/;"	l
f01051a8	obj/kern/kernel.asm	/^f01051a8:	6a 0d                	push   $0xd$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	e9 d8 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f01051af	obj/kern/kernel.asm	/^f01051af:	90                   	nop$/;"	l
f01051b0	obj/kern/kernel.asm	/^f01051b0 <PageFault>:$/;"	l
f01051b0	obj/kern/kernel.asm	/^f01051b0:	6a 0e                	push   $0xe$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	e9 d0 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f01051b7	obj/kern/kernel.asm	/^f01051b7:	90                   	nop$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8 <FloatingPtErr>:$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8:	6a 00                	push   $0x0$/;"	l
f01051ba	obj/kern/kernel.asm	/^f01051ba:	6a 10                	push   $0x10$/;"	l
f01051bc	obj/kern/kernel.asm	/^f01051bc:	e9 c6 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f01051c1	obj/kern/kernel.asm	/^f01051c1:	90                   	nop$/;"	l
f01051c2	obj/kern/kernel.asm	/^f01051c2 <AlignCheck>:$/;"	l
f01051c2	obj/kern/kernel.asm	/^f01051c2:	6a 11                	push   $0x11$/;"	l
f01051c4	obj/kern/kernel.asm	/^f01051c4:	e9 be 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f01051c9	obj/kern/kernel.asm	/^f01051c9:	90                   	nop$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca <MachineCheck>:$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	6a 00                	push   $0x0$/;"	l
f01051cc	obj/kern/kernel.asm	/^f01051cc:	6a 12                	push   $0x12$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce:	e9 b4 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f01051d3	obj/kern/kernel.asm	/^f01051d3:	90                   	nop$/;"	l
f01051d4	obj/kern/kernel.asm	/^f01051d4 <SIMDFloatErr>:$/;"	l
f01051d4	obj/kern/kernel.asm	/^f01051d4:	6a 00                	push   $0x0$/;"	l
f01051d6	obj/kern/kernel.asm	/^f01051d6:	6a 13                	push   $0x13$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	e9 aa 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f01051dd	obj/kern/kernel.asm	/^f01051dd:	90                   	nop$/;"	l
f01051de	obj/kern/kernel.asm	/^f01051de <SysCallTrapHandler>:$/;"	l
f01051de	obj/kern/kernel.asm	/^f01051de:	6a 00                	push   $0x0$/;"	l
f01051e0	obj/kern/kernel.asm	/^f01051e0:	6a 30                	push   $0x30$/;"	l
f01051e2	obj/kern/kernel.asm	/^f01051e2:	e9 a0 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f01051e7	obj/kern/kernel.asm	/^f01051e7:	90                   	nop$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8 <irq0>:$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	6a 00                	push   $0x0$/;"	l
f01051ea	obj/kern/kernel.asm	/^f01051ea:	6a 20                	push   $0x20$/;"	l
f01051ec	obj/kern/kernel.asm	/^f01051ec:	e9 96 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f01051f1	obj/kern/kernel.asm	/^f01051f1:	90                   	nop$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2 <irq1>:$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2:	6a 00                	push   $0x0$/;"	l
f01051f4	obj/kern/kernel.asm	/^f01051f4:	6a 21                	push   $0x21$/;"	l
f01051f6	obj/kern/kernel.asm	/^f01051f6:	e9 8c 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f01051fb	obj/kern/kernel.asm	/^f01051fb:	90                   	nop$/;"	l
f01051fc	obj/kern/kernel.asm	/^f01051fc <irq2>:$/;"	l
f01051fc	obj/kern/kernel.asm	/^f01051fc:	6a 00                	push   $0x0$/;"	l
f01051fe	obj/kern/kernel.asm	/^f01051fe:	6a 22                	push   $0x22$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	e9 82 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f0105205	obj/kern/kernel.asm	/^f0105205:	90                   	nop$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206 <irq3>:$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206:	6a 00                	push   $0x0$/;"	l
f0105208	obj/kern/kernel.asm	/^f0105208:	6a 23                	push   $0x23$/;"	l
f010520a	obj/kern/kernel.asm	/^f010520a:	e9 78 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f010520f	obj/kern/kernel.asm	/^f010520f:	90                   	nop$/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210 <irq4>:$/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210:	6a 00                	push   $0x0$/;"	l
f0105212	obj/kern/kernel.asm	/^f0105212:	6a 24                	push   $0x24$/;"	l
f0105214	obj/kern/kernel.asm	/^f0105214:	e9 6e 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f0105219	obj/kern/kernel.asm	/^f0105219:	90                   	nop$/;"	l
f010521a	obj/kern/kernel.asm	/^f010521a <irq5>:$/;"	l
f010521a	obj/kern/kernel.asm	/^f010521a:	6a 00                	push   $0x0$/;"	l
f010521c	obj/kern/kernel.asm	/^f010521c:	6a 25                	push   $0x25$/;"	l
f010521e	obj/kern/kernel.asm	/^f010521e:	e9 64 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f0105223	obj/kern/kernel.asm	/^f0105223:	90                   	nop$/;"	l
f0105224	obj/kern/kernel.asm	/^f0105224 <irq6>:$/;"	l
f0105224	obj/kern/kernel.asm	/^f0105224:	6a 00                	push   $0x0$/;"	l
f0105226	obj/kern/kernel.asm	/^f0105226:	6a 26                	push   $0x26$/;"	l
f0105228	obj/kern/kernel.asm	/^f0105228:	e9 5a 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f010522d	obj/kern/kernel.asm	/^f010522d:	90                   	nop$/;"	l
f010522e	obj/kern/kernel.asm	/^f010522e <irq7>:$/;"	l
f010522e	obj/kern/kernel.asm	/^f010522e:	6a 00                	push   $0x0$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	6a 27                	push   $0x27$/;"	l
f0105232	obj/kern/kernel.asm	/^f0105232:	e9 50 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f0105237	obj/kern/kernel.asm	/^f0105237:	90                   	nop$/;"	l
f0105238	obj/kern/kernel.asm	/^f0105238 <irq8>:$/;"	l
f0105238	obj/kern/kernel.asm	/^f0105238:	6a 00                	push   $0x0$/;"	l
f010523a	obj/kern/kernel.asm	/^f010523a:	6a 28                	push   $0x28$/;"	l
f010523c	obj/kern/kernel.asm	/^f010523c:	e9 46 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f0105241	obj/kern/kernel.asm	/^f0105241:	90                   	nop$/;"	l
f0105242	obj/kern/kernel.asm	/^f0105242 <irq9>:$/;"	l
f0105242	obj/kern/kernel.asm	/^f0105242:	6a 00                	push   $0x0$/;"	l
f0105244	obj/kern/kernel.asm	/^f0105244:	6a 29                	push   $0x29$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	e9 3c 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f010524b	obj/kern/kernel.asm	/^f010524b:	90                   	nop$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c <irq10>:$/;"	l
f010524c	obj/kern/kernel.asm	/^f010524c:	6a 00                	push   $0x0$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	6a 2a                	push   $0x2a$/;"	l
f0105250	obj/kern/kernel.asm	/^f0105250:	e9 32 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f0105255	obj/kern/kernel.asm	/^f0105255:	90                   	nop$/;"	l
f0105256	obj/kern/kernel.asm	/^f0105256 <irq11>:$/;"	l
f0105256	obj/kern/kernel.asm	/^f0105256:	6a 00                	push   $0x0$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	6a 2b                	push   $0x2b$/;"	l
f010525a	obj/kern/kernel.asm	/^f010525a:	e9 28 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f010525f	obj/kern/kernel.asm	/^f010525f:	90                   	nop$/;"	l
f0105260	obj/kern/kernel.asm	/^f0105260 <irq12>:$/;"	l
f0105260	obj/kern/kernel.asm	/^f0105260:	6a 00                	push   $0x0$/;"	l
f0105262	obj/kern/kernel.asm	/^f0105262:	6a 2c                	push   $0x2c$/;"	l
f0105264	obj/kern/kernel.asm	/^f0105264:	e9 1e 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f0105269	obj/kern/kernel.asm	/^f0105269:	90                   	nop$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a <irq13>:$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	6a 00                	push   $0x0$/;"	l
f010526c	obj/kern/kernel.asm	/^f010526c:	6a 2d                	push   $0x2d$/;"	l
f010526e	obj/kern/kernel.asm	/^f010526e:	e9 14 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f0105273	obj/kern/kernel.asm	/^f0105273:	90                   	nop$/;"	l
f0105274	obj/kern/kernel.asm	/^f0105274 <irq14>:$/;"	l
f0105274	obj/kern/kernel.asm	/^f0105274:	6a 00                	push   $0x0$/;"	l
f0105276	obj/kern/kernel.asm	/^f0105276:	6a 2e                	push   $0x2e$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	e9 0a 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f010527d	obj/kern/kernel.asm	/^f010527d:	90                   	nop$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e <irq15>:$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e:	6a 00                	push   $0x0$/;"	l
f0105280	obj/kern/kernel.asm	/^f0105280:	6a 2f                	push   $0x2f$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	e9 00 00 00 00       	jmp    f0105287 <_alltraps>$/;"	l
f0105287	obj/kern/kernel.asm	/^f0105287 <_alltraps>:$/;"	l
f0105287	obj/kern/kernel.asm	/^f0105287:	1e                   	push   %ds$/;"	l
f0105288	obj/kern/kernel.asm	/^f0105288:	06                   	push   %es$/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289:	60                   	pusha  $/;"	l
f010528a	obj/kern/kernel.asm	/^f010528a:	6a 10                	push   $0x10$/;"	l
f010528c	obj/kern/kernel.asm	/^f010528c:	1f                   	pop    %ds$/;"	l
f010528d	obj/kern/kernel.asm	/^f010528d:	6a 10                	push   $0x10$/;"	l
f010528f	obj/kern/kernel.asm	/^f010528f:	07                   	pop    %es$/;"	l
f0105290	obj/kern/kernel.asm	/^f0105290:	54                   	push   %esp$/;"	l
f0105291	obj/kern/kernel.asm	/^f0105291:	e8 ef f7 ff ff       	call   f0104a85 <trap>$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296 <print_priorities>:$/;"	l
f0105296	obj/kern/kernel.asm	/^f0105296:	55                   	push   %ebp$/;"	l
f0105297	obj/kern/kernel.asm	/^f0105297:	89 e5                	mov    %esp,%ebp$/;"	l
f0105299	obj/kern/kernel.asm	/^f0105299:	53                   	push   %ebx$/;"	l
f010529a	obj/kern/kernel.asm	/^f010529a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010529d	obj/kern/kernel.asm	/^f010529d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01052a2	obj/kern/kernel.asm	/^f01052a2:	89 d8                	mov    %ebx,%eax$/;"	l
f01052a4	obj/kern/kernel.asm	/^f01052a4:	03 05 48 42 2c f0    	add    0xf02c4248,%eax$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	81 78 48 01 10 00 00 	cmpl   $0x1001,0x48(%eax)$/;"	l
f01052b1	obj/kern/kernel.asm	/^f01052b1:	75 1a                	jne    f01052cd <print_priorities+0x37>$/;"	l
f01052b3	obj/kern/kernel.asm	/^f01052b3:	8b 50 54             	mov    0x54(%eax),%edx$/;"	l
f01052b6	obj/kern/kernel.asm	/^f01052b6:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01052ba	obj/kern/kernel.asm	/^f01052ba:	8b 40 7c             	mov    0x7c(%eax),%eax$/;"	l
f01052bd	obj/kern/kernel.asm	/^f01052bd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01052c1	obj/kern/kernel.asm	/^f01052c1:	c7 04 24 90 9a 10 f0 	movl   $0xf0109a90,(%esp)$/;"	l
f01052c8	obj/kern/kernel.asm	/^f01052c8:	e8 3d f3 ff ff       	call   f010460a <cprintf>$/;"	l
f01052cd	obj/kern/kernel.asm	/^f01052cd:	89 d8                	mov    %ebx,%eax$/;"	l
f01052cf	obj/kern/kernel.asm	/^f01052cf:	03 05 48 42 2c f0    	add    0xf02c4248,%eax$/;"	l
f01052d5	obj/kern/kernel.asm	/^f01052d5:	81 78 48 02 10 00 00 	cmpl   $0x1002,0x48(%eax)$/;"	l
f01052dc	obj/kern/kernel.asm	/^f01052dc:	75 1a                	jne    f01052f8 <print_priorities+0x62>$/;"	l
f01052de	obj/kern/kernel.asm	/^f01052de:	8b 50 54             	mov    0x54(%eax),%edx$/;"	l
f01052e1	obj/kern/kernel.asm	/^f01052e1:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01052e5	obj/kern/kernel.asm	/^f01052e5:	8b 40 7c             	mov    0x7c(%eax),%eax$/;"	l
f01052e8	obj/kern/kernel.asm	/^f01052e8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01052ec	obj/kern/kernel.asm	/^f01052ec:	c7 04 24 c4 9a 10 f0 	movl   $0xf0109ac4,(%esp)$/;"	l
f01052f3	obj/kern/kernel.asm	/^f01052f3:	e8 12 f3 ff ff       	call   f010460a <cprintf>$/;"	l
f01052f8	obj/kern/kernel.asm	/^f01052f8:	89 d8                	mov    %ebx,%eax$/;"	l
f01052fa	obj/kern/kernel.asm	/^f01052fa:	03 05 48 42 2c f0    	add    0xf02c4248,%eax$/;"	l
f0105300	obj/kern/kernel.asm	/^f0105300:	81 78 48 03 10 00 00 	cmpl   $0x1003,0x48(%eax)$/;"	l
f0105307	obj/kern/kernel.asm	/^f0105307:	75 1a                	jne    f0105323 <print_priorities+0x8d>$/;"	l
f0105309	obj/kern/kernel.asm	/^f0105309:	8b 50 54             	mov    0x54(%eax),%edx$/;"	l
f010530c	obj/kern/kernel.asm	/^f010530c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105310	obj/kern/kernel.asm	/^f0105310:	8b 40 7c             	mov    0x7c(%eax),%eax$/;"	l
f0105313	obj/kern/kernel.asm	/^f0105313:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105317	obj/kern/kernel.asm	/^f0105317:	c7 04 24 f8 9a 10 f0 	movl   $0xf0109af8,(%esp)$/;"	l
f010531e	obj/kern/kernel.asm	/^f010531e:	e8 e7 f2 ff ff       	call   f010460a <cprintf>$/;"	l
f0105323	obj/kern/kernel.asm	/^f0105323:	89 d8                	mov    %ebx,%eax$/;"	l
f0105325	obj/kern/kernel.asm	/^f0105325:	03 05 48 42 2c f0    	add    0xf02c4248,%eax$/;"	l
f010532b	obj/kern/kernel.asm	/^f010532b:	81 78 48 04 10 00 00 	cmpl   $0x1004,0x48(%eax)$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332:	75 1a                	jne    f010534e <print_priorities+0xb8>$/;"	l
f0105334	obj/kern/kernel.asm	/^f0105334:	8b 50 54             	mov    0x54(%eax),%edx$/;"	l
f0105337	obj/kern/kernel.asm	/^f0105337:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010533b	obj/kern/kernel.asm	/^f010533b:	8b 40 7c             	mov    0x7c(%eax),%eax$/;"	l
f010533e	obj/kern/kernel.asm	/^f010533e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105342	obj/kern/kernel.asm	/^f0105342:	c7 04 24 2c 9b 10 f0 	movl   $0xf0109b2c,(%esp)$/;"	l
f0105349	obj/kern/kernel.asm	/^f0105349:	e8 bc f2 ff ff       	call   f010460a <cprintf>$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	89 d8                	mov    %ebx,%eax$/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350:	03 05 48 42 2c f0    	add    0xf02c4248,%eax$/;"	l
f0105356	obj/kern/kernel.asm	/^f0105356:	81 78 48 05 10 00 00 	cmpl   $0x1005,0x48(%eax)$/;"	l
f010535d	obj/kern/kernel.asm	/^f010535d:	75 1a                	jne    f0105379 <print_priorities+0xe3>$/;"	l
f010535f	obj/kern/kernel.asm	/^f010535f:	8b 50 54             	mov    0x54(%eax),%edx$/;"	l
f0105362	obj/kern/kernel.asm	/^f0105362:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105366	obj/kern/kernel.asm	/^f0105366:	8b 40 7c             	mov    0x7c(%eax),%eax$/;"	l
f0105369	obj/kern/kernel.asm	/^f0105369:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	c7 04 24 60 9b 10 f0 	movl   $0xf0109b60,(%esp)$/;"	l
f0105374	obj/kern/kernel.asm	/^f0105374:	e8 91 f2 ff ff       	call   f010460a <cprintf>$/;"	l
f0105379	obj/kern/kernel.asm	/^f0105379:	83 eb 80             	sub    $0xffffff80,%ebx$/;"	l
f010537c	obj/kern/kernel.asm	/^f010537c:	81 fb 00 00 02 00    	cmp    $0x20000,%ebx$/;"	l
f0105382	obj/kern/kernel.asm	/^f0105382:	0f 85 1a ff ff ff    	jne    f01052a2 <print_priorities+0xc>$/;"	l
f0105388	obj/kern/kernel.asm	/^f0105388:	83 c4 14             	add    $0x14,%esp$/;"	l
f010538b	obj/kern/kernel.asm	/^f010538b:	5b                   	pop    %ebx$/;"	l
f010538c	obj/kern/kernel.asm	/^f010538c:	5d                   	pop    %ebp$/;"	l
f010538d	obj/kern/kernel.asm	/^f010538d:	c3                   	ret    $/;"	l
f010538e	obj/kern/kernel.asm	/^f010538e <sched_halt>:$/;"	l
f010538e	obj/kern/kernel.asm	/^f010538e:	55                   	push   %ebp$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105391	obj/kern/kernel.asm	/^f0105391:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105394	obj/kern/kernel.asm	/^f0105394:	8b 15 48 42 2c f0    	mov    0xf02c4248,%edx$/;"	l
f010539a	obj/kern/kernel.asm	/^f010539a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010539f	obj/kern/kernel.asm	/^f010539f:	8b 4a 54             	mov    0x54(%edx),%ecx$/;"	l
f01053a2	obj/kern/kernel.asm	/^f01053a2:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f01053a5	obj/kern/kernel.asm	/^f01053a5:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f01053a8	obj/kern/kernel.asm	/^f01053a8:	76 0f                	jbe    f01053b9 <sched_halt+0x2b>$/;"	l
f01053aa	obj/kern/kernel.asm	/^f01053aa:	83 c0 01             	add    $0x1,%eax$/;"	l
f01053ad	obj/kern/kernel.asm	/^f01053ad:	83 ea 80             	sub    $0xffffff80,%edx$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f01053b5	obj/kern/kernel.asm	/^f01053b5:	75 e8                	jne    f010539f <sched_halt+0x11>$/;"	l
f01053b7	obj/kern/kernel.asm	/^f01053b7:	eb 07                	jmp    f01053c0 <sched_halt+0x32>$/;"	l
f01053b9	obj/kern/kernel.asm	/^f01053b9:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f01053be	obj/kern/kernel.asm	/^f01053be:	75 1a                	jne    f01053da <sched_halt+0x4c>$/;"	l
f01053c0	obj/kern/kernel.asm	/^f01053c0:	c7 04 24 94 9b 10 f0 	movl   $0xf0109b94,(%esp)$/;"	l
f01053c7	obj/kern/kernel.asm	/^f01053c7:	e8 3e f2 ff ff       	call   f010460a <cprintf>$/;"	l
f01053cc	obj/kern/kernel.asm	/^f01053cc:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01053d3	obj/kern/kernel.asm	/^f01053d3:	e8 b6 b8 ff ff       	call   f0100c8e <monitor>$/;"	l
f01053d8	obj/kern/kernel.asm	/^f01053d8:	eb f2                	jmp    f01053cc <sched_halt+0x3e>$/;"	l
f01053da	obj/kern/kernel.asm	/^f01053da:	e8 6a 1b 00 00       	call   f0106f49 <cpunum>$/;"	l
f01053df	obj/kern/kernel.asm	/^f01053df:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01053e2	obj/kern/kernel.asm	/^f01053e2:	c7 80 28 50 2c f0 00 	movl   $0x0,-0xfd3afd8(%eax)$/;"	l
f01053e9	obj/kern/kernel.asm	/^f01053e9:	00 00 00 $/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	a1 a0 4e 2c f0       	mov    0xf02c4ea0,%eax$/;"	l
f01053f1	obj/kern/kernel.asm	/^f01053f1:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6:	77 20                	ja     f0105418 <sched_halt+0x8a>$/;"	l
f01053f8	obj/kern/kernel.asm	/^f01053f8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01053fc	obj/kern/kernel.asm	/^f01053fc:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f0105403	obj/kern/kernel.asm	/^f0105403:	f0 $/;"	l
f0105404	obj/kern/kernel.asm	/^f0105404:	c7 44 24 04 76 00 00 	movl   $0x76,0x4(%esp)$/;"	l
f010540b	obj/kern/kernel.asm	/^f010540b:	00 $/;"	l
f010540c	obj/kern/kernel.asm	/^f010540c:	c7 04 24 bd 9b 10 f0 	movl   $0xf0109bbd,(%esp)$/;"	l
f0105413	obj/kern/kernel.asm	/^f0105413:	e8 85 ac ff ff       	call   f010009d <_panic>$/;"	l
f0105418	obj/kern/kernel.asm	/^f0105418:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010541d	obj/kern/kernel.asm	/^f010541d:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0105420	obj/kern/kernel.asm	/^f0105420:	e8 24 1b 00 00       	call   f0106f49 <cpunum>$/;"	l
f0105425	obj/kern/kernel.asm	/^f0105425:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	81 c2 20 50 2c f0    	add    $0xf02c5020,%edx$/;"	l
f010542e	obj/kern/kernel.asm	/^f010542e:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0105433	obj/kern/kernel.asm	/^f0105433:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0105437	obj/kern/kernel.asm	/^f0105437:	c7 04 24 00 64 12 f0 	movl   $0xf0126400,(%esp)$/;"	l
f010543e	obj/kern/kernel.asm	/^f010543e:	e8 30 1e 00 00       	call   f0107273 <spin_unlock>$/;"	l
f0105443	obj/kern/kernel.asm	/^f0105443:	f3 90                	pause  $/;"	l
f0105445	obj/kern/kernel.asm	/^f0105445:	e8 ff 1a 00 00       	call   f0106f49 <cpunum>$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010544d	obj/kern/kernel.asm	/^f010544d:	8b 80 30 50 2c f0    	mov    -0xfd3afd0(%eax),%eax$/;"	l
f0105453	obj/kern/kernel.asm	/^f0105453:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0105458	obj/kern/kernel.asm	/^f0105458:	89 c4                	mov    %eax,%esp$/;"	l
f010545a	obj/kern/kernel.asm	/^f010545a:	6a 00                	push   $0x0$/;"	l
f010545c	obj/kern/kernel.asm	/^f010545c:	6a 00                	push   $0x0$/;"	l
f010545e	obj/kern/kernel.asm	/^f010545e:	fb                   	sti    $/;"	l
f010545f	obj/kern/kernel.asm	/^f010545f:	f4                   	hlt    $/;"	l
f0105460	obj/kern/kernel.asm	/^f0105460:	eb fd                	jmp    f010545f <sched_halt+0xd1>$/;"	l
f0105462	obj/kern/kernel.asm	/^f0105462:	c9                   	leave  $/;"	l
f0105463	obj/kern/kernel.asm	/^f0105463:	c3                   	ret    $/;"	l
f0105464	obj/kern/kernel.asm	/^f0105464 <sched_yield>:$/;"	l
f0105464	obj/kern/kernel.asm	/^f0105464:	55                   	push   %ebp$/;"	l
f0105465	obj/kern/kernel.asm	/^f0105465:	89 e5                	mov    %esp,%ebp$/;"	l
f0105467	obj/kern/kernel.asm	/^f0105467:	56                   	push   %esi$/;"	l
f0105468	obj/kern/kernel.asm	/^f0105468:	53                   	push   %ebx$/;"	l
f0105469	obj/kern/kernel.asm	/^f0105469:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010546c	obj/kern/kernel.asm	/^f010546c:	e8 d8 1a 00 00       	call   f0106f49 <cpunum>$/;"	l
f0105471	obj/kern/kernel.asm	/^f0105471:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105474	obj/kern/kernel.asm	/^f0105474:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0105479	obj/kern/kernel.asm	/^f0105479:	83 b8 28 50 2c f0 00 	cmpl   $0x0,-0xfd3afd8(%eax)$/;"	l
f0105480	obj/kern/kernel.asm	/^f0105480:	74 17                	je     f0105499 <sched_yield+0x35>$/;"	l
f0105482	obj/kern/kernel.asm	/^f0105482:	e8 c2 1a 00 00       	call   f0106f49 <cpunum>$/;"	l
f0105487	obj/kern/kernel.asm	/^f0105487:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010548a	obj/kern/kernel.asm	/^f010548a:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0105490	obj/kern/kernel.asm	/^f0105490:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f0105493	obj/kern/kernel.asm	/^f0105493:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0105499	obj/kern/kernel.asm	/^f0105499:	8b 35 48 42 2c f0    	mov    0xf02c4248,%esi$/;"	l
f010549f	obj/kern/kernel.asm	/^f010549f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01054a4	obj/kern/kernel.asm	/^f01054a4:	8d 0c 18             	lea    (%eax,%ebx,1),%ecx$/;"	l
f01054a7	obj/kern/kernel.asm	/^f01054a7:	89 ca                	mov    %ecx,%edx$/;"	l
f01054a9	obj/kern/kernel.asm	/^f01054a9:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f01054ac	obj/kern/kernel.asm	/^f01054ac:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f01054af	obj/kern/kernel.asm	/^f01054af:	01 d1                	add    %edx,%ecx$/;"	l
f01054b1	obj/kern/kernel.asm	/^f01054b1:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx$/;"	l
f01054b7	obj/kern/kernel.asm	/^f01054b7:	29 d1                	sub    %edx,%ecx$/;"	l
f01054b9	obj/kern/kernel.asm	/^f01054b9:	89 ca                	mov    %ecx,%edx$/;"	l
f01054bb	obj/kern/kernel.asm	/^f01054bb:	c1 e2 07             	shl    $0x7,%edx$/;"	l
f01054be	obj/kern/kernel.asm	/^f01054be:	01 f2                	add    %esi,%edx$/;"	l
f01054c0	obj/kern/kernel.asm	/^f01054c0:	83 7a 54 02          	cmpl   $0x2,0x54(%edx)$/;"	l
f01054c4	obj/kern/kernel.asm	/^f01054c4:	75 08                	jne    f01054ce <sched_yield+0x6a>$/;"	l
f01054c6	obj/kern/kernel.asm	/^f01054c6:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01054c9	obj/kern/kernel.asm	/^f01054c9:	e8 ff ee ff ff       	call   f01043cd <env_run>$/;"	l
f01054ce	obj/kern/kernel.asm	/^f01054ce:	83 c0 01             	add    $0x1,%eax$/;"	l
f01054d1	obj/kern/kernel.asm	/^f01054d1:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f01054d6	obj/kern/kernel.asm	/^f01054d6:	75 cc                	jne    f01054a4 <sched_yield+0x40>$/;"	l
f01054d8	obj/kern/kernel.asm	/^f01054d8:	e8 6c 1a 00 00       	call   f0106f49 <cpunum>$/;"	l
f01054dd	obj/kern/kernel.asm	/^f01054dd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01054e0	obj/kern/kernel.asm	/^f01054e0:	83 b8 28 50 2c f0 00 	cmpl   $0x0,-0xfd3afd8(%eax)$/;"	l
f01054e7	obj/kern/kernel.asm	/^f01054e7:	74 2a                	je     f0105513 <sched_yield+0xaf>$/;"	l
f01054e9	obj/kern/kernel.asm	/^f01054e9:	e8 5b 1a 00 00       	call   f0106f49 <cpunum>$/;"	l
f01054ee	obj/kern/kernel.asm	/^f01054ee:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01054f1	obj/kern/kernel.asm	/^f01054f1:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f01054f7	obj/kern/kernel.asm	/^f01054f7:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01054fb	obj/kern/kernel.asm	/^f01054fb:	75 16                	jne    f0105513 <sched_yield+0xaf>$/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	e8 47 1a 00 00       	call   f0106f49 <cpunum>$/;"	l
f0105502	obj/kern/kernel.asm	/^f0105502:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105505	obj/kern/kernel.asm	/^f0105505:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f010550b	obj/kern/kernel.asm	/^f010550b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	e8 ba ee ff ff       	call   f01043cd <env_run>$/;"	l
f0105513	obj/kern/kernel.asm	/^f0105513:	e8 76 fe ff ff       	call   f010538e <sched_halt>$/;"	l
f0105518	obj/kern/kernel.asm	/^f0105518:	83 c4 10             	add    $0x10,%esp$/;"	l
f010551b	obj/kern/kernel.asm	/^f010551b:	5b                   	pop    %ebx$/;"	l
f010551c	obj/kern/kernel.asm	/^f010551c:	5e                   	pop    %esi$/;"	l
f010551d	obj/kern/kernel.asm	/^f010551d:	5d                   	pop    %ebp$/;"	l
f010551e	obj/kern/kernel.asm	/^f010551e:	c3                   	ret    $/;"	l
f010551f	obj/kern/kernel.asm	/^f010551f:	90                   	nop$/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520 <is_valid_ipc_perm>:$/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520:	55                   	push   %ebp$/;"	l
f0105521	obj/kern/kernel.asm	/^f0105521:	89 e5                	mov    %esp,%ebp$/;"	l
f0105523	obj/kern/kernel.asm	/^f0105523:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105526	obj/kern/kernel.asm	/^f0105526:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f010552b	obj/kern/kernel.asm	/^f010552b:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f010552e	obj/kern/kernel.asm	/^f010552e:	0f 94 c0             	sete   %al$/;"	l
f0105531	obj/kern/kernel.asm	/^f0105531:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105534	obj/kern/kernel.asm	/^f0105534:	8d 44 00 ff          	lea    -0x1(%eax,%eax,1),%eax$/;"	l
f0105538	obj/kern/kernel.asm	/^f0105538:	5d                   	pop    %ebp$/;"	l
f0105539	obj/kern/kernel.asm	/^f0105539:	c3                   	ret    $/;"	l
f010553a	obj/kern/kernel.asm	/^f010553a <syscall>:$/;"	l
f010553a	obj/kern/kernel.asm	/^f010553a:	55                   	push   %ebp$/;"	l
f010553b	obj/kern/kernel.asm	/^f010553b:	89 e5                	mov    %esp,%ebp$/;"	l
f010553d	obj/kern/kernel.asm	/^f010553d:	57                   	push   %edi$/;"	l
f010553e	obj/kern/kernel.asm	/^f010553e:	56                   	push   %esi$/;"	l
f010553f	obj/kern/kernel.asm	/^f010553f:	53                   	push   %ebx$/;"	l
f0105540	obj/kern/kernel.asm	/^f0105540:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0105543	obj/kern/kernel.asm	/^f0105543:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105546	obj/kern/kernel.asm	/^f0105546:	83 f8 12             	cmp    $0x12,%eax$/;"	l
f0105549	obj/kern/kernel.asm	/^f0105549:	0f 87 58 07 00 00    	ja     f0105ca7 <syscall+0x76d>$/;"	l
f010554f	obj/kern/kernel.asm	/^f010554f:	ff 24 85 c0 9c 10 f0 	jmp    *-0xfef6340(,%eax,4)$/;"	l
f0105556	obj/kern/kernel.asm	/^f0105556:	e8 ee 19 00 00       	call   f0106f49 <cpunum>$/;"	l
f010555b	obj/kern/kernel.asm	/^f010555b:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105562	obj/kern/kernel.asm	/^f0105562:	00 $/;"	l
f0105563	obj/kern/kernel.asm	/^f0105563:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0105566	obj/kern/kernel.asm	/^f0105566:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f010556a	obj/kern/kernel.asm	/^f010556a:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010556d	obj/kern/kernel.asm	/^f010556d:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105571	obj/kern/kernel.asm	/^f0105571:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105574	obj/kern/kernel.asm	/^f0105574:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f010557a	obj/kern/kernel.asm	/^f010557a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010557d	obj/kern/kernel.asm	/^f010557d:	e8 e0 e5 ff ff       	call   f0103b62 <user_mem_assert>$/;"	l
f0105582	obj/kern/kernel.asm	/^f0105582:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105585	obj/kern/kernel.asm	/^f0105585:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105589	obj/kern/kernel.asm	/^f0105589:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010558c	obj/kern/kernel.asm	/^f010558c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	c7 04 24 ca 9b 10 f0 	movl   $0xf0109bca,(%esp)$/;"	l
f0105597	obj/kern/kernel.asm	/^f0105597:	e8 6e f0 ff ff       	call   f010460a <cprintf>$/;"	l
f010559c	obj/kern/kernel.asm	/^f010559c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01055a1	obj/kern/kernel.asm	/^f01055a1:	e9 43 07 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f01055a6	obj/kern/kernel.asm	/^f01055a6:	e8 25 b1 ff ff       	call   f01006d0 <cons_getc>$/;"	l
f01055ab	obj/kern/kernel.asm	/^f01055ab:	e9 39 07 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f01055b0	obj/kern/kernel.asm	/^f01055b0:	e8 94 19 00 00       	call   f0106f49 <cpunum>$/;"	l
f01055b5	obj/kern/kernel.asm	/^f01055b5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01055b8	obj/kern/kernel.asm	/^f01055b8:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f01055be	obj/kern/kernel.asm	/^f01055be:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01055c1	obj/kern/kernel.asm	/^f01055c1:	e9 23 07 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f01055c6	obj/kern/kernel.asm	/^f01055c6:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01055cd	obj/kern/kernel.asm	/^f01055cd:	00 $/;"	l
f01055ce	obj/kern/kernel.asm	/^f01055ce:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01055d1	obj/kern/kernel.asm	/^f01055d1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01055d5	obj/kern/kernel.asm	/^f01055d5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01055d8	obj/kern/kernel.asm	/^f01055d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01055db	obj/kern/kernel.asm	/^f01055db:	e8 76 e6 ff ff       	call   f0103c56 <envid2env>$/;"	l
f01055e0	obj/kern/kernel.asm	/^f01055e0:	85 c0                	test   %eax,%eax$/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2:	78 69                	js     f010564d <syscall+0x113>$/;"	l
f01055e4	obj/kern/kernel.asm	/^f01055e4:	e8 60 19 00 00       	call   f0106f49 <cpunum>$/;"	l
f01055e9	obj/kern/kernel.asm	/^f01055e9:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01055ec	obj/kern/kernel.asm	/^f01055ec:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01055ef	obj/kern/kernel.asm	/^f01055ef:	39 90 28 50 2c f0    	cmp    %edx,-0xfd3afd8(%eax)$/;"	l
f01055f5	obj/kern/kernel.asm	/^f01055f5:	75 23                	jne    f010561a <syscall+0xe0>$/;"	l
f01055f7	obj/kern/kernel.asm	/^f01055f7:	e8 4d 19 00 00       	call   f0106f49 <cpunum>$/;"	l
f01055fc	obj/kern/kernel.asm	/^f01055fc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01055ff	obj/kern/kernel.asm	/^f01055ff:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0105605	obj/kern/kernel.asm	/^f0105605:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105608	obj/kern/kernel.asm	/^f0105608:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010560c	obj/kern/kernel.asm	/^f010560c:	c7 04 24 cf 9b 10 f0 	movl   $0xf0109bcf,(%esp)$/;"	l
f0105613	obj/kern/kernel.asm	/^f0105613:	e8 f2 ef ff ff       	call   f010460a <cprintf>$/;"	l
f0105618	obj/kern/kernel.asm	/^f0105618:	eb 28                	jmp    f0105642 <syscall+0x108>$/;"	l
f010561a	obj/kern/kernel.asm	/^f010561a:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f010561d	obj/kern/kernel.asm	/^f010561d:	e8 27 19 00 00       	call   f0106f49 <cpunum>$/;"	l
f0105622	obj/kern/kernel.asm	/^f0105622:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105629	obj/kern/kernel.asm	/^f0105629:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f010562f	obj/kern/kernel.asm	/^f010562f:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105632	obj/kern/kernel.asm	/^f0105632:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105636	obj/kern/kernel.asm	/^f0105636:	c7 04 24 ea 9b 10 f0 	movl   $0xf0109bea,(%esp)$/;"	l
f010563d	obj/kern/kernel.asm	/^f010563d:	e8 c8 ef ff ff       	call   f010460a <cprintf>$/;"	l
f0105642	obj/kern/kernel.asm	/^f0105642:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105645	obj/kern/kernel.asm	/^f0105645:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105648	obj/kern/kernel.asm	/^f0105648:	e8 df ec ff ff       	call   f010432c <env_destroy>$/;"	l
f010564d	obj/kern/kernel.asm	/^f010564d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105652	obj/kern/kernel.asm	/^f0105652:	e9 92 06 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	e8 08 fe ff ff       	call   f0105464 <sched_yield>$/;"	l
f010565c	obj/kern/kernel.asm	/^f010565c:	e8 e8 18 00 00       	call   f0106f49 <cpunum>$/;"	l
f0105661	obj/kern/kernel.asm	/^f0105661:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f010566a	obj/kern/kernel.asm	/^f010566a:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f010566d	obj/kern/kernel.asm	/^f010566d:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0105672	obj/kern/kernel.asm	/^f0105672:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105676	obj/kern/kernel.asm	/^f0105676:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105679	obj/kern/kernel.asm	/^f0105679:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010567c	obj/kern/kernel.asm	/^f010567c:	e8 20 e7 ff ff       	call   f0103da1 <env_alloc>$/;"	l
f0105681	obj/kern/kernel.asm	/^f0105681:	89 c2                	mov    %eax,%edx$/;"	l
f0105683	obj/kern/kernel.asm	/^f0105683:	85 c0                	test   %eax,%eax$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	78 45                	js     f01056cc <syscall+0x192>$/;"	l
f0105687	obj/kern/kernel.asm	/^f0105687:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f010568a	obj/kern/kernel.asm	/^f010568a:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	e8 b3 18 00 00       	call   f0106f49 <cpunum>$/;"	l
f0105696	obj/kern/kernel.asm	/^f0105696:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105699	obj/kern/kernel.asm	/^f0105699:	8b b0 28 50 2c f0    	mov    -0xfd3afd8(%eax),%esi$/;"	l
f010569f	obj/kern/kernel.asm	/^f010569f:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01056a4	obj/kern/kernel.asm	/^f01056a4:	89 df                	mov    %ebx,%edi$/;"	l
f01056a6	obj/kern/kernel.asm	/^f01056a6:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01056a8	obj/kern/kernel.asm	/^f01056a8:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01056ab	obj/kern/kernel.asm	/^f01056ab:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)$/;"	l
f01056b2	obj/kern/kernel.asm	/^f01056b2:	e8 92 18 00 00       	call   f0106f49 <cpunum>$/;"	l
f01056b7	obj/kern/kernel.asm	/^f01056b7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01056ba	obj/kern/kernel.asm	/^f01056ba:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f01056c0	obj/kern/kernel.asm	/^f01056c0:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01056c3	obj/kern/kernel.asm	/^f01056c3:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f01056c6	obj/kern/kernel.asm	/^f01056c6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01056c9	obj/kern/kernel.asm	/^f01056c9:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f01056cc	obj/kern/kernel.asm	/^f01056cc:	89 d0                	mov    %edx,%eax$/;"	l
f01056ce	obj/kern/kernel.asm	/^f01056ce:	e9 16 06 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f01056d3	obj/kern/kernel.asm	/^f01056d3:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f01056da	obj/kern/kernel.asm	/^f01056da:	77 7f                	ja     f010575b <syscall+0x221>$/;"	l
f01056dc	obj/kern/kernel.asm	/^f01056dc:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f01056e3	obj/kern/kernel.asm	/^f01056e3:	75 7d                	jne    f0105762 <syscall+0x228>$/;"	l
f01056e5	obj/kern/kernel.asm	/^f01056e5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01056e8	obj/kern/kernel.asm	/^f01056e8:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f01056ed	obj/kern/kernel.asm	/^f01056ed:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f01056f0	obj/kern/kernel.asm	/^f01056f0:	75 77                	jne    f0105769 <syscall+0x22f>$/;"	l
f01056f2	obj/kern/kernel.asm	/^f01056f2:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01056f9	obj/kern/kernel.asm	/^f01056f9:	00 $/;"	l
f01056fa	obj/kern/kernel.asm	/^f01056fa:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01056fd	obj/kern/kernel.asm	/^f01056fd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105701	obj/kern/kernel.asm	/^f0105701:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105704	obj/kern/kernel.asm	/^f0105704:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105707	obj/kern/kernel.asm	/^f0105707:	e8 4a e5 ff ff       	call   f0103c56 <envid2env>$/;"	l
f010570c	obj/kern/kernel.asm	/^f010570c:	85 c0                	test   %eax,%eax$/;"	l
f010570e	obj/kern/kernel.asm	/^f010570e:	78 60                	js     f0105770 <syscall+0x236>$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0105717	obj/kern/kernel.asm	/^f0105717:	e8 82 bc ff ff       	call   f010139e <page_alloc>$/;"	l
f010571c	obj/kern/kernel.asm	/^f010571c:	89 c3                	mov    %eax,%ebx$/;"	l
f010571e	obj/kern/kernel.asm	/^f010571e:	85 c0                	test   %eax,%eax$/;"	l
f0105720	obj/kern/kernel.asm	/^f0105720:	74 55                	je     f0105777 <syscall+0x23d>$/;"	l
f0105722	obj/kern/kernel.asm	/^f0105722:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105725	obj/kern/kernel.asm	/^f0105725:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105729	obj/kern/kernel.asm	/^f0105729:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010572c	obj/kern/kernel.asm	/^f010572c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105730	obj/kern/kernel.asm	/^f0105730:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105734	obj/kern/kernel.asm	/^f0105734:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105737	obj/kern/kernel.asm	/^f0105737:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
f010573a	obj/kern/kernel.asm	/^f010573a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	e8 2c c1 ff ff       	call   f010186e <page_insert>$/;"	l
f0105742	obj/kern/kernel.asm	/^f0105742:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105747	obj/kern/kernel.asm	/^f0105747:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f010574a	obj/kern/kernel.asm	/^f010574a:	75 30                	jne    f010577c <syscall+0x242>$/;"	l
f010574c	obj/kern/kernel.asm	/^f010574c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010574f	obj/kern/kernel.asm	/^f010574f:	e8 cd bc ff ff       	call   f0101421 <page_free>$/;"	l
f0105754	obj/kern/kernel.asm	/^f0105754:	ba fc ff ff ff       	mov    $0xfffffffc,%edx$/;"	l
f0105759	obj/kern/kernel.asm	/^f0105759:	eb 21                	jmp    f010577c <syscall+0x242>$/;"	l
f010575b	obj/kern/kernel.asm	/^f010575b:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105760	obj/kern/kernel.asm	/^f0105760:	eb 1a                	jmp    f010577c <syscall+0x242>$/;"	l
f0105762	obj/kern/kernel.asm	/^f0105762:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105767	obj/kern/kernel.asm	/^f0105767:	eb 13                	jmp    f010577c <syscall+0x242>$/;"	l
f0105769	obj/kern/kernel.asm	/^f0105769:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f010576e	obj/kern/kernel.asm	/^f010576e:	eb 0c                	jmp    f010577c <syscall+0x242>$/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	ba fe ff ff ff       	mov    $0xfffffffe,%edx$/;"	l
f0105775	obj/kern/kernel.asm	/^f0105775:	eb 05                	jmp    f010577c <syscall+0x242>$/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	ba fc ff ff ff       	mov    $0xfffffffc,%edx$/;"	l
f010577c	obj/kern/kernel.asm	/^f010577c:	89 d0                	mov    %edx,%eax$/;"	l
f010577e	obj/kern/kernel.asm	/^f010577e:	e9 66 05 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105783	obj/kern/kernel.asm	/^f0105783:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	77 09                	ja     f0105795 <syscall+0x25b>$/;"	l
f010578c	obj/kern/kernel.asm	/^f010578c:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0105793	obj/kern/kernel.asm	/^f0105793:	74 1c                	je     f01057b1 <syscall+0x277>$/;"	l
f0105795	obj/kern/kernel.asm	/^f0105795:	c7 44 24 08 02 9c 10 	movl   $0xf0109c02,0x8(%esp)$/;"	l
f010579c	obj/kern/kernel.asm	/^f010579c:	f0 $/;"	l
f010579d	obj/kern/kernel.asm	/^f010579d:	c7 44 24 04 11 01 00 	movl   $0x111,0x4(%esp)$/;"	l
f01057a4	obj/kern/kernel.asm	/^f01057a4:	00 $/;"	l
f01057a5	obj/kern/kernel.asm	/^f01057a5:	c7 04 24 0a 9c 10 f0 	movl   $0xf0109c0a,(%esp)$/;"	l
f01057ac	obj/kern/kernel.asm	/^f01057ac:	e8 ec a8 ff ff       	call   f010009d <_panic>$/;"	l
f01057b1	obj/kern/kernel.asm	/^f01057b1:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f01057b8	obj/kern/kernel.asm	/^f01057b8:	77 09                	ja     f01057c3 <syscall+0x289>$/;"	l
f01057ba	obj/kern/kernel.asm	/^f01057ba:	f7 45 18 ff 0f 00 00 	testl  $0xfff,0x18(%ebp)$/;"	l
f01057c1	obj/kern/kernel.asm	/^f01057c1:	74 1c                	je     f01057df <syscall+0x2a5>$/;"	l
f01057c3	obj/kern/kernel.asm	/^f01057c3:	c7 44 24 08 19 9c 10 	movl   $0xf0109c19,0x8(%esp)$/;"	l
f01057ca	obj/kern/kernel.asm	/^f01057ca:	f0 $/;"	l
f01057cb	obj/kern/kernel.asm	/^f01057cb:	c7 44 24 04 16 01 00 	movl   $0x116,0x4(%esp)$/;"	l
f01057d2	obj/kern/kernel.asm	/^f01057d2:	00 $/;"	l
f01057d3	obj/kern/kernel.asm	/^f01057d3:	c7 04 24 0a 9c 10 f0 	movl   $0xf0109c0a,(%esp)$/;"	l
f01057da	obj/kern/kernel.asm	/^f01057da:	e8 be a8 ff ff       	call   f010009d <_panic>$/;"	l
f01057df	obj/kern/kernel.asm	/^f01057df:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f01057e2	obj/kern/kernel.asm	/^f01057e2:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f01057e7	obj/kern/kernel.asm	/^f01057e7:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f01057ea	obj/kern/kernel.asm	/^f01057ea:	74 1c                	je     f0105808 <syscall+0x2ce>$/;"	l
f01057ec	obj/kern/kernel.asm	/^f01057ec:	c7 44 24 08 21 9c 10 	movl   $0xf0109c21,0x8(%esp)$/;"	l
f01057f3	obj/kern/kernel.asm	/^f01057f3:	f0 $/;"	l
f01057f4	obj/kern/kernel.asm	/^f01057f4:	c7 44 24 04 1a 01 00 	movl   $0x11a,0x4(%esp)$/;"	l
f01057fb	obj/kern/kernel.asm	/^f01057fb:	00 $/;"	l
f01057fc	obj/kern/kernel.asm	/^f01057fc:	c7 04 24 0a 9c 10 f0 	movl   $0xf0109c0a,(%esp)$/;"	l
f0105803	obj/kern/kernel.asm	/^f0105803:	e8 95 a8 ff ff       	call   f010009d <_panic>$/;"	l
f0105808	obj/kern/kernel.asm	/^f0105808:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010580f	obj/kern/kernel.asm	/^f010580f:	00 $/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0105813	obj/kern/kernel.asm	/^f0105813:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105817	obj/kern/kernel.asm	/^f0105817:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010581a	obj/kern/kernel.asm	/^f010581a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010581d	obj/kern/kernel.asm	/^f010581d:	e8 34 e4 ff ff       	call   f0103c56 <envid2env>$/;"	l
f0105822	obj/kern/kernel.asm	/^f0105822:	85 c0                	test   %eax,%eax$/;"	l
f0105824	obj/kern/kernel.asm	/^f0105824:	78 1e                	js     f0105844 <syscall+0x30a>$/;"	l
f0105826	obj/kern/kernel.asm	/^f0105826:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010582d	obj/kern/kernel.asm	/^f010582d:	00 $/;"	l
f010582e	obj/kern/kernel.asm	/^f010582e:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0105831	obj/kern/kernel.asm	/^f0105831:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105835	obj/kern/kernel.asm	/^f0105835:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105838	obj/kern/kernel.asm	/^f0105838:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010583b	obj/kern/kernel.asm	/^f010583b:	e8 16 e4 ff ff       	call   f0103c56 <envid2env>$/;"	l
f0105840	obj/kern/kernel.asm	/^f0105840:	85 c0                	test   %eax,%eax$/;"	l
f0105842	obj/kern/kernel.asm	/^f0105842:	79 1c                	jns    f0105860 <syscall+0x326>$/;"	l
f0105844	obj/kern/kernel.asm	/^f0105844:	c7 44 24 08 29 9c 10 	movl   $0xf0109c29,0x8(%esp)$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	f0 $/;"	l
f010584c	obj/kern/kernel.asm	/^f010584c:	c7 44 24 04 1e 01 00 	movl   $0x11e,0x4(%esp)$/;"	l
f0105853	obj/kern/kernel.asm	/^f0105853:	00 $/;"	l
f0105854	obj/kern/kernel.asm	/^f0105854:	c7 04 24 0a 9c 10 f0 	movl   $0xf0109c0a,(%esp)$/;"	l
f010585b	obj/kern/kernel.asm	/^f010585b:	e8 3d a8 ff ff       	call   f010009d <_panic>$/;"	l
f0105860	obj/kern/kernel.asm	/^f0105860:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105863	obj/kern/kernel.asm	/^f0105863:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105867	obj/kern/kernel.asm	/^f0105867:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010586a	obj/kern/kernel.asm	/^f010586a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010586e	obj/kern/kernel.asm	/^f010586e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105871	obj/kern/kernel.asm	/^f0105871:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
f0105874	obj/kern/kernel.asm	/^f0105874:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105877	obj/kern/kernel.asm	/^f0105877:	e8 f2 be ff ff       	call   f010176e <page_lookup>$/;"	l
f010587c	obj/kern/kernel.asm	/^f010587c:	85 c0                	test   %eax,%eax$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	75 1c                	jne    f010589c <syscall+0x362>$/;"	l
f0105880	obj/kern/kernel.asm	/^f0105880:	c7 44 24 08 31 9c 10 	movl   $0xf0109c31,0x8(%esp)$/;"	l
f0105887	obj/kern/kernel.asm	/^f0105887:	f0 $/;"	l
f0105888	obj/kern/kernel.asm	/^f0105888:	c7 44 24 04 25 01 00 	movl   $0x125,0x4(%esp)$/;"	l
f010588f	obj/kern/kernel.asm	/^f010588f:	00 $/;"	l
f0105890	obj/kern/kernel.asm	/^f0105890:	c7 04 24 0a 9c 10 f0 	movl   $0xf0109c0a,(%esp)$/;"	l
f0105897	obj/kern/kernel.asm	/^f0105897:	e8 01 a8 ff ff       	call   f010009d <_panic>$/;"	l
f010589c	obj/kern/kernel.asm	/^f010589c:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f01058a0	obj/kern/kernel.asm	/^f01058a0:	74 24                	je     f01058c6 <syscall+0x38c>$/;"	l
f01058a2	obj/kern/kernel.asm	/^f01058a2:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01058a5	obj/kern/kernel.asm	/^f01058a5:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f01058a8	obj/kern/kernel.asm	/^f01058a8:	75 1c                	jne    f01058c6 <syscall+0x38c>$/;"	l
f01058aa	obj/kern/kernel.asm	/^f01058aa:	c7 44 24 08 39 9c 10 	movl   $0xf0109c39,0x8(%esp)$/;"	l
f01058b1	obj/kern/kernel.asm	/^f01058b1:	f0 $/;"	l
f01058b2	obj/kern/kernel.asm	/^f01058b2:	c7 44 24 04 2a 01 00 	movl   $0x12a,0x4(%esp)$/;"	l
f01058b9	obj/kern/kernel.asm	/^f01058b9:	00 $/;"	l
f01058ba	obj/kern/kernel.asm	/^f01058ba:	c7 04 24 0a 9c 10 f0 	movl   $0xf0109c0a,(%esp)$/;"	l
f01058c1	obj/kern/kernel.asm	/^f01058c1:	e8 d7 a7 ff ff       	call   f010009d <_panic>$/;"	l
f01058c6	obj/kern/kernel.asm	/^f01058c6:	8b 75 1c             	mov    0x1c(%ebp),%esi$/;"	l
f01058c9	obj/kern/kernel.asm	/^f01058c9:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01058cd	obj/kern/kernel.asm	/^f01058cd:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f01058d0	obj/kern/kernel.asm	/^f01058d0:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f01058d4	obj/kern/kernel.asm	/^f01058d4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01058d8	obj/kern/kernel.asm	/^f01058d8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01058db	obj/kern/kernel.asm	/^f01058db:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
f01058de	obj/kern/kernel.asm	/^f01058de:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01058e1	obj/kern/kernel.asm	/^f01058e1:	e8 88 bf ff ff       	call   f010186e <page_insert>$/;"	l
f01058e6	obj/kern/kernel.asm	/^f01058e6:	85 c0                	test   %eax,%eax$/;"	l
f01058e8	obj/kern/kernel.asm	/^f01058e8:	74 1c                	je     f0105906 <syscall+0x3cc>$/;"	l
f01058ea	obj/kern/kernel.asm	/^f01058ea:	c7 44 24 08 41 9c 10 	movl   $0xf0109c41,0x8(%esp)$/;"	l
f01058f1	obj/kern/kernel.asm	/^f01058f1:	f0 $/;"	l
f01058f2	obj/kern/kernel.asm	/^f01058f2:	c7 44 24 04 2f 01 00 	movl   $0x12f,0x4(%esp)$/;"	l
f01058f9	obj/kern/kernel.asm	/^f01058f9:	00 $/;"	l
f01058fa	obj/kern/kernel.asm	/^f01058fa:	c7 04 24 0a 9c 10 f0 	movl   $0xf0109c0a,(%esp)$/;"	l
f0105901	obj/kern/kernel.asm	/^f0105901:	e8 97 a7 ff ff       	call   f010009d <_panic>$/;"	l
f0105906	obj/kern/kernel.asm	/^f0105906:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010590b	obj/kern/kernel.asm	/^f010590b:	e9 d9 03 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105910	obj/kern/kernel.asm	/^f0105910:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0105917	obj/kern/kernel.asm	/^f0105917:	77 46                	ja     f010595f <syscall+0x425>$/;"	l
f0105919	obj/kern/kernel.asm	/^f0105919:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0105920	obj/kern/kernel.asm	/^f0105920:	75 47                	jne    f0105969 <syscall+0x42f>$/;"	l
f0105922	obj/kern/kernel.asm	/^f0105922:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105929	obj/kern/kernel.asm	/^f0105929:	00 $/;"	l
f010592a	obj/kern/kernel.asm	/^f010592a:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010592d	obj/kern/kernel.asm	/^f010592d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105931	obj/kern/kernel.asm	/^f0105931:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105934	obj/kern/kernel.asm	/^f0105934:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105937	obj/kern/kernel.asm	/^f0105937:	e8 1a e3 ff ff       	call   f0103c56 <envid2env>$/;"	l
f010593c	obj/kern/kernel.asm	/^f010593c:	85 c0                	test   %eax,%eax$/;"	l
f010593e	obj/kern/kernel.asm	/^f010593e:	78 33                	js     f0105973 <syscall+0x439>$/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105943	obj/kern/kernel.asm	/^f0105943:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105947	obj/kern/kernel.asm	/^f0105947:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010594a	obj/kern/kernel.asm	/^f010594a:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
f010594d	obj/kern/kernel.asm	/^f010594d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105950	obj/kern/kernel.asm	/^f0105950:	e8 ca be ff ff       	call   f010181f <page_remove>$/;"	l
f0105955	obj/kern/kernel.asm	/^f0105955:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010595a	obj/kern/kernel.asm	/^f010595a:	e9 8a 03 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f010595f	obj/kern/kernel.asm	/^f010595f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105964	obj/kern/kernel.asm	/^f0105964:	e9 80 03 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105969	obj/kern/kernel.asm	/^f0105969:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010596e	obj/kern/kernel.asm	/^f010596e:	e9 76 03 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105973	obj/kern/kernel.asm	/^f0105973:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0105978	obj/kern/kernel.asm	/^f0105978:	e9 6c 03 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f010597d	obj/kern/kernel.asm	/^f010597d:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105980	obj/kern/kernel.asm	/^f0105980:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105987	obj/kern/kernel.asm	/^f0105987:	00 $/;"	l
f0105988	obj/kern/kernel.asm	/^f0105988:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010598b	obj/kern/kernel.asm	/^f010598b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010598f	obj/kern/kernel.asm	/^f010598f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105992	obj/kern/kernel.asm	/^f0105992:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105995	obj/kern/kernel.asm	/^f0105995:	e8 bc e2 ff ff       	call   f0103c56 <envid2env>$/;"	l
f010599a	obj/kern/kernel.asm	/^f010599a:	85 c0                	test   %eax,%eax$/;"	l
f010599c	obj/kern/kernel.asm	/^f010599c:	78 1d                	js     f01059bb <syscall+0x481>$/;"	l
f010599e	obj/kern/kernel.asm	/^f010599e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01059a1	obj/kern/kernel.asm	/^f01059a1:	81 48 38 00 02 00 00 	orl    $0x200,0x38(%eax)$/;"	l
f01059a8	obj/kern/kernel.asm	/^f01059a8:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01059ad	obj/kern/kernel.asm	/^f01059ad:	89 c7                	mov    %eax,%edi$/;"	l
f01059af	obj/kern/kernel.asm	/^f01059af:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01059b1	obj/kern/kernel.asm	/^f01059b1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01059b6	obj/kern/kernel.asm	/^f01059b6:	e9 2e 03 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f01059bb	obj/kern/kernel.asm	/^f01059bb:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01059c0	obj/kern/kernel.asm	/^f01059c0:	e9 24 03 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f01059c5	obj/kern/kernel.asm	/^f01059c5:	83 7d 10 04          	cmpl   $0x4,0x10(%ebp)$/;"	l
f01059c9	obj/kern/kernel.asm	/^f01059c9:	74 06                	je     f01059d1 <syscall+0x497>$/;"	l
f01059cb	obj/kern/kernel.asm	/^f01059cb:	83 7d 10 02          	cmpl   $0x2,0x10(%ebp)$/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	75 31                	jne    f0105a02 <syscall+0x4c8>$/;"	l
f01059d1	obj/kern/kernel.asm	/^f01059d1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01059d8	obj/kern/kernel.asm	/^f01059d8:	00 $/;"	l
f01059d9	obj/kern/kernel.asm	/^f01059d9:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01059dc	obj/kern/kernel.asm	/^f01059dc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01059e3	obj/kern/kernel.asm	/^f01059e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01059e6	obj/kern/kernel.asm	/^f01059e6:	e8 6b e2 ff ff       	call   f0103c56 <envid2env>$/;"	l
f01059eb	obj/kern/kernel.asm	/^f01059eb:	85 c0                	test   %eax,%eax$/;"	l
f01059ed	obj/kern/kernel.asm	/^f01059ed:	78 1d                	js     f0105a0c <syscall+0x4d2>$/;"	l
f01059ef	obj/kern/kernel.asm	/^f01059ef:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01059f2	obj/kern/kernel.asm	/^f01059f2:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01059f5	obj/kern/kernel.asm	/^f01059f5:	89 78 54             	mov    %edi,0x54(%eax)$/;"	l
f01059f8	obj/kern/kernel.asm	/^f01059f8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01059fd	obj/kern/kernel.asm	/^f01059fd:	e9 e7 02 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105a02	obj/kern/kernel.asm	/^f0105a02:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105a07	obj/kern/kernel.asm	/^f0105a07:	e9 dd 02 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105a0c	obj/kern/kernel.asm	/^f0105a0c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0105a11	obj/kern/kernel.asm	/^f0105a11:	e9 d3 02 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105a16	obj/kern/kernel.asm	/^f0105a16:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105a1d	obj/kern/kernel.asm	/^f0105a1d:	00 $/;"	l
f0105a1e	obj/kern/kernel.asm	/^f0105a1e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105a21	obj/kern/kernel.asm	/^f0105a21:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105a25	obj/kern/kernel.asm	/^f0105a25:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105a28	obj/kern/kernel.asm	/^f0105a28:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a2b	obj/kern/kernel.asm	/^f0105a2b:	e8 26 e2 ff ff       	call   f0103c56 <envid2env>$/;"	l
f0105a30	obj/kern/kernel.asm	/^f0105a30:	85 c0                	test   %eax,%eax$/;"	l
f0105a32	obj/kern/kernel.asm	/^f0105a32:	78 13                	js     f0105a47 <syscall+0x50d>$/;"	l
f0105a34	obj/kern/kernel.asm	/^f0105a34:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105a37	obj/kern/kernel.asm	/^f0105a37:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105a3a	obj/kern/kernel.asm	/^f0105a3a:	89 70 60             	mov    %esi,0x60(%eax)$/;"	l
f0105a3d	obj/kern/kernel.asm	/^f0105a3d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105a42	obj/kern/kernel.asm	/^f0105a42:	e9 a2 02 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0105a4c	obj/kern/kernel.asm	/^f0105a4c:	e9 98 02 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105a51	obj/kern/kernel.asm	/^f0105a51:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0105a58	obj/kern/kernel.asm	/^f0105a58:	00 $/;"	l
f0105a59	obj/kern/kernel.asm	/^f0105a59:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0105a5c	obj/kern/kernel.asm	/^f0105a5c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105a60	obj/kern/kernel.asm	/^f0105a60:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105a63	obj/kern/kernel.asm	/^f0105a63:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a66	obj/kern/kernel.asm	/^f0105a66:	e8 eb e1 ff ff       	call   f0103c56 <envid2env>$/;"	l
f0105a6b	obj/kern/kernel.asm	/^f0105a6b:	85 c0                	test   %eax,%eax$/;"	l
f0105a6d	obj/kern/kernel.asm	/^f0105a6d:	0f 88 be 00 00 00    	js     f0105b31 <syscall+0x5f7>$/;"	l
f0105a73	obj/kern/kernel.asm	/^f0105a73:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105a76	obj/kern/kernel.asm	/^f0105a76:	80 78 64 00          	cmpb   $0x0,0x64(%eax)$/;"	l
f0105a7a	obj/kern/kernel.asm	/^f0105a7a:	0f 84 bb 00 00 00    	je     f0105b3b <syscall+0x601>$/;"	l
f0105a80	obj/kern/kernel.asm	/^f0105a80:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f0105a87	obj/kern/kernel.asm	/^f0105a87:	77 6c                	ja     f0105af5 <syscall+0x5bb>$/;"	l
f0105a89	obj/kern/kernel.asm	/^f0105a89:	f7 45 14 ff 0f 00 00 	testl  $0xfff,0x14(%ebp)$/;"	l
f0105a90	obj/kern/kernel.asm	/^f0105a90:	0f 85 af 00 00 00    	jne    f0105b45 <syscall+0x60b>$/;"	l
f0105a96	obj/kern/kernel.asm	/^f0105a96:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0105a99	obj/kern/kernel.asm	/^f0105a99:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f0105a9e	obj/kern/kernel.asm	/^f0105a9e:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0105aa1	obj/kern/kernel.asm	/^f0105aa1:	0f 84 0e 02 00 00    	je     f0105cb5 <syscall+0x77b>$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	e9 a3 00 00 00       	jmp    f0105b4f <syscall+0x615>$/;"	l
f0105aac	obj/kern/kernel.asm	/^f0105aac:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f0105ab0	obj/kern/kernel.asm	/^f0105ab0:	74 0c                	je     f0105abe <syscall+0x584>$/;"	l
f0105ab2	obj/kern/kernel.asm	/^f0105ab2:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105ab5	obj/kern/kernel.asm	/^f0105ab5:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0105ab8	obj/kern/kernel.asm	/^f0105ab8:	0f 84 9b 00 00 00    	je     f0105b59 <syscall+0x61f>$/;"	l
f0105abe	obj/kern/kernel.asm	/^f0105abe:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0105ac1	obj/kern/kernel.asm	/^f0105ac1:	8b 4a 68             	mov    0x68(%edx),%ecx$/;"	l
f0105ac4	obj/kern/kernel.asm	/^f0105ac4:	81 f9 ff ff bf ee    	cmp    $0xeebfffff,%ecx$/;"	l
f0105aca	obj/kern/kernel.asm	/^f0105aca:	77 1e                	ja     f0105aea <syscall+0x5b0>$/;"	l
f0105acc	obj/kern/kernel.asm	/^f0105acc:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f0105acf	obj/kern/kernel.asm	/^f0105acf:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0105ad3	obj/kern/kernel.asm	/^f0105ad3:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105ad7	obj/kern/kernel.asm	/^f0105ad7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105adb	obj/kern/kernel.asm	/^f0105adb:	8b 42 78             	mov    0x78(%edx),%eax$/;"	l
f0105ade	obj/kern/kernel.asm	/^f0105ade:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105ae1	obj/kern/kernel.asm	/^f0105ae1:	e8 88 bd ff ff       	call   f010186e <page_insert>$/;"	l
f0105ae6	obj/kern/kernel.asm	/^f0105ae6:	85 c0                	test   %eax,%eax$/;"	l
f0105ae8	obj/kern/kernel.asm	/^f0105ae8:	78 79                	js     f0105b63 <syscall+0x629>$/;"	l
f0105aea	obj/kern/kernel.asm	/^f0105aea:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105aed	obj/kern/kernel.asm	/^f0105aed:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f0105af0	obj/kern/kernel.asm	/^f0105af0:	89 70 74             	mov    %esi,0x74(%eax)$/;"	l
f0105af3	obj/kern/kernel.asm	/^f0105af3:	eb 07                	jmp    f0105afc <syscall+0x5c2>$/;"	l
f0105af5	obj/kern/kernel.asm	/^f0105af5:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
f0105afc	obj/kern/kernel.asm	/^f0105afc:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105aff	obj/kern/kernel.asm	/^f0105aff:	e8 45 14 00 00       	call   f0106f49 <cpunum>$/;"	l
f0105b04	obj/kern/kernel.asm	/^f0105b04:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105b07	obj/kern/kernel.asm	/^f0105b07:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0105b0d	obj/kern/kernel.asm	/^f0105b0d:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105b10	obj/kern/kernel.asm	/^f0105b10:	89 43 70             	mov    %eax,0x70(%ebx)$/;"	l
f0105b13	obj/kern/kernel.asm	/^f0105b13:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105b16	obj/kern/kernel.asm	/^f0105b16:	c6 40 64 00          	movb   $0x0,0x64(%eax)$/;"	l
f0105b1a	obj/kern/kernel.asm	/^f0105b1a:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0105b21	obj/kern/kernel.asm	/^f0105b21:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105b24	obj/kern/kernel.asm	/^f0105b24:	89 48 6c             	mov    %ecx,0x6c(%eax)$/;"	l
f0105b27	obj/kern/kernel.asm	/^f0105b27:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105b2c	obj/kern/kernel.asm	/^f0105b2c:	e9 b8 01 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105b31	obj/kern/kernel.asm	/^f0105b31:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0105b36	obj/kern/kernel.asm	/^f0105b36:	e9 ae 01 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105b3b	obj/kern/kernel.asm	/^f0105b3b:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f0105b40	obj/kern/kernel.asm	/^f0105b40:	e9 a4 01 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105b45	obj/kern/kernel.asm	/^f0105b45:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105b4a	obj/kern/kernel.asm	/^f0105b4a:	e9 9a 01 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105b4f	obj/kern/kernel.asm	/^f0105b4f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105b54	obj/kern/kernel.asm	/^f0105b54:	e9 90 01 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105b59	obj/kern/kernel.asm	/^f0105b59:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105b5e	obj/kern/kernel.asm	/^f0105b5e:	e9 86 01 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105b63	obj/kern/kernel.asm	/^f0105b63:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0105b68	obj/kern/kernel.asm	/^f0105b68:	e9 7c 01 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105b6d	obj/kern/kernel.asm	/^f0105b6d:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105b72	obj/kern/kernel.asm	/^f0105b72:	e9 72 01 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105b77	obj/kern/kernel.asm	/^f0105b77:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f0105b7e	obj/kern/kernel.asm	/^f0105b7e:	77 0d                	ja     f0105b8d <syscall+0x653>$/;"	l
f0105b80	obj/kern/kernel.asm	/^f0105b80:	f7 45 0c ff 0f 00 00 	testl  $0xfff,0xc(%ebp)$/;"	l
f0105b87	obj/kern/kernel.asm	/^f0105b87:	0f 85 21 01 00 00    	jne    f0105cae <syscall+0x774>$/;"	l
f0105b8d	obj/kern/kernel.asm	/^f0105b8d:	e8 b7 13 00 00       	call   f0106f49 <cpunum>$/;"	l
f0105b92	obj/kern/kernel.asm	/^f0105b92:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105b95	obj/kern/kernel.asm	/^f0105b95:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0105b9b	obj/kern/kernel.asm	/^f0105b9b:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0105ba2	obj/kern/kernel.asm	/^f0105ba2:	e8 a2 13 00 00       	call   f0106f49 <cpunum>$/;"	l
f0105ba7	obj/kern/kernel.asm	/^f0105ba7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105baa	obj/kern/kernel.asm	/^f0105baa:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0105bb0	obj/kern/kernel.asm	/^f0105bb0:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105bb3	obj/kern/kernel.asm	/^f0105bb3:	89 78 68             	mov    %edi,0x68(%eax)$/;"	l
f0105bb6	obj/kern/kernel.asm	/^f0105bb6:	e8 8e 13 00 00       	call   f0106f49 <cpunum>$/;"	l
f0105bbb	obj/kern/kernel.asm	/^f0105bbb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105bbe	obj/kern/kernel.asm	/^f0105bbe:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0105bc4	obj/kern/kernel.asm	/^f0105bc4:	c6 40 64 01          	movb   $0x1,0x64(%eax)$/;"	l
f0105bc8	obj/kern/kernel.asm	/^f0105bc8:	e8 7c 13 00 00       	call   f0106f49 <cpunum>$/;"	l
f0105bcd	obj/kern/kernel.asm	/^f0105bcd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105bd0	obj/kern/kernel.asm	/^f0105bd0:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0105bd6	obj/kern/kernel.asm	/^f0105bd6:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0105bdd	obj/kern/kernel.asm	/^f0105bdd:	e8 82 f8 ff ff       	call   f0105464 <sched_yield>$/;"	l
f0105be2	obj/kern/kernel.asm	/^f0105be2:	e8 62 13 00 00       	call   f0106f49 <cpunum>$/;"	l
f0105be7	obj/kern/kernel.asm	/^f0105be7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0105bf0	obj/kern/kernel.asm	/^f0105bf0:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105bf3	obj/kern/kernel.asm	/^f0105bf3:	89 48 7c             	mov    %ecx,0x7c(%eax)$/;"	l
f0105bf6	obj/kern/kernel.asm	/^f0105bf6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105bfb	obj/kern/kernel.asm	/^f0105bfb:	e9 e9 00 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105c00	obj/kern/kernel.asm	/^f0105c00:	e8 e6 21 00 00       	call   f0107deb <time_msec>$/;"	l
f0105c05	obj/kern/kernel.asm	/^f0105c05:	e9 df 00 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105c0a	obj/kern/kernel.asm	/^f0105c0a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	66 90                	xchg   %ax,%ax$/;"	l
f0105c10	obj/kern/kernel.asm	/^f0105c10:	75 16                	jne    f0105c28 <syscall+0x6ee>$/;"	l
f0105c12	obj/kern/kernel.asm	/^f0105c12:	c7 04 24 4c 9c 10 f0 	movl   $0xf0109c4c,(%esp)$/;"	l
f0105c19	obj/kern/kernel.asm	/^f0105c19:	e8 ec e9 ff ff       	call   f010460a <cprintf>$/;"	l
f0105c1e	obj/kern/kernel.asm	/^f0105c1e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105c23	obj/kern/kernel.asm	/^f0105c23:	e9 c1 00 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105c28	obj/kern/kernel.asm	/^f0105c28:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105c2b	obj/kern/kernel.asm	/^f0105c2b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105c2f	obj/kern/kernel.asm	/^f0105c2f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105c32	obj/kern/kernel.asm	/^f0105c32:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c35	obj/kern/kernel.asm	/^f0105c35:	e8 ae 18 00 00       	call   f01074e8 <transmit_packets>$/;"	l
f0105c3a	obj/kern/kernel.asm	/^f0105c3a:	85 c0                	test   %eax,%eax$/;"	l
f0105c3c	obj/kern/kernel.asm	/^f0105c3c:	79 16                	jns    f0105c54 <syscall+0x71a>$/;"	l
f0105c3e	obj/kern/kernel.asm	/^f0105c3e:	c7 04 24 78 9c 10 f0 	movl   $0xf0109c78,(%esp)$/;"	l
f0105c45	obj/kern/kernel.asm	/^f0105c45:	e8 c0 e9 ff ff       	call   f010460a <cprintf>$/;"	l
f0105c4a	obj/kern/kernel.asm	/^f0105c4a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0105c4f	obj/kern/kernel.asm	/^f0105c4f:	e9 95 00 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105c54	obj/kern/kernel.asm	/^f0105c54:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c59	obj/kern/kernel.asm	/^f0105c59:	e9 8b 00 00 00       	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105c5e	obj/kern/kernel.asm	/^f0105c5e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0105c62	obj/kern/kernel.asm	/^f0105c62:	75 13                	jne    f0105c77 <syscall+0x73d>$/;"	l
f0105c64	obj/kern/kernel.asm	/^f0105c64:	c7 04 24 4c 9c 10 f0 	movl   $0xf0109c4c,(%esp)$/;"	l
f0105c6b	obj/kern/kernel.asm	/^f0105c6b:	e8 9a e9 ff ff       	call   f010460a <cprintf>$/;"	l
f0105c70	obj/kern/kernel.asm	/^f0105c70:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105c75	obj/kern/kernel.asm	/^f0105c75:	eb 72                	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105c77	obj/kern/kernel.asm	/^f0105c77:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105c7a	obj/kern/kernel.asm	/^f0105c7a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105c7e	obj/kern/kernel.asm	/^f0105c7e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105c81	obj/kern/kernel.asm	/^f0105c81:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c84	obj/kern/kernel.asm	/^f0105c84:	e8 d8 17 00 00       	call   f0107461 <recieve_packets>$/;"	l
f0105c89	obj/kern/kernel.asm	/^f0105c89:	85 c0                	test   %eax,%eax$/;"	l
f0105c8b	obj/kern/kernel.asm	/^f0105c8b:	79 13                	jns    f0105ca0 <syscall+0x766>$/;"	l
f0105c8d	obj/kern/kernel.asm	/^f0105c8d:	c7 04 24 9c 9c 10 f0 	movl   $0xf0109c9c,(%esp)$/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94:	e8 71 e9 ff ff       	call   f010460a <cprintf>$/;"	l
f0105c99	obj/kern/kernel.asm	/^f0105c99:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0105c9e	obj/kern/kernel.asm	/^f0105c9e:	eb 49                	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105ca0	obj/kern/kernel.asm	/^f0105ca0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105ca5	obj/kern/kernel.asm	/^f0105ca5:	eb 42                	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105ca7	obj/kern/kernel.asm	/^f0105ca7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105cac	obj/kern/kernel.asm	/^f0105cac:	eb 3b                	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105cae	obj/kern/kernel.asm	/^f0105cae:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105cb3	obj/kern/kernel.asm	/^f0105cb3:	eb 34                	jmp    f0105ce9 <syscall+0x7af>$/;"	l
f0105cb5	obj/kern/kernel.asm	/^f0105cb5:	e8 8f 12 00 00       	call   f0106f49 <cpunum>$/;"	l
f0105cba	obj/kern/kernel.asm	/^f0105cba:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105cbd	obj/kern/kernel.asm	/^f0105cbd:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105cc1	obj/kern/kernel.asm	/^f0105cc1:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0105cc4	obj/kern/kernel.asm	/^f0105cc4:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105cc8	obj/kern/kernel.asm	/^f0105cc8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105ccb	obj/kern/kernel.asm	/^f0105ccb:	8b 80 28 50 2c f0    	mov    -0xfd3afd8(%eax),%eax$/;"	l
f0105cd1	obj/kern/kernel.asm	/^f0105cd1:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105cd7	obj/kern/kernel.asm	/^f0105cd7:	e8 92 ba ff ff       	call   f010176e <page_lookup>$/;"	l
f0105cdc	obj/kern/kernel.asm	/^f0105cdc:	85 c0                	test   %eax,%eax$/;"	l
f0105cde	obj/kern/kernel.asm	/^f0105cde:	0f 85 c8 fd ff ff    	jne    f0105aac <syscall+0x572>$/;"	l
f0105ce4	obj/kern/kernel.asm	/^f0105ce4:	e9 84 fe ff ff       	jmp    f0105b6d <syscall+0x633>$/;"	l
f0105ce9	obj/kern/kernel.asm	/^f0105ce9:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0105cec	obj/kern/kernel.asm	/^f0105cec:	5b                   	pop    %ebx$/;"	l
f0105ced	obj/kern/kernel.asm	/^f0105ced:	5e                   	pop    %esi$/;"	l
f0105cee	obj/kern/kernel.asm	/^f0105cee:	5f                   	pop    %edi$/;"	l
f0105cef	obj/kern/kernel.asm	/^f0105cef:	5d                   	pop    %ebp$/;"	l
f0105cf0	obj/kern/kernel.asm	/^f0105cf0:	c3                   	ret    $/;"	l
f0105cf1	obj/kern/kernel.asm	/^f0105cf1 <stab_binsearch>:$/;"	l
f0105cf1	obj/kern/kernel.asm	/^f0105cf1:	55                   	push   %ebp$/;"	l
f0105cf2	obj/kern/kernel.asm	/^f0105cf2:	89 e5                	mov    %esp,%ebp$/;"	l
f0105cf4	obj/kern/kernel.asm	/^f0105cf4:	57                   	push   %edi$/;"	l
f0105cf5	obj/kern/kernel.asm	/^f0105cf5:	56                   	push   %esi$/;"	l
f0105cf6	obj/kern/kernel.asm	/^f0105cf6:	53                   	push   %ebx$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105cfa	obj/kern/kernel.asm	/^f0105cfa:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105cfd	obj/kern/kernel.asm	/^f0105cfd:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105d00	obj/kern/kernel.asm	/^f0105d00:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105d03	obj/kern/kernel.asm	/^f0105d03:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105d06	obj/kern/kernel.asm	/^f0105d06:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0105d08	obj/kern/kernel.asm	/^f0105d08:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105d0a	obj/kern/kernel.asm	/^f0105d0a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0105d0d	obj/kern/kernel.asm	/^f0105d0d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0105d14	obj/kern/kernel.asm	/^f0105d14:	e9 88 00 00 00       	jmp    f0105da1 <stab_binsearch+0xb0>$/;"	l
f0105d19	obj/kern/kernel.asm	/^f0105d19:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105d1c	obj/kern/kernel.asm	/^f0105d1c:	01 d8                	add    %ebx,%eax$/;"	l
f0105d1e	obj/kern/kernel.asm	/^f0105d1e:	89 c7                	mov    %eax,%edi$/;"	l
f0105d20	obj/kern/kernel.asm	/^f0105d20:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0105d23	obj/kern/kernel.asm	/^f0105d23:	01 c7                	add    %eax,%edi$/;"	l
f0105d25	obj/kern/kernel.asm	/^f0105d25:	d1 ff                	sar    %edi$/;"	d
f0105d27	obj/kern/kernel.asm	/^f0105d27:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0105d2a	obj/kern/kernel.asm	/^f0105d2a:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0105d2d	obj/kern/kernel.asm	/^f0105d2d:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f0105d30	obj/kern/kernel.asm	/^f0105d30:	89 f8                	mov    %edi,%eax$/;"	l
f0105d32	obj/kern/kernel.asm	/^f0105d32:	eb 03                	jmp    f0105d37 <stab_binsearch+0x46>$/;"	l
f0105d34	obj/kern/kernel.asm	/^f0105d34:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105d37	obj/kern/kernel.asm	/^f0105d37:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105d39	obj/kern/kernel.asm	/^f0105d39:	7f 1f                	jg     f0105d5a <stab_binsearch+0x69>$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105d3f	obj/kern/kernel.asm	/^f0105d3f:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105d42	obj/kern/kernel.asm	/^f0105d42:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105d44	obj/kern/kernel.asm	/^f0105d44:	75 ee                	jne    f0105d34 <stab_binsearch+0x43>$/;"	l
f0105d46	obj/kern/kernel.asm	/^f0105d46:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0105d49	obj/kern/kernel.asm	/^f0105d49:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105d4c	obj/kern/kernel.asm	/^f0105d4c:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0105d4f	obj/kern/kernel.asm	/^f0105d4f:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0105d53	obj/kern/kernel.asm	/^f0105d53:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	76 18                	jbe    f0105d70 <stab_binsearch+0x7f>$/;"	l
f0105d58	obj/kern/kernel.asm	/^f0105d58:	eb 05                	jmp    f0105d5f <stab_binsearch+0x6e>$/;"	l
f0105d5a	obj/kern/kernel.asm	/^f0105d5a:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0105d5d	obj/kern/kernel.asm	/^f0105d5d:	eb 42                	jmp    f0105da1 <stab_binsearch+0xb0>$/;"	l
f0105d5f	obj/kern/kernel.asm	/^f0105d5f:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105d62	obj/kern/kernel.asm	/^f0105d62:	89 03                	mov    %eax,(%ebx)$/;"	l
f0105d64	obj/kern/kernel.asm	/^f0105d64:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0105d67	obj/kern/kernel.asm	/^f0105d67:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0105d6e	obj/kern/kernel.asm	/^f0105d6e:	eb 31                	jmp    f0105da1 <stab_binsearch+0xb0>$/;"	l
f0105d70	obj/kern/kernel.asm	/^f0105d70:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0105d73	obj/kern/kernel.asm	/^f0105d73:	73 17                	jae    f0105d8c <stab_binsearch+0x9b>$/;"	l
f0105d75	obj/kern/kernel.asm	/^f0105d75:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0105d78	obj/kern/kernel.asm	/^f0105d78:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105d7b	obj/kern/kernel.asm	/^f0105d7b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0105d7e	obj/kern/kernel.asm	/^f0105d7e:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0105d81	obj/kern/kernel.asm	/^f0105d81:	89 07                	mov    %eax,(%edi)$/;"	l
f0105d83	obj/kern/kernel.asm	/^f0105d83:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0105d8a	obj/kern/kernel.asm	/^f0105d8a:	eb 15                	jmp    f0105da1 <stab_binsearch+0xb0>$/;"	l
f0105d8c	obj/kern/kernel.asm	/^f0105d8c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0105d92	obj/kern/kernel.asm	/^f0105d92:	89 1f                	mov    %ebx,(%edi)$/;"	l
f0105d94	obj/kern/kernel.asm	/^f0105d94:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0105d98	obj/kern/kernel.asm	/^f0105d98:	89 c3                	mov    %eax,%ebx$/;"	l
f0105d9a	obj/kern/kernel.asm	/^f0105d9a:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0105da1	obj/kern/kernel.asm	/^f0105da1:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0105da4	obj/kern/kernel.asm	/^f0105da4:	0f 8e 6f ff ff ff    	jle    f0105d19 <stab_binsearch+0x28>$/;"	l
f0105daa	obj/kern/kernel.asm	/^f0105daa:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0105dae	obj/kern/kernel.asm	/^f0105dae:	75 0f                	jne    f0105dbf <stab_binsearch+0xce>$/;"	l
f0105db0	obj/kern/kernel.asm	/^f0105db0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105db3	obj/kern/kernel.asm	/^f0105db3:	8b 00                	mov    (%eax),%eax$/;"	l
f0105db5	obj/kern/kernel.asm	/^f0105db5:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105db8	obj/kern/kernel.asm	/^f0105db8:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0105dbb	obj/kern/kernel.asm	/^f0105dbb:	89 07                	mov    %eax,(%edi)$/;"	l
f0105dbd	obj/kern/kernel.asm	/^f0105dbd:	eb 2c                	jmp    f0105deb <stab_binsearch+0xfa>$/;"	l
f0105dbf	obj/kern/kernel.asm	/^f0105dbf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105dc2	obj/kern/kernel.asm	/^f0105dc2:	8b 00                	mov    (%eax),%eax$/;"	l
f0105dc4	obj/kern/kernel.asm	/^f0105dc4:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105dc7	obj/kern/kernel.asm	/^f0105dc7:	8b 0f                	mov    (%edi),%ecx$/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105dcc	obj/kern/kernel.asm	/^f0105dcc:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f0105dcf	obj/kern/kernel.asm	/^f0105dcf:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0105dd2	obj/kern/kernel.asm	/^f0105dd2:	eb 03                	jmp    f0105dd7 <stab_binsearch+0xe6>$/;"	l
f0105dd4	obj/kern/kernel.asm	/^f0105dd4:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105dd9	obj/kern/kernel.asm	/^f0105dd9:	7e 0b                	jle    f0105de6 <stab_binsearch+0xf5>$/;"	l
f0105ddb	obj/kern/kernel.asm	/^f0105ddb:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f0105ddf	obj/kern/kernel.asm	/^f0105ddf:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105de2	obj/kern/kernel.asm	/^f0105de2:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105de4	obj/kern/kernel.asm	/^f0105de4:	75 ee                	jne    f0105dd4 <stab_binsearch+0xe3>$/;"	l
f0105de6	obj/kern/kernel.asm	/^f0105de6:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	89 07                	mov    %eax,(%edi)$/;"	l
f0105deb	obj/kern/kernel.asm	/^f0105deb:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105dee	obj/kern/kernel.asm	/^f0105dee:	5b                   	pop    %ebx$/;"	l
f0105def	obj/kern/kernel.asm	/^f0105def:	5e                   	pop    %esi$/;"	l
f0105df0	obj/kern/kernel.asm	/^f0105df0:	5f                   	pop    %edi$/;"	l
f0105df1	obj/kern/kernel.asm	/^f0105df1:	5d                   	pop    %ebp$/;"	l
f0105df2	obj/kern/kernel.asm	/^f0105df2:	c3                   	ret    $/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3 <debuginfo_eip>:$/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3:	55                   	push   %ebp$/;"	l
f0105df4	obj/kern/kernel.asm	/^f0105df4:	89 e5                	mov    %esp,%ebp$/;"	l
f0105df6	obj/kern/kernel.asm	/^f0105df6:	57                   	push   %edi$/;"	l
f0105df7	obj/kern/kernel.asm	/^f0105df7:	56                   	push   %esi$/;"	l
f0105df8	obj/kern/kernel.asm	/^f0105df8:	53                   	push   %ebx$/;"	l
f0105df9	obj/kern/kernel.asm	/^f0105df9:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0105dfc	obj/kern/kernel.asm	/^f0105dfc:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105dff	obj/kern/kernel.asm	/^f0105dff:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105e02	obj/kern/kernel.asm	/^f0105e02:	c7 03 36 84 10 f0    	movl   $0xf0108436,(%ebx)$/;"	l
f0105e08	obj/kern/kernel.asm	/^f0105e08:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0105e0f	obj/kern/kernel.asm	/^f0105e0f:	c7 43 08 36 84 10 f0 	movl   $0xf0108436,0x8(%ebx)$/;"	l
f0105e16	obj/kern/kernel.asm	/^f0105e16:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0105e1d	obj/kern/kernel.asm	/^f0105e1d:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0105e20	obj/kern/kernel.asm	/^f0105e20:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0105e27	obj/kern/kernel.asm	/^f0105e27:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0105e2d	obj/kern/kernel.asm	/^f0105e2d:	77 21                	ja     f0105e50 <debuginfo_eip+0x5d>$/;"	l
f0105e2f	obj/kern/kernel.asm	/^f0105e2f:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f0105e34	obj/kern/kernel.asm	/^f0105e34:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0105e37	obj/kern/kernel.asm	/^f0105e37:	a1 04 00 20 00       	mov    0x200004,%eax$/;"	l
f0105e3c	obj/kern/kernel.asm	/^f0105e3c:	8b 3d 08 00 20 00    	mov    0x200008,%edi$/;"	l
f0105e42	obj/kern/kernel.asm	/^f0105e42:	89 7d c0             	mov    %edi,-0x40(%ebp)$/;"	l
f0105e45	obj/kern/kernel.asm	/^f0105e45:	8b 3d 0c 00 20 00    	mov    0x20000c,%edi$/;"	l
f0105e4b	obj/kern/kernel.asm	/^f0105e4b:	89 7d bc             	mov    %edi,-0x44(%ebp)$/;"	l
f0105e4e	obj/kern/kernel.asm	/^f0105e4e:	eb 1a                	jmp    f0105e6a <debuginfo_eip+0x77>$/;"	l
f0105e50	obj/kern/kernel.asm	/^f0105e50:	c7 45 bc d8 bc 11 f0 	movl   $0xf011bcd8,-0x44(%ebp)$/;"	l
f0105e57	obj/kern/kernel.asm	/^f0105e57:	c7 45 c0 45 72 11 f0 	movl   $0xf0117245,-0x40(%ebp)$/;"	l
f0105e5e	obj/kern/kernel.asm	/^f0105e5e:	b8 44 72 11 f0       	mov    $0xf0117244,%eax$/;"	l
f0105e63	obj/kern/kernel.asm	/^f0105e63:	c7 45 c4 60 a5 10 f0 	movl   $0xf010a560,-0x3c(%ebp)$/;"	l
f0105e6a	obj/kern/kernel.asm	/^f0105e6a:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0105e6d	obj/kern/kernel.asm	/^f0105e6d:	39 7d c0             	cmp    %edi,-0x40(%ebp)$/;"	l
f0105e70	obj/kern/kernel.asm	/^f0105e70:	0f 83 95 01 00 00    	jae    f010600b <debuginfo_eip+0x218>$/;"	l
f0105e76	obj/kern/kernel.asm	/^f0105e76:	80 7f ff 00          	cmpb   $0x0,-0x1(%edi)$/;"	l
f0105e7a	obj/kern/kernel.asm	/^f0105e7a:	0f 85 92 01 00 00    	jne    f0106012 <debuginfo_eip+0x21f>$/;"	l
f0105e80	obj/kern/kernel.asm	/^f0105e80:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105e87	obj/kern/kernel.asm	/^f0105e87:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0105e8a	obj/kern/kernel.asm	/^f0105e8a:	29 f8                	sub    %edi,%eax$/;"	l
f0105e8c	obj/kern/kernel.asm	/^f0105e8c:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0105e8f	obj/kern/kernel.asm	/^f0105e8f:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0105e95	obj/kern/kernel.asm	/^f0105e95:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105e98	obj/kern/kernel.asm	/^f0105e98:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105e9b	obj/kern/kernel.asm	/^f0105e9b:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105e9f	obj/kern/kernel.asm	/^f0105e9f:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0105ea6	obj/kern/kernel.asm	/^f0105ea6:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0105ea9	obj/kern/kernel.asm	/^f0105ea9:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105eac	obj/kern/kernel.asm	/^f0105eac:	89 f8                	mov    %edi,%eax$/;"	l
f0105eae	obj/kern/kernel.asm	/^f0105eae:	e8 3e fe ff ff       	call   f0105cf1 <stab_binsearch>$/;"	l
f0105eb3	obj/kern/kernel.asm	/^f0105eb3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105eb6	obj/kern/kernel.asm	/^f0105eb6:	85 c0                	test   %eax,%eax$/;"	l
f0105eb8	obj/kern/kernel.asm	/^f0105eb8:	0f 84 5b 01 00 00    	je     f0106019 <debuginfo_eip+0x226>$/;"	l
f0105ebe	obj/kern/kernel.asm	/^f0105ebe:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105ec1	obj/kern/kernel.asm	/^f0105ec1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105ec4	obj/kern/kernel.asm	/^f0105ec4:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105ec7	obj/kern/kernel.asm	/^f0105ec7:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105ecb	obj/kern/kernel.asm	/^f0105ecb:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0105ed2	obj/kern/kernel.asm	/^f0105ed2:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0105ed5	obj/kern/kernel.asm	/^f0105ed5:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0105ed8	obj/kern/kernel.asm	/^f0105ed8:	89 f8                	mov    %edi,%eax$/;"	l
f0105eda	obj/kern/kernel.asm	/^f0105eda:	e8 12 fe ff ff       	call   f0105cf1 <stab_binsearch>$/;"	l
f0105edf	obj/kern/kernel.asm	/^f0105edf:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105ee2	obj/kern/kernel.asm	/^f0105ee2:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0105ee5	obj/kern/kernel.asm	/^f0105ee5:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105ee7	obj/kern/kernel.asm	/^f0105ee7:	7f 32                	jg     f0105f1b <debuginfo_eip+0x128>$/;"	l
f0105ee9	obj/kern/kernel.asm	/^f0105ee9:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105eec	obj/kern/kernel.asm	/^f0105eec:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0105eef	obj/kern/kernel.asm	/^f0105eef:	8d 3c 97             	lea    (%edi,%edx,4),%edi$/;"	l
f0105ef2	obj/kern/kernel.asm	/^f0105ef2:	8b 17                	mov    (%edi),%edx$/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
f0105ef7	obj/kern/kernel.asm	/^f0105ef7:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0105efa	obj/kern/kernel.asm	/^f0105efa:	2b 55 c0             	sub    -0x40(%ebp),%edx$/;"	l
f0105efd	obj/kern/kernel.asm	/^f0105efd:	39 55 b8             	cmp    %edx,-0x48(%ebp)$/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00:	73 09                	jae    f0105f0b <debuginfo_eip+0x118>$/;"	l
f0105f02	obj/kern/kernel.asm	/^f0105f02:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
f0105f05	obj/kern/kernel.asm	/^f0105f05:	03 55 c0             	add    -0x40(%ebp),%edx$/;"	l
f0105f08	obj/kern/kernel.asm	/^f0105f08:	89 53 08             	mov    %edx,0x8(%ebx)$/;"	l
f0105f0b	obj/kern/kernel.asm	/^f0105f0b:	8b 57 08             	mov    0x8(%edi),%edx$/;"	l
f0105f0e	obj/kern/kernel.asm	/^f0105f0e:	89 53 10             	mov    %edx,0x10(%ebx)$/;"	l
f0105f11	obj/kern/kernel.asm	/^f0105f11:	29 d6                	sub    %edx,%esi$/;"	l
f0105f13	obj/kern/kernel.asm	/^f0105f13:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105f16	obj/kern/kernel.asm	/^f0105f16:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0105f19	obj/kern/kernel.asm	/^f0105f19:	eb 0f                	jmp    f0105f2a <debuginfo_eip+0x137>$/;"	l
f0105f1b	obj/kern/kernel.asm	/^f0105f1b:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0105f1e	obj/kern/kernel.asm	/^f0105f1e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105f21	obj/kern/kernel.asm	/^f0105f21:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105f24	obj/kern/kernel.asm	/^f0105f24:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105f27	obj/kern/kernel.asm	/^f0105f27:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105f2a	obj/kern/kernel.asm	/^f0105f2a:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0105f31	obj/kern/kernel.asm	/^f0105f31:	00 $/;"	l
f0105f32	obj/kern/kernel.asm	/^f0105f32:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0105f35	obj/kern/kernel.asm	/^f0105f35:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105f38	obj/kern/kernel.asm	/^f0105f38:	e8 9e 09 00 00       	call   f01068db <strfind>$/;"	l
f0105f3d	obj/kern/kernel.asm	/^f0105f3d:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0105f40	obj/kern/kernel.asm	/^f0105f40:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105f47	obj/kern/kernel.asm	/^f0105f47:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f0105f4e	obj/kern/kernel.asm	/^f0105f4e:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0105f51	obj/kern/kernel.asm	/^f0105f51:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0105f54	obj/kern/kernel.asm	/^f0105f54:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0105f57	obj/kern/kernel.asm	/^f0105f57:	89 f8                	mov    %edi,%eax$/;"	l
f0105f59	obj/kern/kernel.asm	/^f0105f59:	e8 93 fd ff ff       	call   f0105cf1 <stab_binsearch>$/;"	l
f0105f5e	obj/kern/kernel.asm	/^f0105f5e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0105f61	obj/kern/kernel.asm	/^f0105f61:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0105f64	obj/kern/kernel.asm	/^f0105f64:	0f 8f b6 00 00 00    	jg     f0106020 <debuginfo_eip+0x22d>$/;"	l
f0105f6a	obj/kern/kernel.asm	/^f0105f6a:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
f0105f6d	obj/kern/kernel.asm	/^f0105f6d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105f70	obj/kern/kernel.asm	/^f0105f70:	89 c6                	mov    %eax,%esi$/;"	l
f0105f72	obj/kern/kernel.asm	/^f0105f72:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105f75	obj/kern/kernel.asm	/^f0105f75:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105f78	obj/kern/kernel.asm	/^f0105f78:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0105f7b	obj/kern/kernel.asm	/^f0105f7b:	89 5d 0c             	mov    %ebx,0xc(%ebp)$/;"	l
f0105f7e	obj/kern/kernel.asm	/^f0105f7e:	eb 06                	jmp    f0105f86 <debuginfo_eip+0x193>$/;"	l
f0105f80	obj/kern/kernel.asm	/^f0105f80:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105f83	obj/kern/kernel.asm	/^f0105f83:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105f86	obj/kern/kernel.asm	/^f0105f86:	89 c7                	mov    %eax,%edi$/;"	l
f0105f88	obj/kern/kernel.asm	/^f0105f88:	39 c6                	cmp    %eax,%esi$/;"	l
f0105f8a	obj/kern/kernel.asm	/^f0105f8a:	7f 3c                	jg     f0105fc8 <debuginfo_eip+0x1d5>$/;"	l
f0105f8c	obj/kern/kernel.asm	/^f0105f8c:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105f90	obj/kern/kernel.asm	/^f0105f90:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105f93	obj/kern/kernel.asm	/^f0105f93:	75 08                	jne    f0105f9d <debuginfo_eip+0x1aa>$/;"	l
f0105f95	obj/kern/kernel.asm	/^f0105f95:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105f98	obj/kern/kernel.asm	/^f0105f98:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105f9b	obj/kern/kernel.asm	/^f0105f9b:	eb 11                	jmp    f0105fae <debuginfo_eip+0x1bb>$/;"	l
f0105f9d	obj/kern/kernel.asm	/^f0105f9d:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0105fa0	obj/kern/kernel.asm	/^f0105fa0:	75 de                	jne    f0105f80 <debuginfo_eip+0x18d>$/;"	l
f0105fa2	obj/kern/kernel.asm	/^f0105fa2:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f0105fa6	obj/kern/kernel.asm	/^f0105fa6:	74 d8                	je     f0105f80 <debuginfo_eip+0x18d>$/;"	l
f0105fa8	obj/kern/kernel.asm	/^f0105fa8:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105fab	obj/kern/kernel.asm	/^f0105fab:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105fae	obj/kern/kernel.asm	/^f0105fae:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105fb4	obj/kern/kernel.asm	/^f0105fb4:	8b 04 86             	mov    (%esi,%eax,4),%eax$/;"	l
f0105fb7	obj/kern/kernel.asm	/^f0105fb7:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0105fba	obj/kern/kernel.asm	/^f0105fba:	2b 55 c0             	sub    -0x40(%ebp),%edx$/;"	l
f0105fbd	obj/kern/kernel.asm	/^f0105fbd:	39 d0                	cmp    %edx,%eax$/;"	l
f0105fbf	obj/kern/kernel.asm	/^f0105fbf:	73 0a                	jae    f0105fcb <debuginfo_eip+0x1d8>$/;"	l
f0105fc1	obj/kern/kernel.asm	/^f0105fc1:	03 45 c0             	add    -0x40(%ebp),%eax$/;"	l
f0105fc4	obj/kern/kernel.asm	/^f0105fc4:	89 03                	mov    %eax,(%ebx)$/;"	l
f0105fc6	obj/kern/kernel.asm	/^f0105fc6:	eb 03                	jmp    f0105fcb <debuginfo_eip+0x1d8>$/;"	l
f0105fc8	obj/kern/kernel.asm	/^f0105fc8:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105fcb	obj/kern/kernel.asm	/^f0105fcb:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105fce	obj/kern/kernel.asm	/^f0105fce:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f0105fd1	obj/kern/kernel.asm	/^f0105fd1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105fd6	obj/kern/kernel.asm	/^f0105fd6:	39 f2                	cmp    %esi,%edx$/;"	l
f0105fd8	obj/kern/kernel.asm	/^f0105fd8:	7d 52                	jge    f010602c <debuginfo_eip+0x239>$/;"	l
f0105fda	obj/kern/kernel.asm	/^f0105fda:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105fdd	obj/kern/kernel.asm	/^f0105fdd:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0105fe0	obj/kern/kernel.asm	/^f0105fe0:	89 d0                	mov    %edx,%eax$/;"	l
f0105fe2	obj/kern/kernel.asm	/^f0105fe2:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0105fe5	obj/kern/kernel.asm	/^f0105fe5:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0105fe8	obj/kern/kernel.asm	/^f0105fe8:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0105feb	obj/kern/kernel.asm	/^f0105feb:	eb 04                	jmp    f0105ff1 <debuginfo_eip+0x1fe>$/;"	l
f0105fed	obj/kern/kernel.asm	/^f0105fed:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f0105ff1	obj/kern/kernel.asm	/^f0105ff1:	39 c6                	cmp    %eax,%esi$/;"	l
f0105ff3	obj/kern/kernel.asm	/^f0105ff3:	7e 32                	jle    f0106027 <debuginfo_eip+0x234>$/;"	l
f0105ff5	obj/kern/kernel.asm	/^f0105ff5:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105ff9	obj/kern/kernel.asm	/^f0105ff9:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105ffc	obj/kern/kernel.asm	/^f0105ffc:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0105fff	obj/kern/kernel.asm	/^f0105fff:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0106002	obj/kern/kernel.asm	/^f0106002:	74 e9                	je     f0105fed <debuginfo_eip+0x1fa>$/;"	l
f0106004	obj/kern/kernel.asm	/^f0106004:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106009	obj/kern/kernel.asm	/^f0106009:	eb 21                	jmp    f010602c <debuginfo_eip+0x239>$/;"	l
f010600b	obj/kern/kernel.asm	/^f010600b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106010	obj/kern/kernel.asm	/^f0106010:	eb 1a                	jmp    f010602c <debuginfo_eip+0x239>$/;"	l
f0106012	obj/kern/kernel.asm	/^f0106012:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106017	obj/kern/kernel.asm	/^f0106017:	eb 13                	jmp    f010602c <debuginfo_eip+0x239>$/;"	l
f0106019	obj/kern/kernel.asm	/^f0106019:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010601e	obj/kern/kernel.asm	/^f010601e:	eb 0c                	jmp    f010602c <debuginfo_eip+0x239>$/;"	l
f0106020	obj/kern/kernel.asm	/^f0106020:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106025	obj/kern/kernel.asm	/^f0106025:	eb 05                	jmp    f010602c <debuginfo_eip+0x239>$/;"	l
f0106027	obj/kern/kernel.asm	/^f0106027:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010602c	obj/kern/kernel.asm	/^f010602c:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f010602f	obj/kern/kernel.asm	/^f010602f:	5b                   	pop    %ebx$/;"	l
f0106030	obj/kern/kernel.asm	/^f0106030:	5e                   	pop    %esi$/;"	l
f0106031	obj/kern/kernel.asm	/^f0106031:	5f                   	pop    %edi$/;"	l
f0106032	obj/kern/kernel.asm	/^f0106032:	5d                   	pop    %ebp$/;"	l
f0106033	obj/kern/kernel.asm	/^f0106033:	c3                   	ret    $/;"	l
f0106034	obj/kern/kernel.asm	/^f0106034:	66 90                	xchg   %ax,%ax$/;"	l
f0106036	obj/kern/kernel.asm	/^f0106036:	66 90                	xchg   %ax,%ax$/;"	l
f0106038	obj/kern/kernel.asm	/^f0106038:	66 90                	xchg   %ax,%ax$/;"	l
f010603a	obj/kern/kernel.asm	/^f010603a:	66 90                	xchg   %ax,%ax$/;"	l
f010603c	obj/kern/kernel.asm	/^f010603c:	66 90                	xchg   %ax,%ax$/;"	l
f010603e	obj/kern/kernel.asm	/^f010603e:	66 90                	xchg   %ax,%ax$/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040 <printnum>:$/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040:	55                   	push   %ebp$/;"	l
f0106041	obj/kern/kernel.asm	/^f0106041:	89 e5                	mov    %esp,%ebp$/;"	l
f0106043	obj/kern/kernel.asm	/^f0106043:	57                   	push   %edi$/;"	l
f0106044	obj/kern/kernel.asm	/^f0106044:	56                   	push   %esi$/;"	l
f0106045	obj/kern/kernel.asm	/^f0106045:	53                   	push   %ebx$/;"	l
f0106046	obj/kern/kernel.asm	/^f0106046:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0106049	obj/kern/kernel.asm	/^f0106049:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010604c	obj/kern/kernel.asm	/^f010604c:	89 d7                	mov    %edx,%edi$/;"	l
f010604e	obj/kern/kernel.asm	/^f010604e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106051	obj/kern/kernel.asm	/^f0106051:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0106054	obj/kern/kernel.asm	/^f0106054:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106057	obj/kern/kernel.asm	/^f0106057:	89 c3                	mov    %eax,%ebx$/;"	l
f0106059	obj/kern/kernel.asm	/^f0106059:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010605c	obj/kern/kernel.asm	/^f010605c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010605f	obj/kern/kernel.asm	/^f010605f:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0106062	obj/kern/kernel.asm	/^f0106062:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0106067	obj/kern/kernel.asm	/^f0106067:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010606a	obj/kern/kernel.asm	/^f010606a:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f010606d	obj/kern/kernel.asm	/^f010606d:	39 d9                	cmp    %ebx,%ecx$/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f:	72 05                	jb     f0106076 <printnum+0x36>$/;"	l
f0106071	obj/kern/kernel.asm	/^f0106071:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0106074	obj/kern/kernel.asm	/^f0106074:	77 69                	ja     f01060df <printnum+0x9f>$/;"	l
f0106076	obj/kern/kernel.asm	/^f0106076:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0106079	obj/kern/kernel.asm	/^f0106079:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f010607d	obj/kern/kernel.asm	/^f010607d:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106080	obj/kern/kernel.asm	/^f0106080:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106084	obj/kern/kernel.asm	/^f0106084:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f010608c	obj/kern/kernel.asm	/^f010608c:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0106090	obj/kern/kernel.asm	/^f0106090:	89 c3                	mov    %eax,%ebx$/;"	l
f0106092	obj/kern/kernel.asm	/^f0106092:	89 d6                	mov    %edx,%esi$/;"	l
f0106094	obj/kern/kernel.asm	/^f0106094:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0106097	obj/kern/kernel.asm	/^f0106097:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f010609a	obj/kern/kernel.asm	/^f010609a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010609e	obj/kern/kernel.asm	/^f010609e:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01060a2	obj/kern/kernel.asm	/^f01060a2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01060a5	obj/kern/kernel.asm	/^f01060a5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01060a8	obj/kern/kernel.asm	/^f01060a8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01060ab	obj/kern/kernel.asm	/^f01060ab:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01060af	obj/kern/kernel.asm	/^f01060af:	e8 4c 1d 00 00       	call   f0107e00 <__udivdi3>$/;"	l
f01060b4	obj/kern/kernel.asm	/^f01060b4:	89 d9                	mov    %ebx,%ecx$/;"	l
f01060b6	obj/kern/kernel.asm	/^f01060b6:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01060ba	obj/kern/kernel.asm	/^f01060ba:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01060be	obj/kern/kernel.asm	/^f01060be:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01060c1	obj/kern/kernel.asm	/^f01060c1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01060c5	obj/kern/kernel.asm	/^f01060c5:	89 fa                	mov    %edi,%edx$/;"	l
f01060c7	obj/kern/kernel.asm	/^f01060c7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01060ca	obj/kern/kernel.asm	/^f01060ca:	e8 71 ff ff ff       	call   f0106040 <printnum>$/;"	l
f01060cf	obj/kern/kernel.asm	/^f01060cf:	eb 1b                	jmp    f01060ec <printnum+0xac>$/;"	l
f01060d1	obj/kern/kernel.asm	/^f01060d1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01060d5	obj/kern/kernel.asm	/^f01060d5:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f01060d8	obj/kern/kernel.asm	/^f01060d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01060db	obj/kern/kernel.asm	/^f01060db:	ff d3                	call   *%ebx$/;"	l
f01060dd	obj/kern/kernel.asm	/^f01060dd:	eb 03                	jmp    f01060e2 <printnum+0xa2>$/;"	l
f01060df	obj/kern/kernel.asm	/^f01060df:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01060e2	obj/kern/kernel.asm	/^f01060e2:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01060e5	obj/kern/kernel.asm	/^f01060e5:	85 f6                	test   %esi,%esi$/;"	l
f01060e7	obj/kern/kernel.asm	/^f01060e7:	7f e8                	jg     f01060d1 <printnum+0x91>$/;"	l
f01060e9	obj/kern/kernel.asm	/^f01060e9:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f01060ec	obj/kern/kernel.asm	/^f01060ec:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01060f0	obj/kern/kernel.asm	/^f01060f0:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f01060f4	obj/kern/kernel.asm	/^f01060f4:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01060f7	obj/kern/kernel.asm	/^f01060f7:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01060fa	obj/kern/kernel.asm	/^f01060fa:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01060fe	obj/kern/kernel.asm	/^f01060fe:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106102	obj/kern/kernel.asm	/^f0106102:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0106105	obj/kern/kernel.asm	/^f0106105:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106108	obj/kern/kernel.asm	/^f0106108:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010610b	obj/kern/kernel.asm	/^f010610b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010610f	obj/kern/kernel.asm	/^f010610f:	e8 1c 1e 00 00       	call   f0107f30 <__umoddi3>$/;"	l
f0106114	obj/kern/kernel.asm	/^f0106114:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106118	obj/kern/kernel.asm	/^f0106118:	0f be 80 0c 9d 10 f0 	movsbl -0xfef62f4(%eax),%eax$/;"	l
f010611f	obj/kern/kernel.asm	/^f010611f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106122	obj/kern/kernel.asm	/^f0106122:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106125	obj/kern/kernel.asm	/^f0106125:	ff d0                	call   *%eax$/;"	l
f0106127	obj/kern/kernel.asm	/^f0106127:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f010612a	obj/kern/kernel.asm	/^f010612a:	5b                   	pop    %ebx$/;"	l
f010612b	obj/kern/kernel.asm	/^f010612b:	5e                   	pop    %esi$/;"	l
f010612c	obj/kern/kernel.asm	/^f010612c:	5f                   	pop    %edi$/;"	l
f010612d	obj/kern/kernel.asm	/^f010612d:	5d                   	pop    %ebp$/;"	l
f010612e	obj/kern/kernel.asm	/^f010612e:	c3                   	ret    $/;"	l
f010612f	obj/kern/kernel.asm	/^f010612f <getuint>:$/;"	l
f010612f	obj/kern/kernel.asm	/^f010612f:	55                   	push   %ebp$/;"	l
f0106130	obj/kern/kernel.asm	/^f0106130:	89 e5                	mov    %esp,%ebp$/;"	l
f0106132	obj/kern/kernel.asm	/^f0106132:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135:	7e 0e                	jle    f0106145 <getuint+0x16>$/;"	l
f0106137	obj/kern/kernel.asm	/^f0106137:	8b 10                	mov    (%eax),%edx$/;"	l
f0106139	obj/kern/kernel.asm	/^f0106139:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f010613c	obj/kern/kernel.asm	/^f010613c:	89 08                	mov    %ecx,(%eax)$/;"	l
f010613e	obj/kern/kernel.asm	/^f010613e:	8b 02                	mov    (%edx),%eax$/;"	l
f0106140	obj/kern/kernel.asm	/^f0106140:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0106143	obj/kern/kernel.asm	/^f0106143:	eb 22                	jmp    f0106167 <getuint+0x38>$/;"	l
f0106145	obj/kern/kernel.asm	/^f0106145:	85 d2                	test   %edx,%edx$/;"	l
f0106147	obj/kern/kernel.asm	/^f0106147:	74 10                	je     f0106159 <getuint+0x2a>$/;"	l
f0106149	obj/kern/kernel.asm	/^f0106149:	8b 10                	mov    (%eax),%edx$/;"	l
f010614b	obj/kern/kernel.asm	/^f010614b:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f010614e	obj/kern/kernel.asm	/^f010614e:	89 08                	mov    %ecx,(%eax)$/;"	l
f0106150	obj/kern/kernel.asm	/^f0106150:	8b 02                	mov    (%edx),%eax$/;"	l
f0106152	obj/kern/kernel.asm	/^f0106152:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106157	obj/kern/kernel.asm	/^f0106157:	eb 0e                	jmp    f0106167 <getuint+0x38>$/;"	l
f0106159	obj/kern/kernel.asm	/^f0106159:	8b 10                	mov    (%eax),%edx$/;"	l
f010615b	obj/kern/kernel.asm	/^f010615b:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f010615e	obj/kern/kernel.asm	/^f010615e:	89 08                	mov    %ecx,(%eax)$/;"	l
f0106160	obj/kern/kernel.asm	/^f0106160:	8b 02                	mov    (%edx),%eax$/;"	l
f0106162	obj/kern/kernel.asm	/^f0106162:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106167	obj/kern/kernel.asm	/^f0106167:	5d                   	pop    %ebp$/;"	l
f0106168	obj/kern/kernel.asm	/^f0106168:	c3                   	ret    $/;"	l
f0106169	obj/kern/kernel.asm	/^f0106169 <sprintputch>:$/;"	l
f0106169	obj/kern/kernel.asm	/^f0106169:	55                   	push   %ebp$/;"	l
f010616a	obj/kern/kernel.asm	/^f010616a:	89 e5                	mov    %esp,%ebp$/;"	l
f010616c	obj/kern/kernel.asm	/^f010616c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010616f	obj/kern/kernel.asm	/^f010616f:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0106173	obj/kern/kernel.asm	/^f0106173:	8b 10                	mov    (%eax),%edx$/;"	l
f0106175	obj/kern/kernel.asm	/^f0106175:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0106178	obj/kern/kernel.asm	/^f0106178:	73 0a                	jae    f0106184 <sprintputch+0x1b>$/;"	l
f010617a	obj/kern/kernel.asm	/^f010617a:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f010617d	obj/kern/kernel.asm	/^f010617d:	89 08                	mov    %ecx,(%eax)$/;"	l
f010617f	obj/kern/kernel.asm	/^f010617f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106182	obj/kern/kernel.asm	/^f0106182:	88 02                	mov    %al,(%edx)$/;"	l
f0106184	obj/kern/kernel.asm	/^f0106184:	5d                   	pop    %ebp$/;"	l
f0106185	obj/kern/kernel.asm	/^f0106185:	c3                   	ret    $/;"	l
f0106186	obj/kern/kernel.asm	/^f0106186 <printfmt>:$/;"	l
f0106186	obj/kern/kernel.asm	/^f0106186:	55                   	push   %ebp$/;"	l
f0106187	obj/kern/kernel.asm	/^f0106187:	89 e5                	mov    %esp,%ebp$/;"	l
f0106189	obj/kern/kernel.asm	/^f0106189:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010618c	obj/kern/kernel.asm	/^f010618c:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010618f	obj/kern/kernel.asm	/^f010618f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106193	obj/kern/kernel.asm	/^f0106193:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106196	obj/kern/kernel.asm	/^f0106196:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010619a	obj/kern/kernel.asm	/^f010619a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010619d	obj/kern/kernel.asm	/^f010619d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01061a1	obj/kern/kernel.asm	/^f01061a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01061a4	obj/kern/kernel.asm	/^f01061a4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01061a7	obj/kern/kernel.asm	/^f01061a7:	e8 02 00 00 00       	call   f01061ae <vprintfmt>$/;"	l
f01061ac	obj/kern/kernel.asm	/^f01061ac:	c9                   	leave  $/;"	l
f01061ad	obj/kern/kernel.asm	/^f01061ad:	c3                   	ret    $/;"	l
f01061ae	obj/kern/kernel.asm	/^f01061ae <vprintfmt>:$/;"	l
f01061ae	obj/kern/kernel.asm	/^f01061ae:	55                   	push   %ebp$/;"	l
f01061af	obj/kern/kernel.asm	/^f01061af:	89 e5                	mov    %esp,%ebp$/;"	l
f01061b1	obj/kern/kernel.asm	/^f01061b1:	57                   	push   %edi$/;"	l
f01061b2	obj/kern/kernel.asm	/^f01061b2:	56                   	push   %esi$/;"	l
f01061b3	obj/kern/kernel.asm	/^f01061b3:	53                   	push   %ebx$/;"	l
f01061b4	obj/kern/kernel.asm	/^f01061b4:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f01061c1	obj/kern/kernel.asm	/^f01061c1:	eb 37                	jmp    f01061fa <vprintfmt+0x4c>$/;"	l
f01061c3	obj/kern/kernel.asm	/^f01061c3:	85 c0                	test   %eax,%eax$/;"	l
f01061c5	obj/kern/kernel.asm	/^f01061c5:	0f 84 34 04 00 00    	je     f01065ff <vprintfmt+0x451>$/;"	l
f01061cb	obj/kern/kernel.asm	/^f01061cb:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01061cf	obj/kern/kernel.asm	/^f01061cf:	75 05                	jne    f01061d6 <vprintfmt+0x28>$/;"	l
f01061d1	obj/kern/kernel.asm	/^f01061d1:	80 cc 04             	or     $0x4,%ah$/;"	l
f01061d4	obj/kern/kernel.asm	/^f01061d4:	eb 0c                	jmp    f01061e2 <vprintfmt+0x34>$/;"	l
f01061d6	obj/kern/kernel.asm	/^f01061d6:	89 c2                	mov    %eax,%edx$/;"	l
f01061d8	obj/kern/kernel.asm	/^f01061d8:	80 ce 06             	or     $0x6,%dh$/;"	l
f01061db	obj/kern/kernel.asm	/^f01061db:	83 7d e4 01          	cmpl   $0x1,-0x1c(%ebp)$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f01061e2	obj/kern/kernel.asm	/^f01061e2:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01061e5	obj/kern/kernel.asm	/^f01061e5:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01061e9	obj/kern/kernel.asm	/^f01061e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01061ec	obj/kern/kernel.asm	/^f01061ec:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01061ef	obj/kern/kernel.asm	/^f01061ef:	89 fb                	mov    %edi,%ebx$/;"	l
f01061f1	obj/kern/kernel.asm	/^f01061f1:	eb 07                	jmp    f01061fa <vprintfmt+0x4c>$/;"	l
f01061f3	obj/kern/kernel.asm	/^f01061f3:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f01061fa	obj/kern/kernel.asm	/^f01061fa:	8d 7b 01             	lea    0x1(%ebx),%edi$/;"	l
f01061fd	obj/kern/kernel.asm	/^f01061fd:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0106200	obj/kern/kernel.asm	/^f0106200:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0106203	obj/kern/kernel.asm	/^f0106203:	75 be                	jne    f01061c3 <vprintfmt+0x15>$/;"	l
f0106205	obj/kern/kernel.asm	/^f0106205:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f0106209	obj/kern/kernel.asm	/^f0106209:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0106210	obj/kern/kernel.asm	/^f0106210:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f0106215	obj/kern/kernel.asm	/^f0106215:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%ebp)$/;"	l
f010621c	obj/kern/kernel.asm	/^f010621c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106221	obj/kern/kernel.asm	/^f0106221:	eb 18                	jmp    f010623b <vprintfmt+0x8d>$/;"	l
f0106223	obj/kern/kernel.asm	/^f0106223:	89 df                	mov    %ebx,%edi$/;"	l
f0106225	obj/kern/kernel.asm	/^f0106225:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f0106229	obj/kern/kernel.asm	/^f0106229:	eb 10                	jmp    f010623b <vprintfmt+0x8d>$/;"	l
f010622b	obj/kern/kernel.asm	/^f010622b:	89 df                	mov    %ebx,%edi$/;"	l
f010622d	obj/kern/kernel.asm	/^f010622d:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f0106231	obj/kern/kernel.asm	/^f0106231:	eb 08                	jmp    f010623b <vprintfmt+0x8d>$/;"	l
f0106233	obj/kern/kernel.asm	/^f0106233:	89 75 dc             	mov    %esi,-0x24(%ebp)$/;"	l
f0106236	obj/kern/kernel.asm	/^f0106236:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f010623b	obj/kern/kernel.asm	/^f010623b:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f010623e	obj/kern/kernel.asm	/^f010623e:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0106241	obj/kern/kernel.asm	/^f0106241:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0106244	obj/kern/kernel.asm	/^f0106244:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0106247	obj/kern/kernel.asm	/^f0106247:	3c 56                	cmp    $0x56,%al$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	0f 87 8d 03 00 00    	ja     f01065dc <vprintfmt+0x42e>$/;"	l
f010624f	obj/kern/kernel.asm	/^f010624f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106252	obj/kern/kernel.asm	/^f0106252:	ff 24 85 40 9e 10 f0 	jmp    *-0xfef61c0(,%eax,4)$/;"	l
f0106259	obj/kern/kernel.asm	/^f0106259:	89 df                	mov    %ebx,%edi$/;"	l
f010625b	obj/kern/kernel.asm	/^f010625b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106260	obj/kern/kernel.asm	/^f0106260:	8d 04 b6             	lea    (%esi,%esi,4),%eax$/;"	l
f0106263	obj/kern/kernel.asm	/^f0106263:	8d 74 41 d0          	lea    -0x30(%ecx,%eax,2),%esi$/;"	l
f0106267	obj/kern/kernel.asm	/^f0106267:	0f be 0f             	movsbl (%edi),%ecx$/;"	l
f010626a	obj/kern/kernel.asm	/^f010626a:	8d 41 d0             	lea    -0x30(%ecx),%eax$/;"	l
f010626d	obj/kern/kernel.asm	/^f010626d:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0106270	obj/kern/kernel.asm	/^f0106270:	77 33                	ja     f01062a5 <vprintfmt+0xf7>$/;"	l
f0106272	obj/kern/kernel.asm	/^f0106272:	83 c7 01             	add    $0x1,%edi$/;"	l
f0106275	obj/kern/kernel.asm	/^f0106275:	eb e9                	jmp    f0106260 <vprintfmt+0xb2>$/;"	l
f0106277	obj/kern/kernel.asm	/^f0106277:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010627a	obj/kern/kernel.asm	/^f010627a:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f010627d	obj/kern/kernel.asm	/^f010627d:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f0106280	obj/kern/kernel.asm	/^f0106280:	8b 30                	mov    (%eax),%esi$/;"	l
f0106282	obj/kern/kernel.asm	/^f0106282:	89 df                	mov    %ebx,%edi$/;"	l
f0106284	obj/kern/kernel.asm	/^f0106284:	eb 1f                	jmp    f01062a5 <vprintfmt+0xf7>$/;"	l
f0106286	obj/kern/kernel.asm	/^f0106286:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0106289	obj/kern/kernel.asm	/^f0106289:	85 c9                	test   %ecx,%ecx$/;"	l
f010628b	obj/kern/kernel.asm	/^f010628b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106290	obj/kern/kernel.asm	/^f0106290:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0106293	obj/kern/kernel.asm	/^f0106293:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0106296	obj/kern/kernel.asm	/^f0106296:	89 df                	mov    %ebx,%edi$/;"	l
f0106298	obj/kern/kernel.asm	/^f0106298:	eb a1                	jmp    f010623b <vprintfmt+0x8d>$/;"	l
f010629a	obj/kern/kernel.asm	/^f010629a:	89 df                	mov    %ebx,%edi$/;"	l
f010629c	obj/kern/kernel.asm	/^f010629c:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f01062a3	obj/kern/kernel.asm	/^f01062a3:	eb 96                	jmp    f010623b <vprintfmt+0x8d>$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f01062a9	obj/kern/kernel.asm	/^f01062a9:	79 90                	jns    f010623b <vprintfmt+0x8d>$/;"	l
f01062ab	obj/kern/kernel.asm	/^f01062ab:	eb 86                	jmp    f0106233 <vprintfmt+0x85>$/;"	l
f01062ad	obj/kern/kernel.asm	/^f01062ad:	83 c2 01             	add    $0x1,%edx$/;"	l
f01062b0	obj/kern/kernel.asm	/^f01062b0:	89 df                	mov    %ebx,%edi$/;"	l
f01062b2	obj/kern/kernel.asm	/^f01062b2:	eb 87                	jmp    f010623b <vprintfmt+0x8d>$/;"	l
f01062b4	obj/kern/kernel.asm	/^f01062b4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01062b7	obj/kern/kernel.asm	/^f01062b7:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01062ba	obj/kern/kernel.asm	/^f01062ba:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01062bd	obj/kern/kernel.asm	/^f01062bd:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01062c0	obj/kern/kernel.asm	/^f01062c0:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01062c4	obj/kern/kernel.asm	/^f01062c4:	8b 00                	mov    (%eax),%eax$/;"	l
f01062c6	obj/kern/kernel.asm	/^f01062c6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01062c9	obj/kern/kernel.asm	/^f01062c9:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01062cc	obj/kern/kernel.asm	/^f01062cc:	e9 29 ff ff ff       	jmp    f01061fa <vprintfmt+0x4c>$/;"	l
f01062d1	obj/kern/kernel.asm	/^f01062d1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01062d4	obj/kern/kernel.asm	/^f01062d4:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01062d7	obj/kern/kernel.asm	/^f01062d7:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01062da	obj/kern/kernel.asm	/^f01062da:	8b 00                	mov    (%eax),%eax$/;"	l
f01062dc	obj/kern/kernel.asm	/^f01062dc:	99                   	cltd   $/;"	l
f01062dd	obj/kern/kernel.asm	/^f01062dd:	31 d0                	xor    %edx,%eax$/;"	l
f01062df	obj/kern/kernel.asm	/^f01062df:	29 d0                	sub    %edx,%eax$/;"	l
f01062e1	obj/kern/kernel.asm	/^f01062e1:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f01062e4	obj/kern/kernel.asm	/^f01062e4:	7f 0b                	jg     f01062f1 <vprintfmt+0x143>$/;"	l
f01062e6	obj/kern/kernel.asm	/^f01062e6:	8b 14 85 a0 9f 10 f0 	mov    -0xfef6060(,%eax,4),%edx$/;"	l
f01062ed	obj/kern/kernel.asm	/^f01062ed:	85 d2                	test   %edx,%edx$/;"	l
f01062ef	obj/kern/kernel.asm	/^f01062ef:	75 23                	jne    f0106314 <vprintfmt+0x166>$/;"	l
f01062f1	obj/kern/kernel.asm	/^f01062f1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01062f5	obj/kern/kernel.asm	/^f01062f5:	c7 44 24 08 24 9d 10 	movl   $0xf0109d24,0x8(%esp)$/;"	l
f01062fc	obj/kern/kernel.asm	/^f01062fc:	f0 $/;"	l
f01062fd	obj/kern/kernel.asm	/^f01062fd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106300	obj/kern/kernel.asm	/^f0106300:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106304	obj/kern/kernel.asm	/^f0106304:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106307	obj/kern/kernel.asm	/^f0106307:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010630a	obj/kern/kernel.asm	/^f010630a:	e8 77 fe ff ff       	call   f0106186 <printfmt>$/;"	l
f010630f	obj/kern/kernel.asm	/^f010630f:	e9 e6 fe ff ff       	jmp    f01061fa <vprintfmt+0x4c>$/;"	l
f0106314	obj/kern/kernel.asm	/^f0106314:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106318	obj/kern/kernel.asm	/^f0106318:	c7 44 24 08 5e 84 10 	movl   $0xf010845e,0x8(%esp)$/;"	l
f010631f	obj/kern/kernel.asm	/^f010631f:	f0 $/;"	l
f0106320	obj/kern/kernel.asm	/^f0106320:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106323	obj/kern/kernel.asm	/^f0106323:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106327	obj/kern/kernel.asm	/^f0106327:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010632a	obj/kern/kernel.asm	/^f010632a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010632d	obj/kern/kernel.asm	/^f010632d:	e8 54 fe ff ff       	call   f0106186 <printfmt>$/;"	l
f0106332	obj/kern/kernel.asm	/^f0106332:	e9 c3 fe ff ff       	jmp    f01061fa <vprintfmt+0x4c>$/;"	l
f0106337	obj/kern/kernel.asm	/^f0106337:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010633a	obj/kern/kernel.asm	/^f010633a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010633d	obj/kern/kernel.asm	/^f010633d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106340	obj/kern/kernel.asm	/^f0106340:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106343	obj/kern/kernel.asm	/^f0106343:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106346	obj/kern/kernel.asm	/^f0106346:	8b 38                	mov    (%eax),%edi$/;"	l
f0106348	obj/kern/kernel.asm	/^f0106348:	85 ff                	test   %edi,%edi$/;"	l
f010634a	obj/kern/kernel.asm	/^f010634a:	b8 1d 9d 10 f0       	mov    $0xf0109d1d,%eax$/;"	l
f010634f	obj/kern/kernel.asm	/^f010634f:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0106352	obj/kern/kernel.asm	/^f0106352:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f0106356	obj/kern/kernel.asm	/^f0106356:	0f 84 96 00 00 00    	je     f01063f2 <vprintfmt+0x244>$/;"	l
f010635c	obj/kern/kernel.asm	/^f010635c:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0106360	obj/kern/kernel.asm	/^f0106360:	0f 8e 94 00 00 00    	jle    f01063fa <vprintfmt+0x24c>$/;"	l
f0106366	obj/kern/kernel.asm	/^f0106366:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010636a	obj/kern/kernel.asm	/^f010636a:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010636d	obj/kern/kernel.asm	/^f010636d:	e8 16 04 00 00       	call   f0106788 <strnlen>$/;"	l
f0106372	obj/kern/kernel.asm	/^f0106372:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0106375	obj/kern/kernel.asm	/^f0106375:	29 c1                	sub    %eax,%ecx$/;"	l
f0106377	obj/kern/kernel.asm	/^f0106377:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f010637a	obj/kern/kernel.asm	/^f010637a:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f010637e	obj/kern/kernel.asm	/^f010637e:	89 7d d8             	mov    %edi,-0x28(%ebp)$/;"	l
f0106381	obj/kern/kernel.asm	/^f0106381:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0106384	obj/kern/kernel.asm	/^f0106384:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106387	obj/kern/kernel.asm	/^f0106387:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f010638a	obj/kern/kernel.asm	/^f010638a:	89 cb                	mov    %ecx,%ebx$/;"	l
f010638c	obj/kern/kernel.asm	/^f010638c:	89 c7                	mov    %eax,%edi$/;"	l
f010638e	obj/kern/kernel.asm	/^f010638e:	eb 0f                	jmp    f010639f <vprintfmt+0x1f1>$/;"	l
f0106390	obj/kern/kernel.asm	/^f0106390:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106393	obj/kern/kernel.asm	/^f0106393:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106397	obj/kern/kernel.asm	/^f0106397:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010639a	obj/kern/kernel.asm	/^f010639a:	ff d6                	call   *%esi$/;"	l
f010639c	obj/kern/kernel.asm	/^f010639c:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010639f	obj/kern/kernel.asm	/^f010639f:	85 db                	test   %ebx,%ebx$/;"	l
f01063a1	obj/kern/kernel.asm	/^f01063a1:	7f ed                	jg     f0106390 <vprintfmt+0x1e2>$/;"	l
f01063a3	obj/kern/kernel.asm	/^f01063a3:	8b 7d d8             	mov    -0x28(%ebp),%edi$/;"	l
f01063a6	obj/kern/kernel.asm	/^f01063a6:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f01063a9	obj/kern/kernel.asm	/^f01063a9:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f01063ac	obj/kern/kernel.asm	/^f01063ac:	85 c9                	test   %ecx,%ecx$/;"	l
f01063ae	obj/kern/kernel.asm	/^f01063ae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01063b3	obj/kern/kernel.asm	/^f01063b3:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f01063b6	obj/kern/kernel.asm	/^f01063b6:	29 c1                	sub    %eax,%ecx$/;"	l
f01063b8	obj/kern/kernel.asm	/^f01063b8:	89 cb                	mov    %ecx,%ebx$/;"	l
f01063ba	obj/kern/kernel.asm	/^f01063ba:	eb 44                	jmp    f0106400 <vprintfmt+0x252>$/;"	l
f01063bc	obj/kern/kernel.asm	/^f01063bc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f01063c0	obj/kern/kernel.asm	/^f01063c0:	74 1e                	je     f01063e0 <vprintfmt+0x232>$/;"	l
f01063c2	obj/kern/kernel.asm	/^f01063c2:	0f be d2             	movsbl %dl,%edx$/;"	l
f01063c5	obj/kern/kernel.asm	/^f01063c5:	83 ea 20             	sub    $0x20,%edx$/;"	l
f01063c8	obj/kern/kernel.asm	/^f01063c8:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f01063cb	obj/kern/kernel.asm	/^f01063cb:	76 13                	jbe    f01063e0 <vprintfmt+0x232>$/;"	l
f01063cd	obj/kern/kernel.asm	/^f01063cd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01063d0	obj/kern/kernel.asm	/^f01063d0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01063d4	obj/kern/kernel.asm	/^f01063d4:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f01063db	obj/kern/kernel.asm	/^f01063db:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01063de	obj/kern/kernel.asm	/^f01063de:	eb 0d                	jmp    f01063ed <vprintfmt+0x23f>$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01063e3	obj/kern/kernel.asm	/^f01063e3:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01063e7	obj/kern/kernel.asm	/^f01063e7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01063ea	obj/kern/kernel.asm	/^f01063ea:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01063ed	obj/kern/kernel.asm	/^f01063ed:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01063f0	obj/kern/kernel.asm	/^f01063f0:	eb 0e                	jmp    f0106400 <vprintfmt+0x252>$/;"	l
f01063f2	obj/kern/kernel.asm	/^f01063f2:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f01063f5	obj/kern/kernel.asm	/^f01063f5:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f01063f8	obj/kern/kernel.asm	/^f01063f8:	eb 06                	jmp    f0106400 <vprintfmt+0x252>$/;"	l
f01063fa	obj/kern/kernel.asm	/^f01063fa:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f01063fd	obj/kern/kernel.asm	/^f01063fd:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0106400	obj/kern/kernel.asm	/^f0106400:	83 c7 01             	add    $0x1,%edi$/;"	l
f0106403	obj/kern/kernel.asm	/^f0106403:	0f b6 57 ff          	movzbl -0x1(%edi),%edx$/;"	l
f0106407	obj/kern/kernel.asm	/^f0106407:	0f be c2             	movsbl %dl,%eax$/;"	l
f010640a	obj/kern/kernel.asm	/^f010640a:	85 c0                	test   %eax,%eax$/;"	l
f010640c	obj/kern/kernel.asm	/^f010640c:	74 27                	je     f0106435 <vprintfmt+0x287>$/;"	l
f010640e	obj/kern/kernel.asm	/^f010640e:	85 f6                	test   %esi,%esi$/;"	l
f0106410	obj/kern/kernel.asm	/^f0106410:	78 aa                	js     f01063bc <vprintfmt+0x20e>$/;"	l
f0106412	obj/kern/kernel.asm	/^f0106412:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106415	obj/kern/kernel.asm	/^f0106415:	79 a5                	jns    f01063bc <vprintfmt+0x20e>$/;"	l
f0106417	obj/kern/kernel.asm	/^f0106417:	89 d8                	mov    %ebx,%eax$/;"	l
f0106419	obj/kern/kernel.asm	/^f0106419:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010641c	obj/kern/kernel.asm	/^f010641c:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f010641f	obj/kern/kernel.asm	/^f010641f:	89 c3                	mov    %eax,%ebx$/;"	l
f0106421	obj/kern/kernel.asm	/^f0106421:	eb 18                	jmp    f010643b <vprintfmt+0x28d>$/;"	l
f0106423	obj/kern/kernel.asm	/^f0106423:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106427	obj/kern/kernel.asm	/^f0106427:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f010642e	obj/kern/kernel.asm	/^f010642e:	ff d6                	call   *%esi$/;"	l
f0106430	obj/kern/kernel.asm	/^f0106430:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0106433	obj/kern/kernel.asm	/^f0106433:	eb 06                	jmp    f010643b <vprintfmt+0x28d>$/;"	l
f0106435	obj/kern/kernel.asm	/^f0106435:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106438	obj/kern/kernel.asm	/^f0106438:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f010643b	obj/kern/kernel.asm	/^f010643b:	85 db                	test   %ebx,%ebx$/;"	l
f010643d	obj/kern/kernel.asm	/^f010643d:	7f e4                	jg     f0106423 <vprintfmt+0x275>$/;"	l
f010643f	obj/kern/kernel.asm	/^f010643f:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0106442	obj/kern/kernel.asm	/^f0106442:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0106445	obj/kern/kernel.asm	/^f0106445:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0106448	obj/kern/kernel.asm	/^f0106448:	e9 ad fd ff ff       	jmp    f01061fa <vprintfmt+0x4c>$/;"	l
f010644d	obj/kern/kernel.asm	/^f010644d:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0106450	obj/kern/kernel.asm	/^f0106450:	7e 10                	jle    f0106462 <vprintfmt+0x2b4>$/;"	l
f0106452	obj/kern/kernel.asm	/^f0106452:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106455	obj/kern/kernel.asm	/^f0106455:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0106458	obj/kern/kernel.asm	/^f0106458:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010645b	obj/kern/kernel.asm	/^f010645b:	8b 30                	mov    (%eax),%esi$/;"	l
f010645d	obj/kern/kernel.asm	/^f010645d:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f0106460	obj/kern/kernel.asm	/^f0106460:	eb 26                	jmp    f0106488 <vprintfmt+0x2da>$/;"	l
f0106462	obj/kern/kernel.asm	/^f0106462:	85 d2                	test   %edx,%edx$/;"	l
f0106464	obj/kern/kernel.asm	/^f0106464:	74 12                	je     f0106478 <vprintfmt+0x2ca>$/;"	l
f0106466	obj/kern/kernel.asm	/^f0106466:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106469	obj/kern/kernel.asm	/^f0106469:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010646c	obj/kern/kernel.asm	/^f010646c:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010646f	obj/kern/kernel.asm	/^f010646f:	8b 30                	mov    (%eax),%esi$/;"	l
f0106471	obj/kern/kernel.asm	/^f0106471:	89 f7                	mov    %esi,%edi$/;"	l
f0106473	obj/kern/kernel.asm	/^f0106473:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f0106476	obj/kern/kernel.asm	/^f0106476:	eb 10                	jmp    f0106488 <vprintfmt+0x2da>$/;"	l
f0106478	obj/kern/kernel.asm	/^f0106478:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010647b	obj/kern/kernel.asm	/^f010647b:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010647e	obj/kern/kernel.asm	/^f010647e:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106481	obj/kern/kernel.asm	/^f0106481:	8b 30                	mov    (%eax),%esi$/;"	l
f0106483	obj/kern/kernel.asm	/^f0106483:	89 f7                	mov    %esi,%edi$/;"	l
f0106485	obj/kern/kernel.asm	/^f0106485:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f0106488	obj/kern/kernel.asm	/^f0106488:	89 f0                	mov    %esi,%eax$/;"	l
f010648a	obj/kern/kernel.asm	/^f010648a:	89 fa                	mov    %edi,%edx$/;"	l
f010648c	obj/kern/kernel.asm	/^f010648c:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0106491	obj/kern/kernel.asm	/^f0106491:	85 ff                	test   %edi,%edi$/;"	l
f0106493	obj/kern/kernel.asm	/^f0106493:	0f 89 07 01 00 00    	jns    f01065a0 <vprintfmt+0x3f2>$/;"	l
f0106499	obj/kern/kernel.asm	/^f0106499:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010649c	obj/kern/kernel.asm	/^f010649c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01064a0	obj/kern/kernel.asm	/^f01064a0:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f01064a7	obj/kern/kernel.asm	/^f01064a7:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01064aa	obj/kern/kernel.asm	/^f01064aa:	89 f0                	mov    %esi,%eax$/;"	l
f01064ac	obj/kern/kernel.asm	/^f01064ac:	89 fa                	mov    %edi,%edx$/;"	l
f01064ae	obj/kern/kernel.asm	/^f01064ae:	f7 d8                	neg    %eax$/;"	l
f01064b0	obj/kern/kernel.asm	/^f01064b0:	83 d2 00             	adc    $0x0,%edx$/;"	l
f01064b3	obj/kern/kernel.asm	/^f01064b3:	f7 da                	neg    %edx$/;"	l
f01064b5	obj/kern/kernel.asm	/^f01064b5:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f01064ba	obj/kern/kernel.asm	/^f01064ba:	e9 e1 00 00 00       	jmp    f01065a0 <vprintfmt+0x3f2>$/;"	l
f01064bf	obj/kern/kernel.asm	/^f01064bf:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01064c2	obj/kern/kernel.asm	/^f01064c2:	80 7f 01 65          	cmpb   $0x65,0x1(%edi)$/;"	l
f01064c6	obj/kern/kernel.asm	/^f01064c6:	0f 85 2e fd ff ff    	jne    f01061fa <vprintfmt+0x4c>$/;"	l
f01064cc	obj/kern/kernel.asm	/^f01064cc:	80 7f 02 64          	cmpb   $0x64,0x2(%edi)$/;"	l
f01064d0	obj/kern/kernel.asm	/^f01064d0:	0f 85 24 fd ff ff    	jne    f01061fa <vprintfmt+0x4c>$/;"	l
f01064d6	obj/kern/kernel.asm	/^f01064d6:	80 7f 03 20          	cmpb   $0x20,0x3(%edi)$/;"	l
f01064da	obj/kern/kernel.asm	/^f01064da:	0f 85 1a fd ff ff    	jne    f01061fa <vprintfmt+0x4c>$/;"	l
f01064e0	obj/kern/kernel.asm	/^f01064e0:	8d 5f 04             	lea    0x4(%edi),%ebx$/;"	l
f01064e3	obj/kern/kernel.asm	/^f01064e3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01064ea	obj/kern/kernel.asm	/^f01064ea:	e9 0b fd ff ff       	jmp    f01061fa <vprintfmt+0x4c>$/;"	l
f01064ef	obj/kern/kernel.asm	/^f01064ef:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01064f2	obj/kern/kernel.asm	/^f01064f2:	80 7f 01 65          	cmpb   $0x65,0x1(%edi)$/;"	l
f01064f6	obj/kern/kernel.asm	/^f01064f6:	0f 85 fe fc ff ff    	jne    f01061fa <vprintfmt+0x4c>$/;"	l
f01064fc	obj/kern/kernel.asm	/^f01064fc:	80 7f 02 6c          	cmpb   $0x6c,0x2(%edi)$/;"	l
f0106500	obj/kern/kernel.asm	/^f0106500:	0f 85 f4 fc ff ff    	jne    f01061fa <vprintfmt+0x4c>$/;"	l
f0106506	obj/kern/kernel.asm	/^f0106506:	80 7f 03 6c          	cmpb   $0x6c,0x3(%edi)$/;"	l
f010650a	obj/kern/kernel.asm	/^f010650a:	0f 85 ea fc ff ff    	jne    f01061fa <vprintfmt+0x4c>$/;"	l
f0106510	obj/kern/kernel.asm	/^f0106510:	80 7f 04 6f          	cmpb   $0x6f,0x4(%edi)$/;"	l
f0106514	obj/kern/kernel.asm	/^f0106514:	0f 85 e0 fc ff ff    	jne    f01061fa <vprintfmt+0x4c>$/;"	l
f010651a	obj/kern/kernel.asm	/^f010651a:	8d 5f 02             	lea    0x2(%edi),%ebx$/;"	l
f010651d	obj/kern/kernel.asm	/^f010651d:	80 7f 05 77          	cmpb   $0x77,0x5(%edi)$/;"	l
f0106521	obj/kern/kernel.asm	/^f0106521:	0f 85 d3 fc ff ff    	jne    f01061fa <vprintfmt+0x4c>$/;"	l
f0106527	obj/kern/kernel.asm	/^f0106527:	8d 5f 07             	lea    0x7(%edi),%ebx$/;"	l
f010652a	obj/kern/kernel.asm	/^f010652a:	80 7f 06 20          	cmpb   $0x20,0x6(%edi)$/;"	l
f010652e	obj/kern/kernel.asm	/^f010652e:	0f 84 bf fc ff ff    	je     f01061f3 <vprintfmt+0x45>$/;"	l
f0106534	obj/kern/kernel.asm	/^f0106534:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0106537	obj/kern/kernel.asm	/^f0106537:	e9 be fc ff ff       	jmp    f01061fa <vprintfmt+0x4c>$/;"	l
f010653c	obj/kern/kernel.asm	/^f010653c:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010653f	obj/kern/kernel.asm	/^f010653f:	e8 eb fb ff ff       	call   f010612f <getuint>$/;"	l
f0106544	obj/kern/kernel.asm	/^f0106544:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0106549	obj/kern/kernel.asm	/^f0106549:	eb 55                	jmp    f01065a0 <vprintfmt+0x3f2>$/;"	l
f010654b	obj/kern/kernel.asm	/^f010654b:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010654e	obj/kern/kernel.asm	/^f010654e:	e8 dc fb ff ff       	call   f010612f <getuint>$/;"	l
f0106553	obj/kern/kernel.asm	/^f0106553:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0106558	obj/kern/kernel.asm	/^f0106558:	eb 46                	jmp    f01065a0 <vprintfmt+0x3f2>$/;"	l
f010655a	obj/kern/kernel.asm	/^f010655a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010655d	obj/kern/kernel.asm	/^f010655d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106561	obj/kern/kernel.asm	/^f0106561:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0106568	obj/kern/kernel.asm	/^f0106568:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010656b	obj/kern/kernel.asm	/^f010656b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010656e	obj/kern/kernel.asm	/^f010656e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106572	obj/kern/kernel.asm	/^f0106572:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f0106579	obj/kern/kernel.asm	/^f0106579:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010657c	obj/kern/kernel.asm	/^f010657c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010657f	obj/kern/kernel.asm	/^f010657f:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106582	obj/kern/kernel.asm	/^f0106582:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106585	obj/kern/kernel.asm	/^f0106585:	8b 00                	mov    (%eax),%eax$/;"	l
f0106587	obj/kern/kernel.asm	/^f0106587:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010658c	obj/kern/kernel.asm	/^f010658c:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0106591	obj/kern/kernel.asm	/^f0106591:	eb 0d                	jmp    f01065a0 <vprintfmt+0x3f2>$/;"	l
f0106593	obj/kern/kernel.asm	/^f0106593:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106596	obj/kern/kernel.asm	/^f0106596:	e8 94 fb ff ff       	call   f010612f <getuint>$/;"	l
f010659b	obj/kern/kernel.asm	/^f010659b:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f01065a0	obj/kern/kernel.asm	/^f01065a0:	0f be 75 d8          	movsbl -0x28(%ebp),%esi$/;"	l
f01065a4	obj/kern/kernel.asm	/^f01065a4:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f01065a8	obj/kern/kernel.asm	/^f01065a8:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f01065ab	obj/kern/kernel.asm	/^f01065ab:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01065af	obj/kern/kernel.asm	/^f01065af:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01065b3	obj/kern/kernel.asm	/^f01065b3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01065b6	obj/kern/kernel.asm	/^f01065b6:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01065ba	obj/kern/kernel.asm	/^f01065ba:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01065bd	obj/kern/kernel.asm	/^f01065bd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01065c0	obj/kern/kernel.asm	/^f01065c0:	e8 7b fa ff ff       	call   f0106040 <printnum>$/;"	l
f01065c5	obj/kern/kernel.asm	/^f01065c5:	e9 30 fc ff ff       	jmp    f01061fa <vprintfmt+0x4c>$/;"	l
f01065ca	obj/kern/kernel.asm	/^f01065ca:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01065cd	obj/kern/kernel.asm	/^f01065cd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01065d1	obj/kern/kernel.asm	/^f01065d1:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01065d4	obj/kern/kernel.asm	/^f01065d4:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01065d7	obj/kern/kernel.asm	/^f01065d7:	e9 1e fc ff ff       	jmp    f01061fa <vprintfmt+0x4c>$/;"	l
f01065dc	obj/kern/kernel.asm	/^f01065dc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01065df	obj/kern/kernel.asm	/^f01065df:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01065e3	obj/kern/kernel.asm	/^f01065e3:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f01065ea	obj/kern/kernel.asm	/^f01065ea:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01065ed	obj/kern/kernel.asm	/^f01065ed:	89 fb                	mov    %edi,%ebx$/;"	l
f01065ef	obj/kern/kernel.asm	/^f01065ef:	eb 03                	jmp    f01065f4 <vprintfmt+0x446>$/;"	l
f01065f1	obj/kern/kernel.asm	/^f01065f1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01065f4	obj/kern/kernel.asm	/^f01065f4:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f01065f8	obj/kern/kernel.asm	/^f01065f8:	75 f7                	jne    f01065f1 <vprintfmt+0x443>$/;"	l
f01065fa	obj/kern/kernel.asm	/^f01065fa:	e9 fb fb ff ff       	jmp    f01061fa <vprintfmt+0x4c>$/;"	l
f01065ff	obj/kern/kernel.asm	/^f01065ff:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0106602	obj/kern/kernel.asm	/^f0106602:	5b                   	pop    %ebx$/;"	l
f0106603	obj/kern/kernel.asm	/^f0106603:	5e                   	pop    %esi$/;"	l
f0106604	obj/kern/kernel.asm	/^f0106604:	5f                   	pop    %edi$/;"	l
f0106605	obj/kern/kernel.asm	/^f0106605:	5d                   	pop    %ebp$/;"	l
f0106606	obj/kern/kernel.asm	/^f0106606:	c3                   	ret    $/;"	l
f0106607	obj/kern/kernel.asm	/^f0106607 <vsnprintf>:$/;"	l
f0106607	obj/kern/kernel.asm	/^f0106607:	55                   	push   %ebp$/;"	l
f0106608	obj/kern/kernel.asm	/^f0106608:	89 e5                	mov    %esp,%ebp$/;"	l
f010660a	obj/kern/kernel.asm	/^f010660a:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010660d	obj/kern/kernel.asm	/^f010660d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106610	obj/kern/kernel.asm	/^f0106610:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106613	obj/kern/kernel.asm	/^f0106613:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0106616	obj/kern/kernel.asm	/^f0106616:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f010661a	obj/kern/kernel.asm	/^f010661a:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f010661d	obj/kern/kernel.asm	/^f010661d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0106624	obj/kern/kernel.asm	/^f0106624:	85 c0                	test   %eax,%eax$/;"	l
f0106626	obj/kern/kernel.asm	/^f0106626:	74 30                	je     f0106658 <vsnprintf+0x51>$/;"	l
f0106628	obj/kern/kernel.asm	/^f0106628:	85 d2                	test   %edx,%edx$/;"	l
f010662a	obj/kern/kernel.asm	/^f010662a:	7e 2c                	jle    f0106658 <vsnprintf+0x51>$/;"	l
f010662c	obj/kern/kernel.asm	/^f010662c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010662f	obj/kern/kernel.asm	/^f010662f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106633	obj/kern/kernel.asm	/^f0106633:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106636	obj/kern/kernel.asm	/^f0106636:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010663a	obj/kern/kernel.asm	/^f010663a:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f010663d	obj/kern/kernel.asm	/^f010663d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106641	obj/kern/kernel.asm	/^f0106641:	c7 04 24 69 61 10 f0 	movl   $0xf0106169,(%esp)$/;"	l
f0106648	obj/kern/kernel.asm	/^f0106648:	e8 61 fb ff ff       	call   f01061ae <vprintfmt>$/;"	l
f010664d	obj/kern/kernel.asm	/^f010664d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0106650	obj/kern/kernel.asm	/^f0106650:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0106653	obj/kern/kernel.asm	/^f0106653:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106656	obj/kern/kernel.asm	/^f0106656:	eb 05                	jmp    f010665d <vsnprintf+0x56>$/;"	l
f0106658	obj/kern/kernel.asm	/^f0106658:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010665d	obj/kern/kernel.asm	/^f010665d:	c9                   	leave  $/;"	l
f010665e	obj/kern/kernel.asm	/^f010665e:	c3                   	ret    $/;"	l
f010665f	obj/kern/kernel.asm	/^f010665f <snprintf>:$/;"	l
f010665f	obj/kern/kernel.asm	/^f010665f:	55                   	push   %ebp$/;"	l
f0106660	obj/kern/kernel.asm	/^f0106660:	89 e5                	mov    %esp,%ebp$/;"	l
f0106662	obj/kern/kernel.asm	/^f0106662:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106665	obj/kern/kernel.asm	/^f0106665:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106668	obj/kern/kernel.asm	/^f0106668:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010666c	obj/kern/kernel.asm	/^f010666c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010666f	obj/kern/kernel.asm	/^f010666f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106673	obj/kern/kernel.asm	/^f0106673:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106676	obj/kern/kernel.asm	/^f0106676:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010667a	obj/kern/kernel.asm	/^f010667a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010667d	obj/kern/kernel.asm	/^f010667d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106680	obj/kern/kernel.asm	/^f0106680:	e8 82 ff ff ff       	call   f0106607 <vsnprintf>$/;"	l
f0106685	obj/kern/kernel.asm	/^f0106685:	c9                   	leave  $/;"	l
f0106686	obj/kern/kernel.asm	/^f0106686:	c3                   	ret    $/;"	l
f0106687	obj/kern/kernel.asm	/^f0106687:	66 90                	xchg   %ax,%ax$/;"	l
f0106689	obj/kern/kernel.asm	/^f0106689:	66 90                	xchg   %ax,%ax$/;"	l
f010668b	obj/kern/kernel.asm	/^f010668b:	66 90                	xchg   %ax,%ax$/;"	l
f010668d	obj/kern/kernel.asm	/^f010668d:	66 90                	xchg   %ax,%ax$/;"	l
f010668f	obj/kern/kernel.asm	/^f010668f:	90                   	nop$/;"	l
f0106690	obj/kern/kernel.asm	/^f0106690 <readline>:$/;"	l
f0106690	obj/kern/kernel.asm	/^f0106690:	55                   	push   %ebp$/;"	l
f0106691	obj/kern/kernel.asm	/^f0106691:	89 e5                	mov    %esp,%ebp$/;"	l
f0106693	obj/kern/kernel.asm	/^f0106693:	57                   	push   %edi$/;"	l
f0106694	obj/kern/kernel.asm	/^f0106694:	56                   	push   %esi$/;"	l
f0106695	obj/kern/kernel.asm	/^f0106695:	53                   	push   %ebx$/;"	l
f0106696	obj/kern/kernel.asm	/^f0106696:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106699	obj/kern/kernel.asm	/^f0106699:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010669c	obj/kern/kernel.asm	/^f010669c:	85 c0                	test   %eax,%eax$/;"	l
f010669e	obj/kern/kernel.asm	/^f010669e:	74 10                	je     f01066b0 <readline+0x20>$/;"	l
f01066a0	obj/kern/kernel.asm	/^f01066a0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01066a4	obj/kern/kernel.asm	/^f01066a4:	c7 04 24 5e 84 10 f0 	movl   $0xf010845e,(%esp)$/;"	l
f01066ab	obj/kern/kernel.asm	/^f01066ab:	e8 5a df ff ff       	call   f010460a <cprintf>$/;"	l
f01066b0	obj/kern/kernel.asm	/^f01066b0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01066b7	obj/kern/kernel.asm	/^f01066b7:	e8 a0 a1 ff ff       	call   f010085c <iscons>$/;"	l
f01066bc	obj/kern/kernel.asm	/^f01066bc:	89 c7                	mov    %eax,%edi$/;"	l
f01066be	obj/kern/kernel.asm	/^f01066be:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01066c3	obj/kern/kernel.asm	/^f01066c3:	e8 83 a1 ff ff       	call   f010084b <getchar>$/;"	l
f01066c8	obj/kern/kernel.asm	/^f01066c8:	89 c3                	mov    %eax,%ebx$/;"	l
f01066ca	obj/kern/kernel.asm	/^f01066ca:	85 c0                	test   %eax,%eax$/;"	l
f01066cc	obj/kern/kernel.asm	/^f01066cc:	79 25                	jns    f01066f3 <readline+0x63>$/;"	l
f01066ce	obj/kern/kernel.asm	/^f01066ce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01066d3	obj/kern/kernel.asm	/^f01066d3:	83 fb f8             	cmp    $0xfffffff8,%ebx$/;"	l
f01066d6	obj/kern/kernel.asm	/^f01066d6:	0f 84 89 00 00 00    	je     f0106765 <readline+0xd5>$/;"	l
f01066dc	obj/kern/kernel.asm	/^f01066dc:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01066e0	obj/kern/kernel.asm	/^f01066e0:	c7 04 24 ff 9f 10 f0 	movl   $0xf0109fff,(%esp)$/;"	l
f01066e7	obj/kern/kernel.asm	/^f01066e7:	e8 1e df ff ff       	call   f010460a <cprintf>$/;"	l
f01066ec	obj/kern/kernel.asm	/^f01066ec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01066f1	obj/kern/kernel.asm	/^f01066f1:	eb 72                	jmp    f0106765 <readline+0xd5>$/;"	l
f01066f3	obj/kern/kernel.asm	/^f01066f3:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01066f6	obj/kern/kernel.asm	/^f01066f6:	74 05                	je     f01066fd <readline+0x6d>$/;"	l
f01066f8	obj/kern/kernel.asm	/^f01066f8:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01066fb	obj/kern/kernel.asm	/^f01066fb:	75 1a                	jne    f0106717 <readline+0x87>$/;"	l
f01066fd	obj/kern/kernel.asm	/^f01066fd:	85 f6                	test   %esi,%esi$/;"	l
f01066ff	obj/kern/kernel.asm	/^f01066ff:	90                   	nop$/;"	l
f0106700	obj/kern/kernel.asm	/^f0106700:	7e 15                	jle    f0106717 <readline+0x87>$/;"	l
f0106702	obj/kern/kernel.asm	/^f0106702:	85 ff                	test   %edi,%edi$/;"	l
f0106704	obj/kern/kernel.asm	/^f0106704:	74 0c                	je     f0106712 <readline+0x82>$/;"	l
f0106706	obj/kern/kernel.asm	/^f0106706:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f010670d	obj/kern/kernel.asm	/^f010670d:	e8 29 a1 ff ff       	call   f010083b <cputchar>$/;"	l
f0106712	obj/kern/kernel.asm	/^f0106712:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106715	obj/kern/kernel.asm	/^f0106715:	eb ac                	jmp    f01066c3 <readline+0x33>$/;"	l
f0106717	obj/kern/kernel.asm	/^f0106717:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f010671d	obj/kern/kernel.asm	/^f010671d:	7f 1c                	jg     f010673b <readline+0xab>$/;"	l
f010671f	obj/kern/kernel.asm	/^f010671f:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0106722	obj/kern/kernel.asm	/^f0106722:	7e 17                	jle    f010673b <readline+0xab>$/;"	l
f0106724	obj/kern/kernel.asm	/^f0106724:	85 ff                	test   %edi,%edi$/;"	l
f0106726	obj/kern/kernel.asm	/^f0106726:	74 08                	je     f0106730 <readline+0xa0>$/;"	l
f0106728	obj/kern/kernel.asm	/^f0106728:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010672b	obj/kern/kernel.asm	/^f010672b:	e8 0b a1 ff ff       	call   f010083b <cputchar>$/;"	l
f0106730	obj/kern/kernel.asm	/^f0106730:	88 9e 80 4a 2c f0    	mov    %bl,-0xfd3b580(%esi)$/;"	l
f0106736	obj/kern/kernel.asm	/^f0106736:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f0106739	obj/kern/kernel.asm	/^f0106739:	eb 88                	jmp    f01066c3 <readline+0x33>$/;"	l
f010673b	obj/kern/kernel.asm	/^f010673b:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f010673e	obj/kern/kernel.asm	/^f010673e:	74 09                	je     f0106749 <readline+0xb9>$/;"	l
f0106740	obj/kern/kernel.asm	/^f0106740:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0106743	obj/kern/kernel.asm	/^f0106743:	0f 85 7a ff ff ff    	jne    f01066c3 <readline+0x33>$/;"	l
f0106749	obj/kern/kernel.asm	/^f0106749:	85 ff                	test   %edi,%edi$/;"	l
f010674b	obj/kern/kernel.asm	/^f010674b:	74 0c                	je     f0106759 <readline+0xc9>$/;"	l
f010674d	obj/kern/kernel.asm	/^f010674d:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f0106754	obj/kern/kernel.asm	/^f0106754:	e8 e2 a0 ff ff       	call   f010083b <cputchar>$/;"	l
f0106759	obj/kern/kernel.asm	/^f0106759:	c6 86 80 4a 2c f0 00 	movb   $0x0,-0xfd3b580(%esi)$/;"	l
f0106760	obj/kern/kernel.asm	/^f0106760:	b8 80 4a 2c f0       	mov    $0xf02c4a80,%eax$/;"	l
f0106765	obj/kern/kernel.asm	/^f0106765:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106768	obj/kern/kernel.asm	/^f0106768:	5b                   	pop    %ebx$/;"	l
f0106769	obj/kern/kernel.asm	/^f0106769:	5e                   	pop    %esi$/;"	l
f010676a	obj/kern/kernel.asm	/^f010676a:	5f                   	pop    %edi$/;"	l
f010676b	obj/kern/kernel.asm	/^f010676b:	5d                   	pop    %ebp$/;"	l
f010676c	obj/kern/kernel.asm	/^f010676c:	c3                   	ret    $/;"	l
f010676d	obj/kern/kernel.asm	/^f010676d:	66 90                	xchg   %ax,%ax$/;"	l
f010676f	obj/kern/kernel.asm	/^f010676f:	90                   	nop$/;"	l
f0106770	obj/kern/kernel.asm	/^f0106770 <strlen>:$/;"	l
f0106770	obj/kern/kernel.asm	/^f0106770:	55                   	push   %ebp$/;"	l
f0106771	obj/kern/kernel.asm	/^f0106771:	89 e5                	mov    %esp,%ebp$/;"	l
f0106773	obj/kern/kernel.asm	/^f0106773:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106776	obj/kern/kernel.asm	/^f0106776:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010677b	obj/kern/kernel.asm	/^f010677b:	eb 03                	jmp    f0106780 <strlen+0x10>$/;"	l
f010677d	obj/kern/kernel.asm	/^f010677d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106780	obj/kern/kernel.asm	/^f0106780:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0106784	obj/kern/kernel.asm	/^f0106784:	75 f7                	jne    f010677d <strlen+0xd>$/;"	l
f0106786	obj/kern/kernel.asm	/^f0106786:	5d                   	pop    %ebp$/;"	l
f0106787	obj/kern/kernel.asm	/^f0106787:	c3                   	ret    $/;"	l
f0106788	obj/kern/kernel.asm	/^f0106788 <strnlen>:$/;"	l
f0106788	obj/kern/kernel.asm	/^f0106788:	55                   	push   %ebp$/;"	l
f0106789	obj/kern/kernel.asm	/^f0106789:	89 e5                	mov    %esp,%ebp$/;"	l
f010678b	obj/kern/kernel.asm	/^f010678b:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010678e	obj/kern/kernel.asm	/^f010678e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106791	obj/kern/kernel.asm	/^f0106791:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106796	obj/kern/kernel.asm	/^f0106796:	eb 03                	jmp    f010679b <strnlen+0x13>$/;"	l
f0106798	obj/kern/kernel.asm	/^f0106798:	83 c0 01             	add    $0x1,%eax$/;"	l
f010679b	obj/kern/kernel.asm	/^f010679b:	39 d0                	cmp    %edx,%eax$/;"	l
f010679d	obj/kern/kernel.asm	/^f010679d:	74 06                	je     f01067a5 <strnlen+0x1d>$/;"	l
f010679f	obj/kern/kernel.asm	/^f010679f:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f01067a3	obj/kern/kernel.asm	/^f01067a3:	75 f3                	jne    f0106798 <strnlen+0x10>$/;"	l
f01067a5	obj/kern/kernel.asm	/^f01067a5:	5d                   	pop    %ebp$/;"	l
f01067a6	obj/kern/kernel.asm	/^f01067a6:	c3                   	ret    $/;"	l
f01067a7	obj/kern/kernel.asm	/^f01067a7 <strcpy>:$/;"	l
f01067a7	obj/kern/kernel.asm	/^f01067a7:	55                   	push   %ebp$/;"	l
f01067a8	obj/kern/kernel.asm	/^f01067a8:	89 e5                	mov    %esp,%ebp$/;"	l
f01067aa	obj/kern/kernel.asm	/^f01067aa:	53                   	push   %ebx$/;"	l
f01067ab	obj/kern/kernel.asm	/^f01067ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01067ae	obj/kern/kernel.asm	/^f01067ae:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01067b1	obj/kern/kernel.asm	/^f01067b1:	89 c2                	mov    %eax,%edx$/;"	l
f01067b3	obj/kern/kernel.asm	/^f01067b3:	83 c2 01             	add    $0x1,%edx$/;"	l
f01067b6	obj/kern/kernel.asm	/^f01067b6:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01067b9	obj/kern/kernel.asm	/^f01067b9:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f01067bd	obj/kern/kernel.asm	/^f01067bd:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f01067c0	obj/kern/kernel.asm	/^f01067c0:	84 db                	test   %bl,%bl$/;"	l
f01067c2	obj/kern/kernel.asm	/^f01067c2:	75 ef                	jne    f01067b3 <strcpy+0xc>$/;"	l
f01067c4	obj/kern/kernel.asm	/^f01067c4:	5b                   	pop    %ebx$/;"	l
f01067c5	obj/kern/kernel.asm	/^f01067c5:	5d                   	pop    %ebp$/;"	l
f01067c6	obj/kern/kernel.asm	/^f01067c6:	c3                   	ret    $/;"	l
f01067c7	obj/kern/kernel.asm	/^f01067c7 <strcat>:$/;"	l
f01067c7	obj/kern/kernel.asm	/^f01067c7:	55                   	push   %ebp$/;"	l
f01067c8	obj/kern/kernel.asm	/^f01067c8:	89 e5                	mov    %esp,%ebp$/;"	l
f01067ca	obj/kern/kernel.asm	/^f01067ca:	53                   	push   %ebx$/;"	l
f01067cb	obj/kern/kernel.asm	/^f01067cb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01067ce	obj/kern/kernel.asm	/^f01067ce:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01067d1	obj/kern/kernel.asm	/^f01067d1:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01067d4	obj/kern/kernel.asm	/^f01067d4:	e8 97 ff ff ff       	call   f0106770 <strlen>$/;"	l
f01067d9	obj/kern/kernel.asm	/^f01067d9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01067dc	obj/kern/kernel.asm	/^f01067dc:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01067e0	obj/kern/kernel.asm	/^f01067e0:	01 d8                	add    %ebx,%eax$/;"	l
f01067e2	obj/kern/kernel.asm	/^f01067e2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01067e5	obj/kern/kernel.asm	/^f01067e5:	e8 bd ff ff ff       	call   f01067a7 <strcpy>$/;"	l
f01067ea	obj/kern/kernel.asm	/^f01067ea:	89 d8                	mov    %ebx,%eax$/;"	l
f01067ec	obj/kern/kernel.asm	/^f01067ec:	83 c4 08             	add    $0x8,%esp$/;"	l
f01067ef	obj/kern/kernel.asm	/^f01067ef:	5b                   	pop    %ebx$/;"	l
f01067f0	obj/kern/kernel.asm	/^f01067f0:	5d                   	pop    %ebp$/;"	l
f01067f1	obj/kern/kernel.asm	/^f01067f1:	c3                   	ret    $/;"	l
f01067f2	obj/kern/kernel.asm	/^f01067f2 <strncpy>:$/;"	l
f01067f2	obj/kern/kernel.asm	/^f01067f2:	55                   	push   %ebp$/;"	l
f01067f3	obj/kern/kernel.asm	/^f01067f3:	89 e5                	mov    %esp,%ebp$/;"	l
f01067f5	obj/kern/kernel.asm	/^f01067f5:	56                   	push   %esi$/;"	l
f01067f6	obj/kern/kernel.asm	/^f01067f6:	53                   	push   %ebx$/;"	l
f01067f7	obj/kern/kernel.asm	/^f01067f7:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01067fa	obj/kern/kernel.asm	/^f01067fa:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01067fd	obj/kern/kernel.asm	/^f01067fd:	89 f3                	mov    %esi,%ebx$/;"	l
f01067ff	obj/kern/kernel.asm	/^f01067ff:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0106802	obj/kern/kernel.asm	/^f0106802:	89 f2                	mov    %esi,%edx$/;"	l
f0106804	obj/kern/kernel.asm	/^f0106804:	eb 0f                	jmp    f0106815 <strncpy+0x23>$/;"	l
f0106806	obj/kern/kernel.asm	/^f0106806:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106809	obj/kern/kernel.asm	/^f0106809:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010680c	obj/kern/kernel.asm	/^f010680c:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f010680f	obj/kern/kernel.asm	/^f010680f:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f0106812	obj/kern/kernel.asm	/^f0106812:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f0106815	obj/kern/kernel.asm	/^f0106815:	39 da                	cmp    %ebx,%edx$/;"	l
f0106817	obj/kern/kernel.asm	/^f0106817:	75 ed                	jne    f0106806 <strncpy+0x14>$/;"	l
f0106819	obj/kern/kernel.asm	/^f0106819:	89 f0                	mov    %esi,%eax$/;"	l
f010681b	obj/kern/kernel.asm	/^f010681b:	5b                   	pop    %ebx$/;"	l
f010681c	obj/kern/kernel.asm	/^f010681c:	5e                   	pop    %esi$/;"	l
f010681d	obj/kern/kernel.asm	/^f010681d:	5d                   	pop    %ebp$/;"	l
f010681e	obj/kern/kernel.asm	/^f010681e:	c3                   	ret    $/;"	l
f010681f	obj/kern/kernel.asm	/^f010681f <strlcpy>:$/;"	l
f010681f	obj/kern/kernel.asm	/^f010681f:	55                   	push   %ebp$/;"	l
f0106820	obj/kern/kernel.asm	/^f0106820:	89 e5                	mov    %esp,%ebp$/;"	l
f0106822	obj/kern/kernel.asm	/^f0106822:	56                   	push   %esi$/;"	l
f0106823	obj/kern/kernel.asm	/^f0106823:	53                   	push   %ebx$/;"	l
f0106824	obj/kern/kernel.asm	/^f0106824:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106827	obj/kern/kernel.asm	/^f0106827:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010682a	obj/kern/kernel.asm	/^f010682a:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010682d	obj/kern/kernel.asm	/^f010682d:	89 f0                	mov    %esi,%eax$/;"	l
f010682f	obj/kern/kernel.asm	/^f010682f:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebx$/;"	l
f0106833	obj/kern/kernel.asm	/^f0106833:	85 c9                	test   %ecx,%ecx$/;"	l
f0106835	obj/kern/kernel.asm	/^f0106835:	75 0b                	jne    f0106842 <strlcpy+0x23>$/;"	l
f0106837	obj/kern/kernel.asm	/^f0106837:	eb 1d                	jmp    f0106856 <strlcpy+0x37>$/;"	l
f0106839	obj/kern/kernel.asm	/^f0106839:	83 c0 01             	add    $0x1,%eax$/;"	l
f010683c	obj/kern/kernel.asm	/^f010683c:	83 c2 01             	add    $0x1,%edx$/;"	l
f010683f	obj/kern/kernel.asm	/^f010683f:	88 48 ff             	mov    %cl,-0x1(%eax)$/;"	l
f0106842	obj/kern/kernel.asm	/^f0106842:	39 d8                	cmp    %ebx,%eax$/;"	l
f0106844	obj/kern/kernel.asm	/^f0106844:	74 0b                	je     f0106851 <strlcpy+0x32>$/;"	l
f0106846	obj/kern/kernel.asm	/^f0106846:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106849	obj/kern/kernel.asm	/^f0106849:	84 c9                	test   %cl,%cl$/;"	l
f010684b	obj/kern/kernel.asm	/^f010684b:	75 ec                	jne    f0106839 <strlcpy+0x1a>$/;"	l
f010684d	obj/kern/kernel.asm	/^f010684d:	89 c2                	mov    %eax,%edx$/;"	l
f010684f	obj/kern/kernel.asm	/^f010684f:	eb 02                	jmp    f0106853 <strlcpy+0x34>$/;"	l
f0106851	obj/kern/kernel.asm	/^f0106851:	89 c2                	mov    %eax,%edx$/;"	l
f0106853	obj/kern/kernel.asm	/^f0106853:	c6 02 00             	movb   $0x0,(%edx)$/;"	l
f0106856	obj/kern/kernel.asm	/^f0106856:	29 f0                	sub    %esi,%eax$/;"	l
f0106858	obj/kern/kernel.asm	/^f0106858:	5b                   	pop    %ebx$/;"	l
f0106859	obj/kern/kernel.asm	/^f0106859:	5e                   	pop    %esi$/;"	l
f010685a	obj/kern/kernel.asm	/^f010685a:	5d                   	pop    %ebp$/;"	l
f010685b	obj/kern/kernel.asm	/^f010685b:	c3                   	ret    $/;"	l
f010685c	obj/kern/kernel.asm	/^f010685c <strcmp>:$/;"	l
f010685c	obj/kern/kernel.asm	/^f010685c:	55                   	push   %ebp$/;"	l
f010685d	obj/kern/kernel.asm	/^f010685d:	89 e5                	mov    %esp,%ebp$/;"	l
f010685f	obj/kern/kernel.asm	/^f010685f:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0106862	obj/kern/kernel.asm	/^f0106862:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106865	obj/kern/kernel.asm	/^f0106865:	eb 06                	jmp    f010686d <strcmp+0x11>$/;"	l
f0106867	obj/kern/kernel.asm	/^f0106867:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010686a	obj/kern/kernel.asm	/^f010686a:	83 c2 01             	add    $0x1,%edx$/;"	l
f010686d	obj/kern/kernel.asm	/^f010686d:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0106870	obj/kern/kernel.asm	/^f0106870:	84 c0                	test   %al,%al$/;"	l
f0106872	obj/kern/kernel.asm	/^f0106872:	74 04                	je     f0106878 <strcmp+0x1c>$/;"	l
f0106874	obj/kern/kernel.asm	/^f0106874:	3a 02                	cmp    (%edx),%al$/;"	l
f0106876	obj/kern/kernel.asm	/^f0106876:	74 ef                	je     f0106867 <strcmp+0xb>$/;"	l
f0106878	obj/kern/kernel.asm	/^f0106878:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010687b	obj/kern/kernel.asm	/^f010687b:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010687e	obj/kern/kernel.asm	/^f010687e:	29 d0                	sub    %edx,%eax$/;"	l
f0106880	obj/kern/kernel.asm	/^f0106880:	5d                   	pop    %ebp$/;"	l
f0106881	obj/kern/kernel.asm	/^f0106881:	c3                   	ret    $/;"	l
f0106882	obj/kern/kernel.asm	/^f0106882 <strncmp>:$/;"	l
f0106882	obj/kern/kernel.asm	/^f0106882:	55                   	push   %ebp$/;"	l
f0106883	obj/kern/kernel.asm	/^f0106883:	89 e5                	mov    %esp,%ebp$/;"	l
f0106885	obj/kern/kernel.asm	/^f0106885:	53                   	push   %ebx$/;"	l
f0106886	obj/kern/kernel.asm	/^f0106886:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106889	obj/kern/kernel.asm	/^f0106889:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010688c	obj/kern/kernel.asm	/^f010688c:	89 c3                	mov    %eax,%ebx$/;"	l
f010688e	obj/kern/kernel.asm	/^f010688e:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0106891	obj/kern/kernel.asm	/^f0106891:	eb 06                	jmp    f0106899 <strncmp+0x17>$/;"	l
f0106893	obj/kern/kernel.asm	/^f0106893:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106896	obj/kern/kernel.asm	/^f0106896:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106899	obj/kern/kernel.asm	/^f0106899:	39 d8                	cmp    %ebx,%eax$/;"	l
f010689b	obj/kern/kernel.asm	/^f010689b:	74 15                	je     f01068b2 <strncmp+0x30>$/;"	l
f010689d	obj/kern/kernel.asm	/^f010689d:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f01068a0	obj/kern/kernel.asm	/^f01068a0:	84 c9                	test   %cl,%cl$/;"	l
f01068a2	obj/kern/kernel.asm	/^f01068a2:	74 04                	je     f01068a8 <strncmp+0x26>$/;"	l
f01068a4	obj/kern/kernel.asm	/^f01068a4:	3a 0a                	cmp    (%edx),%cl$/;"	l
f01068a6	obj/kern/kernel.asm	/^f01068a6:	74 eb                	je     f0106893 <strncmp+0x11>$/;"	l
f01068a8	obj/kern/kernel.asm	/^f01068a8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01068ab	obj/kern/kernel.asm	/^f01068ab:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01068ae	obj/kern/kernel.asm	/^f01068ae:	29 d0                	sub    %edx,%eax$/;"	l
f01068b0	obj/kern/kernel.asm	/^f01068b0:	eb 05                	jmp    f01068b7 <strncmp+0x35>$/;"	l
f01068b2	obj/kern/kernel.asm	/^f01068b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01068b7	obj/kern/kernel.asm	/^f01068b7:	5b                   	pop    %ebx$/;"	l
f01068b8	obj/kern/kernel.asm	/^f01068b8:	5d                   	pop    %ebp$/;"	l
f01068b9	obj/kern/kernel.asm	/^f01068b9:	c3                   	ret    $/;"	l
f01068ba	obj/kern/kernel.asm	/^f01068ba <strchr>:$/;"	l
f01068ba	obj/kern/kernel.asm	/^f01068ba:	55                   	push   %ebp$/;"	l
f01068bb	obj/kern/kernel.asm	/^f01068bb:	89 e5                	mov    %esp,%ebp$/;"	l
f01068bd	obj/kern/kernel.asm	/^f01068bd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01068c0	obj/kern/kernel.asm	/^f01068c0:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01068c4	obj/kern/kernel.asm	/^f01068c4:	eb 07                	jmp    f01068cd <strchr+0x13>$/;"	l
f01068c6	obj/kern/kernel.asm	/^f01068c6:	38 ca                	cmp    %cl,%dl$/;"	l
f01068c8	obj/kern/kernel.asm	/^f01068c8:	74 0f                	je     f01068d9 <strchr+0x1f>$/;"	l
f01068ca	obj/kern/kernel.asm	/^f01068ca:	83 c0 01             	add    $0x1,%eax$/;"	l
f01068cd	obj/kern/kernel.asm	/^f01068cd:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01068d0	obj/kern/kernel.asm	/^f01068d0:	84 d2                	test   %dl,%dl$/;"	l
f01068d2	obj/kern/kernel.asm	/^f01068d2:	75 f2                	jne    f01068c6 <strchr+0xc>$/;"	l
f01068d4	obj/kern/kernel.asm	/^f01068d4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01068d9	obj/kern/kernel.asm	/^f01068d9:	5d                   	pop    %ebp$/;"	l
f01068da	obj/kern/kernel.asm	/^f01068da:	c3                   	ret    $/;"	l
f01068db	obj/kern/kernel.asm	/^f01068db <strfind>:$/;"	l
f01068db	obj/kern/kernel.asm	/^f01068db:	55                   	push   %ebp$/;"	l
f01068dc	obj/kern/kernel.asm	/^f01068dc:	89 e5                	mov    %esp,%ebp$/;"	l
f01068de	obj/kern/kernel.asm	/^f01068de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01068e1	obj/kern/kernel.asm	/^f01068e1:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01068e5	obj/kern/kernel.asm	/^f01068e5:	eb 07                	jmp    f01068ee <strfind+0x13>$/;"	l
f01068e7	obj/kern/kernel.asm	/^f01068e7:	38 ca                	cmp    %cl,%dl$/;"	l
f01068e9	obj/kern/kernel.asm	/^f01068e9:	74 0a                	je     f01068f5 <strfind+0x1a>$/;"	l
f01068eb	obj/kern/kernel.asm	/^f01068eb:	83 c0 01             	add    $0x1,%eax$/;"	l
f01068ee	obj/kern/kernel.asm	/^f01068ee:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01068f1	obj/kern/kernel.asm	/^f01068f1:	84 d2                	test   %dl,%dl$/;"	l
f01068f3	obj/kern/kernel.asm	/^f01068f3:	75 f2                	jne    f01068e7 <strfind+0xc>$/;"	l
f01068f5	obj/kern/kernel.asm	/^f01068f5:	5d                   	pop    %ebp$/;"	l
f01068f6	obj/kern/kernel.asm	/^f01068f6:	c3                   	ret    $/;"	l
f01068f7	obj/kern/kernel.asm	/^f01068f7 <memset>:$/;"	l
f01068f7	obj/kern/kernel.asm	/^f01068f7:	55                   	push   %ebp$/;"	l
f01068f8	obj/kern/kernel.asm	/^f01068f8:	89 e5                	mov    %esp,%ebp$/;"	l
f01068fa	obj/kern/kernel.asm	/^f01068fa:	57                   	push   %edi$/;"	l
f01068fb	obj/kern/kernel.asm	/^f01068fb:	56                   	push   %esi$/;"	l
f01068fc	obj/kern/kernel.asm	/^f01068fc:	53                   	push   %ebx$/;"	l
f01068fd	obj/kern/kernel.asm	/^f01068fd:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0106900	obj/kern/kernel.asm	/^f0106900:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106903	obj/kern/kernel.asm	/^f0106903:	85 c9                	test   %ecx,%ecx$/;"	l
f0106905	obj/kern/kernel.asm	/^f0106905:	74 36                	je     f010693d <memset+0x46>$/;"	l
f0106907	obj/kern/kernel.asm	/^f0106907:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f010690d	obj/kern/kernel.asm	/^f010690d:	75 28                	jne    f0106937 <memset+0x40>$/;"	l
f010690f	obj/kern/kernel.asm	/^f010690f:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106912	obj/kern/kernel.asm	/^f0106912:	75 23                	jne    f0106937 <memset+0x40>$/;"	l
f0106914	obj/kern/kernel.asm	/^f0106914:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f0106918	obj/kern/kernel.asm	/^f0106918:	89 d3                	mov    %edx,%ebx$/;"	l
f010691a	obj/kern/kernel.asm	/^f010691a:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f010691d	obj/kern/kernel.asm	/^f010691d:	89 d6                	mov    %edx,%esi$/;"	l
f010691f	obj/kern/kernel.asm	/^f010691f:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f0106922	obj/kern/kernel.asm	/^f0106922:	89 d0                	mov    %edx,%eax$/;"	l
f0106924	obj/kern/kernel.asm	/^f0106924:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0106927	obj/kern/kernel.asm	/^f0106927:	09 f0                	or     %esi,%eax$/;"	l
f0106929	obj/kern/kernel.asm	/^f0106929:	09 c2                	or     %eax,%edx$/;"	l
f010692b	obj/kern/kernel.asm	/^f010692b:	89 d0                	mov    %edx,%eax$/;"	l
f010692d	obj/kern/kernel.asm	/^f010692d:	09 d8                	or     %ebx,%eax$/;"	l
f010692f	obj/kern/kernel.asm	/^f010692f:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106932	obj/kern/kernel.asm	/^f0106932:	fc                   	cld    $/;"	l
f0106933	obj/kern/kernel.asm	/^f0106933:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0106935	obj/kern/kernel.asm	/^f0106935:	eb 06                	jmp    f010693d <memset+0x46>$/;"	l
f0106937	obj/kern/kernel.asm	/^f0106937:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010693a	obj/kern/kernel.asm	/^f010693a:	fc                   	cld    $/;"	l
f010693b	obj/kern/kernel.asm	/^f010693b:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f010693d	obj/kern/kernel.asm	/^f010693d:	89 f8                	mov    %edi,%eax$/;"	l
f010693f	obj/kern/kernel.asm	/^f010693f:	5b                   	pop    %ebx$/;"	l
f0106940	obj/kern/kernel.asm	/^f0106940:	5e                   	pop    %esi$/;"	l
f0106941	obj/kern/kernel.asm	/^f0106941:	5f                   	pop    %edi$/;"	l
f0106942	obj/kern/kernel.asm	/^f0106942:	5d                   	pop    %ebp$/;"	l
f0106943	obj/kern/kernel.asm	/^f0106943:	c3                   	ret    $/;"	l
f0106944	obj/kern/kernel.asm	/^f0106944 <memmove>:$/;"	l
f0106944	obj/kern/kernel.asm	/^f0106944:	55                   	push   %ebp$/;"	l
f0106945	obj/kern/kernel.asm	/^f0106945:	89 e5                	mov    %esp,%ebp$/;"	l
f0106947	obj/kern/kernel.asm	/^f0106947:	57                   	push   %edi$/;"	l
f0106948	obj/kern/kernel.asm	/^f0106948:	56                   	push   %esi$/;"	l
f0106949	obj/kern/kernel.asm	/^f0106949:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010694c	obj/kern/kernel.asm	/^f010694c:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010694f	obj/kern/kernel.asm	/^f010694f:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106952	obj/kern/kernel.asm	/^f0106952:	39 c6                	cmp    %eax,%esi$/;"	l
f0106954	obj/kern/kernel.asm	/^f0106954:	73 35                	jae    f010698b <memmove+0x47>$/;"	l
f0106956	obj/kern/kernel.asm	/^f0106956:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0106959	obj/kern/kernel.asm	/^f0106959:	39 d0                	cmp    %edx,%eax$/;"	l
f010695b	obj/kern/kernel.asm	/^f010695b:	73 2e                	jae    f010698b <memmove+0x47>$/;"	l
f010695d	obj/kern/kernel.asm	/^f010695d:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0106960	obj/kern/kernel.asm	/^f0106960:	89 d6                	mov    %edx,%esi$/;"	l
f0106962	obj/kern/kernel.asm	/^f0106962:	09 fe                	or     %edi,%esi$/;"	l
f0106964	obj/kern/kernel.asm	/^f0106964:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f010696a	obj/kern/kernel.asm	/^f010696a:	75 13                	jne    f010697f <memmove+0x3b>$/;"	l
f010696c	obj/kern/kernel.asm	/^f010696c:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010696f	obj/kern/kernel.asm	/^f010696f:	75 0e                	jne    f010697f <memmove+0x3b>$/;"	l
f0106971	obj/kern/kernel.asm	/^f0106971:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0106974	obj/kern/kernel.asm	/^f0106974:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0106977	obj/kern/kernel.asm	/^f0106977:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010697a	obj/kern/kernel.asm	/^f010697a:	fd                   	std    $/;"	l
f010697b	obj/kern/kernel.asm	/^f010697b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010697d	obj/kern/kernel.asm	/^f010697d:	eb 09                	jmp    f0106988 <memmove+0x44>$/;"	l
f010697f	obj/kern/kernel.asm	/^f010697f:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0106982	obj/kern/kernel.asm	/^f0106982:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0106985	obj/kern/kernel.asm	/^f0106985:	fd                   	std    $/;"	l
f0106986	obj/kern/kernel.asm	/^f0106986:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106988	obj/kern/kernel.asm	/^f0106988:	fc                   	cld    $/;"	l
f0106989	obj/kern/kernel.asm	/^f0106989:	eb 1d                	jmp    f01069a8 <memmove+0x64>$/;"	l
f010698b	obj/kern/kernel.asm	/^f010698b:	89 f2                	mov    %esi,%edx$/;"	l
f010698d	obj/kern/kernel.asm	/^f010698d:	09 c2                	or     %eax,%edx$/;"	l
f010698f	obj/kern/kernel.asm	/^f010698f:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0106992	obj/kern/kernel.asm	/^f0106992:	75 0f                	jne    f01069a3 <memmove+0x5f>$/;"	l
f0106994	obj/kern/kernel.asm	/^f0106994:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106997	obj/kern/kernel.asm	/^f0106997:	75 0a                	jne    f01069a3 <memmove+0x5f>$/;"	l
f0106999	obj/kern/kernel.asm	/^f0106999:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010699c	obj/kern/kernel.asm	/^f010699c:	89 c7                	mov    %eax,%edi$/;"	l
f010699e	obj/kern/kernel.asm	/^f010699e:	fc                   	cld    $/;"	l
f010699f	obj/kern/kernel.asm	/^f010699f:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01069a1	obj/kern/kernel.asm	/^f01069a1:	eb 05                	jmp    f01069a8 <memmove+0x64>$/;"	l
f01069a3	obj/kern/kernel.asm	/^f01069a3:	89 c7                	mov    %eax,%edi$/;"	l
f01069a5	obj/kern/kernel.asm	/^f01069a5:	fc                   	cld    $/;"	l
f01069a6	obj/kern/kernel.asm	/^f01069a6:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01069a8	obj/kern/kernel.asm	/^f01069a8:	5e                   	pop    %esi$/;"	l
f01069a9	obj/kern/kernel.asm	/^f01069a9:	5f                   	pop    %edi$/;"	l
f01069aa	obj/kern/kernel.asm	/^f01069aa:	5d                   	pop    %ebp$/;"	l
f01069ab	obj/kern/kernel.asm	/^f01069ab:	c3                   	ret    $/;"	l
f01069ac	obj/kern/kernel.asm	/^f01069ac <memcpy>:$/;"	l
f01069ac	obj/kern/kernel.asm	/^f01069ac:	55                   	push   %ebp$/;"	l
f01069ad	obj/kern/kernel.asm	/^f01069ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01069af	obj/kern/kernel.asm	/^f01069af:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01069b2	obj/kern/kernel.asm	/^f01069b2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01069b5	obj/kern/kernel.asm	/^f01069b5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01069b9	obj/kern/kernel.asm	/^f01069b9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01069bc	obj/kern/kernel.asm	/^f01069bc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01069c0	obj/kern/kernel.asm	/^f01069c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01069c3	obj/kern/kernel.asm	/^f01069c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01069c6	obj/kern/kernel.asm	/^f01069c6:	e8 79 ff ff ff       	call   f0106944 <memmove>$/;"	l
f01069cb	obj/kern/kernel.asm	/^f01069cb:	c9                   	leave  $/;"	l
f01069cc	obj/kern/kernel.asm	/^f01069cc:	c3                   	ret    $/;"	l
f01069cd	obj/kern/kernel.asm	/^f01069cd <memcmp>:$/;"	l
f01069cd	obj/kern/kernel.asm	/^f01069cd:	55                   	push   %ebp$/;"	l
f01069ce	obj/kern/kernel.asm	/^f01069ce:	89 e5                	mov    %esp,%ebp$/;"	l
f01069d0	obj/kern/kernel.asm	/^f01069d0:	56                   	push   %esi$/;"	l
f01069d1	obj/kern/kernel.asm	/^f01069d1:	53                   	push   %ebx$/;"	l
f01069d2	obj/kern/kernel.asm	/^f01069d2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01069d5	obj/kern/kernel.asm	/^f01069d5:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01069d8	obj/kern/kernel.asm	/^f01069d8:	89 d6                	mov    %edx,%esi$/;"	l
f01069da	obj/kern/kernel.asm	/^f01069da:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f01069dd	obj/kern/kernel.asm	/^f01069dd:	eb 1a                	jmp    f01069f9 <memcmp+0x2c>$/;"	l
f01069df	obj/kern/kernel.asm	/^f01069df:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f01069e2	obj/kern/kernel.asm	/^f01069e2:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f01069e5	obj/kern/kernel.asm	/^f01069e5:	38 d8                	cmp    %bl,%al$/;"	l
f01069e7	obj/kern/kernel.asm	/^f01069e7:	74 0a                	je     f01069f3 <memcmp+0x26>$/;"	l
f01069e9	obj/kern/kernel.asm	/^f01069e9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01069ec	obj/kern/kernel.asm	/^f01069ec:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f01069ef	obj/kern/kernel.asm	/^f01069ef:	29 d8                	sub    %ebx,%eax$/;"	l
f01069f1	obj/kern/kernel.asm	/^f01069f1:	eb 0f                	jmp    f0106a02 <memcmp+0x35>$/;"	l
f01069f3	obj/kern/kernel.asm	/^f01069f3:	83 c2 01             	add    $0x1,%edx$/;"	l
f01069f6	obj/kern/kernel.asm	/^f01069f6:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01069f9	obj/kern/kernel.asm	/^f01069f9:	39 f2                	cmp    %esi,%edx$/;"	l
f01069fb	obj/kern/kernel.asm	/^f01069fb:	75 e2                	jne    f01069df <memcmp+0x12>$/;"	l
f01069fd	obj/kern/kernel.asm	/^f01069fd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106a02	obj/kern/kernel.asm	/^f0106a02:	5b                   	pop    %ebx$/;"	l
f0106a03	obj/kern/kernel.asm	/^f0106a03:	5e                   	pop    %esi$/;"	l
f0106a04	obj/kern/kernel.asm	/^f0106a04:	5d                   	pop    %ebp$/;"	l
f0106a05	obj/kern/kernel.asm	/^f0106a05:	c3                   	ret    $/;"	l
f0106a06	obj/kern/kernel.asm	/^f0106a06 <memfind>:$/;"	l
f0106a06	obj/kern/kernel.asm	/^f0106a06:	55                   	push   %ebp$/;"	l
f0106a07	obj/kern/kernel.asm	/^f0106a07:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a09	obj/kern/kernel.asm	/^f0106a09:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106a0c	obj/kern/kernel.asm	/^f0106a0c:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0106a0f	obj/kern/kernel.asm	/^f0106a0f:	89 c2                	mov    %eax,%edx$/;"	l
f0106a11	obj/kern/kernel.asm	/^f0106a11:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0106a14	obj/kern/kernel.asm	/^f0106a14:	eb 07                	jmp    f0106a1d <memfind+0x17>$/;"	l
f0106a16	obj/kern/kernel.asm	/^f0106a16:	38 08                	cmp    %cl,(%eax)$/;"	l
f0106a18	obj/kern/kernel.asm	/^f0106a18:	74 07                	je     f0106a21 <memfind+0x1b>$/;"	l
f0106a1a	obj/kern/kernel.asm	/^f0106a1a:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106a1d	obj/kern/kernel.asm	/^f0106a1d:	39 d0                	cmp    %edx,%eax$/;"	l
f0106a1f	obj/kern/kernel.asm	/^f0106a1f:	72 f5                	jb     f0106a16 <memfind+0x10>$/;"	l
f0106a21	obj/kern/kernel.asm	/^f0106a21:	5d                   	pop    %ebp$/;"	l
f0106a22	obj/kern/kernel.asm	/^f0106a22:	c3                   	ret    $/;"	l
f0106a23	obj/kern/kernel.asm	/^f0106a23 <strtol>:$/;"	l
f0106a23	obj/kern/kernel.asm	/^f0106a23:	55                   	push   %ebp$/;"	l
f0106a24	obj/kern/kernel.asm	/^f0106a24:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a26	obj/kern/kernel.asm	/^f0106a26:	57                   	push   %edi$/;"	l
f0106a27	obj/kern/kernel.asm	/^f0106a27:	56                   	push   %esi$/;"	l
f0106a28	obj/kern/kernel.asm	/^f0106a28:	53                   	push   %ebx$/;"	l
f0106a29	obj/kern/kernel.asm	/^f0106a29:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106a2c	obj/kern/kernel.asm	/^f0106a2c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106a2f	obj/kern/kernel.asm	/^f0106a2f:	eb 03                	jmp    f0106a34 <strtol+0x11>$/;"	l
f0106a31	obj/kern/kernel.asm	/^f0106a31:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106a34	obj/kern/kernel.asm	/^f0106a34:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106a37	obj/kern/kernel.asm	/^f0106a37:	80 f9 09             	cmp    $0x9,%cl$/;"	l
f0106a3a	obj/kern/kernel.asm	/^f0106a3a:	74 f5                	je     f0106a31 <strtol+0xe>$/;"	l
f0106a3c	obj/kern/kernel.asm	/^f0106a3c:	80 f9 20             	cmp    $0x20,%cl$/;"	l
f0106a3f	obj/kern/kernel.asm	/^f0106a3f:	74 f0                	je     f0106a31 <strtol+0xe>$/;"	l
f0106a41	obj/kern/kernel.asm	/^f0106a41:	80 f9 2b             	cmp    $0x2b,%cl$/;"	l
f0106a44	obj/kern/kernel.asm	/^f0106a44:	75 0a                	jne    f0106a50 <strtol+0x2d>$/;"	l
f0106a46	obj/kern/kernel.asm	/^f0106a46:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106a49	obj/kern/kernel.asm	/^f0106a49:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106a4e	obj/kern/kernel.asm	/^f0106a4e:	eb 11                	jmp    f0106a61 <strtol+0x3e>$/;"	l
f0106a50	obj/kern/kernel.asm	/^f0106a50:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106a55	obj/kern/kernel.asm	/^f0106a55:	80 f9 2d             	cmp    $0x2d,%cl$/;"	l
f0106a58	obj/kern/kernel.asm	/^f0106a58:	75 07                	jne    f0106a61 <strtol+0x3e>$/;"	l
f0106a5a	obj/kern/kernel.asm	/^f0106a5a:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f0106a5d	obj/kern/kernel.asm	/^f0106a5d:	66 bf 01 00          	mov    $0x1,%di$/;"	l
f0106a61	obj/kern/kernel.asm	/^f0106a61:	a9 ef ff ff ff       	test   $0xffffffef,%eax$/;"	l
f0106a66	obj/kern/kernel.asm	/^f0106a66:	75 15                	jne    f0106a7d <strtol+0x5a>$/;"	l
f0106a68	obj/kern/kernel.asm	/^f0106a68:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106a6b	obj/kern/kernel.asm	/^f0106a6b:	75 10                	jne    f0106a7d <strtol+0x5a>$/;"	l
f0106a6d	obj/kern/kernel.asm	/^f0106a6d:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f0106a71	obj/kern/kernel.asm	/^f0106a71:	75 0a                	jne    f0106a7d <strtol+0x5a>$/;"	l
f0106a73	obj/kern/kernel.asm	/^f0106a73:	83 c2 02             	add    $0x2,%edx$/;"	l
f0106a76	obj/kern/kernel.asm	/^f0106a76:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0106a7b	obj/kern/kernel.asm	/^f0106a7b:	eb 10                	jmp    f0106a8d <strtol+0x6a>$/;"	l
f0106a7d	obj/kern/kernel.asm	/^f0106a7d:	85 c0                	test   %eax,%eax$/;"	l
f0106a7f	obj/kern/kernel.asm	/^f0106a7f:	75 0c                	jne    f0106a8d <strtol+0x6a>$/;"	l
f0106a81	obj/kern/kernel.asm	/^f0106a81:	b0 0a                	mov    $0xa,%al$/;"	l
f0106a83	obj/kern/kernel.asm	/^f0106a83:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106a86	obj/kern/kernel.asm	/^f0106a86:	75 05                	jne    f0106a8d <strtol+0x6a>$/;"	l
f0106a88	obj/kern/kernel.asm	/^f0106a88:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106a8b	obj/kern/kernel.asm	/^f0106a8b:	b0 08                	mov    $0x8,%al$/;"	l
f0106a8d	obj/kern/kernel.asm	/^f0106a8d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106a92	obj/kern/kernel.asm	/^f0106a92:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
f0106a95	obj/kern/kernel.asm	/^f0106a95:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106a98	obj/kern/kernel.asm	/^f0106a98:	8d 71 d0             	lea    -0x30(%ecx),%esi$/;"	l
f0106a9b	obj/kern/kernel.asm	/^f0106a9b:	89 f0                	mov    %esi,%eax$/;"	l
f0106a9d	obj/kern/kernel.asm	/^f0106a9d:	3c 09                	cmp    $0x9,%al$/;"	l
f0106a9f	obj/kern/kernel.asm	/^f0106a9f:	77 08                	ja     f0106aa9 <strtol+0x86>$/;"	l
f0106aa1	obj/kern/kernel.asm	/^f0106aa1:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106aa4	obj/kern/kernel.asm	/^f0106aa4:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f0106aa7	obj/kern/kernel.asm	/^f0106aa7:	eb 20                	jmp    f0106ac9 <strtol+0xa6>$/;"	l
f0106aa9	obj/kern/kernel.asm	/^f0106aa9:	8d 71 9f             	lea    -0x61(%ecx),%esi$/;"	l
f0106aac	obj/kern/kernel.asm	/^f0106aac:	89 f0                	mov    %esi,%eax$/;"	l
f0106aae	obj/kern/kernel.asm	/^f0106aae:	3c 19                	cmp    $0x19,%al$/;"	l
f0106ab0	obj/kern/kernel.asm	/^f0106ab0:	77 08                	ja     f0106aba <strtol+0x97>$/;"	l
f0106ab2	obj/kern/kernel.asm	/^f0106ab2:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106ab5	obj/kern/kernel.asm	/^f0106ab5:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f0106ab8	obj/kern/kernel.asm	/^f0106ab8:	eb 0f                	jmp    f0106ac9 <strtol+0xa6>$/;"	l
f0106aba	obj/kern/kernel.asm	/^f0106aba:	8d 71 bf             	lea    -0x41(%ecx),%esi$/;"	l
f0106abd	obj/kern/kernel.asm	/^f0106abd:	89 f0                	mov    %esi,%eax$/;"	l
f0106abf	obj/kern/kernel.asm	/^f0106abf:	3c 19                	cmp    $0x19,%al$/;"	l
f0106ac1	obj/kern/kernel.asm	/^f0106ac1:	77 16                	ja     f0106ad9 <strtol+0xb6>$/;"	l
f0106ac3	obj/kern/kernel.asm	/^f0106ac3:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106ac6	obj/kern/kernel.asm	/^f0106ac6:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f0106ac9	obj/kern/kernel.asm	/^f0106ac9:	3b 4d 10             	cmp    0x10(%ebp),%ecx$/;"	l
f0106acc	obj/kern/kernel.asm	/^f0106acc:	7d 0f                	jge    f0106add <strtol+0xba>$/;"	l
f0106ace	obj/kern/kernel.asm	/^f0106ace:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106ad1	obj/kern/kernel.asm	/^f0106ad1:	0f af 5d 10          	imul   0x10(%ebp),%ebx$/;"	l
f0106ad5	obj/kern/kernel.asm	/^f0106ad5:	01 cb                	add    %ecx,%ebx$/;"	l
f0106ad7	obj/kern/kernel.asm	/^f0106ad7:	eb bc                	jmp    f0106a95 <strtol+0x72>$/;"	l
f0106ad9	obj/kern/kernel.asm	/^f0106ad9:	89 d8                	mov    %ebx,%eax$/;"	l
f0106adb	obj/kern/kernel.asm	/^f0106adb:	eb 02                	jmp    f0106adf <strtol+0xbc>$/;"	l
f0106add	obj/kern/kernel.asm	/^f0106add:	89 d8                	mov    %ebx,%eax$/;"	l
f0106adf	obj/kern/kernel.asm	/^f0106adf:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0106ae3	obj/kern/kernel.asm	/^f0106ae3:	74 05                	je     f0106aea <strtol+0xc7>$/;"	l
f0106ae5	obj/kern/kernel.asm	/^f0106ae5:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106ae8	obj/kern/kernel.asm	/^f0106ae8:	89 16                	mov    %edx,(%esi)$/;"	l
f0106aea	obj/kern/kernel.asm	/^f0106aea:	f7 d8                	neg    %eax$/;"	l
f0106aec	obj/kern/kernel.asm	/^f0106aec:	85 ff                	test   %edi,%edi$/;"	l
f0106aee	obj/kern/kernel.asm	/^f0106aee:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f0106af1	obj/kern/kernel.asm	/^f0106af1:	5b                   	pop    %ebx$/;"	l
f0106af2	obj/kern/kernel.asm	/^f0106af2:	5e                   	pop    %esi$/;"	l
f0106af3	obj/kern/kernel.asm	/^f0106af3:	5f                   	pop    %edi$/;"	l
f0106af4	obj/kern/kernel.asm	/^f0106af4:	5d                   	pop    %ebp$/;"	l
f0106af5	obj/kern/kernel.asm	/^f0106af5:	c3                   	ret    $/;"	l
f0106af6	obj/kern/kernel.asm	/^f0106af6:	66 90                	xchg   %ax,%ax$/;"	l
f0106af8	obj/kern/kernel.asm	/^f0106af8 <mpentry_start>:$/;"	l
f0106af8	obj/kern/kernel.asm	/^f0106af8:	fa                   	cli    $/;"	l
f0106af9	obj/kern/kernel.asm	/^f0106af9:	31 c0                	xor    %eax,%eax$/;"	l
f0106afb	obj/kern/kernel.asm	/^f0106afb:	8e d8                	mov    %eax,%ds$/;"	l
f0106afd	obj/kern/kernel.asm	/^f0106afd:	8e c0                	mov    %eax,%es$/;"	l
f0106aff	obj/kern/kernel.asm	/^f0106aff:	8e d0                	mov    %eax,%ss$/;"	l
f0106b01	obj/kern/kernel.asm	/^f0106b01:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0106b04	obj/kern/kernel.asm	/^f0106b04:	74 70                	je     f0106b76 <mpentry_end+0x4>$/;"	l
f0106b06	obj/kern/kernel.asm	/^f0106b06:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106b09	obj/kern/kernel.asm	/^f0106b09:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0106b0d	obj/kern/kernel.asm	/^f0106b0d:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106b10	obj/kern/kernel.asm	/^f0106b10:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0106b16	obj/kern/kernel.asm	/^f0106b16:	08 00                	or     %al,(%eax)$/;"	l
f0106b18	obj/kern/kernel.asm	/^f0106b18 <start32>:$/;"	l
f0106b18	obj/kern/kernel.asm	/^f0106b18:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0106b1c	obj/kern/kernel.asm	/^f0106b1c:	8e d8                	mov    %eax,%ds$/;"	l
f0106b1e	obj/kern/kernel.asm	/^f0106b1e:	8e c0                	mov    %eax,%es$/;"	l
f0106b20	obj/kern/kernel.asm	/^f0106b20:	8e d0                	mov    %eax,%ss$/;"	l
f0106b22	obj/kern/kernel.asm	/^f0106b22:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0106b26	obj/kern/kernel.asm	/^f0106b26:	8e e0                	mov    %eax,%fs$/;"	l
f0106b28	obj/kern/kernel.asm	/^f0106b28:	8e e8                	mov    %eax,%gs$/;"	l
f0106b2a	obj/kern/kernel.asm	/^f0106b2a:	b8 00 40 12 00       	mov    $0x124000,%eax$/;"	l
f0106b2f	obj/kern/kernel.asm	/^f0106b2f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0106b32	obj/kern/kernel.asm	/^f0106b32:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106b35	obj/kern/kernel.asm	/^f0106b35:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0106b3a	obj/kern/kernel.asm	/^f0106b3a:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106b3d	obj/kern/kernel.asm	/^f0106b3d:	8b 25 98 4e 2c f0    	mov    0xf02c4e98,%esp$/;"	l
f0106b43	obj/kern/kernel.asm	/^f0106b43:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0106b48	obj/kern/kernel.asm	/^f0106b48:	b8 7a 02 10 f0       	mov    $0xf010027a,%eax$/;"	l
f0106b4d	obj/kern/kernel.asm	/^f0106b4d:	ff d0                	call   *%eax$/;"	l
f0106b4f	obj/kern/kernel.asm	/^f0106b4f <spin>:$/;"	l
f0106b4f	obj/kern/kernel.asm	/^f0106b4f:	eb fe                	jmp    f0106b4f <spin>$/;"	l
f0106b51	obj/kern/kernel.asm	/^f0106b51:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106b54	obj/kern/kernel.asm	/^f0106b54 <gdt>:$/;"	l
f0106b5c	obj/kern/kernel.asm	/^f0106b5c:	ff                   	(bad)  $/;"	l
f0106b5d	obj/kern/kernel.asm	/^f0106b5d:	ff 00                	incl   (%eax)$/;"	l
f0106b5f	obj/kern/kernel.asm	/^f0106b5f:	00 00                	add    %al,(%eax)$/;"	l
f0106b61	obj/kern/kernel.asm	/^f0106b61:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0106b68	obj/kern/kernel.asm	/^f0106b68:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f0106b6c	obj/kern/kernel.asm	/^f0106b6c <gdtdesc>:$/;"	l
f0106b6c	obj/kern/kernel.asm	/^f0106b6c:	17                   	pop    %ss$/;"	l
f0106b6d	obj/kern/kernel.asm	/^f0106b6d:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0106b72	obj/kern/kernel.asm	/^f0106b72 <mpentry_end>:$/;"	l
f0106b72	obj/kern/kernel.asm	/^f0106b72:	90                   	nop$/;"	l
f0106b73	obj/kern/kernel.asm	/^f0106b73:	66 90                	xchg   %ax,%ax$/;"	l
f0106b75	obj/kern/kernel.asm	/^f0106b75:	66 90                	xchg   %ax,%ax$/;"	l
f0106b77	obj/kern/kernel.asm	/^f0106b77:	66 90                	xchg   %ax,%ax$/;"	l
f0106b79	obj/kern/kernel.asm	/^f0106b79:	66 90                	xchg   %ax,%ax$/;"	l
f0106b7b	obj/kern/kernel.asm	/^f0106b7b:	66 90                	xchg   %ax,%ax$/;"	l
f0106b7d	obj/kern/kernel.asm	/^f0106b7d:	66 90                	xchg   %ax,%ax$/;"	l
f0106b7f	obj/kern/kernel.asm	/^f0106b7f:	90                   	nop$/;"	l
f0106b80	obj/kern/kernel.asm	/^f0106b80 <mpsearch1>:$/;"	l
f0106b80	obj/kern/kernel.asm	/^f0106b80:	55                   	push   %ebp$/;"	l
f0106b81	obj/kern/kernel.asm	/^f0106b81:	89 e5                	mov    %esp,%ebp$/;"	l
f0106b83	obj/kern/kernel.asm	/^f0106b83:	56                   	push   %esi$/;"	l
f0106b84	obj/kern/kernel.asm	/^f0106b84:	53                   	push   %ebx$/;"	l
f0106b85	obj/kern/kernel.asm	/^f0106b85:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106b88	obj/kern/kernel.asm	/^f0106b88:	8b 0d 9c 4e 2c f0    	mov    0xf02c4e9c,%ecx$/;"	l
f0106b8e	obj/kern/kernel.asm	/^f0106b8e:	89 c3                	mov    %eax,%ebx$/;"	l
f0106b90	obj/kern/kernel.asm	/^f0106b90:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0106b93	obj/kern/kernel.asm	/^f0106b93:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0106b95	obj/kern/kernel.asm	/^f0106b95:	72 20                	jb     f0106bb7 <mpsearch1+0x37>$/;"	l
f0106b97	obj/kern/kernel.asm	/^f0106b97:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106b9b	obj/kern/kernel.asm	/^f0106b9b:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f0106ba2	obj/kern/kernel.asm	/^f0106ba2:	f0 $/;"	l
f0106ba3	obj/kern/kernel.asm	/^f0106ba3:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0106baa	obj/kern/kernel.asm	/^f0106baa:	00 $/;"	l
f0106bab	obj/kern/kernel.asm	/^f0106bab:	c7 04 24 9d a1 10 f0 	movl   $0xf010a19d,(%esp)$/;"	l
f0106bb2	obj/kern/kernel.asm	/^f0106bb2:	e8 e6 94 ff ff       	call   f010009d <_panic>$/;"	l
f0106bb7	obj/kern/kernel.asm	/^f0106bb7:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0106bbd	obj/kern/kernel.asm	/^f0106bbd:	01 d0                	add    %edx,%eax$/;"	l
f0106bbf	obj/kern/kernel.asm	/^f0106bbf:	89 c2                	mov    %eax,%edx$/;"	l
f0106bc1	obj/kern/kernel.asm	/^f0106bc1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0106bc4	obj/kern/kernel.asm	/^f0106bc4:	39 d1                	cmp    %edx,%ecx$/;"	l
f0106bc6	obj/kern/kernel.asm	/^f0106bc6:	77 20                	ja     f0106be8 <mpsearch1+0x68>$/;"	l
f0106bc8	obj/kern/kernel.asm	/^f0106bc8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106bcc	obj/kern/kernel.asm	/^f0106bcc:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f0106bd3	obj/kern/kernel.asm	/^f0106bd3:	f0 $/;"	l
f0106bd4	obj/kern/kernel.asm	/^f0106bd4:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0106bdb	obj/kern/kernel.asm	/^f0106bdb:	00 $/;"	l
f0106bdc	obj/kern/kernel.asm	/^f0106bdc:	c7 04 24 9d a1 10 f0 	movl   $0xf010a19d,(%esp)$/;"	l
f0106be3	obj/kern/kernel.asm	/^f0106be3:	e8 b5 94 ff ff       	call   f010009d <_panic>$/;"	l
f0106be8	obj/kern/kernel.asm	/^f0106be8:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f0106bee	obj/kern/kernel.asm	/^f0106bee:	eb 36                	jmp    f0106c26 <mpsearch1+0xa6>$/;"	l
f0106bf0	obj/kern/kernel.asm	/^f0106bf0:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106bf7	obj/kern/kernel.asm	/^f0106bf7:	00 $/;"	l
f0106bf8	obj/kern/kernel.asm	/^f0106bf8:	c7 44 24 04 ad a1 10 	movl   $0xf010a1ad,0x4(%esp)$/;"	l
f0106bff	obj/kern/kernel.asm	/^f0106bff:	f0 $/;"	l
f0106c00	obj/kern/kernel.asm	/^f0106c00:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106c03	obj/kern/kernel.asm	/^f0106c03:	e8 c5 fd ff ff       	call   f01069cd <memcmp>$/;"	l
f0106c08	obj/kern/kernel.asm	/^f0106c08:	85 c0                	test   %eax,%eax$/;"	l
f0106c0a	obj/kern/kernel.asm	/^f0106c0a:	75 17                	jne    f0106c23 <mpsearch1+0xa3>$/;"	l
f0106c0c	obj/kern/kernel.asm	/^f0106c0c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106c11	obj/kern/kernel.asm	/^f0106c11:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f0106c15	obj/kern/kernel.asm	/^f0106c15:	01 c8                	add    %ecx,%eax$/;"	l
f0106c17	obj/kern/kernel.asm	/^f0106c17:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106c1a	obj/kern/kernel.asm	/^f0106c1a:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f0106c1d	obj/kern/kernel.asm	/^f0106c1d:	75 f2                	jne    f0106c11 <mpsearch1+0x91>$/;"	l
f0106c1f	obj/kern/kernel.asm	/^f0106c1f:	84 c0                	test   %al,%al$/;"	l
f0106c21	obj/kern/kernel.asm	/^f0106c21:	74 0e                	je     f0106c31 <mpsearch1+0xb1>$/;"	l
f0106c23	obj/kern/kernel.asm	/^f0106c23:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0106c26	obj/kern/kernel.asm	/^f0106c26:	39 f3                	cmp    %esi,%ebx$/;"	l
f0106c28	obj/kern/kernel.asm	/^f0106c28:	72 c6                	jb     f0106bf0 <mpsearch1+0x70>$/;"	l
f0106c2a	obj/kern/kernel.asm	/^f0106c2a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106c2f	obj/kern/kernel.asm	/^f0106c2f:	eb 02                	jmp    f0106c33 <mpsearch1+0xb3>$/;"	l
f0106c31	obj/kern/kernel.asm	/^f0106c31:	89 d8                	mov    %ebx,%eax$/;"	l
f0106c33	obj/kern/kernel.asm	/^f0106c33:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106c36	obj/kern/kernel.asm	/^f0106c36:	5b                   	pop    %ebx$/;"	l
f0106c37	obj/kern/kernel.asm	/^f0106c37:	5e                   	pop    %esi$/;"	l
f0106c38	obj/kern/kernel.asm	/^f0106c38:	5d                   	pop    %ebp$/;"	l
f0106c39	obj/kern/kernel.asm	/^f0106c39:	c3                   	ret    $/;"	l
f0106c3a	obj/kern/kernel.asm	/^f0106c3a <mp_init>:$/;"	l
f0106c3a	obj/kern/kernel.asm	/^f0106c3a:	55                   	push   %ebp$/;"	l
f0106c3b	obj/kern/kernel.asm	/^f0106c3b:	89 e5                	mov    %esp,%ebp$/;"	l
f0106c3d	obj/kern/kernel.asm	/^f0106c3d:	57                   	push   %edi$/;"	l
f0106c3e	obj/kern/kernel.asm	/^f0106c3e:	56                   	push   %esi$/;"	l
f0106c3f	obj/kern/kernel.asm	/^f0106c3f:	53                   	push   %ebx$/;"	l
f0106c40	obj/kern/kernel.asm	/^f0106c40:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0106c43	obj/kern/kernel.asm	/^f0106c43:	c7 05 c0 53 2c f0 20 	movl   $0xf02c5020,0xf02c53c0$/;"	l
f0106c4a	obj/kern/kernel.asm	/^f0106c4a:	50 2c f0 $/;"	l
f0106c4d	obj/kern/kernel.asm	/^f0106c4d:	83 3d 9c 4e 2c f0 00 	cmpl   $0x0,0xf02c4e9c$/;"	l
f0106c54	obj/kern/kernel.asm	/^f0106c54:	75 24                	jne    f0106c7a <mp_init+0x40>$/;"	l
f0106c56	obj/kern/kernel.asm	/^f0106c56:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f0106c5d	obj/kern/kernel.asm	/^f0106c5d:	00 $/;"	l
f0106c5e	obj/kern/kernel.asm	/^f0106c5e:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f0106c65	obj/kern/kernel.asm	/^f0106c65:	f0 $/;"	l
f0106c66	obj/kern/kernel.asm	/^f0106c66:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f0106c6d	obj/kern/kernel.asm	/^f0106c6d:	00 $/;"	l
f0106c6e	obj/kern/kernel.asm	/^f0106c6e:	c7 04 24 9d a1 10 f0 	movl   $0xf010a19d,(%esp)$/;"	l
f0106c75	obj/kern/kernel.asm	/^f0106c75:	e8 23 94 ff ff       	call   f010009d <_panic>$/;"	l
f0106c7a	obj/kern/kernel.asm	/^f0106c7a:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0106c81	obj/kern/kernel.asm	/^f0106c81:	85 c0                	test   %eax,%eax$/;"	l
f0106c83	obj/kern/kernel.asm	/^f0106c83:	74 16                	je     f0106c9b <mp_init+0x61>$/;"	l
f0106c85	obj/kern/kernel.asm	/^f0106c85:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106c88	obj/kern/kernel.asm	/^f0106c88:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106c8d	obj/kern/kernel.asm	/^f0106c8d:	e8 ee fe ff ff       	call   f0106b80 <mpsearch1>$/;"	l
f0106c92	obj/kern/kernel.asm	/^f0106c92:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106c95	obj/kern/kernel.asm	/^f0106c95:	85 c0                	test   %eax,%eax$/;"	l
f0106c97	obj/kern/kernel.asm	/^f0106c97:	75 3c                	jne    f0106cd5 <mp_init+0x9b>$/;"	l
f0106c99	obj/kern/kernel.asm	/^f0106c99:	eb 20                	jmp    f0106cbb <mp_init+0x81>$/;"	l
f0106c9b	obj/kern/kernel.asm	/^f0106c9b:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0106ca2	obj/kern/kernel.asm	/^f0106ca2:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0106ca5	obj/kern/kernel.asm	/^f0106ca5:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0106caa	obj/kern/kernel.asm	/^f0106caa:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106caf	obj/kern/kernel.asm	/^f0106caf:	e8 cc fe ff ff       	call   f0106b80 <mpsearch1>$/;"	l
f0106cb4	obj/kern/kernel.asm	/^f0106cb4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106cb7	obj/kern/kernel.asm	/^f0106cb7:	85 c0                	test   %eax,%eax$/;"	l
f0106cb9	obj/kern/kernel.asm	/^f0106cb9:	75 1a                	jne    f0106cd5 <mp_init+0x9b>$/;"	l
f0106cbb	obj/kern/kernel.asm	/^f0106cbb:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106cc0	obj/kern/kernel.asm	/^f0106cc0:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0106cc5	obj/kern/kernel.asm	/^f0106cc5:	e8 b6 fe ff ff       	call   f0106b80 <mpsearch1>$/;"	l
f0106cca	obj/kern/kernel.asm	/^f0106cca:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106ccd	obj/kern/kernel.asm	/^f0106ccd:	85 c0                	test   %eax,%eax$/;"	l
f0106ccf	obj/kern/kernel.asm	/^f0106ccf:	0f 84 54 02 00 00    	je     f0106f29 <mp_init+0x2ef>$/;"	l
f0106cd5	obj/kern/kernel.asm	/^f0106cd5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106cd8	obj/kern/kernel.asm	/^f0106cd8:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0106cdb	obj/kern/kernel.asm	/^f0106cdb:	85 f6                	test   %esi,%esi$/;"	l
f0106cdd	obj/kern/kernel.asm	/^f0106cdd:	74 06                	je     f0106ce5 <mp_init+0xab>$/;"	l
f0106cdf	obj/kern/kernel.asm	/^f0106cdf:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0106ce3	obj/kern/kernel.asm	/^f0106ce3:	74 11                	je     f0106cf6 <mp_init+0xbc>$/;"	l
f0106ce5	obj/kern/kernel.asm	/^f0106ce5:	c7 04 24 10 a0 10 f0 	movl   $0xf010a010,(%esp)$/;"	l
f0106cec	obj/kern/kernel.asm	/^f0106cec:	e8 19 d9 ff ff       	call   f010460a <cprintf>$/;"	l
f0106cf1	obj/kern/kernel.asm	/^f0106cf1:	e9 33 02 00 00       	jmp    f0106f29 <mp_init+0x2ef>$/;"	l
f0106cf6	obj/kern/kernel.asm	/^f0106cf6:	89 f0                	mov    %esi,%eax$/;"	l
f0106cf8	obj/kern/kernel.asm	/^f0106cf8:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0106cfb	obj/kern/kernel.asm	/^f0106cfb:	3b 05 9c 4e 2c f0    	cmp    0xf02c4e9c,%eax$/;"	l
f0106d01	obj/kern/kernel.asm	/^f0106d01:	72 20                	jb     f0106d23 <mp_init+0xe9>$/;"	l
f0106d03	obj/kern/kernel.asm	/^f0106d03:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106d07	obj/kern/kernel.asm	/^f0106d07:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f0106d0e	obj/kern/kernel.asm	/^f0106d0e:	f0 $/;"	l
f0106d0f	obj/kern/kernel.asm	/^f0106d0f:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0106d16	obj/kern/kernel.asm	/^f0106d16:	00 $/;"	l
f0106d17	obj/kern/kernel.asm	/^f0106d17:	c7 04 24 9d a1 10 f0 	movl   $0xf010a19d,(%esp)$/;"	l
f0106d1e	obj/kern/kernel.asm	/^f0106d1e:	e8 7a 93 ff ff       	call   f010009d <_panic>$/;"	l
f0106d23	obj/kern/kernel.asm	/^f0106d23:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f0106d29	obj/kern/kernel.asm	/^f0106d29:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106d30	obj/kern/kernel.asm	/^f0106d30:	00 $/;"	l
f0106d31	obj/kern/kernel.asm	/^f0106d31:	c7 44 24 04 b2 a1 10 	movl   $0xf010a1b2,0x4(%esp)$/;"	l
f0106d38	obj/kern/kernel.asm	/^f0106d38:	f0 $/;"	l
f0106d39	obj/kern/kernel.asm	/^f0106d39:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106d3c	obj/kern/kernel.asm	/^f0106d3c:	e8 8c fc ff ff       	call   f01069cd <memcmp>$/;"	l
f0106d41	obj/kern/kernel.asm	/^f0106d41:	85 c0                	test   %eax,%eax$/;"	l
f0106d43	obj/kern/kernel.asm	/^f0106d43:	74 11                	je     f0106d56 <mp_init+0x11c>$/;"	l
f0106d45	obj/kern/kernel.asm	/^f0106d45:	c7 04 24 40 a0 10 f0 	movl   $0xf010a040,(%esp)$/;"	l
f0106d4c	obj/kern/kernel.asm	/^f0106d4c:	e8 b9 d8 ff ff       	call   f010460a <cprintf>$/;"	l
f0106d51	obj/kern/kernel.asm	/^f0106d51:	e9 d3 01 00 00       	jmp    f0106f29 <mp_init+0x2ef>$/;"	l
f0106d56	obj/kern/kernel.asm	/^f0106d56:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f0106d5a	obj/kern/kernel.asm	/^f0106d5a:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f0106d5e	obj/kern/kernel.asm	/^f0106d5e:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0106d61	obj/kern/kernel.asm	/^f0106d61:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106d66	obj/kern/kernel.asm	/^f0106d66:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106d6b	obj/kern/kernel.asm	/^f0106d6b:	eb 0d                	jmp    f0106d7a <mp_init+0x140>$/;"	l
f0106d6d	obj/kern/kernel.asm	/^f0106d6d:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f0106d74	obj/kern/kernel.asm	/^f0106d74:	f0 $/;"	l
f0106d75	obj/kern/kernel.asm	/^f0106d75:	01 ca                	add    %ecx,%edx$/;"	l
f0106d77	obj/kern/kernel.asm	/^f0106d77:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106d7a	obj/kern/kernel.asm	/^f0106d7a:	39 c7                	cmp    %eax,%edi$/;"	l
f0106d7c	obj/kern/kernel.asm	/^f0106d7c:	7f ef                	jg     f0106d6d <mp_init+0x133>$/;"	l
f0106d7e	obj/kern/kernel.asm	/^f0106d7e:	84 d2                	test   %dl,%dl$/;"	l
f0106d80	obj/kern/kernel.asm	/^f0106d80:	74 11                	je     f0106d93 <mp_init+0x159>$/;"	l
f0106d82	obj/kern/kernel.asm	/^f0106d82:	c7 04 24 74 a0 10 f0 	movl   $0xf010a074,(%esp)$/;"	l
f0106d89	obj/kern/kernel.asm	/^f0106d89:	e8 7c d8 ff ff       	call   f010460a <cprintf>$/;"	l
f0106d8e	obj/kern/kernel.asm	/^f0106d8e:	e9 96 01 00 00       	jmp    f0106f29 <mp_init+0x2ef>$/;"	l
f0106d93	obj/kern/kernel.asm	/^f0106d93:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f0106d97	obj/kern/kernel.asm	/^f0106d97:	3c 04                	cmp    $0x4,%al$/;"	l
f0106d99	obj/kern/kernel.asm	/^f0106d99:	74 1f                	je     f0106dba <mp_init+0x180>$/;"	l
f0106d9b	obj/kern/kernel.asm	/^f0106d9b:	3c 01                	cmp    $0x1,%al$/;"	l
f0106d9d	obj/kern/kernel.asm	/^f0106d9d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106da0	obj/kern/kernel.asm	/^f0106da0:	74 18                	je     f0106dba <mp_init+0x180>$/;"	l
f0106da2	obj/kern/kernel.asm	/^f0106da2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106da5	obj/kern/kernel.asm	/^f0106da5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106da9	obj/kern/kernel.asm	/^f0106da9:	c7 04 24 98 a0 10 f0 	movl   $0xf010a098,(%esp)$/;"	l
f0106db0	obj/kern/kernel.asm	/^f0106db0:	e8 55 d8 ff ff       	call   f010460a <cprintf>$/;"	l
f0106db5	obj/kern/kernel.asm	/^f0106db5:	e9 6f 01 00 00       	jmp    f0106f29 <mp_init+0x2ef>$/;"	l
f0106dba	obj/kern/kernel.asm	/^f0106dba:	0f b7 73 28          	movzwl 0x28(%ebx),%esi$/;"	l
f0106dbe	obj/kern/kernel.asm	/^f0106dbe:	0f b7 7d e2          	movzwl -0x1e(%ebp),%edi$/;"	l
f0106dc2	obj/kern/kernel.asm	/^f0106dc2:	01 df                	add    %ebx,%edi$/;"	l
f0106dc4	obj/kern/kernel.asm	/^f0106dc4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106dc9	obj/kern/kernel.asm	/^f0106dc9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106dce	obj/kern/kernel.asm	/^f0106dce:	eb 09                	jmp    f0106dd9 <mp_init+0x19f>$/;"	l
f0106dd0	obj/kern/kernel.asm	/^f0106dd0:	0f b6 0c 07          	movzbl (%edi,%eax,1),%ecx$/;"	l
f0106dd4	obj/kern/kernel.asm	/^f0106dd4:	01 ca                	add    %ecx,%edx$/;"	l
f0106dd6	obj/kern/kernel.asm	/^f0106dd6:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106dd9	obj/kern/kernel.asm	/^f0106dd9:	39 c6                	cmp    %eax,%esi$/;"	l
f0106ddb	obj/kern/kernel.asm	/^f0106ddb:	7f f3                	jg     f0106dd0 <mp_init+0x196>$/;"	l
f0106ddd	obj/kern/kernel.asm	/^f0106ddd:	02 53 2a             	add    0x2a(%ebx),%dl$/;"	l
f0106de0	obj/kern/kernel.asm	/^f0106de0:	84 d2                	test   %dl,%dl$/;"	l
f0106de2	obj/kern/kernel.asm	/^f0106de2:	74 11                	je     f0106df5 <mp_init+0x1bb>$/;"	l
f0106de4	obj/kern/kernel.asm	/^f0106de4:	c7 04 24 b8 a0 10 f0 	movl   $0xf010a0b8,(%esp)$/;"	l
f0106deb	obj/kern/kernel.asm	/^f0106deb:	e8 1a d8 ff ff       	call   f010460a <cprintf>$/;"	l
f0106df0	obj/kern/kernel.asm	/^f0106df0:	e9 34 01 00 00       	jmp    f0106f29 <mp_init+0x2ef>$/;"	l
f0106df5	obj/kern/kernel.asm	/^f0106df5:	85 db                	test   %ebx,%ebx$/;"	l
f0106df7	obj/kern/kernel.asm	/^f0106df7:	0f 84 2c 01 00 00    	je     f0106f29 <mp_init+0x2ef>$/;"	l
f0106dfd	obj/kern/kernel.asm	/^f0106dfd:	c7 05 00 50 2c f0 01 	movl   $0x1,0xf02c5000$/;"	l
f0106e04	obj/kern/kernel.asm	/^f0106e04:	00 00 00 $/;"	l
f0106e07	obj/kern/kernel.asm	/^f0106e07:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0106e0a	obj/kern/kernel.asm	/^f0106e0a:	a3 00 60 30 f0       	mov    %eax,0xf0306000$/;"	l
f0106e0f	obj/kern/kernel.asm	/^f0106e0f:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0106e12	obj/kern/kernel.asm	/^f0106e12:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106e17	obj/kern/kernel.asm	/^f0106e17:	e9 86 00 00 00       	jmp    f0106ea2 <mp_init+0x268>$/;"	l
f0106e1c	obj/kern/kernel.asm	/^f0106e1c:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0106e1f	obj/kern/kernel.asm	/^f0106e1f:	84 c0                	test   %al,%al$/;"	l
f0106e21	obj/kern/kernel.asm	/^f0106e21:	74 06                	je     f0106e29 <mp_init+0x1ef>$/;"	l
f0106e23	obj/kern/kernel.asm	/^f0106e23:	3c 04                	cmp    $0x4,%al$/;"	l
f0106e25	obj/kern/kernel.asm	/^f0106e25:	77 57                	ja     f0106e7e <mp_init+0x244>$/;"	l
f0106e27	obj/kern/kernel.asm	/^f0106e27:	eb 50                	jmp    f0106e79 <mp_init+0x23f>$/;"	l
f0106e29	obj/kern/kernel.asm	/^f0106e29:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f0106e2d	obj/kern/kernel.asm	/^f0106e2d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106e30	obj/kern/kernel.asm	/^f0106e30:	74 11                	je     f0106e43 <mp_init+0x209>$/;"	l
f0106e32	obj/kern/kernel.asm	/^f0106e32:	6b 05 c4 53 2c f0 74 	imul   $0x74,0xf02c53c4,%eax$/;"	l
f0106e39	obj/kern/kernel.asm	/^f0106e39:	05 20 50 2c f0       	add    $0xf02c5020,%eax$/;"	l
f0106e3e	obj/kern/kernel.asm	/^f0106e3e:	a3 c0 53 2c f0       	mov    %eax,0xf02c53c0$/;"	l
f0106e43	obj/kern/kernel.asm	/^f0106e43:	a1 c4 53 2c f0       	mov    0xf02c53c4,%eax$/;"	l
f0106e48	obj/kern/kernel.asm	/^f0106e48:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0106e4b	obj/kern/kernel.asm	/^f0106e4b:	7f 13                	jg     f0106e60 <mp_init+0x226>$/;"	l
f0106e4d	obj/kern/kernel.asm	/^f0106e4d:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0106e50	obj/kern/kernel.asm	/^f0106e50:	88 82 20 50 2c f0    	mov    %al,-0xfd3afe0(%edx)$/;"	l
f0106e56	obj/kern/kernel.asm	/^f0106e56:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106e59	obj/kern/kernel.asm	/^f0106e59:	a3 c4 53 2c f0       	mov    %eax,0xf02c53c4$/;"	l
f0106e5e	obj/kern/kernel.asm	/^f0106e5e:	eb 14                	jmp    f0106e74 <mp_init+0x23a>$/;"	l
f0106e60	obj/kern/kernel.asm	/^f0106e60:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0106e64	obj/kern/kernel.asm	/^f0106e64:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106e68	obj/kern/kernel.asm	/^f0106e68:	c7 04 24 e8 a0 10 f0 	movl   $0xf010a0e8,(%esp)$/;"	l
f0106e6f	obj/kern/kernel.asm	/^f0106e6f:	e8 96 d7 ff ff       	call   f010460a <cprintf>$/;"	l
f0106e74	obj/kern/kernel.asm	/^f0106e74:	83 c7 14             	add    $0x14,%edi$/;"	l
f0106e77	obj/kern/kernel.asm	/^f0106e77:	eb 26                	jmp    f0106e9f <mp_init+0x265>$/;"	l
f0106e79	obj/kern/kernel.asm	/^f0106e79:	83 c7 08             	add    $0x8,%edi$/;"	l
f0106e7c	obj/kern/kernel.asm	/^f0106e7c:	eb 21                	jmp    f0106e9f <mp_init+0x265>$/;"	l
f0106e7e	obj/kern/kernel.asm	/^f0106e7e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106e81	obj/kern/kernel.asm	/^f0106e81:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106e85	obj/kern/kernel.asm	/^f0106e85:	c7 04 24 10 a1 10 f0 	movl   $0xf010a110,(%esp)$/;"	l
f0106e8c	obj/kern/kernel.asm	/^f0106e8c:	e8 79 d7 ff ff       	call   f010460a <cprintf>$/;"	l
f0106e91	obj/kern/kernel.asm	/^f0106e91:	c7 05 00 50 2c f0 00 	movl   $0x0,0xf02c5000$/;"	l
f0106e98	obj/kern/kernel.asm	/^f0106e98:	00 00 00 $/;"	l
f0106e9b	obj/kern/kernel.asm	/^f0106e9b:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f0106e9f	obj/kern/kernel.asm	/^f0106e9f:	83 c6 01             	add    $0x1,%esi$/;"	l
f0106ea2	obj/kern/kernel.asm	/^f0106ea2:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0106ea6	obj/kern/kernel.asm	/^f0106ea6:	39 c6                	cmp    %eax,%esi$/;"	l
f0106ea8	obj/kern/kernel.asm	/^f0106ea8:	0f 82 6e ff ff ff    	jb     f0106e1c <mp_init+0x1e2>$/;"	l
f0106eae	obj/kern/kernel.asm	/^f0106eae:	a1 c0 53 2c f0       	mov    0xf02c53c0,%eax$/;"	l
f0106eb3	obj/kern/kernel.asm	/^f0106eb3:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0106eba	obj/kern/kernel.asm	/^f0106eba:	83 3d 00 50 2c f0 00 	cmpl   $0x0,0xf02c5000$/;"	l
f0106ec1	obj/kern/kernel.asm	/^f0106ec1:	75 22                	jne    f0106ee5 <mp_init+0x2ab>$/;"	l
f0106ec3	obj/kern/kernel.asm	/^f0106ec3:	c7 05 c4 53 2c f0 01 	movl   $0x1,0xf02c53c4$/;"	l
f0106eca	obj/kern/kernel.asm	/^f0106eca:	00 00 00 $/;"	l
f0106ecd	obj/kern/kernel.asm	/^f0106ecd:	c7 05 00 60 30 f0 00 	movl   $0x0,0xf0306000$/;"	l
f0106ed4	obj/kern/kernel.asm	/^f0106ed4:	00 00 00 $/;"	l
f0106ed7	obj/kern/kernel.asm	/^f0106ed7:	c7 04 24 30 a1 10 f0 	movl   $0xf010a130,(%esp)$/;"	l
f0106ede	obj/kern/kernel.asm	/^f0106ede:	e8 27 d7 ff ff       	call   f010460a <cprintf>$/;"	l
f0106ee3	obj/kern/kernel.asm	/^f0106ee3:	eb 44                	jmp    f0106f29 <mp_init+0x2ef>$/;"	l
f0106ee5	obj/kern/kernel.asm	/^f0106ee5:	8b 15 c4 53 2c f0    	mov    0xf02c53c4,%edx$/;"	l
f0106eeb	obj/kern/kernel.asm	/^f0106eeb:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106eef	obj/kern/kernel.asm	/^f0106eef:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106ef2	obj/kern/kernel.asm	/^f0106ef2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106ef6	obj/kern/kernel.asm	/^f0106ef6:	c7 04 24 b7 a1 10 f0 	movl   $0xf010a1b7,(%esp)$/;"	l
f0106efd	obj/kern/kernel.asm	/^f0106efd:	e8 08 d7 ff ff       	call   f010460a <cprintf>$/;"	l
f0106f02	obj/kern/kernel.asm	/^f0106f02:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106f05	obj/kern/kernel.asm	/^f0106f05:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0106f09	obj/kern/kernel.asm	/^f0106f09:	74 1e                	je     f0106f29 <mp_init+0x2ef>$/;"	l
f0106f0b	obj/kern/kernel.asm	/^f0106f0b:	c7 04 24 5c a1 10 f0 	movl   $0xf010a15c,(%esp)$/;"	l
f0106f12	obj/kern/kernel.asm	/^f0106f12:	e8 f3 d6 ff ff       	call   f010460a <cprintf>$/;"	l
f0106f17	obj/kern/kernel.asm	/^f0106f17:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0106f1c	obj/kern/kernel.asm	/^f0106f1c:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0106f21	obj/kern/kernel.asm	/^f0106f21:	ee                   	out    %al,(%dx)$/;"	l
f0106f22	obj/kern/kernel.asm	/^f0106f22:	b2 23                	mov    $0x23,%dl$/;"	l
f0106f24	obj/kern/kernel.asm	/^f0106f24:	ec                   	in     (%dx),%al$/;"	l
f0106f25	obj/kern/kernel.asm	/^f0106f25:	83 c8 01             	or     $0x1,%eax$/;"	l
f0106f28	obj/kern/kernel.asm	/^f0106f28:	ee                   	out    %al,(%dx)$/;"	l
f0106f29	obj/kern/kernel.asm	/^f0106f29:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0106f2c	obj/kern/kernel.asm	/^f0106f2c:	5b                   	pop    %ebx$/;"	l
f0106f2d	obj/kern/kernel.asm	/^f0106f2d:	5e                   	pop    %esi$/;"	l
f0106f2e	obj/kern/kernel.asm	/^f0106f2e:	5f                   	pop    %edi$/;"	l
f0106f2f	obj/kern/kernel.asm	/^f0106f2f:	5d                   	pop    %ebp$/;"	l
f0106f30	obj/kern/kernel.asm	/^f0106f30:	c3                   	ret    $/;"	l
f0106f31	obj/kern/kernel.asm	/^f0106f31 <lapicw>:$/;"	l
f0106f31	obj/kern/kernel.asm	/^f0106f31:	55                   	push   %ebp$/;"	l
f0106f32	obj/kern/kernel.asm	/^f0106f32:	89 e5                	mov    %esp,%ebp$/;"	l
f0106f34	obj/kern/kernel.asm	/^f0106f34:	8b 0d 04 60 30 f0    	mov    0xf0306004,%ecx$/;"	l
f0106f3a	obj/kern/kernel.asm	/^f0106f3a:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0106f3d	obj/kern/kernel.asm	/^f0106f3d:	89 10                	mov    %edx,(%eax)$/;"	l
f0106f3f	obj/kern/kernel.asm	/^f0106f3f:	a1 04 60 30 f0       	mov    0xf0306004,%eax$/;"	l
f0106f44	obj/kern/kernel.asm	/^f0106f44:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106f47	obj/kern/kernel.asm	/^f0106f47:	5d                   	pop    %ebp$/;"	l
f0106f48	obj/kern/kernel.asm	/^f0106f48:	c3                   	ret    $/;"	l
f0106f49	obj/kern/kernel.asm	/^f0106f49 <cpunum>:$/;"	l
f0106f49	obj/kern/kernel.asm	/^f0106f49:	55                   	push   %ebp$/;"	l
f0106f4a	obj/kern/kernel.asm	/^f0106f4a:	89 e5                	mov    %esp,%ebp$/;"	l
f0106f4c	obj/kern/kernel.asm	/^f0106f4c:	a1 04 60 30 f0       	mov    0xf0306004,%eax$/;"	l
f0106f51	obj/kern/kernel.asm	/^f0106f51:	85 c0                	test   %eax,%eax$/;"	l
f0106f53	obj/kern/kernel.asm	/^f0106f53:	74 08                	je     f0106f5d <cpunum+0x14>$/;"	l
f0106f55	obj/kern/kernel.asm	/^f0106f55:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106f58	obj/kern/kernel.asm	/^f0106f58:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0106f5b	obj/kern/kernel.asm	/^f0106f5b:	eb 05                	jmp    f0106f62 <cpunum+0x19>$/;"	l
f0106f5d	obj/kern/kernel.asm	/^f0106f5d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106f62	obj/kern/kernel.asm	/^f0106f62:	5d                   	pop    %ebp$/;"	l
f0106f63	obj/kern/kernel.asm	/^f0106f63:	c3                   	ret    $/;"	l
f0106f64	obj/kern/kernel.asm	/^f0106f64 <lapic_init>:$/;"	l
f0106f64	obj/kern/kernel.asm	/^f0106f64:	a1 00 60 30 f0       	mov    0xf0306000,%eax$/;"	l
f0106f69	obj/kern/kernel.asm	/^f0106f69:	85 c0                	test   %eax,%eax$/;"	l
f0106f6b	obj/kern/kernel.asm	/^f0106f6b:	0f 84 23 01 00 00    	je     f0107094 <lapic_init+0x130>$/;"	l
f0106f71	obj/kern/kernel.asm	/^f0106f71:	55                   	push   %ebp$/;"	l
f0106f72	obj/kern/kernel.asm	/^f0106f72:	89 e5                	mov    %esp,%ebp$/;"	l
f0106f74	obj/kern/kernel.asm	/^f0106f74:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106f77	obj/kern/kernel.asm	/^f0106f77:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0106f7e	obj/kern/kernel.asm	/^f0106f7e:	00 $/;"	l
f0106f7f	obj/kern/kernel.asm	/^f0106f7f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106f82	obj/kern/kernel.asm	/^f0106f82:	e8 9f a9 ff ff       	call   f0101926 <mmio_map_region>$/;"	l
f0106f87	obj/kern/kernel.asm	/^f0106f87:	a3 04 60 30 f0       	mov    %eax,0xf0306004$/;"	l
f0106f8c	obj/kern/kernel.asm	/^f0106f8c:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0106f91	obj/kern/kernel.asm	/^f0106f91:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0106f96	obj/kern/kernel.asm	/^f0106f96:	e8 96 ff ff ff       	call   f0106f31 <lapicw>$/;"	l
f0106f9b	obj/kern/kernel.asm	/^f0106f9b:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0106fa0	obj/kern/kernel.asm	/^f0106fa0:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0106fa5	obj/kern/kernel.asm	/^f0106fa5:	e8 87 ff ff ff       	call   f0106f31 <lapicw>$/;"	l
f0106faa	obj/kern/kernel.asm	/^f0106faa:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0106faf	obj/kern/kernel.asm	/^f0106faf:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0106fb4	obj/kern/kernel.asm	/^f0106fb4:	e8 78 ff ff ff       	call   f0106f31 <lapicw>$/;"	l
f0106fb9	obj/kern/kernel.asm	/^f0106fb9:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0106fbe	obj/kern/kernel.asm	/^f0106fbe:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0106fc3	obj/kern/kernel.asm	/^f0106fc3:	e8 69 ff ff ff       	call   f0106f31 <lapicw>$/;"	l
f0106fc8	obj/kern/kernel.asm	/^f0106fc8:	e8 7c ff ff ff       	call   f0106f49 <cpunum>$/;"	l
f0106fcd	obj/kern/kernel.asm	/^f0106fcd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106fd0	obj/kern/kernel.asm	/^f0106fd0:	05 20 50 2c f0       	add    $0xf02c5020,%eax$/;"	l
f0106fd5	obj/kern/kernel.asm	/^f0106fd5:	39 05 c0 53 2c f0    	cmp    %eax,0xf02c53c0$/;"	l
f0106fdb	obj/kern/kernel.asm	/^f0106fdb:	74 0f                	je     f0106fec <lapic_init+0x88>$/;"	l
f0106fdd	obj/kern/kernel.asm	/^f0106fdd:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106fe2	obj/kern/kernel.asm	/^f0106fe2:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106fe7	obj/kern/kernel.asm	/^f0106fe7:	e8 45 ff ff ff       	call   f0106f31 <lapicw>$/;"	l
f0106fec	obj/kern/kernel.asm	/^f0106fec:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106ff1	obj/kern/kernel.asm	/^f0106ff1:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106ff6	obj/kern/kernel.asm	/^f0106ff6:	e8 36 ff ff ff       	call   f0106f31 <lapicw>$/;"	l
f0106ffb	obj/kern/kernel.asm	/^f0106ffb:	a1 04 60 30 f0       	mov    0xf0306004,%eax$/;"	l
f0107000	obj/kern/kernel.asm	/^f0107000:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0107003	obj/kern/kernel.asm	/^f0107003:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0107006	obj/kern/kernel.asm	/^f0107006:	3c 03                	cmp    $0x3,%al$/;"	l
f0107008	obj/kern/kernel.asm	/^f0107008:	76 0f                	jbe    f0107019 <lapic_init+0xb5>$/;"	l
f010700a	obj/kern/kernel.asm	/^f010700a:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f010700f	obj/kern/kernel.asm	/^f010700f:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0107014	obj/kern/kernel.asm	/^f0107014:	e8 18 ff ff ff       	call   f0106f31 <lapicw>$/;"	l
f0107019	obj/kern/kernel.asm	/^f0107019:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f010701e	obj/kern/kernel.asm	/^f010701e:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0107023	obj/kern/kernel.asm	/^f0107023:	e8 09 ff ff ff       	call   f0106f31 <lapicw>$/;"	l
f0107028	obj/kern/kernel.asm	/^f0107028:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010702d	obj/kern/kernel.asm	/^f010702d:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0107032	obj/kern/kernel.asm	/^f0107032:	e8 fa fe ff ff       	call   f0106f31 <lapicw>$/;"	l
f0107037	obj/kern/kernel.asm	/^f0107037:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010703c	obj/kern/kernel.asm	/^f010703c:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0107041	obj/kern/kernel.asm	/^f0107041:	e8 eb fe ff ff       	call   f0106f31 <lapicw>$/;"	l
f0107046	obj/kern/kernel.asm	/^f0107046:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010704b	obj/kern/kernel.asm	/^f010704b:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0107050	obj/kern/kernel.asm	/^f0107050:	e8 dc fe ff ff       	call   f0106f31 <lapicw>$/;"	l
f0107055	obj/kern/kernel.asm	/^f0107055:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010705a	obj/kern/kernel.asm	/^f010705a:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f010705f	obj/kern/kernel.asm	/^f010705f:	e8 cd fe ff ff       	call   f0106f31 <lapicw>$/;"	l
f0107064	obj/kern/kernel.asm	/^f0107064:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0107069	obj/kern/kernel.asm	/^f0107069:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f010706e	obj/kern/kernel.asm	/^f010706e:	e8 be fe ff ff       	call   f0106f31 <lapicw>$/;"	l
f0107073	obj/kern/kernel.asm	/^f0107073:	8b 15 04 60 30 f0    	mov    0xf0306004,%edx$/;"	l
f0107079	obj/kern/kernel.asm	/^f0107079:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f010707f	obj/kern/kernel.asm	/^f010707f:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0107082	obj/kern/kernel.asm	/^f0107082:	75 f5                	jne    f0107079 <lapic_init+0x115>$/;"	l
f0107084	obj/kern/kernel.asm	/^f0107084:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0107089	obj/kern/kernel.asm	/^f0107089:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010708e	obj/kern/kernel.asm	/^f010708e:	e8 9e fe ff ff       	call   f0106f31 <lapicw>$/;"	l
f0107093	obj/kern/kernel.asm	/^f0107093:	c9                   	leave  $/;"	l
f0107094	obj/kern/kernel.asm	/^f0107094:	f3 c3                	repz ret $/;"	l
f0107096	obj/kern/kernel.asm	/^f0107096 <lapic_eoi>:$/;"	l
f0107096	obj/kern/kernel.asm	/^f0107096:	83 3d 04 60 30 f0 00 	cmpl   $0x0,0xf0306004$/;"	l
f010709d	obj/kern/kernel.asm	/^f010709d:	74 13                	je     f01070b2 <lapic_eoi+0x1c>$/;"	l
f010709f	obj/kern/kernel.asm	/^f010709f:	55                   	push   %ebp$/;"	l
f01070a0	obj/kern/kernel.asm	/^f01070a0:	89 e5                	mov    %esp,%ebp$/;"	l
f01070a2	obj/kern/kernel.asm	/^f01070a2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01070a7	obj/kern/kernel.asm	/^f01070a7:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f01070ac	obj/kern/kernel.asm	/^f01070ac:	e8 80 fe ff ff       	call   f0106f31 <lapicw>$/;"	l
f01070b1	obj/kern/kernel.asm	/^f01070b1:	5d                   	pop    %ebp$/;"	l
f01070b2	obj/kern/kernel.asm	/^f01070b2:	f3 c3                	repz ret $/;"	l
f01070b4	obj/kern/kernel.asm	/^f01070b4 <lapic_startap>:$/;"	l
f01070b4	obj/kern/kernel.asm	/^f01070b4:	55                   	push   %ebp$/;"	l
f01070b5	obj/kern/kernel.asm	/^f01070b5:	89 e5                	mov    %esp,%ebp$/;"	l
f01070b7	obj/kern/kernel.asm	/^f01070b7:	56                   	push   %esi$/;"	l
f01070b8	obj/kern/kernel.asm	/^f01070b8:	53                   	push   %ebx$/;"	l
f01070b9	obj/kern/kernel.asm	/^f01070b9:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01070bc	obj/kern/kernel.asm	/^f01070bc:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01070bf	obj/kern/kernel.asm	/^f01070bf:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01070c2	obj/kern/kernel.asm	/^f01070c2:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f01070c7	obj/kern/kernel.asm	/^f01070c7:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01070cc	obj/kern/kernel.asm	/^f01070cc:	ee                   	out    %al,(%dx)$/;"	l
f01070cd	obj/kern/kernel.asm	/^f01070cd:	b2 71                	mov    $0x71,%dl$/;"	l
f01070cf	obj/kern/kernel.asm	/^f01070cf:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01070d4	obj/kern/kernel.asm	/^f01070d4:	ee                   	out    %al,(%dx)$/;"	l
f01070d5	obj/kern/kernel.asm	/^f01070d5:	83 3d 9c 4e 2c f0 00 	cmpl   $0x0,0xf02c4e9c$/;"	l
f01070dc	obj/kern/kernel.asm	/^f01070dc:	75 24                	jne    f0107102 <lapic_startap+0x4e>$/;"	l
f01070de	obj/kern/kernel.asm	/^f01070de:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f01070e5	obj/kern/kernel.asm	/^f01070e5:	00 $/;"	l
f01070e6	obj/kern/kernel.asm	/^f01070e6:	c7 44 24 08 54 81 10 	movl   $0xf0108154,0x8(%esp)$/;"	l
f01070ed	obj/kern/kernel.asm	/^f01070ed:	f0 $/;"	l
f01070ee	obj/kern/kernel.asm	/^f01070ee:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
f01070f5	obj/kern/kernel.asm	/^f01070f5:	00 $/;"	l
f01070f6	obj/kern/kernel.asm	/^f01070f6:	c7 04 24 d4 a1 10 f0 	movl   $0xf010a1d4,(%esp)$/;"	l
f01070fd	obj/kern/kernel.asm	/^f01070fd:	e8 9b 8f ff ff       	call   f010009d <_panic>$/;"	l
f0107102	obj/kern/kernel.asm	/^f0107102:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0107109	obj/kern/kernel.asm	/^f0107109:	00 00 $/;"	l
f010710b	obj/kern/kernel.asm	/^f010710b:	89 f0                	mov    %esi,%eax$/;"	l
f010710d	obj/kern/kernel.asm	/^f010710d:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0107110	obj/kern/kernel.asm	/^f0107110:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0107116	obj/kern/kernel.asm	/^f0107116:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f0107119	obj/kern/kernel.asm	/^f0107119:	89 da                	mov    %ebx,%edx$/;"	l
f010711b	obj/kern/kernel.asm	/^f010711b:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0107120	obj/kern/kernel.asm	/^f0107120:	e8 0c fe ff ff       	call   f0106f31 <lapicw>$/;"	l
f0107125	obj/kern/kernel.asm	/^f0107125:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f010712a	obj/kern/kernel.asm	/^f010712a:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f010712f	obj/kern/kernel.asm	/^f010712f:	e8 fd fd ff ff       	call   f0106f31 <lapicw>$/;"	l
f0107134	obj/kern/kernel.asm	/^f0107134:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0107139	obj/kern/kernel.asm	/^f0107139:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f010713e	obj/kern/kernel.asm	/^f010713e:	e8 ee fd ff ff       	call   f0106f31 <lapicw>$/;"	l
f0107143	obj/kern/kernel.asm	/^f0107143:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0107146	obj/kern/kernel.asm	/^f0107146:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f010714c	obj/kern/kernel.asm	/^f010714c:	89 da                	mov    %ebx,%edx$/;"	l
f010714e	obj/kern/kernel.asm	/^f010714e:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0107153	obj/kern/kernel.asm	/^f0107153:	e8 d9 fd ff ff       	call   f0106f31 <lapicw>$/;"	l
f0107158	obj/kern/kernel.asm	/^f0107158:	89 f2                	mov    %esi,%edx$/;"	l
f010715a	obj/kern/kernel.asm	/^f010715a:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f010715f	obj/kern/kernel.asm	/^f010715f:	e8 cd fd ff ff       	call   f0106f31 <lapicw>$/;"	l
f0107164	obj/kern/kernel.asm	/^f0107164:	89 da                	mov    %ebx,%edx$/;"	l
f0107166	obj/kern/kernel.asm	/^f0107166:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f010716b	obj/kern/kernel.asm	/^f010716b:	e8 c1 fd ff ff       	call   f0106f31 <lapicw>$/;"	l
f0107170	obj/kern/kernel.asm	/^f0107170:	89 f2                	mov    %esi,%edx$/;"	l
f0107172	obj/kern/kernel.asm	/^f0107172:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0107177	obj/kern/kernel.asm	/^f0107177:	e8 b5 fd ff ff       	call   f0106f31 <lapicw>$/;"	l
f010717c	obj/kern/kernel.asm	/^f010717c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010717f	obj/kern/kernel.asm	/^f010717f:	5b                   	pop    %ebx$/;"	l
f0107180	obj/kern/kernel.asm	/^f0107180:	5e                   	pop    %esi$/;"	l
f0107181	obj/kern/kernel.asm	/^f0107181:	5d                   	pop    %ebp$/;"	l
f0107182	obj/kern/kernel.asm	/^f0107182:	c3                   	ret    $/;"	l
f0107183	obj/kern/kernel.asm	/^f0107183 <lapic_ipi>:$/;"	l
f0107183	obj/kern/kernel.asm	/^f0107183:	55                   	push   %ebp$/;"	l
f0107184	obj/kern/kernel.asm	/^f0107184:	89 e5                	mov    %esp,%ebp$/;"	l
f0107186	obj/kern/kernel.asm	/^f0107186:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0107189	obj/kern/kernel.asm	/^f0107189:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f010718f	obj/kern/kernel.asm	/^f010718f:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0107194	obj/kern/kernel.asm	/^f0107194:	e8 98 fd ff ff       	call   f0106f31 <lapicw>$/;"	l
f0107199	obj/kern/kernel.asm	/^f0107199:	8b 15 04 60 30 f0    	mov    0xf0306004,%edx$/;"	l
f010719f	obj/kern/kernel.asm	/^f010719f:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f01071a5	obj/kern/kernel.asm	/^f01071a5:	f6 c4 10             	test   $0x10,%ah$/;"	l
f01071a8	obj/kern/kernel.asm	/^f01071a8:	75 f5                	jne    f010719f <lapic_ipi+0x1c>$/;"	l
f01071aa	obj/kern/kernel.asm	/^f01071aa:	5d                   	pop    %ebp$/;"	l
f01071ab	obj/kern/kernel.asm	/^f01071ab:	c3                   	ret    $/;"	l
f01071ac	obj/kern/kernel.asm	/^f01071ac <__spin_initlock>:$/;"	l
f01071ac	obj/kern/kernel.asm	/^f01071ac:	55                   	push   %ebp$/;"	l
f01071ad	obj/kern/kernel.asm	/^f01071ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01071af	obj/kern/kernel.asm	/^f01071af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01071b2	obj/kern/kernel.asm	/^f01071b2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01071b8	obj/kern/kernel.asm	/^f01071b8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01071bb	obj/kern/kernel.asm	/^f01071bb:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f01071be	obj/kern/kernel.asm	/^f01071be:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f01071c5	obj/kern/kernel.asm	/^f01071c5:	5d                   	pop    %ebp$/;"	l
f01071c6	obj/kern/kernel.asm	/^f01071c6:	c3                   	ret    $/;"	l
f01071c7	obj/kern/kernel.asm	/^f01071c7 <spin_lock>:$/;"	l
f01071c7	obj/kern/kernel.asm	/^f01071c7:	55                   	push   %ebp$/;"	l
f01071c8	obj/kern/kernel.asm	/^f01071c8:	89 e5                	mov    %esp,%ebp$/;"	l
f01071ca	obj/kern/kernel.asm	/^f01071ca:	56                   	push   %esi$/;"	l
f01071cb	obj/kern/kernel.asm	/^f01071cb:	53                   	push   %ebx$/;"	l
f01071cc	obj/kern/kernel.asm	/^f01071cc:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01071cf	obj/kern/kernel.asm	/^f01071cf:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01071d2	obj/kern/kernel.asm	/^f01071d2:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f01071d5	obj/kern/kernel.asm	/^f01071d5:	75 07                	jne    f01071de <spin_lock+0x17>$/;"	l
f01071d7	obj/kern/kernel.asm	/^f01071d7:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f01071dc	obj/kern/kernel.asm	/^f01071dc:	eb 42                	jmp    f0107220 <spin_lock+0x59>$/;"	l
f01071de	obj/kern/kernel.asm	/^f01071de:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f01071e1	obj/kern/kernel.asm	/^f01071e1:	e8 63 fd ff ff       	call   f0106f49 <cpunum>$/;"	l
f01071e6	obj/kern/kernel.asm	/^f01071e6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01071e9	obj/kern/kernel.asm	/^f01071e9:	05 20 50 2c f0       	add    $0xf02c5020,%eax$/;"	l
f01071ee	obj/kern/kernel.asm	/^f01071ee:	39 c6                	cmp    %eax,%esi$/;"	l
f01071f0	obj/kern/kernel.asm	/^f01071f0:	75 e5                	jne    f01071d7 <spin_lock+0x10>$/;"	l
f01071f2	obj/kern/kernel.asm	/^f01071f2:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f01071f5	obj/kern/kernel.asm	/^f01071f5:	e8 4f fd ff ff       	call   f0106f49 <cpunum>$/;"	l
f01071fa	obj/kern/kernel.asm	/^f01071fa:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f01071fe	obj/kern/kernel.asm	/^f01071fe:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107202	obj/kern/kernel.asm	/^f0107202:	c7 44 24 08 e4 a1 10 	movl   $0xf010a1e4,0x8(%esp)$/;"	l
f0107209	obj/kern/kernel.asm	/^f0107209:	f0 $/;"	l
f010720a	obj/kern/kernel.asm	/^f010720a:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
f0107211	obj/kern/kernel.asm	/^f0107211:	00 $/;"	l
f0107212	obj/kern/kernel.asm	/^f0107212:	c7 04 24 46 a2 10 f0 	movl   $0xf010a246,(%esp)$/;"	l
f0107219	obj/kern/kernel.asm	/^f0107219:	e8 7f 8e ff ff       	call   f010009d <_panic>$/;"	l
f010721e	obj/kern/kernel.asm	/^f010721e:	f3 90                	pause  $/;"	l
f0107220	obj/kern/kernel.asm	/^f0107220:	89 d0                	mov    %edx,%eax$/;"	l
f0107222	obj/kern/kernel.asm	/^f0107222:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0107225	obj/kern/kernel.asm	/^f0107225:	85 c0                	test   %eax,%eax$/;"	l
f0107227	obj/kern/kernel.asm	/^f0107227:	75 f5                	jne    f010721e <spin_lock+0x57>$/;"	l
f0107229	obj/kern/kernel.asm	/^f0107229:	e8 1b fd ff ff       	call   f0106f49 <cpunum>$/;"	l
f010722e	obj/kern/kernel.asm	/^f010722e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0107231	obj/kern/kernel.asm	/^f0107231:	05 20 50 2c f0       	add    $0xf02c5020,%eax$/;"	l
f0107236	obj/kern/kernel.asm	/^f0107236:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0107239	obj/kern/kernel.asm	/^f0107239:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f010723c	obj/kern/kernel.asm	/^f010723c:	89 ea                	mov    %ebp,%edx$/;"	l
f010723e	obj/kern/kernel.asm	/^f010723e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107243	obj/kern/kernel.asm	/^f0107243:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f0107249	obj/kern/kernel.asm	/^f0107249:	76 12                	jbe    f010725d <spin_lock+0x96>$/;"	l
f010724b	obj/kern/kernel.asm	/^f010724b:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f010724e	obj/kern/kernel.asm	/^f010724e:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f0107251	obj/kern/kernel.asm	/^f0107251:	8b 12                	mov    (%edx),%edx$/;"	l
f0107253	obj/kern/kernel.asm	/^f0107253:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107256	obj/kern/kernel.asm	/^f0107256:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0107259	obj/kern/kernel.asm	/^f0107259:	75 e8                	jne    f0107243 <spin_lock+0x7c>$/;"	l
f010725b	obj/kern/kernel.asm	/^f010725b:	eb 0f                	jmp    f010726c <spin_lock+0xa5>$/;"	l
f010725d	obj/kern/kernel.asm	/^f010725d:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f0107264	obj/kern/kernel.asm	/^f0107264:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107267	obj/kern/kernel.asm	/^f0107267:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010726a	obj/kern/kernel.asm	/^f010726a:	7e f1                	jle    f010725d <spin_lock+0x96>$/;"	l
f010726c	obj/kern/kernel.asm	/^f010726c:	83 c4 20             	add    $0x20,%esp$/;"	l
f010726f	obj/kern/kernel.asm	/^f010726f:	5b                   	pop    %ebx$/;"	l
f0107270	obj/kern/kernel.asm	/^f0107270:	5e                   	pop    %esi$/;"	l
f0107271	obj/kern/kernel.asm	/^f0107271:	5d                   	pop    %ebp$/;"	l
f0107272	obj/kern/kernel.asm	/^f0107272:	c3                   	ret    $/;"	l
f0107273	obj/kern/kernel.asm	/^f0107273 <spin_unlock>:$/;"	l
f0107273	obj/kern/kernel.asm	/^f0107273:	55                   	push   %ebp$/;"	l
f0107274	obj/kern/kernel.asm	/^f0107274:	89 e5                	mov    %esp,%ebp$/;"	l
f0107276	obj/kern/kernel.asm	/^f0107276:	57                   	push   %edi$/;"	l
f0107277	obj/kern/kernel.asm	/^f0107277:	56                   	push   %esi$/;"	l
f0107278	obj/kern/kernel.asm	/^f0107278:	53                   	push   %ebx$/;"	l
f0107279	obj/kern/kernel.asm	/^f0107279:	83 ec 6c             	sub    $0x6c,%esp$/;"	l
f010727c	obj/kern/kernel.asm	/^f010727c:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010727f	obj/kern/kernel.asm	/^f010727f:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0107282	obj/kern/kernel.asm	/^f0107282:	74 18                	je     f010729c <spin_unlock+0x29>$/;"	l
f0107284	obj/kern/kernel.asm	/^f0107284:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f0107287	obj/kern/kernel.asm	/^f0107287:	e8 bd fc ff ff       	call   f0106f49 <cpunum>$/;"	l
f010728c	obj/kern/kernel.asm	/^f010728c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010728f	obj/kern/kernel.asm	/^f010728f:	05 20 50 2c f0       	add    $0xf02c5020,%eax$/;"	l
f0107294	obj/kern/kernel.asm	/^f0107294:	39 c3                	cmp    %eax,%ebx$/;"	l
f0107296	obj/kern/kernel.asm	/^f0107296:	0f 84 ce 00 00 00    	je     f010736a <spin_unlock+0xf7>$/;"	l
f010729c	obj/kern/kernel.asm	/^f010729c:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f01072a3	obj/kern/kernel.asm	/^f01072a3:	00 $/;"	l
f01072a4	obj/kern/kernel.asm	/^f01072a4:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f01072a7	obj/kern/kernel.asm	/^f01072a7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01072ab	obj/kern/kernel.asm	/^f01072ab:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f01072ae	obj/kern/kernel.asm	/^f01072ae:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01072b1	obj/kern/kernel.asm	/^f01072b1:	e8 8e f6 ff ff       	call   f0106944 <memmove>$/;"	l
f01072b6	obj/kern/kernel.asm	/^f01072b6:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01072b9	obj/kern/kernel.asm	/^f01072b9:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f01072bc	obj/kern/kernel.asm	/^f01072bc:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f01072bf	obj/kern/kernel.asm	/^f01072bf:	e8 85 fc ff ff       	call   f0106f49 <cpunum>$/;"	l
f01072c4	obj/kern/kernel.asm	/^f01072c4:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01072c8	obj/kern/kernel.asm	/^f01072c8:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01072cc	obj/kern/kernel.asm	/^f01072cc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01072d0	obj/kern/kernel.asm	/^f01072d0:	c7 04 24 10 a2 10 f0 	movl   $0xf010a210,(%esp)$/;"	l
f01072d7	obj/kern/kernel.asm	/^f01072d7:	e8 2e d3 ff ff       	call   f010460a <cprintf>$/;"	l
f01072dc	obj/kern/kernel.asm	/^f01072dc:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f01072df	obj/kern/kernel.asm	/^f01072df:	eb 65                	jmp    f0107346 <spin_unlock+0xd3>$/;"	l
f01072e1	obj/kern/kernel.asm	/^f01072e1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01072e5	obj/kern/kernel.asm	/^f01072e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01072e8	obj/kern/kernel.asm	/^f01072e8:	e8 06 eb ff ff       	call   f0105df3 <debuginfo_eip>$/;"	l
f01072ed	obj/kern/kernel.asm	/^f01072ed:	85 c0                	test   %eax,%eax$/;"	l
f01072ef	obj/kern/kernel.asm	/^f01072ef:	78 39                	js     f010732a <spin_unlock+0xb7>$/;"	l
f01072f1	obj/kern/kernel.asm	/^f01072f1:	8b 06                	mov    (%esi),%eax$/;"	l
f01072f3	obj/kern/kernel.asm	/^f01072f3:	89 c2                	mov    %eax,%edx$/;"	l
f01072f5	obj/kern/kernel.asm	/^f01072f5:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f01072f8	obj/kern/kernel.asm	/^f01072f8:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f01072fc	obj/kern/kernel.asm	/^f01072fc:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
f01072ff	obj/kern/kernel.asm	/^f01072ff:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107303	obj/kern/kernel.asm	/^f0107303:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
f0107306	obj/kern/kernel.asm	/^f0107306:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f010730a	obj/kern/kernel.asm	/^f010730a:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
f010730d	obj/kern/kernel.asm	/^f010730d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0107311	obj/kern/kernel.asm	/^f0107311:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
f0107314	obj/kern/kernel.asm	/^f0107314:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0107318	obj/kern/kernel.asm	/^f0107318:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010731c	obj/kern/kernel.asm	/^f010731c:	c7 04 24 56 a2 10 f0 	movl   $0xf010a256,(%esp)$/;"	l
f0107323	obj/kern/kernel.asm	/^f0107323:	e8 e2 d2 ff ff       	call   f010460a <cprintf>$/;"	l
f0107328	obj/kern/kernel.asm	/^f0107328:	eb 12                	jmp    f010733c <spin_unlock+0xc9>$/;"	l
f010732a	obj/kern/kernel.asm	/^f010732a:	8b 06                	mov    (%esi),%eax$/;"	l
f010732c	obj/kern/kernel.asm	/^f010732c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107330	obj/kern/kernel.asm	/^f0107330:	c7 04 24 6d a2 10 f0 	movl   $0xf010a26d,(%esp)$/;"	l
f0107337	obj/kern/kernel.asm	/^f0107337:	e8 ce d2 ff ff       	call   f010460a <cprintf>$/;"	l
f010733c	obj/kern/kernel.asm	/^f010733c:	83 c3 04             	add    $0x4,%ebx$/;"	l
f010733f	obj/kern/kernel.asm	/^f010733f:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f0107342	obj/kern/kernel.asm	/^f0107342:	39 c3                	cmp    %eax,%ebx$/;"	l
f0107344	obj/kern/kernel.asm	/^f0107344:	74 08                	je     f010734e <spin_unlock+0xdb>$/;"	l
f0107346	obj/kern/kernel.asm	/^f0107346:	89 de                	mov    %ebx,%esi$/;"	l
f0107348	obj/kern/kernel.asm	/^f0107348:	8b 03                	mov    (%ebx),%eax$/;"	l
f010734a	obj/kern/kernel.asm	/^f010734a:	85 c0                	test   %eax,%eax$/;"	l
f010734c	obj/kern/kernel.asm	/^f010734c:	75 93                	jne    f01072e1 <spin_unlock+0x6e>$/;"	l
f010734e	obj/kern/kernel.asm	/^f010734e:	c7 44 24 08 75 a2 10 	movl   $0xf010a275,0x8(%esp)$/;"	l
f0107355	obj/kern/kernel.asm	/^f0107355:	f0 $/;"	l
f0107356	obj/kern/kernel.asm	/^f0107356:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
f010735d	obj/kern/kernel.asm	/^f010735d:	00 $/;"	l
f010735e	obj/kern/kernel.asm	/^f010735e:	c7 04 24 46 a2 10 f0 	movl   $0xf010a246,(%esp)$/;"	l
f0107365	obj/kern/kernel.asm	/^f0107365:	e8 33 8d ff ff       	call   f010009d <_panic>$/;"	l
f010736a	obj/kern/kernel.asm	/^f010736a:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f0107371	obj/kern/kernel.asm	/^f0107371:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f0107378	obj/kern/kernel.asm	/^f0107378:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010737d	obj/kern/kernel.asm	/^f010737d:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f0107380	obj/kern/kernel.asm	/^f0107380:	83 c4 6c             	add    $0x6c,%esp$/;"	l
f0107383	obj/kern/kernel.asm	/^f0107383:	5b                   	pop    %ebx$/;"	l
f0107384	obj/kern/kernel.asm	/^f0107384:	5e                   	pop    %esi$/;"	l
f0107385	obj/kern/kernel.asm	/^f0107385:	5f                   	pop    %edi$/;"	l
f0107386	obj/kern/kernel.asm	/^f0107386:	5d                   	pop    %ebp$/;"	l
f0107387	obj/kern/kernel.asm	/^f0107387:	c3                   	ret    $/;"	l
f0107388	obj/kern/kernel.asm	/^f0107388 <set_trans_desc_fields>:$/;"	l
f0107388	obj/kern/kernel.asm	/^f0107388:	55                   	push   %ebp$/;"	l
f0107389	obj/kern/kernel.asm	/^f0107389:	89 e5                	mov    %esp,%ebp$/;"	l
f010738b	obj/kern/kernel.asm	/^f010738b:	53                   	push   %ebx$/;"	l
f010738c	obj/kern/kernel.asm	/^f010738c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010738f	obj/kern/kernel.asm	/^f010738f:	ba a0 a2 30 f0       	mov    $0xf030a2a0,%edx$/;"	l
f0107394	obj/kern/kernel.asm	/^f0107394:	b8 4a 60 30 f0       	mov    $0xf030604a,%eax$/;"	l
f0107399	obj/kern/kernel.asm	/^f0107399:	bb a0 d4 30 f0       	mov    $0xf030d4a0,%ebx$/;"	l
f010739e	obj/kern/kernel.asm	/^f010739e:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01073a1	obj/kern/kernel.asm	/^f01073a1:	c6 40 01 09          	movb   $0x9,0x1(%eax)$/;"	l
f01073a5	obj/kern/kernel.asm	/^f01073a5:	c6 40 02 01          	movb   $0x1,0x2(%eax)$/;"	l
f01073a9	obj/kern/kernel.asm	/^f01073a9:	c6 40 03 00          	movb   $0x0,0x3(%eax)$/;"	l
f01073ad	obj/kern/kernel.asm	/^f01073ad:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01073b3	obj/kern/kernel.asm	/^f01073b3:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f01073b9	obj/kern/kernel.asm	/^f01073b9:	77 20                	ja     f01073db <set_trans_desc_fields+0x53>$/;"	l
f01073bb	obj/kern/kernel.asm	/^f01073bb:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01073bf	obj/kern/kernel.asm	/^f01073bf:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f01073c6	obj/kern/kernel.asm	/^f01073c6:	f0 $/;"	l
f01073c7	obj/kern/kernel.asm	/^f01073c7:	c7 44 24 04 21 00 00 	movl   $0x21,0x4(%esp)$/;"	l
f01073ce	obj/kern/kernel.asm	/^f01073ce:	00 $/;"	l
f01073cf	obj/kern/kernel.asm	/^f01073cf:	c7 04 24 dc a2 10 f0 	movl   $0xf010a2dc,(%esp)$/;"	l
f01073d6	obj/kern/kernel.asm	/^f01073d6:	e8 c2 8c ff ff       	call   f010009d <_panic>$/;"	l
f01073db	obj/kern/kernel.asm	/^f01073db:	8d 8a 00 00 00 10    	lea    0x10000000(%edx),%ecx$/;"	l
f01073e1	obj/kern/kernel.asm	/^f01073e1:	89 48 f6             	mov    %ecx,-0xa(%eax)$/;"	l
f01073e4	obj/kern/kernel.asm	/^f01073e4:	c7 40 fa 00 00 00 00 	movl   $0x0,-0x6(%eax)$/;"	l
f01073eb	obj/kern/kernel.asm	/^f01073eb:	66 c7 40 fe 2a 00    	movw   $0x2a,-0x2(%eax)$/;"	l
f01073f1	obj/kern/kernel.asm	/^f01073f1:	83 c2 64             	add    $0x64,%edx$/;"	l
f01073f4	obj/kern/kernel.asm	/^f01073f4:	83 c0 10             	add    $0x10,%eax$/;"	l
f01073f7	obj/kern/kernel.asm	/^f01073f7:	39 da                	cmp    %ebx,%edx$/;"	l
f01073f9	obj/kern/kernel.asm	/^f01073f9:	75 a3                	jne    f010739e <set_trans_desc_fields+0x16>$/;"	l
f01073fb	obj/kern/kernel.asm	/^f01073fb:	83 c4 14             	add    $0x14,%esp$/;"	l
f01073fe	obj/kern/kernel.asm	/^f01073fe:	5b                   	pop    %ebx$/;"	l
f01073ff	obj/kern/kernel.asm	/^f01073ff:	5d                   	pop    %ebp$/;"	l
f0107400	obj/kern/kernel.asm	/^f0107400:	c3                   	ret    $/;"	l
f0107401	obj/kern/kernel.asm	/^f0107401 <set_recv_desc_fields>:$/;"	l
f0107401	obj/kern/kernel.asm	/^f0107401:	55                   	push   %ebp$/;"	l
f0107402	obj/kern/kernel.asm	/^f0107402:	89 e5                	mov    %esp,%ebp$/;"	l
f0107404	obj/kern/kernel.asm	/^f0107404:	53                   	push   %ebx$/;"	l
f0107405	obj/kern/kernel.asm	/^f0107405:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0107408	obj/kern/kernel.asm	/^f0107408:	b8 60 68 30 f0       	mov    $0xf0306860,%eax$/;"	l
f010740d	obj/kern/kernel.asm	/^f010740d:	ba 80 9a 30 f0       	mov    $0xf0309a80,%edx$/;"	l
f0107412	obj/kern/kernel.asm	/^f0107412:	bb 60 9a 30 f0       	mov    $0xf0309a60,%ebx$/;"	l
f0107417	obj/kern/kernel.asm	/^f0107417:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010741c	obj/kern/kernel.asm	/^f010741c:	77 20                	ja     f010743e <set_recv_desc_fields+0x3d>$/;"	l
f010741e	obj/kern/kernel.asm	/^f010741e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107422	obj/kern/kernel.asm	/^f0107422:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f0107429	obj/kern/kernel.asm	/^f0107429:	f0 $/;"	l
f010742a	obj/kern/kernel.asm	/^f010742a:	c7 44 24 04 2b 00 00 	movl   $0x2b,0x4(%esp)$/;"	l
f0107431	obj/kern/kernel.asm	/^f0107431:	00 $/;"	l
f0107432	obj/kern/kernel.asm	/^f0107432:	c7 04 24 dc a2 10 f0 	movl   $0xf010a2dc,(%esp)$/;"	l
f0107439	obj/kern/kernel.asm	/^f0107439:	e8 5f 8c ff ff       	call   f010009d <_panic>$/;"	l
f010743e	obj/kern/kernel.asm	/^f010743e:	8d 88 00 00 00 10    	lea    0x10000000(%eax),%ecx$/;"	l
f0107444	obj/kern/kernel.asm	/^f0107444:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0107446	obj/kern/kernel.asm	/^f0107446:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)$/;"	l
f010744d	obj/kern/kernel.asm	/^f010744d:	c6 42 0c 01          	movb   $0x1,0xc(%edx)$/;"	l
f0107451	obj/kern/kernel.asm	/^f0107451:	83 c0 64             	add    $0x64,%eax$/;"	l
f0107454	obj/kern/kernel.asm	/^f0107454:	83 c2 10             	add    $0x10,%edx$/;"	l
f0107457	obj/kern/kernel.asm	/^f0107457:	39 d8                	cmp    %ebx,%eax$/;"	l
f0107459	obj/kern/kernel.asm	/^f0107459:	75 bc                	jne    f0107417 <set_recv_desc_fields+0x16>$/;"	l
f010745b	obj/kern/kernel.asm	/^f010745b:	83 c4 14             	add    $0x14,%esp$/;"	l
f010745e	obj/kern/kernel.asm	/^f010745e:	5b                   	pop    %ebx$/;"	l
f010745f	obj/kern/kernel.asm	/^f010745f:	5d                   	pop    %ebp$/;"	l
f0107460	obj/kern/kernel.asm	/^f0107460:	c3                   	ret    $/;"	l
f0107461	obj/kern/kernel.asm	/^f0107461 <recieve_packets>:$/;"	l
f0107461	obj/kern/kernel.asm	/^f0107461:	55                   	push   %ebp$/;"	l
f0107462	obj/kern/kernel.asm	/^f0107462:	89 e5                	mov    %esp,%ebp$/;"	l
f0107464	obj/kern/kernel.asm	/^f0107464:	57                   	push   %edi$/;"	l
f0107465	obj/kern/kernel.asm	/^f0107465:	56                   	push   %esi$/;"	l
f0107466	obj/kern/kernel.asm	/^f0107466:	53                   	push   %ebx$/;"	l
f0107467	obj/kern/kernel.asm	/^f0107467:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010746a	obj/kern/kernel.asm	/^f010746a:	8b 3d 80 a2 30 f0    	mov    0xf030a280,%edi$/;"	l
f0107470	obj/kern/kernel.asm	/^f0107470:	0f be 9f 18 28 00 00 	movsbl 0x2818(%edi),%ebx$/;"	l
f0107477	obj/kern/kernel.asm	/^f0107477:	89 d8                	mov    %ebx,%eax$/;"	l
f0107479	obj/kern/kernel.asm	/^f0107479:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010747c	obj/kern/kernel.asm	/^f010747c:	f6 80 8c 9a 30 f0 01 	testb  $0x1,-0xfcf6574(%eax)$/;"	l
f0107483	obj/kern/kernel.asm	/^f0107483:	74 4a                	je     f01074cf <recieve_packets+0x6e>$/;"	l
f0107485	obj/kern/kernel.asm	/^f0107485:	89 c6                	mov    %eax,%esi$/;"	l
f0107487	obj/kern/kernel.asm	/^f0107487:	0f b7 90 88 9a 30 f0 	movzwl -0xfcf6578(%eax),%edx$/;"	l
f010748e	obj/kern/kernel.asm	/^f010748e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107491	obj/kern/kernel.asm	/^f0107491:	89 10                	mov    %edx,(%eax)$/;"	l
f0107493	obj/kern/kernel.asm	/^f0107493:	0f b7 86 88 9a 30 f0 	movzwl -0xfcf6578(%esi),%eax$/;"	l
f010749a	obj/kern/kernel.asm	/^f010749a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010749e	obj/kern/kernel.asm	/^f010749e:	6b c3 64             	imul   $0x64,%ebx,%eax$/;"	l
f01074a1	obj/kern/kernel.asm	/^f01074a1:	05 60 68 30 f0       	add    $0xf0306860,%eax$/;"	l
f01074a6	obj/kern/kernel.asm	/^f01074a6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01074aa	obj/kern/kernel.asm	/^f01074aa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01074ad	obj/kern/kernel.asm	/^f01074ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01074b0	obj/kern/kernel.asm	/^f01074b0:	e8 8f f4 ff ff       	call   f0106944 <memmove>$/;"	l
f01074b5	obj/kern/kernel.asm	/^f01074b5:	c6 86 8c 9a 30 f0 01 	movb   $0x1,-0xfcf6574(%esi)$/;"	l
f01074bc	obj/kern/kernel.asm	/^f01074bc:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01074bf	obj/kern/kernel.asm	/^f01074bf:	83 e3 7f             	and    $0x7f,%ebx$/;"	l
f01074c2	obj/kern/kernel.asm	/^f01074c2:	88 9f 18 28 00 00    	mov    %bl,0x2818(%edi)$/;"	l
f01074c8	obj/kern/kernel.asm	/^f01074c8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01074cd	obj/kern/kernel.asm	/^f01074cd:	eb 11                	jmp    f01074e0 <recieve_packets+0x7f>$/;"	l
f01074cf	obj/kern/kernel.asm	/^f01074cf:	c7 04 24 e9 a2 10 f0 	movl   $0xf010a2e9,(%esp)$/;"	l
f01074d6	obj/kern/kernel.asm	/^f01074d6:	e8 2f d1 ff ff       	call   f010460a <cprintf>$/;"	l
f01074db	obj/kern/kernel.asm	/^f01074db:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01074e0	obj/kern/kernel.asm	/^f01074e0:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01074e3	obj/kern/kernel.asm	/^f01074e3:	5b                   	pop    %ebx$/;"	l
f01074e4	obj/kern/kernel.asm	/^f01074e4:	5e                   	pop    %esi$/;"	l
f01074e5	obj/kern/kernel.asm	/^f01074e5:	5f                   	pop    %edi$/;"	l
f01074e6	obj/kern/kernel.asm	/^f01074e6:	5d                   	pop    %ebp$/;"	l
f01074e7	obj/kern/kernel.asm	/^f01074e7:	c3                   	ret    $/;"	l
f01074e8	obj/kern/kernel.asm	/^f01074e8 <transmit_packets>:$/;"	l
f01074e8	obj/kern/kernel.asm	/^f01074e8:	55                   	push   %ebp$/;"	l
f01074e9	obj/kern/kernel.asm	/^f01074e9:	89 e5                	mov    %esp,%ebp$/;"	l
f01074eb	obj/kern/kernel.asm	/^f01074eb:	57                   	push   %edi$/;"	l
f01074ec	obj/kern/kernel.asm	/^f01074ec:	56                   	push   %esi$/;"	l
f01074ed	obj/kern/kernel.asm	/^f01074ed:	53                   	push   %ebx$/;"	l
f01074ee	obj/kern/kernel.asm	/^f01074ee:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01074f1	obj/kern/kernel.asm	/^f01074f1:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01074f4	obj/kern/kernel.asm	/^f01074f4:	8b 1d 80 a2 30 f0    	mov    0xf030a280,%ebx$/;"	l
f01074fa	obj/kern/kernel.asm	/^f01074fa:	0f be bb 18 38 00 00 	movsbl 0x3818(%ebx),%edi$/;"	l
f0107501	obj/kern/kernel.asm	/^f0107501:	8d 47 01             	lea    0x1(%edi),%eax$/;"	l
f0107504	obj/kern/kernel.asm	/^f0107504:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f0107507	obj/kern/kernel.asm	/^f0107507:	a3 80 4e 2c f0       	mov    %eax,0xf02c4e80$/;"	l
f010750c	obj/kern/kernel.asm	/^f010750c:	89 f8                	mov    %edi,%eax$/;"	l
f010750e	obj/kern/kernel.asm	/^f010750e:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0107511	obj/kern/kernel.asm	/^f0107511:	f6 80 4c 60 30 f0 01 	testb  $0x1,-0xfcf9fb4(%eax)$/;"	l
f0107518	obj/kern/kernel.asm	/^f0107518:	74 43                	je     f010755d <transmit_packets+0x75>$/;"	l
f010751a	obj/kern/kernel.asm	/^f010751a:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f010751e	obj/kern/kernel.asm	/^f010751e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107521	obj/kern/kernel.asm	/^f0107521:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107525	obj/kern/kernel.asm	/^f0107525:	6b c7 64             	imul   $0x64,%edi,%eax$/;"	l
f0107528	obj/kern/kernel.asm	/^f0107528:	05 a0 a2 30 f0       	add    $0xf030a2a0,%eax$/;"	l
f010752d	obj/kern/kernel.asm	/^f010752d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107530	obj/kern/kernel.asm	/^f0107530:	e8 0f f4 ff ff       	call   f0106944 <memmove>$/;"	l
f0107535	obj/kern/kernel.asm	/^f0107535:	89 f8                	mov    %edi,%eax$/;"	l
f0107537	obj/kern/kernel.asm	/^f0107537:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010753a	obj/kern/kernel.asm	/^f010753a:	05 40 60 30 f0       	add    $0xf0306040,%eax$/;"	l
f010753f	obj/kern/kernel.asm	/^f010753f:	80 60 0c fe          	andb   $0xfe,0xc(%eax)$/;"	l
f0107543	obj/kern/kernel.asm	/^f0107543:	80 48 0b 09          	orb    $0x9,0xb(%eax)$/;"	l
f0107547	obj/kern/kernel.asm	/^f0107547:	66 89 70 08          	mov    %si,0x8(%eax)$/;"	l
f010754b	obj/kern/kernel.asm	/^f010754b:	a1 80 4e 2c f0       	mov    0xf02c4e80,%eax$/;"	l
f0107550	obj/kern/kernel.asm	/^f0107550:	88 83 18 38 00 00    	mov    %al,0x3818(%ebx)$/;"	l
f0107556	obj/kern/kernel.asm	/^f0107556:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010755b	obj/kern/kernel.asm	/^f010755b:	eb 11                	jmp    f010756e <transmit_packets+0x86>$/;"	l
f010755d	obj/kern/kernel.asm	/^f010755d:	c7 04 24 90 a2 10 f0 	movl   $0xf010a290,(%esp)$/;"	l
f0107564	obj/kern/kernel.asm	/^f0107564:	e8 a1 d0 ff ff       	call   f010460a <cprintf>$/;"	l
f0107569	obj/kern/kernel.asm	/^f0107569:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010756e	obj/kern/kernel.asm	/^f010756e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0107571	obj/kern/kernel.asm	/^f0107571:	5b                   	pop    %ebx$/;"	l
f0107572	obj/kern/kernel.asm	/^f0107572:	5e                   	pop    %esi$/;"	l
f0107573	obj/kern/kernel.asm	/^f0107573:	5f                   	pop    %edi$/;"	l
f0107574	obj/kern/kernel.asm	/^f0107574:	5d                   	pop    %ebp$/;"	l
f0107575	obj/kern/kernel.asm	/^f0107575:	c3                   	ret    $/;"	l
f0107576	obj/kern/kernel.asm	/^f0107576 <init_attach_e1000>:$/;"	l
f0107576	obj/kern/kernel.asm	/^f0107576:	55                   	push   %ebp$/;"	l
f0107577	obj/kern/kernel.asm	/^f0107577:	89 e5                	mov    %esp,%ebp$/;"	l
f0107579	obj/kern/kernel.asm	/^f0107579:	53                   	push   %ebx$/;"	l
f010757a	obj/kern/kernel.asm	/^f010757a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010757d	obj/kern/kernel.asm	/^f010757d:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0107580	obj/kern/kernel.asm	/^f0107580:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0107583	obj/kern/kernel.asm	/^f0107583:	e8 90 06 00 00       	call   f0107c18 <pci_func_enable>$/;"	l
f0107588	obj/kern/kernel.asm	/^f0107588:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f010758b	obj/kern/kernel.asm	/^f010758b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010758f	obj/kern/kernel.asm	/^f010758f:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0107592	obj/kern/kernel.asm	/^f0107592:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107595	obj/kern/kernel.asm	/^f0107595:	e8 8c a3 ff ff       	call   f0101926 <mmio_map_region>$/;"	l
f010759a	obj/kern/kernel.asm	/^f010759a:	89 c3                	mov    %eax,%ebx$/;"	l
f010759c	obj/kern/kernel.asm	/^f010759c:	a3 80 a2 30 f0       	mov    %eax,0xf030a280$/;"	l
f01075a1	obj/kern/kernel.asm	/^f01075a1:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f01075a4	obj/kern/kernel.asm	/^f01075a4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01075a8	obj/kern/kernel.asm	/^f01075a8:	c7 04 24 bc a2 10 f0 	movl   $0xf010a2bc,(%esp)$/;"	l
f01075af	obj/kern/kernel.asm	/^f01075af:	e8 56 d0 ff ff       	call   f010460a <cprintf>$/;"	l
f01075b4	obj/kern/kernel.asm	/^f01075b4:	e8 cf fd ff ff       	call   f0107388 <set_trans_desc_fields>$/;"	l
f01075b9	obj/kern/kernel.asm	/^f01075b9:	8d 83 00 38 00 00    	lea    0x3800(%ebx),%eax$/;"	l
f01075bf	obj/kern/kernel.asm	/^f01075bf:	a3 88 a2 30 f0       	mov    %eax,0xf030a288$/;"	l
f01075c4	obj/kern/kernel.asm	/^f01075c4:	8d 83 04 38 00 00    	lea    0x3804(%ebx),%eax$/;"	l
f01075ca	obj/kern/kernel.asm	/^f01075ca:	a3 20 60 30 f0       	mov    %eax,0xf0306020$/;"	l
f01075cf	obj/kern/kernel.asm	/^f01075cf:	8d 83 08 38 00 00    	lea    0x3808(%ebx),%eax$/;"	l
f01075d5	obj/kern/kernel.asm	/^f01075d5:	a3 a8 d4 30 f0       	mov    %eax,0xf030d4a8$/;"	l
f01075da	obj/kern/kernel.asm	/^f01075da:	8d 83 10 38 00 00    	lea    0x3810(%ebx),%eax$/;"	l
f01075e0	obj/kern/kernel.asm	/^f01075e0:	a3 24 60 30 f0       	mov    %eax,0xf0306024$/;"	l
f01075e5	obj/kern/kernel.asm	/^f01075e5:	8d 83 18 38 00 00    	lea    0x3818(%ebx),%eax$/;"	l
f01075eb	obj/kern/kernel.asm	/^f01075eb:	a3 28 60 30 f0       	mov    %eax,0xf0306028$/;"	l
f01075f0	obj/kern/kernel.asm	/^f01075f0:	8d 83 00 04 00 00    	lea    0x400(%ebx),%eax$/;"	l
f01075f6	obj/kern/kernel.asm	/^f01075f6:	a3 bc d4 30 f0       	mov    %eax,0xf030d4bc$/;"	l
f01075fb	obj/kern/kernel.asm	/^f01075fb:	8d 83 10 04 00 00    	lea    0x410(%ebx),%eax$/;"	l
f0107601	obj/kern/kernel.asm	/^f0107601:	a3 a0 d4 30 f0       	mov    %eax,0xf030d4a0$/;"	l
f0107606	obj/kern/kernel.asm	/^f0107606:	b8 40 60 30 f0       	mov    $0xf0306040,%eax$/;"	l
f010760b	obj/kern/kernel.asm	/^f010760b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0107610	obj/kern/kernel.asm	/^f0107610:	77 20                	ja     f0107632 <init_attach_e1000+0xbc>$/;"	l
f0107612	obj/kern/kernel.asm	/^f0107612:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107616	obj/kern/kernel.asm	/^f0107616:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f010761d	obj/kern/kernel.asm	/^f010761d:	f0 $/;"	l
f010761e	obj/kern/kernel.asm	/^f010761e:	c7 44 24 04 6d 00 00 	movl   $0x6d,0x4(%esp)$/;"	l
f0107625	obj/kern/kernel.asm	/^f0107625:	00 $/;"	l
f0107626	obj/kern/kernel.asm	/^f0107626:	c7 04 24 dc a2 10 f0 	movl   $0xf010a2dc,(%esp)$/;"	l
f010762d	obj/kern/kernel.asm	/^f010762d:	e8 6b 8a ff ff       	call   f010009d <_panic>$/;"	l
f0107632	obj/kern/kernel.asm	/^f0107632:	c7 83 00 38 00 00 40 	movl   $0x306040,0x3800(%ebx)$/;"	l
f0107639	obj/kern/kernel.asm	/^f0107639:	60 30 00 $/;"	l
f010763c	obj/kern/kernel.asm	/^f010763c:	c7 83 04 38 00 00 00 	movl   $0x0,0x3804(%ebx)$/;"	l
f0107643	obj/kern/kernel.asm	/^f0107643:	00 00 00 $/;"	l
f0107646	obj/kern/kernel.asm	/^f0107646:	c7 83 08 38 00 00 00 	movl   $0x800,0x3808(%ebx)$/;"	l
f010764d	obj/kern/kernel.asm	/^f010764d:	08 00 00 $/;"	l
f0107650	obj/kern/kernel.asm	/^f0107650:	c7 83 18 38 00 00 00 	movl   $0x0,0x3818(%ebx)$/;"	l
f0107657	obj/kern/kernel.asm	/^f0107657:	00 00 00 $/;"	l
f010765a	obj/kern/kernel.asm	/^f010765a:	c7 83 00 04 00 00 0a 	movl   $0x4010a,0x400(%ebx)$/;"	l
f0107661	obj/kern/kernel.asm	/^f0107661:	01 04 00 $/;"	l
f0107664	obj/kern/kernel.asm	/^f0107664:	c7 83 10 04 00 00 0a 	movl   $0x60200a,0x410(%ebx)$/;"	l
f010766b	obj/kern/kernel.asm	/^f010766b:	20 60 00 $/;"	l
f010766e	obj/kern/kernel.asm	/^f010766e:	e8 8e fd ff ff       	call   f0107401 <set_recv_desc_fields>$/;"	l
f0107673	obj/kern/kernel.asm	/^f0107673:	8d 83 00 52 00 00    	lea    0x5200(%ebx),%eax$/;"	l
f0107679	obj/kern/kernel.asm	/^f0107679:	a3 c4 d4 30 f0       	mov    %eax,0xf030d4c4$/;"	l
f010767e	obj/kern/kernel.asm	/^f010767e:	8d 93 fc 53 00 00    	lea    0x53fc(%ebx),%edx$/;"	l
f0107684	obj/kern/kernel.asm	/^f0107684:	89 15 ac d4 30 f0    	mov    %edx,0xf030d4ac$/;"	l
f010768a	obj/kern/kernel.asm	/^f010768a:	eb 09                	jmp    f0107695 <init_attach_e1000+0x11f>$/;"	l
f010768c	obj/kern/kernel.asm	/^f010768c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0107692	obj/kern/kernel.asm	/^f0107692:	83 c0 04             	add    $0x4,%eax$/;"	l
f0107695	obj/kern/kernel.asm	/^f0107695:	39 05 ac d4 30 f0    	cmp    %eax,0xf030d4ac$/;"	l
f010769b	obj/kern/kernel.asm	/^f010769b:	7f ef                	jg     f010768c <init_attach_e1000+0x116>$/;"	l
f010769d	obj/kern/kernel.asm	/^f010769d:	8d 83 04 54 00 00    	lea    0x5404(%ebx),%eax$/;"	l
f01076a3	obj/kern/kernel.asm	/^f01076a3:	a3 b8 d4 30 f0       	mov    %eax,0xf030d4b8$/;"	l
f01076a8	obj/kern/kernel.asm	/^f01076a8:	c7 83 04 54 00 00 34 	movl   $0x80005634,0x5404(%ebx)$/;"	l
f01076af	obj/kern/kernel.asm	/^f01076af:	56 00 80 $/;"	l
f01076b2	obj/kern/kernel.asm	/^f01076b2:	8d 83 00 54 00 00    	lea    0x5400(%ebx),%eax$/;"	l
f01076b8	obj/kern/kernel.asm	/^f01076b8:	a3 a4 d4 30 f0       	mov    %eax,0xf030d4a4$/;"	l
f01076bd	obj/kern/kernel.asm	/^f01076bd:	c7 83 00 54 00 00 52 	movl   $0x12005452,0x5400(%ebx)$/;"	l
f01076c4	obj/kern/kernel.asm	/^f01076c4:	54 00 12 $/;"	l
f01076c7	obj/kern/kernel.asm	/^f01076c7:	8d 83 d0 00 00 00    	lea    0xd0(%ebx),%eax$/;"	l
f01076cd	obj/kern/kernel.asm	/^f01076cd:	a3 2c 60 30 f0       	mov    %eax,0xf030602c$/;"	l
f01076d2	obj/kern/kernel.asm	/^f01076d2:	c7 83 d0 00 00 00 00 	movl   $0x0,0xd0(%ebx)$/;"	l
f01076d9	obj/kern/kernel.asm	/^f01076d9:	00 00 00 $/;"	l
f01076dc	obj/kern/kernel.asm	/^f01076dc:	8d 83 20 28 00 00    	lea    0x2820(%ebx),%eax$/;"	l
f01076e2	obj/kern/kernel.asm	/^f01076e2:	a3 c0 d4 30 f0       	mov    %eax,0xf030d4c0$/;"	l
f01076e7	obj/kern/kernel.asm	/^f01076e7:	c7 83 20 28 00 00 00 	movl   $0x0,0x2820(%ebx)$/;"	l
f01076ee	obj/kern/kernel.asm	/^f01076ee:	00 00 00 $/;"	l
f01076f1	obj/kern/kernel.asm	/^f01076f1:	8d 83 04 28 00 00    	lea    0x2804(%ebx),%eax$/;"	l
f01076f7	obj/kern/kernel.asm	/^f01076f7:	a3 b4 d4 30 f0       	mov    %eax,0xf030d4b4$/;"	l
f01076fc	obj/kern/kernel.asm	/^f01076fc:	c7 83 04 28 00 00 00 	movl   $0x0,0x2804(%ebx)$/;"	l
f0107703	obj/kern/kernel.asm	/^f0107703:	00 00 00 $/;"	l
f0107706	obj/kern/kernel.asm	/^f0107706:	8d 83 00 28 00 00    	lea    0x2800(%ebx),%eax$/;"	l
f010770c	obj/kern/kernel.asm	/^f010770c:	a3 b0 d4 30 f0       	mov    %eax,0xf030d4b0$/;"	l
f0107711	obj/kern/kernel.asm	/^f0107711:	b8 80 9a 30 f0       	mov    $0xf0309a80,%eax$/;"	l
f0107716	obj/kern/kernel.asm	/^f0107716:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010771b	obj/kern/kernel.asm	/^f010771b:	77 20                	ja     f010773d <init_attach_e1000+0x1c7>$/;"	l
f010771d	obj/kern/kernel.asm	/^f010771d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107721	obj/kern/kernel.asm	/^f0107721:	c7 44 24 08 78 81 10 	movl   $0xf0108178,0x8(%esp)$/;"	l
f0107728	obj/kern/kernel.asm	/^f0107728:	f0 $/;"	l
f0107729	obj/kern/kernel.asm	/^f0107729:	c7 44 24 04 87 00 00 	movl   $0x87,0x4(%esp)$/;"	l
f0107730	obj/kern/kernel.asm	/^f0107730:	00 $/;"	l
f0107731	obj/kern/kernel.asm	/^f0107731:	c7 04 24 dc a2 10 f0 	movl   $0xf010a2dc,(%esp)$/;"	l
f0107738	obj/kern/kernel.asm	/^f0107738:	e8 60 89 ff ff       	call   f010009d <_panic>$/;"	l
f010773d	obj/kern/kernel.asm	/^f010773d:	c7 83 00 28 00 00 80 	movl   $0x309a80,0x2800(%ebx)$/;"	l
f0107744	obj/kern/kernel.asm	/^f0107744:	9a 30 00 $/;"	l
f0107747	obj/kern/kernel.asm	/^f0107747:	8d 83 08 28 00 00    	lea    0x2808(%ebx),%eax$/;"	l
f010774d	obj/kern/kernel.asm	/^f010774d:	a3 60 9a 30 f0       	mov    %eax,0xf0309a60$/;"	l
f0107752	obj/kern/kernel.asm	/^f0107752:	c7 83 08 28 00 00 00 	movl   $0x800,0x2808(%ebx)$/;"	l
f0107759	obj/kern/kernel.asm	/^f0107759:	08 00 00 $/;"	l
f010775c	obj/kern/kernel.asm	/^f010775c:	8d 83 10 28 00 00    	lea    0x2810(%ebx),%eax$/;"	l
f0107762	obj/kern/kernel.asm	/^f0107762:	a3 84 a2 30 f0       	mov    %eax,0xf030a284$/;"	l
f0107767	obj/kern/kernel.asm	/^f0107767:	c7 83 10 28 00 00 00 	movl   $0x0,0x2810(%ebx)$/;"	l
f010776e	obj/kern/kernel.asm	/^f010776e:	00 00 00 $/;"	l
f0107771	obj/kern/kernel.asm	/^f0107771:	8d 83 18 28 00 00    	lea    0x2818(%ebx),%eax$/;"	l
f0107777	obj/kern/kernel.asm	/^f0107777:	a3 64 9a 30 f0       	mov    %eax,0xf0309a64$/;"	l
f010777c	obj/kern/kernel.asm	/^f010777c:	c7 83 18 28 00 00 7d 	movl   $0x7d,0x2818(%ebx)$/;"	l
f0107783	obj/kern/kernel.asm	/^f0107783:	00 00 00 $/;"	l
f0107786	obj/kern/kernel.asm	/^f0107786:	8d 83 00 01 00 00    	lea    0x100(%ebx),%eax$/;"	l
f010778c	obj/kern/kernel.asm	/^f010778c:	a3 40 68 30 f0       	mov    %eax,0xf0306840$/;"	l
f0107791	obj/kern/kernel.asm	/^f0107791:	c7 83 00 01 00 00 82 	movl   $0x4808082,0x100(%ebx)$/;"	l
f0107798	obj/kern/kernel.asm	/^f0107798:	80 80 04 $/;"	l
f010779b	obj/kern/kernel.asm	/^f010779b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01077a0	obj/kern/kernel.asm	/^f01077a0:	83 c4 14             	add    $0x14,%esp$/;"	l
f01077a3	obj/kern/kernel.asm	/^f01077a3:	5b                   	pop    %ebx$/;"	l
f01077a4	obj/kern/kernel.asm	/^f01077a4:	5d                   	pop    %ebp$/;"	l
f01077a5	obj/kern/kernel.asm	/^f01077a5:	c3                   	ret    $/;"	l
f01077a6	obj/kern/kernel.asm	/^f01077a6 <pci_attach_match>:$/;"	l
f01077a6	obj/kern/kernel.asm	/^f01077a6:	55                   	push   %ebp$/;"	l
f01077a7	obj/kern/kernel.asm	/^f01077a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01077a9	obj/kern/kernel.asm	/^f01077a9:	57                   	push   %edi$/;"	l
f01077aa	obj/kern/kernel.asm	/^f01077aa:	56                   	push   %esi$/;"	l
f01077ab	obj/kern/kernel.asm	/^f01077ab:	53                   	push   %ebx$/;"	l
f01077ac	obj/kern/kernel.asm	/^f01077ac:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01077af	obj/kern/kernel.asm	/^f01077af:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01077b2	obj/kern/kernel.asm	/^f01077b2:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01077b5	obj/kern/kernel.asm	/^f01077b5:	eb 41                	jmp    f01077f8 <pci_attach_match+0x52>$/;"	l
f01077b7	obj/kern/kernel.asm	/^f01077b7:	39 3b                	cmp    %edi,(%ebx)$/;"	l
f01077b9	obj/kern/kernel.asm	/^f01077b9:	75 3a                	jne    f01077f5 <pci_attach_match+0x4f>$/;"	l
f01077bb	obj/kern/kernel.asm	/^f01077bb:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01077be	obj/kern/kernel.asm	/^f01077be:	39 56 04             	cmp    %edx,0x4(%esi)$/;"	l
f01077c1	obj/kern/kernel.asm	/^f01077c1:	75 32                	jne    f01077f5 <pci_attach_match+0x4f>$/;"	l
f01077c3	obj/kern/kernel.asm	/^f01077c3:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f01077c6	obj/kern/kernel.asm	/^f01077c6:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01077c9	obj/kern/kernel.asm	/^f01077c9:	ff d0                	call   *%eax$/;"	l
f01077cb	obj/kern/kernel.asm	/^f01077cb:	85 c0                	test   %eax,%eax$/;"	l
f01077cd	obj/kern/kernel.asm	/^f01077cd:	7f 32                	jg     f0107801 <pci_attach_match+0x5b>$/;"	l
f01077cf	obj/kern/kernel.asm	/^f01077cf:	85 c0                	test   %eax,%eax$/;"	l
f01077d1	obj/kern/kernel.asm	/^f01077d1:	79 22                	jns    f01077f5 <pci_attach_match+0x4f>$/;"	l
f01077d3	obj/kern/kernel.asm	/^f01077d3:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01077d7	obj/kern/kernel.asm	/^f01077d7:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01077da	obj/kern/kernel.asm	/^f01077da:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01077de	obj/kern/kernel.asm	/^f01077de:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01077e1	obj/kern/kernel.asm	/^f01077e1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01077e5	obj/kern/kernel.asm	/^f01077e5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01077e9	obj/kern/kernel.asm	/^f01077e9:	c7 04 24 08 a3 10 f0 	movl   $0xf010a308,(%esp)$/;"	l
f01077f0	obj/kern/kernel.asm	/^f01077f0:	e8 15 ce ff ff       	call   f010460a <cprintf>$/;"	l
f01077f5	obj/kern/kernel.asm	/^f01077f5:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01077f8	obj/kern/kernel.asm	/^f01077f8:	89 de                	mov    %ebx,%esi$/;"	l
f01077fa	obj/kern/kernel.asm	/^f01077fa:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01077fd	obj/kern/kernel.asm	/^f01077fd:	85 c0                	test   %eax,%eax$/;"	l
f01077ff	obj/kern/kernel.asm	/^f01077ff:	75 b6                	jne    f01077b7 <pci_attach_match+0x11>$/;"	l
f0107801	obj/kern/kernel.asm	/^f0107801:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0107804	obj/kern/kernel.asm	/^f0107804:	5b                   	pop    %ebx$/;"	l
f0107805	obj/kern/kernel.asm	/^f0107805:	5e                   	pop    %esi$/;"	l
f0107806	obj/kern/kernel.asm	/^f0107806:	5f                   	pop    %edi$/;"	l
f0107807	obj/kern/kernel.asm	/^f0107807:	5d                   	pop    %ebp$/;"	l
f0107808	obj/kern/kernel.asm	/^f0107808:	c3                   	ret    $/;"	l
f0107809	obj/kern/kernel.asm	/^f0107809 <pci_conf1_set_addr>:$/;"	l
f0107809	obj/kern/kernel.asm	/^f0107809:	55                   	push   %ebp$/;"	l
f010780a	obj/kern/kernel.asm	/^f010780a:	89 e5                	mov    %esp,%ebp$/;"	l
f010780c	obj/kern/kernel.asm	/^f010780c:	56                   	push   %esi$/;"	l
f010780d	obj/kern/kernel.asm	/^f010780d:	53                   	push   %ebx$/;"	l
f010780e	obj/kern/kernel.asm	/^f010780e:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107811	obj/kern/kernel.asm	/^f0107811:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0107814	obj/kern/kernel.asm	/^f0107814:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
f0107819	obj/kern/kernel.asm	/^f0107819:	76 24                	jbe    f010783f <pci_conf1_set_addr+0x36>$/;"	l
f010781b	obj/kern/kernel.asm	/^f010781b:	c7 44 24 0c 60 a4 10 	movl   $0xf010a460,0xc(%esp)$/;"	l
f0107822	obj/kern/kernel.asm	/^f0107822:	f0 $/;"	l
f0107823	obj/kern/kernel.asm	/^f0107823:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010782a	obj/kern/kernel.asm	/^f010782a:	f0 $/;"	l
f010782b	obj/kern/kernel.asm	/^f010782b:	c7 44 24 04 2b 00 00 	movl   $0x2b,0x4(%esp)$/;"	l
f0107832	obj/kern/kernel.asm	/^f0107832:	00 $/;"	l
f0107833	obj/kern/kernel.asm	/^f0107833:	c7 04 24 6a a4 10 f0 	movl   $0xf010a46a,(%esp)$/;"	l
f010783a	obj/kern/kernel.asm	/^f010783a:	e8 5e 88 ff ff       	call   f010009d <_panic>$/;"	l
f010783f	obj/kern/kernel.asm	/^f010783f:	83 fa 1f             	cmp    $0x1f,%edx$/;"	l
f0107842	obj/kern/kernel.asm	/^f0107842:	76 24                	jbe    f0107868 <pci_conf1_set_addr+0x5f>$/;"	l
f0107844	obj/kern/kernel.asm	/^f0107844:	c7 44 24 0c 75 a4 10 	movl   $0xf010a475,0xc(%esp)$/;"	l
f010784b	obj/kern/kernel.asm	/^f010784b:	f0 $/;"	l
f010784c	obj/kern/kernel.asm	/^f010784c:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f0107853	obj/kern/kernel.asm	/^f0107853:	f0 $/;"	l
f0107854	obj/kern/kernel.asm	/^f0107854:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
f010785b	obj/kern/kernel.asm	/^f010785b:	00 $/;"	l
f010785c	obj/kern/kernel.asm	/^f010785c:	c7 04 24 6a a4 10 f0 	movl   $0xf010a46a,(%esp)$/;"	l
f0107863	obj/kern/kernel.asm	/^f0107863:	e8 35 88 ff ff       	call   f010009d <_panic>$/;"	l
f0107868	obj/kern/kernel.asm	/^f0107868:	83 f9 07             	cmp    $0x7,%ecx$/;"	l
f010786b	obj/kern/kernel.asm	/^f010786b:	76 24                	jbe    f0107891 <pci_conf1_set_addr+0x88>$/;"	l
f010786d	obj/kern/kernel.asm	/^f010786d:	c7 44 24 0c 7e a4 10 	movl   $0xf010a47e,0xc(%esp)$/;"	l
f0107874	obj/kern/kernel.asm	/^f0107874:	f0 $/;"	l
f0107875	obj/kern/kernel.asm	/^f0107875:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f010787c	obj/kern/kernel.asm	/^f010787c:	f0 $/;"	l
f010787d	obj/kern/kernel.asm	/^f010787d:	c7 44 24 04 2d 00 00 	movl   $0x2d,0x4(%esp)$/;"	l
f0107884	obj/kern/kernel.asm	/^f0107884:	00 $/;"	l
f0107885	obj/kern/kernel.asm	/^f0107885:	c7 04 24 6a a4 10 f0 	movl   $0xf010a46a,(%esp)$/;"	l
f010788c	obj/kern/kernel.asm	/^f010788c:	e8 0c 88 ff ff       	call   f010009d <_panic>$/;"	l
f0107891	obj/kern/kernel.asm	/^f0107891:	81 fb ff 00 00 00    	cmp    $0xff,%ebx$/;"	l
f0107897	obj/kern/kernel.asm	/^f0107897:	76 24                	jbe    f01078bd <pci_conf1_set_addr+0xb4>$/;"	l
f0107899	obj/kern/kernel.asm	/^f0107899:	c7 44 24 0c 87 a4 10 	movl   $0xf010a487,0xc(%esp)$/;"	l
f01078a0	obj/kern/kernel.asm	/^f01078a0:	f0 $/;"	l
f01078a1	obj/kern/kernel.asm	/^f01078a1:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01078a8	obj/kern/kernel.asm	/^f01078a8:	f0 $/;"	l
f01078a9	obj/kern/kernel.asm	/^f01078a9:	c7 44 24 04 2e 00 00 	movl   $0x2e,0x4(%esp)$/;"	l
f01078b0	obj/kern/kernel.asm	/^f01078b0:	00 $/;"	l
f01078b1	obj/kern/kernel.asm	/^f01078b1:	c7 04 24 6a a4 10 f0 	movl   $0xf010a46a,(%esp)$/;"	l
f01078b8	obj/kern/kernel.asm	/^f01078b8:	e8 e0 87 ff ff       	call   f010009d <_panic>$/;"	l
f01078bd	obj/kern/kernel.asm	/^f01078bd:	f6 c3 03             	test   $0x3,%bl$/;"	l
f01078c0	obj/kern/kernel.asm	/^f01078c0:	74 24                	je     f01078e6 <pci_conf1_set_addr+0xdd>$/;"	l
f01078c2	obj/kern/kernel.asm	/^f01078c2:	c7 44 24 0c 94 a4 10 	movl   $0xf010a494,0xc(%esp)$/;"	l
f01078c9	obj/kern/kernel.asm	/^f01078c9:	f0 $/;"	l
f01078ca	obj/kern/kernel.asm	/^f01078ca:	c7 44 24 08 43 92 10 	movl   $0xf0109243,0x8(%esp)$/;"	l
f01078d1	obj/kern/kernel.asm	/^f01078d1:	f0 $/;"	l
f01078d2	obj/kern/kernel.asm	/^f01078d2:	c7 44 24 04 2f 00 00 	movl   $0x2f,0x4(%esp)$/;"	l
f01078d9	obj/kern/kernel.asm	/^f01078d9:	00 $/;"	l
f01078da	obj/kern/kernel.asm	/^f01078da:	c7 04 24 6a a4 10 f0 	movl   $0xf010a46a,(%esp)$/;"	l
f01078e1	obj/kern/kernel.asm	/^f01078e1:	e8 b7 87 ff ff       	call   f010009d <_panic>$/;"	l
f01078e6	obj/kern/kernel.asm	/^f01078e6:	81 cb 00 00 00 80    	or     $0x80000000,%ebx$/;"	l
f01078ec	obj/kern/kernel.asm	/^f01078ec:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f01078ef	obj/kern/kernel.asm	/^f01078ef:	09 cb                	or     %ecx,%ebx$/;"	l
f01078f1	obj/kern/kernel.asm	/^f01078f1:	89 d6                	mov    %edx,%esi$/;"	l
f01078f3	obj/kern/kernel.asm	/^f01078f3:	c1 e6 0b             	shl    $0xb,%esi$/;"	l
f01078f6	obj/kern/kernel.asm	/^f01078f6:	09 f3                	or     %esi,%ebx$/;"	l
f01078f8	obj/kern/kernel.asm	/^f01078f8:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01078fb	obj/kern/kernel.asm	/^f01078fb:	89 c6                	mov    %eax,%esi$/;"	l
f01078fd	obj/kern/kernel.asm	/^f01078fd:	89 d8                	mov    %ebx,%eax$/;"	l
f01078ff	obj/kern/kernel.asm	/^f01078ff:	09 f0                	or     %esi,%eax$/;"	l
f0107901	obj/kern/kernel.asm	/^f0107901:	ba f8 0c 00 00       	mov    $0xcf8,%edx$/;"	l
f0107906	obj/kern/kernel.asm	/^f0107906:	ef                   	out    %eax,(%dx)$/;"	l
f0107907	obj/kern/kernel.asm	/^f0107907:	83 c4 10             	add    $0x10,%esp$/;"	l
f010790a	obj/kern/kernel.asm	/^f010790a:	5b                   	pop    %ebx$/;"	l
f010790b	obj/kern/kernel.asm	/^f010790b:	5e                   	pop    %esi$/;"	l
f010790c	obj/kern/kernel.asm	/^f010790c:	5d                   	pop    %ebp$/;"	l
f010790d	obj/kern/kernel.asm	/^f010790d:	c3                   	ret    $/;"	l
f010790e	obj/kern/kernel.asm	/^f010790e <pci_conf_read>:$/;"	l
f010790e	obj/kern/kernel.asm	/^f010790e:	55                   	push   %ebp$/;"	l
f010790f	obj/kern/kernel.asm	/^f010790f:	89 e5                	mov    %esp,%ebp$/;"	l
f0107911	obj/kern/kernel.asm	/^f0107911:	53                   	push   %ebx$/;"	l
f0107912	obj/kern/kernel.asm	/^f0107912:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0107915	obj/kern/kernel.asm	/^f0107915:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f0107918	obj/kern/kernel.asm	/^f0107918:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f010791b	obj/kern/kernel.asm	/^f010791b:	8b 00                	mov    (%eax),%eax$/;"	l
f010791d	obj/kern/kernel.asm	/^f010791d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107920	obj/kern/kernel.asm	/^f0107920:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107923	obj/kern/kernel.asm	/^f0107923:	89 da                	mov    %ebx,%edx$/;"	l
f0107925	obj/kern/kernel.asm	/^f0107925:	e8 df fe ff ff       	call   f0107809 <pci_conf1_set_addr>$/;"	l
f010792a	obj/kern/kernel.asm	/^f010792a:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f010792f	obj/kern/kernel.asm	/^f010792f:	ed                   	in     (%dx),%eax$/;"	l
f0107930	obj/kern/kernel.asm	/^f0107930:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107933	obj/kern/kernel.asm	/^f0107933:	5b                   	pop    %ebx$/;"	l
f0107934	obj/kern/kernel.asm	/^f0107934:	5d                   	pop    %ebp$/;"	l
f0107935	obj/kern/kernel.asm	/^f0107935:	c3                   	ret    $/;"	l
f0107936	obj/kern/kernel.asm	/^f0107936 <pci_scan_bus>:$/;"	l
f0107936	obj/kern/kernel.asm	/^f0107936:	55                   	push   %ebp$/;"	l
f0107937	obj/kern/kernel.asm	/^f0107937:	89 e5                	mov    %esp,%ebp$/;"	l
f0107939	obj/kern/kernel.asm	/^f0107939:	57                   	push   %edi$/;"	l
f010793a	obj/kern/kernel.asm	/^f010793a:	56                   	push   %esi$/;"	l
f010793b	obj/kern/kernel.asm	/^f010793b:	53                   	push   %ebx$/;"	l
f010793c	obj/kern/kernel.asm	/^f010793c:	81 ec 1c 01 00 00    	sub    $0x11c,%esp$/;"	l
f0107942	obj/kern/kernel.asm	/^f0107942:	89 c3                	mov    %eax,%ebx$/;"	l
f0107944	obj/kern/kernel.asm	/^f0107944:	c7 44 24 08 48 00 00 	movl   $0x48,0x8(%esp)$/;"	l
f010794b	obj/kern/kernel.asm	/^f010794b:	00 $/;"	l
f010794c	obj/kern/kernel.asm	/^f010794c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107953	obj/kern/kernel.asm	/^f0107953:	00 $/;"	l
f0107954	obj/kern/kernel.asm	/^f0107954:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f0107957	obj/kern/kernel.asm	/^f0107957:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010795a	obj/kern/kernel.asm	/^f010795a:	e8 98 ef ff ff       	call   f01068f7 <memset>$/;"	l
f010795f	obj/kern/kernel.asm	/^f010795f:	89 5d a0             	mov    %ebx,-0x60(%ebp)$/;"	l
f0107962	obj/kern/kernel.asm	/^f0107962:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)$/;"	l
f0107969	obj/kern/kernel.asm	/^f0107969:	c7 85 00 ff ff ff 00 	movl   $0x0,-0x100(%ebp)$/;"	l
f0107970	obj/kern/kernel.asm	/^f0107970:	00 00 00 $/;"	l
f0107973	obj/kern/kernel.asm	/^f0107973:	ba 0c 00 00 00       	mov    $0xc,%edx$/;"	l
f0107978	obj/kern/kernel.asm	/^f0107978:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f010797b	obj/kern/kernel.asm	/^f010797b:	e8 8e ff ff ff       	call   f010790e <pci_conf_read>$/;"	l
f0107980	obj/kern/kernel.asm	/^f0107980:	89 c2                	mov    %eax,%edx$/;"	l
f0107982	obj/kern/kernel.asm	/^f0107982:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107985	obj/kern/kernel.asm	/^f0107985:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f0107988	obj/kern/kernel.asm	/^f0107988:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f010798b	obj/kern/kernel.asm	/^f010798b:	0f 87 6f 01 00 00    	ja     f0107b00 <pci_scan_bus+0x1ca>$/;"	l
f0107991	obj/kern/kernel.asm	/^f0107991:	83 85 00 ff ff ff 01 	addl   $0x1,-0x100(%ebp)$/;"	l
f0107998	obj/kern/kernel.asm	/^f0107998:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f010799d	obj/kern/kernel.asm	/^f010799d:	8d bd 10 ff ff ff    	lea    -0xf0(%ebp),%edi$/;"	l
f01079a3	obj/kern/kernel.asm	/^f01079a3:	8d 75 a0             	lea    -0x60(%ebp),%esi$/;"	l
f01079a6	obj/kern/kernel.asm	/^f01079a6:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01079a8	obj/kern/kernel.asm	/^f01079a8:	c7 85 18 ff ff ff 00 	movl   $0x0,-0xe8(%ebp)$/;"	l
f01079af	obj/kern/kernel.asm	/^f01079af:	00 00 00 $/;"	l
f01079b2	obj/kern/kernel.asm	/^f01079b2:	25 00 00 80 00       	and    $0x800000,%eax$/;"	l
f01079b7	obj/kern/kernel.asm	/^f01079b7:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)$/;"	l
f01079bd	obj/kern/kernel.asm	/^f01079bd:	8d 9d 58 ff ff ff    	lea    -0xa8(%ebp),%ebx$/;"	l
f01079c3	obj/kern/kernel.asm	/^f01079c3:	e9 1d 01 00 00       	jmp    f0107ae5 <pci_scan_bus+0x1af>$/;"	l
f01079c8	obj/kern/kernel.asm	/^f01079c8:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f01079cd	obj/kern/kernel.asm	/^f01079cd:	89 df                	mov    %ebx,%edi$/;"	l
f01079cf	obj/kern/kernel.asm	/^f01079cf:	8d b5 10 ff ff ff    	lea    -0xf0(%ebp),%esi$/;"	l
f01079d5	obj/kern/kernel.asm	/^f01079d5:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01079d7	obj/kern/kernel.asm	/^f01079d7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01079dc	obj/kern/kernel.asm	/^f01079dc:	8d 85 10 ff ff ff    	lea    -0xf0(%ebp),%eax$/;"	l
f01079e2	obj/kern/kernel.asm	/^f01079e2:	e8 27 ff ff ff       	call   f010790e <pci_conf_read>$/;"	l
f01079e7	obj/kern/kernel.asm	/^f01079e7:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)$/;"	l
f01079ed	obj/kern/kernel.asm	/^f01079ed:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f01079f1	obj/kern/kernel.asm	/^f01079f1:	0f 84 e7 00 00 00    	je     f0107ade <pci_scan_bus+0x1a8>$/;"	l
f01079f7	obj/kern/kernel.asm	/^f01079f7:	ba 3c 00 00 00       	mov    $0x3c,%edx$/;"	l
f01079fc	obj/kern/kernel.asm	/^f01079fc:	89 d8                	mov    %ebx,%eax$/;"	l
f01079fe	obj/kern/kernel.asm	/^f01079fe:	e8 0b ff ff ff       	call   f010790e <pci_conf_read>$/;"	l
f0107a03	obj/kern/kernel.asm	/^f0107a03:	88 45 9c             	mov    %al,-0x64(%ebp)$/;"	l
f0107a06	obj/kern/kernel.asm	/^f0107a06:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
f0107a0b	obj/kern/kernel.asm	/^f0107a0b:	89 d8                	mov    %ebx,%eax$/;"	l
f0107a0d	obj/kern/kernel.asm	/^f0107a0d:	e8 fc fe ff ff       	call   f010790e <pci_conf_read>$/;"	l
f0107a12	obj/kern/kernel.asm	/^f0107a12:	89 85 68 ff ff ff    	mov    %eax,-0x98(%ebp)$/;"	l
f0107a18	obj/kern/kernel.asm	/^f0107a18:	89 c2                	mov    %eax,%edx$/;"	l
f0107a1a	obj/kern/kernel.asm	/^f0107a1a:	c1 ea 18             	shr    $0x18,%edx$/;"	l
f0107a1d	obj/kern/kernel.asm	/^f0107a1d:	b9 a8 a4 10 f0       	mov    $0xf010a4a8,%ecx$/;"	l
f0107a22	obj/kern/kernel.asm	/^f0107a22:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f0107a25	obj/kern/kernel.asm	/^f0107a25:	77 07                	ja     f0107a2e <pci_scan_bus+0xf8>$/;"	l
f0107a27	obj/kern/kernel.asm	/^f0107a27:	8b 0c 95 1c a5 10 f0 	mov    -0xfef5ae4(,%edx,4),%ecx$/;"	l
f0107a2e	obj/kern/kernel.asm	/^f0107a2e:	8b b5 64 ff ff ff    	mov    -0x9c(%ebp),%esi$/;"	l
f0107a34	obj/kern/kernel.asm	/^f0107a34:	0f b6 7d 9c          	movzbl -0x64(%ebp),%edi$/;"	l
f0107a38	obj/kern/kernel.asm	/^f0107a38:	89 7c 24 24          	mov    %edi,0x24(%esp)$/;"	l
f0107a3c	obj/kern/kernel.asm	/^f0107a3c:	89 4c 24 20          	mov    %ecx,0x20(%esp)$/;"	l
f0107a40	obj/kern/kernel.asm	/^f0107a40:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0107a43	obj/kern/kernel.asm	/^f0107a43:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0107a46	obj/kern/kernel.asm	/^f0107a46:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0107a4a	obj/kern/kernel.asm	/^f0107a4a:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0107a4e	obj/kern/kernel.asm	/^f0107a4e:	89 f0                	mov    %esi,%eax$/;"	l
f0107a50	obj/kern/kernel.asm	/^f0107a50:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0107a53	obj/kern/kernel.asm	/^f0107a53:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0107a57	obj/kern/kernel.asm	/^f0107a57:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0107a5a	obj/kern/kernel.asm	/^f0107a5a:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0107a5e	obj/kern/kernel.asm	/^f0107a5e:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax$/;"	l
f0107a64	obj/kern/kernel.asm	/^f0107a64:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107a68	obj/kern/kernel.asm	/^f0107a68:	8b 85 5c ff ff ff    	mov    -0xa4(%ebp),%eax$/;"	l
f0107a6e	obj/kern/kernel.asm	/^f0107a6e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107a72	obj/kern/kernel.asm	/^f0107a72:	8b 85 58 ff ff ff    	mov    -0xa8(%ebp),%eax$/;"	l
f0107a78	obj/kern/kernel.asm	/^f0107a78:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107a7b	obj/kern/kernel.asm	/^f0107a7b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107a7f	obj/kern/kernel.asm	/^f0107a7f:	c7 04 24 34 a3 10 f0 	movl   $0xf010a334,(%esp)$/;"	l
f0107a86	obj/kern/kernel.asm	/^f0107a86:	e8 7f cb ff ff       	call   f010460a <cprintf>$/;"	l
f0107a8b	obj/kern/kernel.asm	/^f0107a8b:	8b 85 68 ff ff ff    	mov    -0x98(%ebp),%eax$/;"	l
f0107a91	obj/kern/kernel.asm	/^f0107a91:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0107a95	obj/kern/kernel.asm	/^f0107a95:	c7 44 24 08 40 64 12 	movl   $0xf0126440,0x8(%esp)$/;"	l
f0107a9c	obj/kern/kernel.asm	/^f0107a9c:	f0 $/;"	l
f0107a9d	obj/kern/kernel.asm	/^f0107a9d:	89 c2                	mov    %eax,%edx$/;"	l
f0107a9f	obj/kern/kernel.asm	/^f0107a9f:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107aa2	obj/kern/kernel.asm	/^f0107aa2:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0107aa5	obj/kern/kernel.asm	/^f0107aa5:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107aa9	obj/kern/kernel.asm	/^f0107aa9:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0107aac	obj/kern/kernel.asm	/^f0107aac:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107aaf	obj/kern/kernel.asm	/^f0107aaf:	e8 f2 fc ff ff       	call   f01077a6 <pci_attach_match>$/;"	l
f0107ab4	obj/kern/kernel.asm	/^f0107ab4:	85 c0                	test   %eax,%eax$/;"	l
f0107ab6	obj/kern/kernel.asm	/^f0107ab6:	75 26                	jne    f0107ade <pci_scan_bus+0x1a8>$/;"	l
f0107ab8	obj/kern/kernel.asm	/^f0107ab8:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax$/;"	l
f0107abe	obj/kern/kernel.asm	/^f0107abe:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0107ac2	obj/kern/kernel.asm	/^f0107ac2:	c7 44 24 08 34 64 12 	movl   $0xf0126434,0x8(%esp)$/;"	l
f0107ac9	obj/kern/kernel.asm	/^f0107ac9:	f0 $/;"	l
f0107aca	obj/kern/kernel.asm	/^f0107aca:	89 c2                	mov    %eax,%edx$/;"	l
f0107acc	obj/kern/kernel.asm	/^f0107acc:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107acf	obj/kern/kernel.asm	/^f0107acf:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0107ad3	obj/kern/kernel.asm	/^f0107ad3:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107ad6	obj/kern/kernel.asm	/^f0107ad6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107ad9	obj/kern/kernel.asm	/^f0107ad9:	e8 c8 fc ff ff       	call   f01077a6 <pci_attach_match>$/;"	l
f0107ade	obj/kern/kernel.asm	/^f0107ade:	83 85 18 ff ff ff 01 	addl   $0x1,-0xe8(%ebp)$/;"	l
f0107ae5	obj/kern/kernel.asm	/^f0107ae5:	83 bd 04 ff ff ff 01 	cmpl   $0x1,-0xfc(%ebp)$/;"	l
f0107aec	obj/kern/kernel.asm	/^f0107aec:	19 c0                	sbb    %eax,%eax$/;"	l
f0107aee	obj/kern/kernel.asm	/^f0107aee:	83 e0 f9             	and    $0xfffffff9,%eax$/;"	l
f0107af1	obj/kern/kernel.asm	/^f0107af1:	83 c0 08             	add    $0x8,%eax$/;"	l
f0107af4	obj/kern/kernel.asm	/^f0107af4:	3b 85 18 ff ff ff    	cmp    -0xe8(%ebp),%eax$/;"	l
f0107afa	obj/kern/kernel.asm	/^f0107afa:	0f 87 c8 fe ff ff    	ja     f01079c8 <pci_scan_bus+0x92>$/;"	l
f0107b00	obj/kern/kernel.asm	/^f0107b00:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f0107b03	obj/kern/kernel.asm	/^f0107b03:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107b06	obj/kern/kernel.asm	/^f0107b06:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f0107b09	obj/kern/kernel.asm	/^f0107b09:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
f0107b0c	obj/kern/kernel.asm	/^f0107b0c:	0f 86 61 fe ff ff    	jbe    f0107973 <pci_scan_bus+0x3d>$/;"	l
f0107b12	obj/kern/kernel.asm	/^f0107b12:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax$/;"	l
f0107b18	obj/kern/kernel.asm	/^f0107b18:	81 c4 1c 01 00 00    	add    $0x11c,%esp$/;"	l
f0107b1e	obj/kern/kernel.asm	/^f0107b1e:	5b                   	pop    %ebx$/;"	l
f0107b1f	obj/kern/kernel.asm	/^f0107b1f:	5e                   	pop    %esi$/;"	l
f0107b20	obj/kern/kernel.asm	/^f0107b20:	5f                   	pop    %edi$/;"	l
f0107b21	obj/kern/kernel.asm	/^f0107b21:	5d                   	pop    %ebp$/;"	l
f0107b22	obj/kern/kernel.asm	/^f0107b22:	c3                   	ret    $/;"	l
f0107b23	obj/kern/kernel.asm	/^f0107b23 <pci_bridge_attach>:$/;"	l
f0107b23	obj/kern/kernel.asm	/^f0107b23:	55                   	push   %ebp$/;"	l
f0107b24	obj/kern/kernel.asm	/^f0107b24:	89 e5                	mov    %esp,%ebp$/;"	l
f0107b26	obj/kern/kernel.asm	/^f0107b26:	57                   	push   %edi$/;"	l
f0107b27	obj/kern/kernel.asm	/^f0107b27:	56                   	push   %esi$/;"	l
f0107b28	obj/kern/kernel.asm	/^f0107b28:	53                   	push   %ebx$/;"	l
f0107b29	obj/kern/kernel.asm	/^f0107b29:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0107b2c	obj/kern/kernel.asm	/^f0107b2c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0107b2f	obj/kern/kernel.asm	/^f0107b2f:	ba 1c 00 00 00       	mov    $0x1c,%edx$/;"	l
f0107b34	obj/kern/kernel.asm	/^f0107b34:	89 d8                	mov    %ebx,%eax$/;"	l
f0107b36	obj/kern/kernel.asm	/^f0107b36:	e8 d3 fd ff ff       	call   f010790e <pci_conf_read>$/;"	l
f0107b3b	obj/kern/kernel.asm	/^f0107b3b:	89 c7                	mov    %eax,%edi$/;"	l
f0107b3d	obj/kern/kernel.asm	/^f0107b3d:	ba 18 00 00 00       	mov    $0x18,%edx$/;"	l
f0107b42	obj/kern/kernel.asm	/^f0107b42:	89 d8                	mov    %ebx,%eax$/;"	l
f0107b44	obj/kern/kernel.asm	/^f0107b44:	e8 c5 fd ff ff       	call   f010790e <pci_conf_read>$/;"	l
f0107b49	obj/kern/kernel.asm	/^f0107b49:	83 e7 0f             	and    $0xf,%edi$/;"	l
f0107b4c	obj/kern/kernel.asm	/^f0107b4c:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f0107b4f	obj/kern/kernel.asm	/^f0107b4f:	75 2a                	jne    f0107b7b <pci_bridge_attach+0x58>$/;"	l
f0107b51	obj/kern/kernel.asm	/^f0107b51:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0107b54	obj/kern/kernel.asm	/^f0107b54:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107b58	obj/kern/kernel.asm	/^f0107b58:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0107b5b	obj/kern/kernel.asm	/^f0107b5b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107b5f	obj/kern/kernel.asm	/^f0107b5f:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107b61	obj/kern/kernel.asm	/^f0107b61:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107b64	obj/kern/kernel.asm	/^f0107b64:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107b68	obj/kern/kernel.asm	/^f0107b68:	c7 04 24 70 a3 10 f0 	movl   $0xf010a370,(%esp)$/;"	l
f0107b6f	obj/kern/kernel.asm	/^f0107b6f:	e8 96 ca ff ff       	call   f010460a <cprintf>$/;"	l
f0107b74	obj/kern/kernel.asm	/^f0107b74:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107b79	obj/kern/kernel.asm	/^f0107b79:	eb 67                	jmp    f0107be2 <pci_bridge_attach+0xbf>$/;"	l
f0107b7b	obj/kern/kernel.asm	/^f0107b7b:	89 c6                	mov    %eax,%esi$/;"	l
f0107b7d	obj/kern/kernel.asm	/^f0107b7d:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0107b84	obj/kern/kernel.asm	/^f0107b84:	00 $/;"	l
f0107b85	obj/kern/kernel.asm	/^f0107b85:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107b8c	obj/kern/kernel.asm	/^f0107b8c:	00 $/;"	l
f0107b8d	obj/kern/kernel.asm	/^f0107b8d:	8d 7d e0             	lea    -0x20(%ebp),%edi$/;"	l
f0107b90	obj/kern/kernel.asm	/^f0107b90:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0107b93	obj/kern/kernel.asm	/^f0107b93:	e8 5f ed ff ff       	call   f01068f7 <memset>$/;"	l
f0107b98	obj/kern/kernel.asm	/^f0107b98:	89 5d e0             	mov    %ebx,-0x20(%ebp)$/;"	l
f0107b9b	obj/kern/kernel.asm	/^f0107b9b:	89 f0                	mov    %esi,%eax$/;"	l
f0107b9d	obj/kern/kernel.asm	/^f0107b9d:	0f b6 c4             	movzbl %ah,%eax$/;"	l
f0107ba0	obj/kern/kernel.asm	/^f0107ba0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0107ba3	obj/kern/kernel.asm	/^f0107ba3:	89 f2                	mov    %esi,%edx$/;"	l
f0107ba5	obj/kern/kernel.asm	/^f0107ba5:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107ba8	obj/kern/kernel.asm	/^f0107ba8:	0f b6 f2             	movzbl %dl,%esi$/;"	l
f0107bab	obj/kern/kernel.asm	/^f0107bab:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f0107baf	obj/kern/kernel.asm	/^f0107baf:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107bb3	obj/kern/kernel.asm	/^f0107bb3:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0107bb6	obj/kern/kernel.asm	/^f0107bb6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107bba	obj/kern/kernel.asm	/^f0107bba:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0107bbd	obj/kern/kernel.asm	/^f0107bbd:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107bc1	obj/kern/kernel.asm	/^f0107bc1:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107bc3	obj/kern/kernel.asm	/^f0107bc3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107bc6	obj/kern/kernel.asm	/^f0107bc6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107bca	obj/kern/kernel.asm	/^f0107bca:	c7 04 24 a4 a3 10 f0 	movl   $0xf010a3a4,(%esp)$/;"	l
f0107bd1	obj/kern/kernel.asm	/^f0107bd1:	e8 34 ca ff ff       	call   f010460a <cprintf>$/;"	l
f0107bd6	obj/kern/kernel.asm	/^f0107bd6:	89 f8                	mov    %edi,%eax$/;"	l
f0107bd8	obj/kern/kernel.asm	/^f0107bd8:	e8 59 fd ff ff       	call   f0107936 <pci_scan_bus>$/;"	l
f0107bdd	obj/kern/kernel.asm	/^f0107bdd:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107be2	obj/kern/kernel.asm	/^f0107be2:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0107be5	obj/kern/kernel.asm	/^f0107be5:	5b                   	pop    %ebx$/;"	l
f0107be6	obj/kern/kernel.asm	/^f0107be6:	5e                   	pop    %esi$/;"	l
f0107be7	obj/kern/kernel.asm	/^f0107be7:	5f                   	pop    %edi$/;"	l
f0107be8	obj/kern/kernel.asm	/^f0107be8:	5d                   	pop    %ebp$/;"	l
f0107be9	obj/kern/kernel.asm	/^f0107be9:	c3                   	ret    $/;"	l
f0107bea	obj/kern/kernel.asm	/^f0107bea <pci_conf_write>:$/;"	l
f0107bea	obj/kern/kernel.asm	/^f0107bea:	55                   	push   %ebp$/;"	l
f0107beb	obj/kern/kernel.asm	/^f0107beb:	89 e5                	mov    %esp,%ebp$/;"	l
f0107bed	obj/kern/kernel.asm	/^f0107bed:	56                   	push   %esi$/;"	l
f0107bee	obj/kern/kernel.asm	/^f0107bee:	53                   	push   %ebx$/;"	l
f0107bef	obj/kern/kernel.asm	/^f0107bef:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107bf2	obj/kern/kernel.asm	/^f0107bf2:	89 cb                	mov    %ecx,%ebx$/;"	l
f0107bf4	obj/kern/kernel.asm	/^f0107bf4:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f0107bf7	obj/kern/kernel.asm	/^f0107bf7:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0107bfa	obj/kern/kernel.asm	/^f0107bfa:	8b 00                	mov    (%eax),%eax$/;"	l
f0107bfc	obj/kern/kernel.asm	/^f0107bfc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107bff	obj/kern/kernel.asm	/^f0107bff:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107c02	obj/kern/kernel.asm	/^f0107c02:	89 f2                	mov    %esi,%edx$/;"	l
f0107c04	obj/kern/kernel.asm	/^f0107c04:	e8 00 fc ff ff       	call   f0107809 <pci_conf1_set_addr>$/;"	l
f0107c09	obj/kern/kernel.asm	/^f0107c09:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f0107c0e	obj/kern/kernel.asm	/^f0107c0e:	89 d8                	mov    %ebx,%eax$/;"	l
f0107c10	obj/kern/kernel.asm	/^f0107c10:	ef                   	out    %eax,(%dx)$/;"	l
f0107c11	obj/kern/kernel.asm	/^f0107c11:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107c14	obj/kern/kernel.asm	/^f0107c14:	5b                   	pop    %ebx$/;"	l
f0107c15	obj/kern/kernel.asm	/^f0107c15:	5e                   	pop    %esi$/;"	l
f0107c16	obj/kern/kernel.asm	/^f0107c16:	5d                   	pop    %ebp$/;"	l
f0107c17	obj/kern/kernel.asm	/^f0107c17:	c3                   	ret    $/;"	l
f0107c18	obj/kern/kernel.asm	/^f0107c18 <pci_func_enable>:$/;"	l
f0107c18	obj/kern/kernel.asm	/^f0107c18:	55                   	push   %ebp$/;"	l
f0107c19	obj/kern/kernel.asm	/^f0107c19:	89 e5                	mov    %esp,%ebp$/;"	l
f0107c1b	obj/kern/kernel.asm	/^f0107c1b:	57                   	push   %edi$/;"	l
f0107c1c	obj/kern/kernel.asm	/^f0107c1c:	56                   	push   %esi$/;"	l
f0107c1d	obj/kern/kernel.asm	/^f0107c1d:	53                   	push   %ebx$/;"	l
f0107c1e	obj/kern/kernel.asm	/^f0107c1e:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0107c21	obj/kern/kernel.asm	/^f0107c21:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0107c24	obj/kern/kernel.asm	/^f0107c24:	b9 07 00 00 00       	mov    $0x7,%ecx$/;"	l
f0107c29	obj/kern/kernel.asm	/^f0107c29:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
f0107c2e	obj/kern/kernel.asm	/^f0107c2e:	89 f8                	mov    %edi,%eax$/;"	l
f0107c30	obj/kern/kernel.asm	/^f0107c30:	e8 b5 ff ff ff       	call   f0107bea <pci_conf_write>$/;"	l
f0107c35	obj/kern/kernel.asm	/^f0107c35:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f0107c3a	obj/kern/kernel.asm	/^f0107c3a:	89 f2                	mov    %esi,%edx$/;"	l
f0107c3c	obj/kern/kernel.asm	/^f0107c3c:	89 f8                	mov    %edi,%eax$/;"	l
f0107c3e	obj/kern/kernel.asm	/^f0107c3e:	e8 cb fc ff ff       	call   f010790e <pci_conf_read>$/;"	l
f0107c43	obj/kern/kernel.asm	/^f0107c43:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0107c46	obj/kern/kernel.asm	/^f0107c46:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f0107c4b	obj/kern/kernel.asm	/^f0107c4b:	89 f2                	mov    %esi,%edx$/;"	l
f0107c4d	obj/kern/kernel.asm	/^f0107c4d:	89 f8                	mov    %edi,%eax$/;"	l
f0107c4f	obj/kern/kernel.asm	/^f0107c4f:	e8 96 ff ff ff       	call   f0107bea <pci_conf_write>$/;"	l
f0107c54	obj/kern/kernel.asm	/^f0107c54:	89 f2                	mov    %esi,%edx$/;"	l
f0107c56	obj/kern/kernel.asm	/^f0107c56:	89 f8                	mov    %edi,%eax$/;"	l
f0107c58	obj/kern/kernel.asm	/^f0107c58:	e8 b1 fc ff ff       	call   f010790e <pci_conf_read>$/;"	l
f0107c5d	obj/kern/kernel.asm	/^f0107c5d:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f0107c62	obj/kern/kernel.asm	/^f0107c62:	85 c0                	test   %eax,%eax$/;"	l
f0107c64	obj/kern/kernel.asm	/^f0107c64:	0f 84 c1 00 00 00    	je     f0107d2b <pci_func_enable+0x113>$/;"	l
f0107c6a	obj/kern/kernel.asm	/^f0107c6a:	8d 56 f0             	lea    -0x10(%esi),%edx$/;"	l
f0107c6d	obj/kern/kernel.asm	/^f0107c6d:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0107c70	obj/kern/kernel.asm	/^f0107c70:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0107c73	obj/kern/kernel.asm	/^f0107c73:	a8 01                	test   $0x1,%al$/;"	l
f0107c75	obj/kern/kernel.asm	/^f0107c75:	75 2c                	jne    f0107ca3 <pci_func_enable+0x8b>$/;"	l
f0107c77	obj/kern/kernel.asm	/^f0107c77:	89 c2                	mov    %eax,%edx$/;"	l
f0107c79	obj/kern/kernel.asm	/^f0107c79:	83 e2 06             	and    $0x6,%edx$/;"	l
f0107c7c	obj/kern/kernel.asm	/^f0107c7c:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0107c7f	obj/kern/kernel.asm	/^f0107c7f:	0f 94 c3             	sete   %bl$/;"	l
f0107c82	obj/kern/kernel.asm	/^f0107c82:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0107c85	obj/kern/kernel.asm	/^f0107c85:	8d 1c 9d 04 00 00 00 	lea    0x4(,%ebx,4),%ebx$/;"	l
f0107c8c	obj/kern/kernel.asm	/^f0107c8c:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0107c8f	obj/kern/kernel.asm	/^f0107c8f:	89 c2                	mov    %eax,%edx$/;"	l
f0107c91	obj/kern/kernel.asm	/^f0107c91:	f7 da                	neg    %edx$/;"	l
f0107c93	obj/kern/kernel.asm	/^f0107c93:	21 d0                	and    %edx,%eax$/;"	l
f0107c95	obj/kern/kernel.asm	/^f0107c95:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0107c98	obj/kern/kernel.asm	/^f0107c98:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107c9b	obj/kern/kernel.asm	/^f0107c9b:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0107c9e	obj/kern/kernel.asm	/^f0107c9e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0107ca1	obj/kern/kernel.asm	/^f0107ca1:	eb 1a                	jmp    f0107cbd <pci_func_enable+0xa5>$/;"	l
f0107ca3	obj/kern/kernel.asm	/^f0107ca3:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f0107ca6	obj/kern/kernel.asm	/^f0107ca6:	89 c2                	mov    %eax,%edx$/;"	l
f0107ca8	obj/kern/kernel.asm	/^f0107ca8:	f7 da                	neg    %edx$/;"	l
f0107caa	obj/kern/kernel.asm	/^f0107caa:	21 d0                	and    %edx,%eax$/;"	l
f0107cac	obj/kern/kernel.asm	/^f0107cac:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0107caf	obj/kern/kernel.asm	/^f0107caf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107cb2	obj/kern/kernel.asm	/^f0107cb2:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f0107cb5	obj/kern/kernel.asm	/^f0107cb5:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0107cb8	obj/kern/kernel.asm	/^f0107cb8:	bb 04 00 00 00       	mov    $0x4,%ebx$/;"	l
f0107cbd	obj/kern/kernel.asm	/^f0107cbd:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0107cc0	obj/kern/kernel.asm	/^f0107cc0:	89 f2                	mov    %esi,%edx$/;"	l
f0107cc2	obj/kern/kernel.asm	/^f0107cc2:	89 f8                	mov    %edi,%eax$/;"	l
f0107cc4	obj/kern/kernel.asm	/^f0107cc4:	e8 21 ff ff ff       	call   f0107bea <pci_conf_write>$/;"	l
f0107cc9	obj/kern/kernel.asm	/^f0107cc9:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0107ccc	obj/kern/kernel.asm	/^f0107ccc:	8d 04 87             	lea    (%edi,%eax,4),%eax$/;"	l
f0107ccf	obj/kern/kernel.asm	/^f0107ccf:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0107cd2	obj/kern/kernel.asm	/^f0107cd2:	89 48 14             	mov    %ecx,0x14(%eax)$/;"	l
f0107cd5	obj/kern/kernel.asm	/^f0107cd5:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0107cd8	obj/kern/kernel.asm	/^f0107cd8:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
f0107cdb	obj/kern/kernel.asm	/^f0107cdb:	85 c9                	test   %ecx,%ecx$/;"	l
f0107cdd	obj/kern/kernel.asm	/^f0107cdd:	75 4c                	jne    f0107d2b <pci_func_enable+0x113>$/;"	l
f0107cdf	obj/kern/kernel.asm	/^f0107cdf:	85 d2                	test   %edx,%edx$/;"	l
f0107ce1	obj/kern/kernel.asm	/^f0107ce1:	74 48                	je     f0107d2b <pci_func_enable+0x113>$/;"	l
f0107ce3	obj/kern/kernel.asm	/^f0107ce3:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f0107ce6	obj/kern/kernel.asm	/^f0107ce6:	89 54 24 20          	mov    %edx,0x20(%esp)$/;"	l
f0107cea	obj/kern/kernel.asm	/^f0107cea:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f0107ced	obj/kern/kernel.asm	/^f0107ced:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)$/;"	l
f0107cf1	obj/kern/kernel.asm	/^f0107cf1:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0107cf4	obj/kern/kernel.asm	/^f0107cf4:	89 4c 24 18          	mov    %ecx,0x18(%esp)$/;"	l
f0107cf8	obj/kern/kernel.asm	/^f0107cf8:	89 c2                	mov    %eax,%edx$/;"	l
f0107cfa	obj/kern/kernel.asm	/^f0107cfa:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107cfd	obj/kern/kernel.asm	/^f0107cfd:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107d01	obj/kern/kernel.asm	/^f0107d01:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107d04	obj/kern/kernel.asm	/^f0107d04:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107d08	obj/kern/kernel.asm	/^f0107d08:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0107d0b	obj/kern/kernel.asm	/^f0107d0b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107d0f	obj/kern/kernel.asm	/^f0107d0f:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0107d12	obj/kern/kernel.asm	/^f0107d12:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107d16	obj/kern/kernel.asm	/^f0107d16:	8b 07                	mov    (%edi),%eax$/;"	l
f0107d18	obj/kern/kernel.asm	/^f0107d18:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107d1b	obj/kern/kernel.asm	/^f0107d1b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107d1f	obj/kern/kernel.asm	/^f0107d1f:	c7 04 24 d4 a3 10 f0 	movl   $0xf010a3d4,(%esp)$/;"	l
f0107d26	obj/kern/kernel.asm	/^f0107d26:	e8 df c8 ff ff       	call   f010460a <cprintf>$/;"	l
f0107d2b	obj/kern/kernel.asm	/^f0107d2b:	01 de                	add    %ebx,%esi$/;"	l
f0107d2d	obj/kern/kernel.asm	/^f0107d2d:	83 fe 27             	cmp    $0x27,%esi$/;"	l
f0107d30	obj/kern/kernel.asm	/^f0107d30:	0f 86 04 ff ff ff    	jbe    f0107c3a <pci_func_enable+0x22>$/;"	l
f0107d36	obj/kern/kernel.asm	/^f0107d36:	8b 47 0c             	mov    0xc(%edi),%eax$/;"	l
f0107d39	obj/kern/kernel.asm	/^f0107d39:	89 c2                	mov    %eax,%edx$/;"	l
f0107d3b	obj/kern/kernel.asm	/^f0107d3b:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0107d3e	obj/kern/kernel.asm	/^f0107d3e:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107d42	obj/kern/kernel.asm	/^f0107d42:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107d45	obj/kern/kernel.asm	/^f0107d45:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0107d49	obj/kern/kernel.asm	/^f0107d49:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0107d4c	obj/kern/kernel.asm	/^f0107d4c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107d50	obj/kern/kernel.asm	/^f0107d50:	8b 47 04             	mov    0x4(%edi),%eax$/;"	l
f0107d53	obj/kern/kernel.asm	/^f0107d53:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107d57	obj/kern/kernel.asm	/^f0107d57:	8b 07                	mov    (%edi),%eax$/;"	l
f0107d59	obj/kern/kernel.asm	/^f0107d59:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107d5c	obj/kern/kernel.asm	/^f0107d5c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107d60	obj/kern/kernel.asm	/^f0107d60:	c7 04 24 30 a4 10 f0 	movl   $0xf010a430,(%esp)$/;"	l
f0107d67	obj/kern/kernel.asm	/^f0107d67:	e8 9e c8 ff ff       	call   f010460a <cprintf>$/;"	l
f0107d6c	obj/kern/kernel.asm	/^f0107d6c:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0107d6f	obj/kern/kernel.asm	/^f0107d6f:	5b                   	pop    %ebx$/;"	l
f0107d70	obj/kern/kernel.asm	/^f0107d70:	5e                   	pop    %esi$/;"	l
f0107d71	obj/kern/kernel.asm	/^f0107d71:	5f                   	pop    %edi$/;"	l
f0107d72	obj/kern/kernel.asm	/^f0107d72:	5d                   	pop    %ebp$/;"	l
f0107d73	obj/kern/kernel.asm	/^f0107d73:	c3                   	ret    $/;"	l
f0107d74	obj/kern/kernel.asm	/^f0107d74 <pci_init>:$/;"	l
f0107d74	obj/kern/kernel.asm	/^f0107d74:	55                   	push   %ebp$/;"	l
f0107d75	obj/kern/kernel.asm	/^f0107d75:	89 e5                	mov    %esp,%ebp$/;"	l
f0107d77	obj/kern/kernel.asm	/^f0107d77:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107d7a	obj/kern/kernel.asm	/^f0107d7a:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0107d81	obj/kern/kernel.asm	/^f0107d81:	00 $/;"	l
f0107d82	obj/kern/kernel.asm	/^f0107d82:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0107d89	obj/kern/kernel.asm	/^f0107d89:	00 $/;"	l
f0107d8a	obj/kern/kernel.asm	/^f0107d8a:	c7 04 24 88 4e 2c f0 	movl   $0xf02c4e88,(%esp)$/;"	l
f0107d91	obj/kern/kernel.asm	/^f0107d91:	e8 61 eb ff ff       	call   f01068f7 <memset>$/;"	l
f0107d96	obj/kern/kernel.asm	/^f0107d96:	b8 88 4e 2c f0       	mov    $0xf02c4e88,%eax$/;"	l
f0107d9b	obj/kern/kernel.asm	/^f0107d9b:	e8 96 fb ff ff       	call   f0107936 <pci_scan_bus>$/;"	l
f0107da0	obj/kern/kernel.asm	/^f0107da0:	c9                   	leave  $/;"	l
f0107da1	obj/kern/kernel.asm	/^f0107da1:	c3                   	ret    $/;"	l
f0107da2	obj/kern/kernel.asm	/^f0107da2 <time_init>:$/;"	l
f0107da2	obj/kern/kernel.asm	/^f0107da2:	55                   	push   %ebp$/;"	l
f0107da3	obj/kern/kernel.asm	/^f0107da3:	89 e5                	mov    %esp,%ebp$/;"	l
f0107da5	obj/kern/kernel.asm	/^f0107da5:	c7 05 90 4e 2c f0 00 	movl   $0x0,0xf02c4e90$/;"	l
f0107dac	obj/kern/kernel.asm	/^f0107dac:	00 00 00 $/;"	l
f0107daf	obj/kern/kernel.asm	/^f0107daf:	5d                   	pop    %ebp$/;"	l
f0107db0	obj/kern/kernel.asm	/^f0107db0:	c3                   	ret    $/;"	l
f0107db1	obj/kern/kernel.asm	/^f0107db1 <time_tick>:$/;"	l
f0107db1	obj/kern/kernel.asm	/^f0107db1:	a1 90 4e 2c f0       	mov    0xf02c4e90,%eax$/;"	l
f0107db6	obj/kern/kernel.asm	/^f0107db6:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107db9	obj/kern/kernel.asm	/^f0107db9:	a3 90 4e 2c f0       	mov    %eax,0xf02c4e90$/;"	l
f0107dbe	obj/kern/kernel.asm	/^f0107dbe:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f0107dc1	obj/kern/kernel.asm	/^f0107dc1:	01 d2                	add    %edx,%edx$/;"	l
f0107dc3	obj/kern/kernel.asm	/^f0107dc3:	39 d0                	cmp    %edx,%eax$/;"	l
f0107dc5	obj/kern/kernel.asm	/^f0107dc5:	76 22                	jbe    f0107de9 <time_tick+0x38>$/;"	l
f0107dc7	obj/kern/kernel.asm	/^f0107dc7:	55                   	push   %ebp$/;"	l
f0107dc8	obj/kern/kernel.asm	/^f0107dc8:	89 e5                	mov    %esp,%ebp$/;"	l
f0107dca	obj/kern/kernel.asm	/^f0107dca:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107dcd	obj/kern/kernel.asm	/^f0107dcd:	c7 44 24 08 38 a5 10 	movl   $0xf010a538,0x8(%esp)$/;"	l
f0107dd4	obj/kern/kernel.asm	/^f0107dd4:	f0 $/;"	l
f0107dd5	obj/kern/kernel.asm	/^f0107dd5:	c7 44 24 04 13 00 00 	movl   $0x13,0x4(%esp)$/;"	l
f0107ddc	obj/kern/kernel.asm	/^f0107ddc:	00 $/;"	l
f0107ddd	obj/kern/kernel.asm	/^f0107ddd:	c7 04 24 53 a5 10 f0 	movl   $0xf010a553,(%esp)$/;"	l
f0107de4	obj/kern/kernel.asm	/^f0107de4:	e8 b4 82 ff ff       	call   f010009d <_panic>$/;"	l
f0107de9	obj/kern/kernel.asm	/^f0107de9:	f3 c3                	repz ret $/;"	l
f0107deb	obj/kern/kernel.asm	/^f0107deb <time_msec>:$/;"	l
f0107deb	obj/kern/kernel.asm	/^f0107deb:	55                   	push   %ebp$/;"	l
f0107dec	obj/kern/kernel.asm	/^f0107dec:	89 e5                	mov    %esp,%ebp$/;"	l
f0107dee	obj/kern/kernel.asm	/^f0107dee:	a1 90 4e 2c f0       	mov    0xf02c4e90,%eax$/;"	l
f0107df3	obj/kern/kernel.asm	/^f0107df3:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0107df6	obj/kern/kernel.asm	/^f0107df6:	01 c0                	add    %eax,%eax$/;"	l
f0107df8	obj/kern/kernel.asm	/^f0107df8:	5d                   	pop    %ebp$/;"	l
f0107df9	obj/kern/kernel.asm	/^f0107df9:	c3                   	ret    $/;"	l
f0107dfa	obj/kern/kernel.asm	/^f0107dfa:	66 90                	xchg   %ax,%ax$/;"	l
f0107dfc	obj/kern/kernel.asm	/^f0107dfc:	66 90                	xchg   %ax,%ax$/;"	l
f0107dfe	obj/kern/kernel.asm	/^f0107dfe:	66 90                	xchg   %ax,%ax$/;"	l
f0107e00	obj/kern/kernel.asm	/^f0107e00 <__udivdi3>:$/;"	l
f0107e00	obj/kern/kernel.asm	/^f0107e00:	55                   	push   %ebp$/;"	l
f0107e01	obj/kern/kernel.asm	/^f0107e01:	57                   	push   %edi$/;"	l
f0107e02	obj/kern/kernel.asm	/^f0107e02:	56                   	push   %esi$/;"	l
f0107e03	obj/kern/kernel.asm	/^f0107e03:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107e06	obj/kern/kernel.asm	/^f0107e06:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f0107e0a	obj/kern/kernel.asm	/^f0107e0a:	8b 7c 24 1c          	mov    0x1c(%esp),%edi$/;"	l
f0107e0e	obj/kern/kernel.asm	/^f0107e0e:	8b 6c 24 20          	mov    0x20(%esp),%ebp$/;"	l
f0107e12	obj/kern/kernel.asm	/^f0107e12:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f0107e16	obj/kern/kernel.asm	/^f0107e16:	85 c0                	test   %eax,%eax$/;"	l
f0107e18	obj/kern/kernel.asm	/^f0107e18:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0107e1c	obj/kern/kernel.asm	/^f0107e1c:	89 ea                	mov    %ebp,%edx$/;"	l
f0107e1e	obj/kern/kernel.asm	/^f0107e1e:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0107e21	obj/kern/kernel.asm	/^f0107e21:	75 2d                	jne    f0107e50 <__udivdi3+0x50>$/;"	l
f0107e23	obj/kern/kernel.asm	/^f0107e23:	39 e9                	cmp    %ebp,%ecx$/;"	l
f0107e25	obj/kern/kernel.asm	/^f0107e25:	77 61                	ja     f0107e88 <__udivdi3+0x88>$/;"	l
f0107e27	obj/kern/kernel.asm	/^f0107e27:	85 c9                	test   %ecx,%ecx$/;"	l
f0107e29	obj/kern/kernel.asm	/^f0107e29:	89 ce                	mov    %ecx,%esi$/;"	l
f0107e2b	obj/kern/kernel.asm	/^f0107e2b:	75 0b                	jne    f0107e38 <__udivdi3+0x38>$/;"	l
f0107e2d	obj/kern/kernel.asm	/^f0107e2d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107e32	obj/kern/kernel.asm	/^f0107e32:	31 d2                	xor    %edx,%edx$/;"	l
f0107e34	obj/kern/kernel.asm	/^f0107e34:	f7 f1                	div    %ecx$/;"	l
f0107e36	obj/kern/kernel.asm	/^f0107e36:	89 c6                	mov    %eax,%esi$/;"	l
f0107e38	obj/kern/kernel.asm	/^f0107e38:	31 d2                	xor    %edx,%edx$/;"	l
f0107e3a	obj/kern/kernel.asm	/^f0107e3a:	89 e8                	mov    %ebp,%eax$/;"	l
f0107e3c	obj/kern/kernel.asm	/^f0107e3c:	f7 f6                	div    %esi$/;"	l
f0107e3e	obj/kern/kernel.asm	/^f0107e3e:	89 c5                	mov    %eax,%ebp$/;"	l
f0107e40	obj/kern/kernel.asm	/^f0107e40:	89 f8                	mov    %edi,%eax$/;"	l
f0107e42	obj/kern/kernel.asm	/^f0107e42:	f7 f6                	div    %esi$/;"	l
f0107e44	obj/kern/kernel.asm	/^f0107e44:	89 ea                	mov    %ebp,%edx$/;"	l
f0107e46	obj/kern/kernel.asm	/^f0107e46:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107e49	obj/kern/kernel.asm	/^f0107e49:	5e                   	pop    %esi$/;"	l
f0107e4a	obj/kern/kernel.asm	/^f0107e4a:	5f                   	pop    %edi$/;"	l
f0107e4b	obj/kern/kernel.asm	/^f0107e4b:	5d                   	pop    %ebp$/;"	l
f0107e4c	obj/kern/kernel.asm	/^f0107e4c:	c3                   	ret    $/;"	l
f0107e4d	obj/kern/kernel.asm	/^f0107e4d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0107e50	obj/kern/kernel.asm	/^f0107e50:	39 e8                	cmp    %ebp,%eax$/;"	l
f0107e52	obj/kern/kernel.asm	/^f0107e52:	77 24                	ja     f0107e78 <__udivdi3+0x78>$/;"	l
f0107e54	obj/kern/kernel.asm	/^f0107e54:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0107e57	obj/kern/kernel.asm	/^f0107e57:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0107e5a	obj/kern/kernel.asm	/^f0107e5a:	75 3c                	jne    f0107e98 <__udivdi3+0x98>$/;"	l
f0107e5c	obj/kern/kernel.asm	/^f0107e5c:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0107e60	obj/kern/kernel.asm	/^f0107e60:	39 34 24             	cmp    %esi,(%esp)$/;"	l
f0107e63	obj/kern/kernel.asm	/^f0107e63:	0f 86 9f 00 00 00    	jbe    f0107f08 <__udivdi3+0x108>$/;"	l
f0107e69	obj/kern/kernel.asm	/^f0107e69:	39 d0                	cmp    %edx,%eax$/;"	l
f0107e6b	obj/kern/kernel.asm	/^f0107e6b:	0f 82 97 00 00 00    	jb     f0107f08 <__udivdi3+0x108>$/;"	l
f0107e71	obj/kern/kernel.asm	/^f0107e71:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107e78	obj/kern/kernel.asm	/^f0107e78:	31 d2                	xor    %edx,%edx$/;"	l
f0107e7a	obj/kern/kernel.asm	/^f0107e7a:	31 c0                	xor    %eax,%eax$/;"	l
f0107e7c	obj/kern/kernel.asm	/^f0107e7c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107e7f	obj/kern/kernel.asm	/^f0107e7f:	5e                   	pop    %esi$/;"	l
f0107e80	obj/kern/kernel.asm	/^f0107e80:	5f                   	pop    %edi$/;"	l
f0107e81	obj/kern/kernel.asm	/^f0107e81:	5d                   	pop    %ebp$/;"	l
f0107e82	obj/kern/kernel.asm	/^f0107e82:	c3                   	ret    $/;"	l
f0107e83	obj/kern/kernel.asm	/^f0107e83:	90                   	nop$/;"	l
f0107e84	obj/kern/kernel.asm	/^f0107e84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107e88	obj/kern/kernel.asm	/^f0107e88:	89 f8                	mov    %edi,%eax$/;"	l
f0107e8a	obj/kern/kernel.asm	/^f0107e8a:	f7 f1                	div    %ecx$/;"	l
f0107e8c	obj/kern/kernel.asm	/^f0107e8c:	31 d2                	xor    %edx,%edx$/;"	l
f0107e8e	obj/kern/kernel.asm	/^f0107e8e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107e91	obj/kern/kernel.asm	/^f0107e91:	5e                   	pop    %esi$/;"	l
f0107e92	obj/kern/kernel.asm	/^f0107e92:	5f                   	pop    %edi$/;"	l
f0107e93	obj/kern/kernel.asm	/^f0107e93:	5d                   	pop    %ebp$/;"	l
f0107e94	obj/kern/kernel.asm	/^f0107e94:	c3                   	ret    $/;"	l
f0107e95	obj/kern/kernel.asm	/^f0107e95:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0107e98	obj/kern/kernel.asm	/^f0107e98:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107e9a	obj/kern/kernel.asm	/^f0107e9a:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f0107e9d	obj/kern/kernel.asm	/^f0107e9d:	d3 e0                	shl    %cl,%eax$/;"	d
f0107e9f	obj/kern/kernel.asm	/^f0107e9f:	89 c6                	mov    %eax,%esi$/;"	l
f0107ea1	obj/kern/kernel.asm	/^f0107ea1:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0107ea6	obj/kern/kernel.asm	/^f0107ea6:	29 e8                	sub    %ebp,%eax$/;"	l
f0107ea8	obj/kern/kernel.asm	/^f0107ea8:	89 c1                	mov    %eax,%ecx$/;"	l
f0107eaa	obj/kern/kernel.asm	/^f0107eaa:	d3 ef                	shr    %cl,%edi$/;"	d
f0107eac	obj/kern/kernel.asm	/^f0107eac:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107eae	obj/kern/kernel.asm	/^f0107eae:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0107eb2	obj/kern/kernel.asm	/^f0107eb2:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f0107eb5	obj/kern/kernel.asm	/^f0107eb5:	09 74 24 08          	or     %esi,0x8(%esp)$/;"	l
f0107eb9	obj/kern/kernel.asm	/^f0107eb9:	89 d6                	mov    %edx,%esi$/;"	l
f0107ebb	obj/kern/kernel.asm	/^f0107ebb:	d3 e7                	shl    %cl,%edi$/;"	d
f0107ebd	obj/kern/kernel.asm	/^f0107ebd:	89 c1                	mov    %eax,%ecx$/;"	l
f0107ebf	obj/kern/kernel.asm	/^f0107ebf:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0107ec2	obj/kern/kernel.asm	/^f0107ec2:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0107ec6	obj/kern/kernel.asm	/^f0107ec6:	d3 ee                	shr    %cl,%esi$/;"	d
f0107ec8	obj/kern/kernel.asm	/^f0107ec8:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107eca	obj/kern/kernel.asm	/^f0107eca:	d3 e2                	shl    %cl,%edx$/;"	d
f0107ecc	obj/kern/kernel.asm	/^f0107ecc:	89 c1                	mov    %eax,%ecx$/;"	l
f0107ece	obj/kern/kernel.asm	/^f0107ece:	d3 ef                	shr    %cl,%edi$/;"	d
f0107ed0	obj/kern/kernel.asm	/^f0107ed0:	09 d7                	or     %edx,%edi$/;"	l
f0107ed2	obj/kern/kernel.asm	/^f0107ed2:	89 f2                	mov    %esi,%edx$/;"	l
f0107ed4	obj/kern/kernel.asm	/^f0107ed4:	89 f8                	mov    %edi,%eax$/;"	l
f0107ed6	obj/kern/kernel.asm	/^f0107ed6:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0107eda	obj/kern/kernel.asm	/^f0107eda:	89 d6                	mov    %edx,%esi$/;"	l
f0107edc	obj/kern/kernel.asm	/^f0107edc:	89 c7                	mov    %eax,%edi$/;"	l
f0107ede	obj/kern/kernel.asm	/^f0107ede:	f7 24 24             	mull   (%esp)$/;"	l
f0107ee1	obj/kern/kernel.asm	/^f0107ee1:	39 d6                	cmp    %edx,%esi$/;"	l
f0107ee3	obj/kern/kernel.asm	/^f0107ee3:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107ee6	obj/kern/kernel.asm	/^f0107ee6:	72 30                	jb     f0107f18 <__udivdi3+0x118>$/;"	l
f0107ee8	obj/kern/kernel.asm	/^f0107ee8:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0107eec	obj/kern/kernel.asm	/^f0107eec:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107eee	obj/kern/kernel.asm	/^f0107eee:	d3 e2                	shl    %cl,%edx$/;"	d
f0107ef0	obj/kern/kernel.asm	/^f0107ef0:	39 c2                	cmp    %eax,%edx$/;"	l
f0107ef2	obj/kern/kernel.asm	/^f0107ef2:	73 05                	jae    f0107ef9 <__udivdi3+0xf9>$/;"	l
f0107ef4	obj/kern/kernel.asm	/^f0107ef4:	3b 34 24             	cmp    (%esp),%esi$/;"	l
f0107ef7	obj/kern/kernel.asm	/^f0107ef7:	74 1f                	je     f0107f18 <__udivdi3+0x118>$/;"	l
f0107ef9	obj/kern/kernel.asm	/^f0107ef9:	89 f8                	mov    %edi,%eax$/;"	l
f0107efb	obj/kern/kernel.asm	/^f0107efb:	31 d2                	xor    %edx,%edx$/;"	l
f0107efd	obj/kern/kernel.asm	/^f0107efd:	e9 7a ff ff ff       	jmp    f0107e7c <__udivdi3+0x7c>$/;"	l
f0107f02	obj/kern/kernel.asm	/^f0107f02:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0107f08	obj/kern/kernel.asm	/^f0107f08:	31 d2                	xor    %edx,%edx$/;"	l
f0107f0a	obj/kern/kernel.asm	/^f0107f0a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107f0f	obj/kern/kernel.asm	/^f0107f0f:	e9 68 ff ff ff       	jmp    f0107e7c <__udivdi3+0x7c>$/;"	l
f0107f14	obj/kern/kernel.asm	/^f0107f14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107f18	obj/kern/kernel.asm	/^f0107f18:	8d 47 ff             	lea    -0x1(%edi),%eax$/;"	l
f0107f1b	obj/kern/kernel.asm	/^f0107f1b:	31 d2                	xor    %edx,%edx$/;"	l
f0107f1d	obj/kern/kernel.asm	/^f0107f1d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107f20	obj/kern/kernel.asm	/^f0107f20:	5e                   	pop    %esi$/;"	l
f0107f21	obj/kern/kernel.asm	/^f0107f21:	5f                   	pop    %edi$/;"	l
f0107f22	obj/kern/kernel.asm	/^f0107f22:	5d                   	pop    %ebp$/;"	l
f0107f23	obj/kern/kernel.asm	/^f0107f23:	c3                   	ret    $/;"	l
f0107f24	obj/kern/kernel.asm	/^f0107f24:	66 90                	xchg   %ax,%ax$/;"	l
f0107f26	obj/kern/kernel.asm	/^f0107f26:	66 90                	xchg   %ax,%ax$/;"	l
f0107f28	obj/kern/kernel.asm	/^f0107f28:	66 90                	xchg   %ax,%ax$/;"	l
f0107f2a	obj/kern/kernel.asm	/^f0107f2a:	66 90                	xchg   %ax,%ax$/;"	l
f0107f2c	obj/kern/kernel.asm	/^f0107f2c:	66 90                	xchg   %ax,%ax$/;"	l
f0107f2e	obj/kern/kernel.asm	/^f0107f2e:	66 90                	xchg   %ax,%ax$/;"	l
f0107f30	obj/kern/kernel.asm	/^f0107f30 <__umoddi3>:$/;"	l
f0107f30	obj/kern/kernel.asm	/^f0107f30:	55                   	push   %ebp$/;"	l
f0107f31	obj/kern/kernel.asm	/^f0107f31:	57                   	push   %edi$/;"	l
f0107f32	obj/kern/kernel.asm	/^f0107f32:	56                   	push   %esi$/;"	l
f0107f33	obj/kern/kernel.asm	/^f0107f33:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0107f36	obj/kern/kernel.asm	/^f0107f36:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f0107f3a	obj/kern/kernel.asm	/^f0107f3a:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f0107f3e	obj/kern/kernel.asm	/^f0107f3e:	8b 74 24 2c          	mov    0x2c(%esp),%esi$/;"	l
f0107f42	obj/kern/kernel.asm	/^f0107f42:	89 c7                	mov    %eax,%edi$/;"	l
f0107f44	obj/kern/kernel.asm	/^f0107f44:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107f48	obj/kern/kernel.asm	/^f0107f48:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f0107f4c	obj/kern/kernel.asm	/^f0107f4c:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f0107f50	obj/kern/kernel.asm	/^f0107f50:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0107f53	obj/kern/kernel.asm	/^f0107f53:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0107f57	obj/kern/kernel.asm	/^f0107f57:	85 c0                	test   %eax,%eax$/;"	l
f0107f59	obj/kern/kernel.asm	/^f0107f59:	89 c2                	mov    %eax,%edx$/;"	l
f0107f5b	obj/kern/kernel.asm	/^f0107f5b:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0107f5f	obj/kern/kernel.asm	/^f0107f5f:	75 17                	jne    f0107f78 <__umoddi3+0x48>$/;"	l
f0107f61	obj/kern/kernel.asm	/^f0107f61:	39 fe                	cmp    %edi,%esi$/;"	l
f0107f63	obj/kern/kernel.asm	/^f0107f63:	76 4b                	jbe    f0107fb0 <__umoddi3+0x80>$/;"	l
f0107f65	obj/kern/kernel.asm	/^f0107f65:	89 c8                	mov    %ecx,%eax$/;"	l
f0107f67	obj/kern/kernel.asm	/^f0107f67:	89 fa                	mov    %edi,%edx$/;"	l
f0107f69	obj/kern/kernel.asm	/^f0107f69:	f7 f6                	div    %esi$/;"	l
f0107f6b	obj/kern/kernel.asm	/^f0107f6b:	89 d0                	mov    %edx,%eax$/;"	l
f0107f6d	obj/kern/kernel.asm	/^f0107f6d:	31 d2                	xor    %edx,%edx$/;"	l
f0107f6f	obj/kern/kernel.asm	/^f0107f6f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107f72	obj/kern/kernel.asm	/^f0107f72:	5e                   	pop    %esi$/;"	l
f0107f73	obj/kern/kernel.asm	/^f0107f73:	5f                   	pop    %edi$/;"	l
f0107f74	obj/kern/kernel.asm	/^f0107f74:	5d                   	pop    %ebp$/;"	l
f0107f75	obj/kern/kernel.asm	/^f0107f75:	c3                   	ret    $/;"	l
f0107f76	obj/kern/kernel.asm	/^f0107f76:	66 90                	xchg   %ax,%ax$/;"	l
f0107f78	obj/kern/kernel.asm	/^f0107f78:	39 f8                	cmp    %edi,%eax$/;"	l
f0107f7a	obj/kern/kernel.asm	/^f0107f7a:	77 54                	ja     f0107fd0 <__umoddi3+0xa0>$/;"	l
f0107f7c	obj/kern/kernel.asm	/^f0107f7c:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0107f7f	obj/kern/kernel.asm	/^f0107f7f:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0107f82	obj/kern/kernel.asm	/^f0107f82:	75 5c                	jne    f0107fe0 <__umoddi3+0xb0>$/;"	l
f0107f84	obj/kern/kernel.asm	/^f0107f84:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f0107f88	obj/kern/kernel.asm	/^f0107f88:	39 3c 24             	cmp    %edi,(%esp)$/;"	l
f0107f8b	obj/kern/kernel.asm	/^f0107f8b:	0f 87 e7 00 00 00    	ja     f0108078 <__umoddi3+0x148>$/;"	l
f0107f91	obj/kern/kernel.asm	/^f0107f91:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0107f95	obj/kern/kernel.asm	/^f0107f95:	29 f1                	sub    %esi,%ecx$/;"	l
f0107f97	obj/kern/kernel.asm	/^f0107f97:	19 c7                	sbb    %eax,%edi$/;"	l
f0107f99	obj/kern/kernel.asm	/^f0107f99:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0107f9d	obj/kern/kernel.asm	/^f0107f9d:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0107fa1	obj/kern/kernel.asm	/^f0107fa1:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0107fa5	obj/kern/kernel.asm	/^f0107fa5:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0107fa9	obj/kern/kernel.asm	/^f0107fa9:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107fac	obj/kern/kernel.asm	/^f0107fac:	5e                   	pop    %esi$/;"	l
f0107fad	obj/kern/kernel.asm	/^f0107fad:	5f                   	pop    %edi$/;"	l
f0107fae	obj/kern/kernel.asm	/^f0107fae:	5d                   	pop    %ebp$/;"	l
f0107faf	obj/kern/kernel.asm	/^f0107faf:	c3                   	ret    $/;"	l
f0107fb0	obj/kern/kernel.asm	/^f0107fb0:	85 f6                	test   %esi,%esi$/;"	l
f0107fb2	obj/kern/kernel.asm	/^f0107fb2:	89 f5                	mov    %esi,%ebp$/;"	l
f0107fb4	obj/kern/kernel.asm	/^f0107fb4:	75 0b                	jne    f0107fc1 <__umoddi3+0x91>$/;"	l
f0107fb6	obj/kern/kernel.asm	/^f0107fb6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107fbb	obj/kern/kernel.asm	/^f0107fbb:	31 d2                	xor    %edx,%edx$/;"	l
f0107fbd	obj/kern/kernel.asm	/^f0107fbd:	f7 f6                	div    %esi$/;"	l
f0107fbf	obj/kern/kernel.asm	/^f0107fbf:	89 c5                	mov    %eax,%ebp$/;"	l
f0107fc1	obj/kern/kernel.asm	/^f0107fc1:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f0107fc5	obj/kern/kernel.asm	/^f0107fc5:	31 d2                	xor    %edx,%edx$/;"	l
f0107fc7	obj/kern/kernel.asm	/^f0107fc7:	f7 f5                	div    %ebp$/;"	l
f0107fc9	obj/kern/kernel.asm	/^f0107fc9:	89 c8                	mov    %ecx,%eax$/;"	l
f0107fcb	obj/kern/kernel.asm	/^f0107fcb:	f7 f5                	div    %ebp$/;"	l
f0107fcd	obj/kern/kernel.asm	/^f0107fcd:	eb 9c                	jmp    f0107f6b <__umoddi3+0x3b>$/;"	l
f0107fcf	obj/kern/kernel.asm	/^f0107fcf:	90                   	nop$/;"	l
f0107fd0	obj/kern/kernel.asm	/^f0107fd0:	89 c8                	mov    %ecx,%eax$/;"	l
f0107fd2	obj/kern/kernel.asm	/^f0107fd2:	89 fa                	mov    %edi,%edx$/;"	l
f0107fd4	obj/kern/kernel.asm	/^f0107fd4:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107fd7	obj/kern/kernel.asm	/^f0107fd7:	5e                   	pop    %esi$/;"	l
f0107fd8	obj/kern/kernel.asm	/^f0107fd8:	5f                   	pop    %edi$/;"	l
f0107fd9	obj/kern/kernel.asm	/^f0107fd9:	5d                   	pop    %ebp$/;"	l
f0107fda	obj/kern/kernel.asm	/^f0107fda:	c3                   	ret    $/;"	l
f0107fdb	obj/kern/kernel.asm	/^f0107fdb:	90                   	nop$/;"	l
f0107fdc	obj/kern/kernel.asm	/^f0107fdc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107fe0	obj/kern/kernel.asm	/^f0107fe0:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0107fe3	obj/kern/kernel.asm	/^f0107fe3:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
f0107fe8	obj/kern/kernel.asm	/^f0107fe8:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107fea	obj/kern/kernel.asm	/^f0107fea:	29 ee                	sub    %ebp,%esi$/;"	l
f0107fec	obj/kern/kernel.asm	/^f0107fec:	d3 e2                	shl    %cl,%edx$/;"	d
f0107fee	obj/kern/kernel.asm	/^f0107fee:	89 f1                	mov    %esi,%ecx$/;"	l
f0107ff0	obj/kern/kernel.asm	/^f0107ff0:	d3 e8                	shr    %cl,%eax$/;"	d
f0107ff2	obj/kern/kernel.asm	/^f0107ff2:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107ff4	obj/kern/kernel.asm	/^f0107ff4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107ff8	obj/kern/kernel.asm	/^f0107ff8:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0107ffb	obj/kern/kernel.asm	/^f0107ffb:	09 54 24 04          	or     %edx,0x4(%esp)$/;"	l
f0107fff	obj/kern/kernel.asm	/^f0107fff:	89 fa                	mov    %edi,%edx$/;"	l
f0108001	obj/kern/kernel.asm	/^f0108001:	d3 e0                	shl    %cl,%eax$/;"	d
f0108003	obj/kern/kernel.asm	/^f0108003:	89 f1                	mov    %esi,%ecx$/;"	l
f0108005	obj/kern/kernel.asm	/^f0108005:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0108009	obj/kern/kernel.asm	/^f0108009:	8b 44 24 10          	mov    0x10(%esp),%eax$/;"	l
f010800d	obj/kern/kernel.asm	/^f010800d:	d3 ea                	shr    %cl,%edx$/;"	d
f010800f	obj/kern/kernel.asm	/^f010800f:	89 e9                	mov    %ebp,%ecx$/;"	l
f0108011	obj/kern/kernel.asm	/^f0108011:	d3 e7                	shl    %cl,%edi$/;"	d
f0108013	obj/kern/kernel.asm	/^f0108013:	89 f1                	mov    %esi,%ecx$/;"	l
f0108015	obj/kern/kernel.asm	/^f0108015:	d3 e8                	shr    %cl,%eax$/;"	d
f0108017	obj/kern/kernel.asm	/^f0108017:	89 e9                	mov    %ebp,%ecx$/;"	l
f0108019	obj/kern/kernel.asm	/^f0108019:	09 f8                	or     %edi,%eax$/;"	l
f010801b	obj/kern/kernel.asm	/^f010801b:	8b 7c 24 10          	mov    0x10(%esp),%edi$/;"	l
f010801f	obj/kern/kernel.asm	/^f010801f:	f7 74 24 04          	divl   0x4(%esp)$/;"	l
f0108023	obj/kern/kernel.asm	/^f0108023:	d3 e7                	shl    %cl,%edi$/;"	d
f0108025	obj/kern/kernel.asm	/^f0108025:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0108029	obj/kern/kernel.asm	/^f0108029:	89 d7                	mov    %edx,%edi$/;"	l
f010802b	obj/kern/kernel.asm	/^f010802b:	f7 64 24 08          	mull   0x8(%esp)$/;"	l
f010802f	obj/kern/kernel.asm	/^f010802f:	39 d7                	cmp    %edx,%edi$/;"	l
f0108031	obj/kern/kernel.asm	/^f0108031:	89 c1                	mov    %eax,%ecx$/;"	l
f0108033	obj/kern/kernel.asm	/^f0108033:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0108036	obj/kern/kernel.asm	/^f0108036:	72 2c                	jb     f0108064 <__umoddi3+0x134>$/;"	l
f0108038	obj/kern/kernel.asm	/^f0108038:	39 44 24 0c          	cmp    %eax,0xc(%esp)$/;"	l
f010803c	obj/kern/kernel.asm	/^f010803c:	72 22                	jb     f0108060 <__umoddi3+0x130>$/;"	l
f010803e	obj/kern/kernel.asm	/^f010803e:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0108042	obj/kern/kernel.asm	/^f0108042:	29 c8                	sub    %ecx,%eax$/;"	l
f0108044	obj/kern/kernel.asm	/^f0108044:	19 d7                	sbb    %edx,%edi$/;"	l
f0108046	obj/kern/kernel.asm	/^f0108046:	89 e9                	mov    %ebp,%ecx$/;"	l
f0108048	obj/kern/kernel.asm	/^f0108048:	89 fa                	mov    %edi,%edx$/;"	l
f010804a	obj/kern/kernel.asm	/^f010804a:	d3 e8                	shr    %cl,%eax$/;"	d
f010804c	obj/kern/kernel.asm	/^f010804c:	89 f1                	mov    %esi,%ecx$/;"	l
f010804e	obj/kern/kernel.asm	/^f010804e:	d3 e2                	shl    %cl,%edx$/;"	d
f0108050	obj/kern/kernel.asm	/^f0108050:	89 e9                	mov    %ebp,%ecx$/;"	l
f0108052	obj/kern/kernel.asm	/^f0108052:	d3 ef                	shr    %cl,%edi$/;"	d
f0108054	obj/kern/kernel.asm	/^f0108054:	09 d0                	or     %edx,%eax$/;"	l
f0108056	obj/kern/kernel.asm	/^f0108056:	89 fa                	mov    %edi,%edx$/;"	l
f0108058	obj/kern/kernel.asm	/^f0108058:	83 c4 14             	add    $0x14,%esp$/;"	l
f010805b	obj/kern/kernel.asm	/^f010805b:	5e                   	pop    %esi$/;"	l
f010805c	obj/kern/kernel.asm	/^f010805c:	5f                   	pop    %edi$/;"	l
f010805d	obj/kern/kernel.asm	/^f010805d:	5d                   	pop    %ebp$/;"	l
f010805e	obj/kern/kernel.asm	/^f010805e:	c3                   	ret    $/;"	l
f010805f	obj/kern/kernel.asm	/^f010805f:	90                   	nop$/;"	l
f0108060	obj/kern/kernel.asm	/^f0108060:	39 d7                	cmp    %edx,%edi$/;"	l
f0108062	obj/kern/kernel.asm	/^f0108062:	75 da                	jne    f010803e <__umoddi3+0x10e>$/;"	l
f0108064	obj/kern/kernel.asm	/^f0108064:	8b 14 24             	mov    (%esp),%edx$/;"	l
f0108067	obj/kern/kernel.asm	/^f0108067:	89 c1                	mov    %eax,%ecx$/;"	l
f0108069	obj/kern/kernel.asm	/^f0108069:	2b 4c 24 08          	sub    0x8(%esp),%ecx$/;"	l
f010806d	obj/kern/kernel.asm	/^f010806d:	1b 54 24 04          	sbb    0x4(%esp),%edx$/;"	l
f0108071	obj/kern/kernel.asm	/^f0108071:	eb cb                	jmp    f010803e <__umoddi3+0x10e>$/;"	l
f0108073	obj/kern/kernel.asm	/^f0108073:	90                   	nop$/;"	l
f0108074	obj/kern/kernel.asm	/^f0108074:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0108078	obj/kern/kernel.asm	/^f0108078:	3b 44 24 0c          	cmp    0xc(%esp),%eax$/;"	l
f010807c	obj/kern/kernel.asm	/^f010807c:	0f 82 0f ff ff ff    	jb     f0107f91 <__umoddi3+0x61>$/;"	l
f0108082	obj/kern/kernel.asm	/^f0108082:	e9 1a ff ff ff       	jmp    f0107fa1 <__umoddi3+0x71>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
fcstab	net/lwip/netif/ppp/ppp.c	/^static const u_short fcstab[256] = {$/;"	v	file:
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	net/lwip/netif/ppp/ppp.c	/^  sio_fd_t fd;                  \/* File device ID of port. *\/$/;"	m	struct:PPPControl_s	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/ns.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/ns.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testinput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testinput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testoutput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testoutput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echosrv.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echosrv.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echotest.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echotest.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/exechello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/exechello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/httpd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/httpd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = -1;$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = -1;$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sendpage.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sendpage.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^			 fd = open(t,O_RDONLY);$/;"	d
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = -1;$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = -1;$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = -1;$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = -1;$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fd	obj/user/testtime.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testtime.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd2sockid	lib/sockets.c	/^fd2sockid(int fd)$/;"	f	file:
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_bits	net/lwip/include/lwip/sockets.h	/^          unsigned char fd_bits [(FD_SETSIZE+7)\/8];$/;"	m	struct:fd_set
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon7	typeref:struct:Fd::__anon7::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fd_set	net/lwip/include/lwip/sockets.h	/^        } fd_set;$/;"	t	typeref:struct:fd_set
fd_set	net/lwip/include/lwip/sockets.h	/^  typedef struct fd_set {$/;"	s
fd_sock	inc/fd.h	/^		struct FdSock fd_sock;$/;"	m	union:Fd::__anon7	typeref:struct:Fd::__anon7::FdSock
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN + DHCP_SNAME_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_SNAME_LEN;$/;"	d
file	net/lwip/core/memp.c	/^  const char *file;$/;"	m	struct:memp	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
find_entry	net/lwip/netif/etharp.c	/^find_entry(struct ip_addr *ipaddr, u8_t flags, struct netif *netif)$/;"	f	file:
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finished	net/lwip/netif/ppp/fsm.h	/^  void (*finished)(fsm*);                           \/* Called when we don't want the lower layer *\/$/;"	m	struct:fsm_callbacks
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first	obj/net/ns.asm	/^        first = 0;$/;"	d
first	obj/net/testinput.asm	/^		first = 0;$/;"	d
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
flags	net/lwip/api/sockets.c	/^  u16_t flags;$/;"	m	struct:lwip_socket	file:
flags	net/lwip/core/tcp_in.c	/^static u8_t flags;$/;"	v	file:
flags	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t flags;$/;"	m	struct:ip_reassdata
flags	net/lwip/include/lwip/netif.h	/^  u8_t flags;$/;"	m	struct:netif
flags	net/lwip/include/lwip/pbuf.h	/^  u8_t flags;$/;"	m	struct:pbuf
flags	net/lwip/include/lwip/tcp.h	/^  u8_t flags;$/;"	m	struct:tcp_pcb
flags	net/lwip/include/lwip/udp.h	/^  u8_t flags;$/;"	m	struct:udp_pcb
flags	net/lwip/netif/ppp/fsm.h	/^  int flags;                       \/* Contains option bits *\/$/;"	m	struct:fsm
flags	net/lwip/netif/ppp/vj.h	/^  u_short flags;$/;"	m	struct:vjcompress
flags	obj/net/ns.asm	/^  flags = TCPH_FLAGS(tcphdr) & TCP_FLAGS;$/;"	d
flags1	net/lwip/core/dns.c	/^  u8_t flags1;$/;"	m	struct:dns_hdr	file:
flags2	net/lwip/core/dns.c	/^  u8_t flags2;$/;"	m	struct:dns_hdr	file:
flow1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
flow2	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t flow2;$/;"	m	struct:ip_hdr
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
fmt	obj/fs/fs.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/fs/fs.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/kern/kernel.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/kern/kernel.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/net/ns.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/net/ns.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/net/testinput.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/net/testinput.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/net/testoutput.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/net/testoutput.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/badsegment.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/badsegment.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/breakpoint.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/breakpoint.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/buggyhello.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/buggyhello.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/buggyhello2.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/buggyhello2.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/cat.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/cat.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/divzero.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/divzero.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/dumbfork.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/dumbfork.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/echo.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/echo.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/echosrv.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/echosrv.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/echotest.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/echotest.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/evilhello.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/evilhello.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/exechello.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/exechello.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/fairness.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/fairness.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/faultalloc.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/faultalloc.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/faultallocbad.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/faultallocbad.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/faultbadhandler.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/faultbadhandler.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/faultdie.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/faultdie.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/faultevilhandler.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/faultevilhandler.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/faultnostack.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/faultnostack.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/faultread.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/faultread.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/faultreadkernel.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/faultreadkernel.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/faultregs.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/faultregs.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/faultwrite.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/faultwrite.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/faultwritekernel.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/faultwritekernel.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/forktree.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/forktree.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/hello.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/hello.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/httpd.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/httpd.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/icode.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/icode.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/idle.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/idle.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/init.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/init.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/ls.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/ls.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/lsfd.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/lsfd.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/num.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/num.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/pingpong.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/pingpong.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/pingpongs.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/pingpongs.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/primes.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/primes.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/primespipe.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/primespipe.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/sendpage.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/sendpage.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/sh.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/sh.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/softint.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/softint.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/spawnhello.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/spawnhello.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/spin.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/spin.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/stresssched.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/stresssched.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/testbss.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/testbss.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/testfdsharing.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/testfdsharing.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/testfile.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/testfile.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/testkbd.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/testkbd.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/testpipe.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/testpipe.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/testpiperace.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/testpiperace.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/testpiperace2.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/testpiperace2.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/testpteshare.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/testpteshare.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/testshell.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/testshell.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/testtime.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/testtime.asm	/^                                        fmt = fmt - 2;$/;"	d
fmt	obj/user/yield.asm	/^					fmt = fmt - 2;$/;"	d
fmt	obj/user/yield.asm	/^                                        fmt = fmt - 2;$/;"	d
for_us	obj/net/ns.asm	/^    for_us = 0;$/;"	d
for_us	obj/net/ns.asm	/^    for_us = ip_addr_cmp(&dipaddr, &(netif->ip_addr));$/;"	d
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
found	net/lwip/core/dns.c	/^  dns_found_callback found;$/;"	m	struct:dns_table_entry	file:
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
fraghdr	obj/net/ns.asm	/^    fraghdr = (struct ip_hdr*)(ipr->p->payload);$/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)new_p->payload; $/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)p->payload;$/;"	d
free	lib/malloc.c	/^free(void *v)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
free_etharp_q	net/lwip/netif/etharp.c	/^free_etharp_q(struct etharp_q_entry *q)$/;"	f	file:
free_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t free_msg;$/;"	m	struct:sys_mbox_entry	file:
free_pbuf_and_return	obj/net/ns.asm	/^free_pbuf_and_return:$/;"	l
freeaddrinfo	net/lwip/include/lwip/netdb.h	104;"	d
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_mbox_entry	file:
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_sem_entry	file:
freepbuf	obj/net/ns.asm	/^freepbuf:$/;"	l
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/ns.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testinput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testoutput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echosrv.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echotest.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/exechello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/httpd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sendpage.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testtime.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsm	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm {$/;"	s
fsm	net/lwip/netif/ppp/fsm.h	/^} fsm;$/;"	t	typeref:struct:fsm
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm_callbacks {$/;"	s
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^} fsm_callbacks;$/;"	t	typeref:struct:fsm_callbacks
fsm_close	net/lwip/netif/ppp/fsm.c	/^fsm_close(fsm *f, char *reason)$/;"	f
fsm_init	net/lwip/netif/ppp/fsm.c	/^fsm_init(fsm *f)$/;"	f
fsm_input	net/lwip/netif/ppp/fsm.c	/^fsm_input(fsm *f, u_char *inpacket, int l)$/;"	f
fsm_lowerdown	net/lwip/netif/ppp/fsm.c	/^fsm_lowerdown(fsm *f)$/;"	f
fsm_lowerup	net/lwip/netif/ppp/fsm.c	/^fsm_lowerup(fsm *f)$/;"	f
fsm_open	net/lwip/netif/ppp/fsm.c	/^fsm_open(fsm *f)$/;"	f
fsm_protreject	net/lwip/netif/ppp/fsm.c	/^fsm_protreject(fsm *f)$/;"	f
fsm_rcoderej	net/lwip/netif/ppp/fsm.c	/^fsm_rcoderej(fsm *f, u_char *inp, int len)$/;"	f	file:
fsm_rconfack	net/lwip/netif/ppp/fsm.c	/^fsm_rconfack(fsm *f, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfnakrej	net/lwip/netif/ppp/fsm.c	/^fsm_rconfnakrej(fsm *f, int code, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_rconfreq(fsm *f, u_char id, u_char *inp, int len)$/;"	f	file:
fsm_rtermack	net/lwip/netif/ppp/fsm.c	/^fsm_rtermack(fsm *f)$/;"	f	file:
fsm_rtermreq	net/lwip/netif/ppp/fsm.c	/^fsm_rtermreq(fsm *f, int id, u_char *p, int len)$/;"	f	file:
fsm_sconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_sconfreq(fsm *f, int retransmit)$/;"	f	file:
fsm_sdata	net/lwip/netif/ppp/fsm.c	/^fsm_sdata( fsm *f, u_char code, u_char id, u_char *data, int datalen)$/;"	f
fsm_timeout	net/lwip/netif/ppp/fsm.c	/^fsm_timeout(void *arg)$/;"	f	file:
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
func	kern/pci.h	/^    uint32_t func;$/;"	m	struct:pci_func
func	net/lwip/jos/arch/sys_arch.c	/^    void (*func)(void *arg);$/;"	m	struct:lwip_thread	file:
func	net/serv.c	/^	void (*func)(void);$/;"	m	struct:timer_thread	file:
function	net/lwip/include/lwip/api_msg.h	/^  void (* function)(struct api_msg_msg *msg);$/;"	m	struct:api_msg
function	net/lwip/include/lwip/netifapi.h	/^  void (* function)(struct netifapi_msg_msg *msg);$/;"	m	struct:netifapi_msg
fw	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER fw;               \/* Forwarded packets. *\/$/;"	m	struct:stats_proto
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen	net/lwip/jos/arch/sys_arch.c	/^    int gen;$/;"	m	struct:sys_sem_entry	file:
gen_primes	grade-lab5	/^def gen_primes(n):$/;"	f
gen_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t gen_trap;$/;"	m	struct:snmp_msg_trap
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_buffer	net/serv.c	/^get_buffer(void) {$/;"	f	file:
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
get_idle_time	net/lwip/netif/ppp/ppp.c	/^get_idle_time(int u, struct ppp_idle *ip)$/;"	f
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_array_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_list_rootnode
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_ram_array_node
get_object_def_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_a)(u8_t rid, u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_pc)(u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_object_def_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_q)(void* addr_inf, u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_objid	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_objid)(void* addr_inf, u8_t level, u16_t idx, s32_t *sub_id);$/;"	m	struct:mib_external_node
get_page_num	lib/fork.c	/^get_page_num(int pgdir_index, int pgtb_index) {	$/;"	f
get_pap_passwd	net/lwip/netif/ppp/auth.c	/^get_pap_passwd(int unit, char *user, char *passwd)$/;"	f	file:
get_random_priority	user/hello2.c	/^int get_random_priority(){$/;"	f
get_secret	net/lwip/netif/ppp/auth.c	/^int get_secret( int unit, char *client, char *server, char *secret, int *secret_len, int save_addrs)$/;"	f
get_socket	net/lwip/api/sockets.c	/^get_socket(int s)$/;"	f	file:
get_unallocated_page	kern/pmap.c	/^get_unallocated_page(){$/;"	f
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
get_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
get_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
getaddrinfo	net/lwip/include/lwip/netdb.h	105;"	d
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
gethostbyname	net/lwip/include/lwip/netdb.h	101;"	d
gethostbyname_r	net/lwip/include/lwip/netdb.h	102;"	d
gethostbyname_r_helper	net/lwip/api/netdb.c	/^struct gethostbyname_r_helper {$/;"	s	file:
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getip_hl	net/lwip/netif/ppp/vj.c	51;"	d	file:
getip_hl	net/lwip/netif/ppp/vj.c	54;"	d	file:
getpeername	net/lwip/include/lwip/sockets.h	332;"	d
getsockname	net/lwip/include/lwip/sockets.h	331;"	d
getsockopt	net/lwip/include/lwip/sockets.h	334;"	d
getth_off	net/lwip/netif/ppp/vj.c	52;"	d	file:
getth_off	net/lwip/netif/ppp/vj.c	55;"	d	file:
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
group_address	net/lwip/include/ipv4/lwip/igmp.h	/^  struct ip_addr     group_address;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::ip_addr
group_query_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER group_query_rxed; \/* *\/$/;"	m	struct:stats_igmp
group_state	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               group_state;$/;"	m	struct:igmp_group
grow	obj/net/ns.asm	/^  grow = new_len - p->tot_len;$/;"	d
gtrplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t gtrplen;$/;"	m	struct:snmp_trap_header_lengths
gtrplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t gtrplenlen;$/;"	m	struct:snmp_trap_header_lengths
gw	net/lwip/include/lwip/netif.h	/^  struct ip_addr gw;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
gw	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *gw;$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23	typeref:struct:netifapi_msg_msg::__anon22::__anon23::ip_addr
h	net/lwip/include/lwip/sys.h	/^  sys_timeout_handler h;$/;"	m	struct:sys_timeo
h	net/lwip/include/lwip/tcpip.h	/^      sys_timeout_handler h;$/;"	m	struct:tcpip_msg::__anon26::__anon29
h	obj/net/ns.asm	/^      h   = tmptimeout->h;$/;"	d
h	obj/net/ns.asm	/^      h = tmptimeout->h;$/;"	d
h_addr	net/lwip/include/lwip/netdb.h	71;"	d
h_addr_list	net/lwip/include/lwip/netdb.h	/^    char **h_addr_list; \/* A pointer to an array of pointers to network addresses (in$/;"	m	struct:hostent
h_addrtype	net/lwip/include/lwip/netdb.h	/^    int    h_addrtype;  \/* Address type. *\/$/;"	m	struct:hostent
h_aliases	net/lwip/include/lwip/netdb.h	/^    char **h_aliases;   \/* A pointer to an array of pointers to alternative host names,$/;"	m	struct:hostent
h_errno	net/lwip/api/netdb.c	/^int h_errno;$/;"	v
h_length	net/lwip/include/lwip/netdb.h	/^    int    h_length;    \/* The length, in bytes, of the address. *\/$/;"	m	struct:hostent
h_name	net/lwip/include/lwip/netdb.h	/^    char  *h_name;      \/* Official name of the host. *\/$/;"	m	struct:hostent
handle_client	user/echosrv.c	/^handle_client(int sock)$/;"	f
handle_client	user/httpd.c	/^handle_client(int sock)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
have_chap_secret	net/lwip/netif/ppp/auth.c	/^have_chap_secret(char *client, char *server, u32_t remote)$/;"	f	file:
have_pap_secret	net/lwip/netif/ppp/auth.c	/^have_pap_secret(void)$/;"	f	file:
hdr	obj/net/ns.asm	/^  hdr = p->payload;$/;"	d
hdrlen	obj/net/ns.asm	/^  hdrlen = TCPH_HDRLEN(tcphdr);$/;"	d
head	kern/e1000.c	/^uint32_t head=0, tail=0;$/;"	v
head	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *head;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
head	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *head;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
head	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
header	obj/net/ns.asm	/^    header = pbuf_alloc(PBUF_LINK, 0, PBUF_RAM);$/;"	d
header	user/httpd.c	/^	char *header;$/;"	m	struct:responce_header	file:
headers	user/httpd.c	/^struct responce_header headers[] = {$/;"	v	typeref:struct:responce_header
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
hexdump	grade-lab6	/^def hexdump(data):$/;"	f
hexdump	net/testinput.c	/^hexdump(const char *prefix, const void *data, int len)$/;"	f	file:
his_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
hisaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
hlen	obj/net/ns.asm	/^  hlen = IPH_HL(iphdr) * 4;$/;"	d
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
hoplim	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t hoplim;              \/* hop limit (TTL) *\/$/;"	m	struct:ip_hdr
hostent	net/lwip/include/lwip/netdb.h	/^struct hostent {$/;"	s
hostname	net/lwip/include/lwip/netif.h	/^  char*  hostname;$/;"	m	struct:netif
htonl	net/lwip/core/ipv4/inet.c	/^htonl(u32_t n)$/;"	f
htonl	net/lwip/include/ipv4/lwip/inet.h	56;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	72;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	79;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	85;"	d
htons	net/lwip/core/ipv4/inet.c	/^htons(u16_t n)$/;"	f
htons	net/lwip/include/ipv4/lwip/inet.h	53;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	70;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	77;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	83;"	d
http_port	grade-lab6	/^http_port = QEMU.get_gdb_port() + 2$/;"	v
http_request	user/httpd.c	/^struct http_request {$/;"	s	file:
http_request_parse	user/httpd.c	/^http_request_parse(struct http_request *req, char *request)$/;"	f	file:
hwaddr	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr[NETIF_MAX_HWADDR_LEN];$/;"	m	struct:netif
hwaddr_len	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr_len;$/;"	m	struct:netif
i	net/lwip/netif/ppp/md5.h	/^  u32_t i[2];               \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon15
i	obj/kern/kernel.asm	/^			i = 0;$/;"	d
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^		i = i + 4;$/;"	d
i	obj/kern/kernel.asm	/^		i = i + PGSIZE;	$/;"	d
i	obj/kern/kernel.asm	/^		i = i + PGSIZE;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = empty;$/;"	d
i	obj/net/ns.asm	/^    i = old_pending;$/;"	d
i	obj/net/ns.asm	/^    i = old_queue;$/;"	d
i	obj/net/ns.asm	/^    i = old_stable;$/;"	d
i	obj/net/ns.asm	/^    i = sys_sem_wait_timeout(select_cb.sem, msectimeout);$/;"	d
i	obj/net/ns.asm	/^  i = alloc_socket(conn);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY, NULL);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD, netif);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags, netif);$/;"	d
i	obj/net/testinput.asm	/^    i = 0;$/;"	d
i	obj/user/echosrv.asm	/^    i = 0;$/;"	d
i	obj/user/echotest.asm	/^    i = 0;$/;"	d
i	obj/user/httpd.asm	/^    i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_detect_memory	kern/pmap1.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
icmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node icmp = {$/;"	v	typeref:struct:mib_array_node
icmp	net/lwip/include/lwip/stats.h	/^  struct stats_proto icmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
icmp_dest_unreach	net/lwip/core/ipv4/icmp.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dest_unreach	net/lwip/core/ipv6/icmp6.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dur_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_dur_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_echo_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_echo_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_get_object_def	net/lwip/core/snmp/mib2.c	/^icmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
icmp_get_value	net/lwip/core/snmp/mib2.c	/^icmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
icmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t icmp_ids[26] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 };$/;"	v
icmp_input	net/lwip/core/ipv4/icmp.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_input	net/lwip/core/ipv6/icmp6.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const icmp_nodes[26] = {$/;"	v
icmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node icmp_scalar = {$/;"	v
icmp_te_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_te_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_time_exceeded	net/lwip/core/ipv4/icmp.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmp_time_exceeded	net/lwip/core/ipv6/icmp6.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmaskreps = 0,$/;"	v	file:
icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmasks = 0,$/;"	v	file:
icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpindestunreachs = 0,$/;"	v	file:
icmpinechoreps	net/lwip/core/snmp/mib2.c	/^             icmpinechoreps = 0,$/;"	v	file:
icmpinechos	net/lwip/core/snmp/mib2.c	/^             icmpinechos = 0,$/;"	v	file:
icmpinerrors	net/lwip/core/snmp/mib2.c	/^             icmpinerrors = 0,$/;"	v	file:
icmpinmsgs	net/lwip/core/snmp/mib2.c	/^static u32_t icmpinmsgs = 0,$/;"	v	file:
icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpinparmprobs = 0,$/;"	v	file:
icmpinredirects	net/lwip/core/snmp/mib2.c	/^             icmpinredirects = 0,$/;"	v	file:
icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpinsrcquenchs = 0,$/;"	v	file:
icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpintimeexcds = 0,$/;"	v	file:
icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpintimestampreps = 0,$/;"	v	file:
icmpintimestamps	net/lwip/core/snmp/mib2.c	/^             icmpintimestamps = 0,$/;"	v	file:
icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmaskreps = 0;$/;"	v	file:
icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmasks = 0,$/;"	v	file:
icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpoutdestunreachs = 0,$/;"	v	file:
icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^             icmpoutechoreps = 0,$/;"	v	file:
icmpoutechos	net/lwip/core/snmp/mib2.c	/^             icmpoutechos = 0,$/;"	v	file:
icmpouterrors	net/lwip/core/snmp/mib2.c	/^             icmpouterrors = 0,$/;"	v	file:
icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^             icmpoutmsgs = 0,$/;"	v	file:
icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpoutparmprobs = 0,$/;"	v	file:
icmpoutredirects	net/lwip/core/snmp/mib2.c	/^             icmpoutredirects = 0,$/;"	v	file:
icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpoutsrcquenchs = 0,$/;"	v	file:
icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpouttimeexcds = 0,$/;"	v	file:
icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestampreps = 0,$/;"	v	file:
icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestamps = 0,$/;"	v	file:
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_dur_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_echo_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_te_hdr
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
id	net/lwip/core/dns.c	/^  u16_t id;$/;"	m	struct:dns_hdr	file:
id	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t id;$/;"	m	struct:icmp_echo_hdr
id	net/lwip/include/lwip/snmp.h	/^  s32_t id[LWIP_SNMP_OBJ_ID_LEN];$/;"	m	struct:snmp_obj_id
id	net/lwip/netif/ppp/chap.h	/^  u_char id;                              \/* Current id *\/$/;"	m	struct:chap_state
id	net/lwip/netif/ppp/fsm.h	/^  u_char id;                       \/* Current id *\/$/;"	m	struct:fsm
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
id_inst_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t  id_inst_len;$/;"	m	struct:obj_def
id_inst_ptr	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *id_inst_ptr;$/;"	m	struct:obj_def
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
ident	net/lwip/include/lwip/snmp_msg.h	/^  s32_t *ident;$/;"	m	struct:snmp_varbind
ident	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *ident;$/;"	m	struct:snmp_name_ptr
ident_cmp	net/lwip/include/lwip/snmp_structs.h	/^  s32_t (*ident_cmp)(void* addr_inf, u8_t level, u16_t idx, s32_t sub_id);$/;"	m	struct:mib_external_node
ident_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ident_len;$/;"	m	struct:snmp_varbind
ident_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t ident_len;$/;"	m	struct:snmp_name_ptr
idle_time_limit	net/lwip/netif/ppp/ppp.h	/^  u_short idle_time_limit;            \/* Shut down link if idle for this long *\/$/;"	m	struct:ppp_settings
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idur	obj/net/ns.asm	/^  idur = q->payload;$/;"	d
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
iecho	obj/net/ns.asm	/^    iecho = p->payload;$/;"	d
if_up	net/lwip/netif/ppp/ppp.c	/^  int  if_up;                   \/* True when the interface is up. *\/$/;"	m	struct:PPPControl_s	file:
ifentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ifentry = {$/;"	v	typeref:struct:mib_array_node
ifentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ifentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ifentry_get_value	net/lwip/core/snmp/mib2.c	/^ifentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ifentry_ids[22] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 };$/;"	v
ifentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ifentry_nodes[22] = {$/;"	v
ifentry_set_test	net/lwip/core/snmp/mib2.c	/^ifentry_set_test (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_set_value	net/lwip/core/snmp/mib2.c	/^ifentry_set_value (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifindiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifindiscards;$/;"	m	struct:netif
ifinnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinnucastpkts;$/;"	m	struct:netif
ifinoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifinoctets;$/;"	m	struct:netif
ifinucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinucastpkts;$/;"	m	struct:netif
iflist_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iflist_root = {$/;"	v	typeref:struct:mib_list_rootnode
ifoutdiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifoutdiscards;$/;"	m	struct:netif
ifoutnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutnucastpkts;$/;"	m	struct:netif
ifoutoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifoutoctets;$/;"	m	struct:netif
ifoutucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutucastpkts;$/;"	m	struct:netif
ifspecific	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id ifspecific = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iftable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iftable = {$/;"	v	typeref:struct:mib_ram_array_node
iftable_id	net/lwip/core/snmp/mib2.c	/^s32_t iftable_id = 1;$/;"	v
iftable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iftable_node = (struct mib_node* const)&ifentry;$/;"	v	typeref:struct:mib_node
igmp	net/lwip/include/lwip/stats.h	/^  struct stats_igmp igmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_igmp
igmp_delaying_member	net/lwip/core/ipv4/igmp.c	/^igmp_delaying_member( struct igmp_group *group, u8_t maxresp)$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	/^igmp_dump_group_list()$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	137;"	d	file:
igmp_group	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_group {$/;"	s
igmp_group_list	net/lwip/core/ipv4/igmp.c	/^static struct igmp_group* igmp_group_list;$/;"	v	typeref:struct:igmp_group	file:
igmp_init	net/lwip/core/ipv4/igmp.c	/^igmp_init(void)$/;"	f
igmp_input	net/lwip/core/ipv4/igmp.c	/^igmp_input(struct pbuf *p, struct netif *inp, struct ip_addr *dest)$/;"	f
igmp_ip_output_if	net/lwip/core/ipv4/igmp.c	/^igmp_ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
igmp_joingroup	net/lwip/core/ipv4/igmp.c	/^igmp_joingroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_leavegroup	net/lwip/core/ipv4/igmp.c	/^igmp_leavegroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_lookfor_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookfor_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_lookup_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookup_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_mac_filter	net/lwip/include/lwip/netif.h	/^  err_t (*igmp_mac_filter)( struct netif *netif, struct ip_addr *group, u8_t action);$/;"	m	struct:netif
igmp_msg	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_msg {$/;"	s
igmp_remove_group	net/lwip/core/ipv4/igmp.c	/^igmp_remove_group(struct igmp_group *group)$/;"	f
igmp_report_groups	net/lwip/core/ipv4/igmp.c	/^igmp_report_groups( struct netif *netif)$/;"	f
igmp_send	net/lwip/core/ipv4/igmp.c	/^igmp_send(struct igmp_group *group, u8_t type)$/;"	f
igmp_start	net/lwip/core/ipv4/igmp.c	/^igmp_start(struct netif *netif)$/;"	f
igmp_start_timer	net/lwip/core/ipv4/igmp.c	/^igmp_start_timer(struct igmp_group *group, u8_t max_time)$/;"	f
igmp_stop	net/lwip/core/ipv4/igmp.c	/^igmp_stop(struct netif *netif)$/;"	f
igmp_stop_timer	net/lwip/core/ipv4/igmp.c	/^igmp_stop_timer(struct igmp_group *group)$/;"	f
igmp_timeout	net/lwip/core/ipv4/igmp.c	/^igmp_timeout(struct igmp_group *group)$/;"	f
igmp_timer	net/lwip/api/tcpip.c	/^igmp_timer(void *arg)$/;"	f	file:
igmp_tmr	net/lwip/core/ipv4/igmp.c	/^igmp_tmr(void)$/;"	f
illegal	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER illegal;$/;"	m	struct:stats_mem
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
imr_interface	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_interface; \/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
imr_multiaddr	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
ims	kern/e1000.c	/^uint32_t *rdbah, *rdbal, *rdlen, *rdh, *rdt, *rctl, *ims, *rdtr;$/;"	v
ims	obj/kern/kernel.asm	/^	ims = (uint32_t *)(temp + 0x000D0); *ims = 0;$/;"	d
in	net/lwip/netif/ppp/md5.h	/^  unsigned char in[64];     \/* input buffer *\/$/;"	m	struct:__anon15
inACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm inACCM;              \/* Async-Ctl-Char-Map for input. *\/$/;"	m	struct:PPPControl_s	file:
inEscaped	net/lwip/netif/ppp/ppp.c	/^  char inEscaped;               \/* Escape next character. *\/$/;"	m	struct:PPPControl_s	file:
inFCS	net/lwip/netif/ppp/ppp.c	/^  u16_t inFCS;                  \/* Input Frame Check Sequence value. *\/$/;"	m	struct:PPPControl_s	file:
inHead	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pbuf	file:
inProtocol	net/lwip/netif/ppp/ppp.c	/^  u16_t inProtocol;             \/* The input protocol code. *\/$/;"	m	struct:PPPControl_s	file:
inState	net/lwip/netif/ppp/ppp.c	/^  PPPDevStates inState;         \/* The input process state. *\/$/;"	m	struct:PPPControl_s	file:
inTail	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::	file:
in_addr	net/lwip/include/ipv4/lwip/inet.h	/^struct in_addr {$/;"	s
in_range	net/lwip/core/ipv4/inet.c	45;"	d	file:
inactive	obj/net/ns.asm	/^      inactive = pcb;$/;"	d
inactive	obj/net/ns.asm	/^  inactive = NULL;$/;"	d
inactivity	obj/net/ns.asm	/^      inactivity = tcp_ticks - pcb->tmr;$/;"	d
inactivity	obj/net/ns.asm	/^  inactivity = 0;$/;"	d
inb	inc/x86.h	/^inb(int port)$/;"	f
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = -header_size_increment;$/;"	d
inet_addr	net/lwip/core/ipv4/inet.c	/^inet_addr(const char *cp)$/;"	f
inet_aton	net/lwip/core/ipv4/inet.c	/^inet_aton(const char *cp, struct in_addr *addr)$/;"	f
inet_chksum	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum	net/lwip/core/ipv6/inet6.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo_partial	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo_partial(struct pbuf *p,$/;"	f
inet_ntoa	net/lwip/core/ipv4/inet.c	/^inet_ntoa(struct in_addr addr)$/;"	f
inet_ntoa	net/lwip/netif/ppp/ipcp.c	199;"	d	file:
init	net/lwip/include/lwip/netifapi.h	/^      err_t (* init) (struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23
init	net/lwip/netif/ppp/ppp.h	/^    void (*init) (int unit);$/;"	m	struct:protent
init_attach_e1000	kern/e1000.c	/^init_attach_e1000(struct pci_func *func){$/;"	f
init_interrupts	kern/trap.c	/^void init_interrupts(){$/;"	f
init_stack	lib/extraspawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp,int stack_addr)$/;"	f	file:
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
inl	inc/x86.h	/^inl(int port)$/;"	f
inp	net/lwip/include/lwip/tcpip.h	/^    } inp;$/;"	m	union:tcpip_msg::__anon26	typeref:struct:tcpip_msg::__anon26::__anon27
input	net/input.c	/^input(envid_t ns_envid)$/;"	f
input	net/lwip/include/lwip/netif.h	/^  err_t (* input)(struct pbuf *p, struct netif *inp);$/;"	m	struct:netif
input	net/lwip/include/lwip/netifapi.h	/^      err_t (* input)(struct pbuf *p, struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23
input	net/lwip/netif/ppp/ppp.h	/^    void (*input) (int unit, u_char *pkt, int len);$/;"	m	struct:protent
input_envid	net/serv.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	net/testinput.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	obj/net/ns.asm	/^	input_envid = fork();$/;"	d
input_envid	obj/net/testinput.asm	/^	input_envid = fork();$/;"	d
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
inseg	net/lwip/core/tcp_in.c	/^static struct tcp_seg inseg;$/;"	v	typeref:struct:tcp_seg	file:
insert_in_list	kern/env.c	/^void insert_in_list(struct Env *env) {$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
instance	net/lwip/include/lwip/snmp_structs.h	/^  u8_t instance;$/;"	m	struct:obj_def
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int $/;"	l
int	obj/kern/kernel.asm	/^int changeperms(int argc, char** argv, struct Trapframe* tf) {$/;"	l
int	obj/kern/kernel.asm	/^int clearperms(int argc, char** argv, struct Trapframe* tf) {$/;"	l
int	obj/kern/kernel.asm	/^int dump(int argc, char** argv, struct Trapframe* tf) {$/;"	l
int	obj/kern/kernel.asm	/^int is_valid_ipc_perm(int perms){$/;"	l
int	obj/kern/kernel.asm	/^int setperms(int argc, char** argv, struct Trapframe* tf) {$/;"	l
int	obj/kern/kernel.asm	/^int showmappings(int argc, char** argv, struct Trapframe* tf) {$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/net/ns.asm	/^int$/;"	l
int	obj/net/testinput.asm	/^int$/;"	l
int	obj/net/testoutput.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/echosrv.asm	/^int$/;"	l
int	obj/user/echotest.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/exechello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/httpd.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int	obj/user/testtime.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/net/ns.asm	/^int32_t$/;"	l
int32_t	obj/net/testinput.asm	/^int32_t$/;"	l
int32_t	obj/net/testoutput.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/echosrv.asm	/^int32_t$/;"	l
int32_t	obj/user/echotest.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/exechello.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/httpd.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int32_t	obj/user/testtime.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
interface	net/lwip/include/ipv4/lwip/igmp.h	/^  struct netif      *interface;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::netif
interface	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *interface;$/;"	m	struct:api_msg_msg::__anon30::__anon36	typeref:struct:api_msg_msg::__anon30::__anon36::ip_addr
interfaces	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node interfaces = {$/;"	v	typeref:struct:mib_array_node
interfaces_get_object_def	net/lwip/core/snmp/mib2.c	/^interfaces_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
interfaces_get_value	net/lwip/core/snmp/mib2.c	/^interfaces_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
interfaces_ids	net/lwip/core/snmp/mib2.c	/^const s32_t interfaces_ids[2] = { 1, 2 };$/;"	v
interfaces_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const interfaces_nodes[2] = {$/;"	v
interfaces_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node interfaces_scalar = {$/;"	v
internet	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node internet = {$/;"	v	typeref:struct:mib_array_node
internet_ids	net/lwip/core/snmp/mib2.c	/^const s32_t internet_ids[1] = { 2 };$/;"	v
internet_ids	net/lwip/core/snmp/mib2.c	/^s32_t internet_ids[2] = { 2, 4 };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[1] = { (struct mib_node* const)&mgmt };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[2] = { (struct mib_node* const)&mgmt, (struct mib_node* const)&private };$/;"	v
interrupts	kern/trap.c	/^void (*interrupts[20])();$/;"	v
interruptss	kern/trapentry.S	/^interruptss:$/;"	l
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root invb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ioctlsocket	net/lwip/include/lwip/sockets.h	342;"	d
ip	net/lwip/include/lwip/api.h	/^    struct ip_pcb  *ip;$/;"	m	union:netconn::__anon25	typeref:struct:netconn::__anon25::ip_pcb
ip	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip	net/lwip/netif/ppp/vjbsdhdr.h	/^struct ip$/;"	s
ip4_addr1	net/lwip/include/ipv4/lwip/ip_addr.h	156;"	d
ip4_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	157;"	d
ip4_addr3	net/lwip/include/ipv4/lwip/ip_addr.h	158;"	d
ip4_addr4	net/lwip/include/ipv4/lwip/ip_addr.h	159;"	d
ip_addr	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr {$/;"	s
ip_addr	net/lwip/include/ipv6/lwip/ip_addr.h	/^ struct ip_addr {$/;"	s
ip_addr	net/lwip/include/lwip/netif.h	/^  struct ip_addr ip_addr;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
ip_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr2	net/lwip/include/ipv6/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr_any	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_any = { IP_ADDR_ANY_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_broadcast	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_broadcast = { IP_ADDR_BROADCAST_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_check	net/lwip/netif/ppp/auth.c	/^ip_addr_check(u32_t addr, struct wordlist *addrs)$/;"	f	file:
ip_addr_cmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_cmp(struct ip_addr *addr1, struct ip_addr *addr2)$/;"	f
ip_addr_cmp	net/lwip/include/ipv4/lwip/ip_addr.h	137;"	d
ip_addr_debug_print	net/lwip/include/ipv4/lwip/ip_addr.h	147;"	d
ip_addr_debug_print	net/lwip/include/ipv6/lwip/ip_addr.h	82;"	d
ip_addr_isany	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_isany(struct ip_addr *addr)$/;"	f
ip_addr_isany	net/lwip/include/ipv4/lwip/ip_addr.h	139;"	d
ip_addr_isbroadcast	net/lwip/core/ipv4/ip_addr.c	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	f
ip_addr_islinklocal	net/lwip/include/ipv4/lwip/ip_addr.h	145;"	d
ip_addr_ismulticast	net/lwip/include/ipv4/lwip/ip_addr.h	143;"	d
ip_addr_netcmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_netcmp(struct ip_addr *addr1, struct ip_addr *addr2,$/;"	f
ip_addr_netcmp	net/lwip/include/ipv4/lwip/ip_addr.h	133;"	d
ip_addr_set	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_set(struct ip_addr *dest, struct ip_addr *src)$/;"	f
ip_addr_set	net/lwip/include/ipv4/lwip/ip_addr.h	122;"	d
ip_addrentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_addrentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_debug_print	net/lwip/core/ipv4/ip.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_debug_print	net/lwip/core/ipv6/ip6.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_dst	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::
ip_forward	net/lwip/core/ipv4/ip.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr, struct netif *inp)$/;"	f	file:
ip_forward	net/lwip/core/ipv6/ip6.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr)$/;"	f	file:
ip_frag	net/lwip/core/ipv4/ip_frag.c	/^ip_frag(struct pbuf *p, struct netif *netif, struct ip_addr *dest)$/;"	f
ip_frag	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip_frag;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_get_value	net/lwip/core/snmp/mib2.c	/^ip_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_hdr	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hdr	net/lwip/include/ipv6/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hl_v	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   ip_hl_v;  \/* bug in GCC for mips means the bitfield stuff will sometimes break - so we use a char for both and get round it with macro's instead... *\/$/;"	m	struct:ip
ip_id	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_id;                 \/* identification *\/$/;"	m	struct:ip
ip_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ip_ids[23] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 };$/;"	v
ip_init	net/lwip/core/ipv6/ip6.c	/^ip_init(void)$/;"	f
ip_init	net/lwip/include/ipv4/lwip/ip.h	46;"	d
ip_input	net/lwip/core/ipv4/ip.c	/^ip_input(struct pbuf *p, struct netif *inp)$/;"	f
ip_input	net/lwip/core/ipv6/ip6.c	/^ip_input(struct pbuf *p, struct netif *inp) {$/;"	f
ip_len	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_len;                \/* total length *\/$/;"	m	struct:ip
ip_mreq	net/lwip/include/lwip/sockets.h	/^typedef struct ip_mreq {$/;"	s
ip_mreq	net/lwip/include/lwip/sockets.h	/^} ip_mreq;$/;"	t	typeref:struct:ip_mreq
ip_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ip_nodes[23] = {$/;"	v
ip_ntomentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_ntomentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_off;                \/* fragment offset field *\/$/;"	m	struct:ip
ip_output	net/lwip/core/ipv4/ip.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output	net/lwip/core/ipv6/ip6.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv4/ip.c	/^ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv6/ip6.c	/^ip_output_if (struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_p	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_p;                  \/* protocol *\/$/;"	m	struct:ip
ip_pcb	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_pcb {$/;"	s
ip_reass	net/lwip/core/ipv4/ip_frag.c	/^ip_reass(struct pbuf *p)$/;"	f
ip_reass_chain_frag_into_datagram_and_validate	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_chain_frag_into_datagram_and_validate(struct ip_reassdata *ipr, struct pbuf *new_p)$/;"	f	file:
ip_reass_dequeue_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_dequeue_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_enqueue_new_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_enqueue_new_datagram(struct ip_hdr *fraghdr, int clen)$/;"	f	file:
ip_reass_free_complete_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_free_complete_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_helper	net/lwip/core/ipv4/ip_frag.c	/^struct ip_reass_helper {$/;"	s	file:
ip_reass_pbufcount	net/lwip/core/ipv4/ip_frag.c	/^static u16_t ip_reass_pbufcount;$/;"	v	file:
ip_reass_remove_oldest_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_remove_oldest_datagram(struct ip_hdr *fraghdr, int pbufs_needed)$/;"	f	file:
ip_reass_timer	net/lwip/api/tcpip.c	/^ip_reass_timer(void *arg)$/;"	f	file:
ip_reass_tmr	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_tmr(void)$/;"	f
ip_reassdata	net/lwip/include/ipv4/lwip/ip_frag.h	/^struct ip_reassdata {$/;"	s
ip_route	net/lwip/core/ipv4/ip.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_route	net/lwip/core/ipv6/ip6.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_rteentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_rteentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node ip_scalar = {$/;"	v
ip_set_test	net/lwip/core/snmp/mib2.c	/^ip_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_src	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::in_addr
ip_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_sum;                \/* checksum *\/$/;"	m	struct:ip
ip_tos	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_tos;                \/* type of service *\/$/;"	m	struct:ip
ip_ttl	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_ttl;                \/* time to live *\/$/;"	m	struct:ip
ipaddr	net/lwip/core/dns.c	/^  struct ip_addr ipaddr;$/;"	m	struct:dns_table_entry	typeref:struct:dns_table_entry::ip_addr	file:
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon30::__anon32	typeref:struct:api_msg_msg::__anon30::__anon32::ip_addr
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon30::__anon33	typeref:struct:api_msg_msg::__anon30::__anon33::ip_addr
ipaddr	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23	typeref:struct:netifapi_msg_msg::__anon22::__anon23::ip_addr
ipaddr	net/lwip/netif/etharp.c	/^  struct ip_addr ipaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::ip_addr	file:
ipaddr	obj/net/ns.asm	/^        ipaddr = &(netif->gw);$/;"	d
ipaddrentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipaddrentry = {$/;"	v	typeref:struct:mib_array_node
ipaddrentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipaddrentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
ipaddrentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipaddrentry_nodes[5] = {$/;"	v
ipaddrtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipaddrtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipaddrtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipaddrtable_id = 1;$/;"	v
ipaddrtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipaddrtable_node = (struct mib_node* const)&ipaddrentry;$/;"	v	typeref:struct:mib_node
ipaddrtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipaddrtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
ipcb	obj/net/ns.asm	/^        ipcb = ipcb->next;$/;"	d
ipcb	obj/net/ns.asm	/^        ipcb = udp_pcbs;$/;"	d
ipcb	obj/net/ns.asm	/^    ipcb = udp_pcbs;$/;"	d
ipcp_ackci	net/lwip/netif/ppp/ipcp.c	/^ipcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_addci	net/lwip/netif/ppp/ipcp.c	/^ipcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
ipcp_allowoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
ipcp_callbacks	net/lwip/netif/ppp/ipcp.c	/^static fsm_callbacks ipcp_callbacks = { \/* IPCP callback routines *\/$/;"	v	file:
ipcp_cilen	net/lwip/netif/ppp/ipcp.c	/^ipcp_cilen(fsm *f)$/;"	f	file:
ipcp_clear_addrs	net/lwip/netif/ppp/ipcp.c	/^ipcp_clear_addrs(int unit)$/;"	f	file:
ipcp_close	net/lwip/netif/ppp/ipcp.c	/^ipcp_close(int unit, char *reason)$/;"	f	file:
ipcp_down	net/lwip/netif/ppp/ipcp.c	/^ipcp_down(fsm *f)$/;"	f	file:
ipcp_finished	net/lwip/netif/ppp/ipcp.c	/^ipcp_finished(fsm *f)$/;"	f	file:
ipcp_fsm	net/lwip/netif/ppp/ipcp.c	/^fsm ipcp_fsm[NUM_PPP]; \/* IPCP fsm structure *\/$/;"	v
ipcp_gotoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
ipcp_hisoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
ipcp_init	net/lwip/netif/ppp/ipcp.c	/^ipcp_init(int unit)$/;"	f	file:
ipcp_input	net/lwip/netif/ppp/ipcp.c	/^ipcp_input(int unit, u_char *p, int len)$/;"	f	file:
ipcp_lowerdown	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerdown(int unit)$/;"	f	file:
ipcp_lowerup	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerup(int unit)$/;"	f	file:
ipcp_nakci	net/lwip/netif/ppp/ipcp.c	/^ipcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_open	net/lwip/netif/ppp/ipcp.c	/^ipcp_open(int unit)$/;"	f	file:
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^typedef struct ipcp_options {$/;"	s
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^} ipcp_options;$/;"	t	typeref:struct:ipcp_options
ipcp_protent	net/lwip/netif/ppp/ipcp.c	/^struct protent ipcp_protent = {$/;"	v	typeref:struct:protent
ipcp_protrej	net/lwip/netif/ppp/ipcp.c	/^ipcp_protrej(int unit)$/;"	f	file:
ipcp_rejci	net/lwip/netif/ppp/ipcp.c	/^ipcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_reqci	net/lwip/netif/ppp/ipcp.c	/^ipcp_reqci(fsm *f, u_char *inp\/* Requested CIs *\/,int *len\/* Length of requested CIs *\/,int reject_if_disagree)$/;"	f	file:
ipcp_resetci	net/lwip/netif/ppp/ipcp.c	/^ipcp_resetci(fsm *f)$/;"	f	file:
ipcp_up	net/lwip/netif/ppp/ipcp.c	/^ipcp_up(fsm *f)$/;"	f	file:
ipcp_wantoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^             ipforwdatagrams = 0,$/;"	v	file:
ipfragcreates	net/lwip/core/snmp/mib2.c	/^             ipfragcreates = 0,$/;"	v	file:
ipfragfails	net/lwip/core/snmp/mib2.c	/^             ipfragfails = 0,$/;"	v	file:
ipfragoks	net/lwip/core/snmp/mib2.c	/^             ipfragoks = 0,$/;"	v	file:
iphdr	net/lwip/core/tcp_in.c	/^static struct ip_hdr *iphdr;$/;"	v	typeref:struct:ip_hdr	file:
iphdr	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_hdr iphdr;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_hdr
iphdr	obj/net/ns.asm	/^      iphdr = r->payload;$/;"	d
iphdr	obj/net/ns.asm	/^    iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = original_iphdr;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = rambuf->payload;$/;"	d
iphdr_hlen	obj/net/ns.asm	/^  iphdr_hlen = IPH_HL(iphdr);$/;"	d
iphdr_len	obj/net/ns.asm	/^  iphdr_len = ntohs(IPH_LEN(iphdr));$/;"	d
ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^             ipinaddrerrors = 0,$/;"	v	file:
ipindelivers	net/lwip/core/snmp/mib2.c	/^             ipindelivers = 0,$/;"	v	file:
ipindiscards	net/lwip/core/snmp/mib2.c	/^             ipindiscards = 0,$/;"	v	file:
ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^             ipinhdrerrors = 0,$/;"	v	file:
ipinreceives	net/lwip/core/snmp/mib2.c	/^static u32_t ipinreceives = 0,$/;"	v	file:
ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^             ipinunknownprotos = 0,$/;"	v	file:
ipntomentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipntomentry = {$/;"	v	typeref:struct:mib_array_node
ipntomentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipntomentry_ids[4] = { 1, 2, 3, 4 };$/;"	v
ipntomentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipntomentry_nodes[4] = {$/;"	v
ipntomtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipntomtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipntomtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipntomtable_id = 1;$/;"	v
ipntomtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipntomtable_node = (struct mib_node* const)&ipntomentry;$/;"	v	typeref:struct:mib_node
ipntomtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipntomtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipoutdiscards	net/lwip/core/snmp/mib2.c	/^             ipoutdiscards = 0,$/;"	v	file:
ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^             ipoutnoroutes = 0,$/;"	v	file:
ipoutrequests	net/lwip/core/snmp/mib2.c	/^             ipoutrequests = 0,$/;"	v	file:
ipr	obj/net/ns.asm	/^      ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr	obj/net/ns.asm	/^  ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipreasmfails	net/lwip/core/snmp/mib2.c	/^             ipreasmfails = 0,$/;"	v	file:
ipreasmoks	net/lwip/core/snmp/mib2.c	/^             ipreasmoks = 0,$/;"	v	file:
ipreasmreqds	net/lwip/core/snmp/mib2.c	/^             ipreasmreqds = 0,$/;"	v	file:
iprh	obj/net/ns.asm	/^          iprh = (struct ip_reass_helper*)q->payload;$/;"	d
iprh	obj/net/ns.asm	/^      iprh = (struct ip_reass_helper*)r->payload;$/;"	d
iprh	obj/net/ns.asm	/^    iprh = (struct ip_reass_helper *)p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper *)ipr->p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper*)new_p->payload;$/;"	d
iprh_prev	obj/net/ns.asm	/^          iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^        iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^    iprh_prev = iprh_tmp;$/;"	d
iprh_tmp	obj/net/ns.asm	/^    iprh_tmp = (struct ip_reass_helper*)q->payload;$/;"	d
iprouteinfo	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id iprouteinfo = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iproutingdiscards	net/lwip/core/snmp/mib2.c	/^             iproutingdiscards = 0;$/;"	v	file:
iprteentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node iprteentry = {$/;"	v	typeref:struct:mib_array_node
iprteentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t iprteentry_ids[13] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };$/;"	v
iprteentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const iprteentry_nodes[13] = {$/;"	v
iprtetable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iprtetable = {$/;"	v	typeref:struct:mib_ram_array_node
iprtetable_id	net/lwip/core/snmp/mib2.c	/^s32_t iprtetable_id = 1;$/;"	v
iprtetable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iprtetable_node = (struct mib_node* const)&iprteentry;$/;"	v	typeref:struct:mib_node
iprtetree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iprtetree_root = {$/;"	v	typeref:struct:mib_list_rootnode
irq_eoi	kern/picirq.c	/^irq_eoi(void)$/;"	f
irq_line	kern/pci.h	/^    uint8_t irq_line;$/;"	m	struct:pci_func
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
is_prog_writable	lib/exec.c	/^is_prog_writable(struct Proghdr *ph){$/;"	f
is_valid_ipc_perm	kern/syscall.c	/^int is_valid_ipc_perm(int perms){$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f
isdigit	net/lwip/core/ipv4/inet.c	47;"	d	file:
isfree	lib/malloc.c	/^isfree(void *v, size_t n)$/;"	f	file:
islower	net/lwip/core/ipv4/inet.c	49;"	d	file:
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
isprint	net/lwip/core/ipv4/inet.c	46;"	d	file:
iss	obj/net/ns.asm	/^    iss = tcp_next_iss();$/;"	d
iss	obj/net/ns.asm	/^  iss = tcp_next_iss();$/;"	d
isspace	net/lwip/core/ipv4/inet.c	50;"	d	file:
isxdigit	net/lwip/core/ipv4/inet.c	48;"	d	file:
jb_ebp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebp;$/;"	m	struct:jos_jmp_buf
jb_ebx	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebx;$/;"	m	struct:jos_jmp_buf
jb_edi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_edi;$/;"	m	struct:jos_jmp_buf
jb_eip	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_eip;$/;"	m	struct:jos_jmp_buf
jb_esi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esi;$/;"	m	struct:jos_jmp_buf
jb_esp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esp;$/;"	m	struct:jos_jmp_buf
jif	net/lwip/jos/jif/jif.c	/^struct jif {$/;"	s	file:
jif	obj/net/ns.asm	/^    jif = mem_malloc(sizeof(struct jif));$/;"	d
jif	obj/net/ns.asm	/^    jif = netif->state;$/;"	d
jif_init	net/lwip/jos/jif/jif.c	/^jif_init(struct netif *netif)$/;"	f
jif_input	net/lwip/jos/jif/jif.c	/^jif_input(struct netif *netif, void *va)$/;"	f
jif_output	net/lwip/jos/jif/jif.c	/^jif_output(struct netif *netif, struct pbuf *p,$/;"	f	file:
jif_pkt	inc/ns.h	/^struct jif_pkt {$/;"	s
jl	net/lwip/include/lwip/api_msg.h	/^    } jl;$/;"	m	union:api_msg_msg::__anon30	typeref:struct:api_msg_msg::__anon30::__anon36
join_or_leave	net/lwip/include/lwip/api_msg.h	/^      enum netconn_igmp join_or_leave;$/;"	m	struct:api_msg_msg::__anon30::__anon36	typeref:enum:api_msg_msg::__anon30::__anon36::netconn_igmp
join_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER join_sent;        \/* *\/$/;"	m	struct:stats_igmp
jos_jmp_buf	net/lwip/jos/arch/i386/setjmp.h	/^struct jos_jmp_buf {$/;"	s
jp_data	inc/ns.h	/^	char jp_data[0];$/;"	m	struct:jif_pkt
jp_len	inc/ns.h	/^	int jp_len;$/;"	m	struct:jif_pkt
k	obj/net/ns.asm	/^  k = ETHARP_HWADDR_LEN;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
keep_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t keep_cnt;$/;"	m	struct:tcp_pcb
keep_cnt_sent	net/lwip/include/lwip/tcp.h	/^  u8_t keep_cnt_sent;$/;"	m	struct:tcp_pcb
keep_idle	net/lwip/include/lwip/tcp.h	/^  u32_t keep_idle;$/;"	m	struct:tcp_pcb
keep_intvl	net/lwip/include/lwip/tcp.h	/^  u32_t keep_intvl;$/;"	m	struct:tcp_pcb
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	kern/pmap1.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
key1	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
key2	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	f
kill_link	net/lwip/netif/ppp/ppp.c	/^  int  kill_link;               \/* Shut the link down. *\/$/;"	m	struct:PPPControl_s	file:
kill_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue kill_queue;$/;"	v	typeref:struct:thread_queue	file:
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
l_linger	net/lwip/include/lwip/sockets.h	/^       int l_linger;               \/* linger time *\/$/;"	m	struct:linger
l_onoff	net/lwip/include/lwip/sockets.h	/^       int l_onoff;                \/* option on\/off *\/$/;"	m	struct:linger
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last	obj/net/ns.asm	/^    last = (left <= mtu - IP_HLEN);$/;"	d
lastXMit	net/lwip/netif/ppp/ppp.c	/^  u_long lastXMit;              \/* Time of last transmission. *\/$/;"	m	struct:PPPControl_s	file:
last_cs	net/lwip/netif/ppp/vj.h	/^  struct cstate *last_cs;          \/* most recently used tstate *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
last_recv	net/lwip/netif/ppp/vj.h	/^  u_char last_recv;                \/* last rcvd conn. id *\/$/;"	m	struct:vjcompress
last_reporter_flag	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               last_reporter_flag; \/* signifies we were the last person to report *\/$/;"	m	struct:igmp_group
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
last_xmit	net/lwip/netif/ppp/vj.h	/^  u_char last_xmit;                \/* last sent conn. id *\/$/;"	m	struct:vjcompress
lastack	net/lwip/include/lwip/tcp.h	/^  u32_t lastack; \/* Highest acknowledged seqno. *\/$/;"	m	struct:tcp_pcb
lastconflict	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t lastconflict;        \/* ticks until a conflict can be solved by defending *\/$/;"	m	struct:autoip
lastdata	net/lwip/api/sockets.c	/^  struct netbuf *lastdata;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netbuf	file:
lastoffset	net/lwip/api/sockets.c	/^  u16_t lastoffset;$/;"	m	struct:lwip_socket	file:
lb	net/lwip/include/lwip/api_msg.h	/^    } lb;$/;"	m	union:api_msg_msg::__anon30	typeref:struct:api_msg_msg::__anon30::__anon37
lba_length	inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc
lba_start	inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc
lcp_ackci	net/lwip/netif/ppp/lcp.c	/^lcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_addci	net/lwip/netif/ppp/lcp.c	/^lcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
lcp_allowoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
lcp_callbacks	net/lwip/netif/ppp/lcp.c	/^static fsm_callbacks lcp_callbacks = { \/* LCP callback routines *\/$/;"	v	file:
lcp_cilen	net/lwip/netif/ppp/lcp.c	/^static int lcp_cilen(fsm *f)$/;"	f	file:
lcp_close	net/lwip/netif/ppp/lcp.c	/^lcp_close(int unit, char *reason)$/;"	f
lcp_down	net/lwip/netif/ppp/lcp.c	/^lcp_down(fsm *f)$/;"	f	file:
lcp_echo_fails	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_fails         = LCP_MAXECHOFAILS; \/* Tolerance to unanswered echo-requests *\/$/;"	v	file:
lcp_echo_interval	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_interval      = LCP_ECHOINTERVAL; \/* Interval between LCP echo-requests *\/$/;"	v	file:
lcp_echo_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerdown (int unit)$/;"	f	file:
lcp_echo_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerup (int unit)$/;"	f	file:
lcp_echo_number	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_number        = 0;                \/* ID number of next echo frame *\/$/;"	v	file:
lcp_echo_timer_running	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_timer_running = 0;                \/* TRUE if a timer is running *\/$/;"	v	file:
lcp_echos_pending	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echos_pending      = 0;                \/* Number of outstanding echo msgs *\/$/;"	v	file:
lcp_extcode	net/lwip/netif/ppp/lcp.c	/^lcp_extcode(fsm *f, int code, u_char id, u_char *inp, int len)$/;"	f	file:
lcp_finished	net/lwip/netif/ppp/lcp.c	/^lcp_finished(fsm *f)$/;"	f	file:
lcp_fsm	net/lwip/netif/ppp/lcp.c	/^static fsm lcp_fsm[NUM_PPP];                            \/* LCP fsm structure (global)*\/$/;"	v	file:
lcp_gotoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
lcp_hisoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
lcp_init	net/lwip/netif/ppp/lcp.c	/^lcp_init(int unit)$/;"	f
lcp_input	net/lwip/netif/ppp/lcp.c	/^lcp_input(int unit, u_char *p, int len)$/;"	f	file:
lcp_loopbackfail	net/lwip/netif/ppp/lcp.c	/^int lcp_loopbackfail = DEFLOOPBACKFAIL;$/;"	v
lcp_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_lowerdown(int unit)$/;"	f
lcp_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_lowerup(int unit)$/;"	f
lcp_nakci	net/lwip/netif/ppp/lcp.c	/^lcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_open	net/lwip/netif/ppp/lcp.c	/^lcp_open(int unit)$/;"	f
lcp_options	net/lwip/netif/ppp/lcp.h	/^typedef struct lcp_options {$/;"	s
lcp_options	net/lwip/netif/ppp/lcp.h	/^} lcp_options;$/;"	t	typeref:struct:lcp_options
lcp_phase	net/lwip/netif/ppp/lcp.c	/^LinkPhase lcp_phase[NUM_PPP];          \/* Phase of link session (RFC 1661) *\/$/;"	v
lcp_protent	net/lwip/netif/ppp/lcp.c	/^struct protent lcp_protent = {$/;"	v	typeref:struct:protent
lcp_protrej	net/lwip/netif/ppp/lcp.c	/^lcp_protrej(int unit)$/;"	f	file:
lcp_received_echo_reply	net/lwip/netif/ppp/lcp.c	/^lcp_received_echo_reply (fsm *f, int id, u_char *inp, int len)$/;"	f	file:
lcp_rejci	net/lwip/netif/ppp/lcp.c	/^lcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_reqci	net/lwip/netif/ppp/lcp.c	/^lcp_reqci(fsm *f, $/;"	f	file:
lcp_resetci	net/lwip/netif/ppp/lcp.c	/^lcp_resetci(fsm *f)$/;"	f	file:
lcp_rprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_rprotrej(fsm *f, u_char *inp, int len)$/;"	f	file:
lcp_sprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_sprotrej(int unit, u_char *p, int len)$/;"	f
lcp_starting	net/lwip/netif/ppp/lcp.c	/^lcp_starting(fsm *f)$/;"	f	file:
lcp_up	net/lwip/netif/ppp/lcp.c	/^lcp_up(fsm *f)$/;"	f	file:
lcp_wantoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
leave_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER leave_sent;       \/* *\/$/;"	m	struct:stats_igmp
left	obj/net/ns.asm	/^  left = len;$/;"	d
left	obj/net/ns.asm	/^  left = p->tot_len - IP_HLEN;$/;"	d
len	net/lwip/core/dns.c	/^  u16_t len;$/;"	m	struct:dns_answer	file:
len	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t len;                \/* payload length *\/$/;"	m	struct:ip_hdr
len	net/lwip/include/lwip/api_msg.h	/^      int len;$/;"	m	struct:api_msg_msg::__anon30::__anon34
len	net/lwip/include/lwip/api_msg.h	/^      u16_t len;$/;"	m	struct:api_msg_msg::__anon30::__anon35
len	net/lwip/include/lwip/pbuf.h	/^  u16_t len;  $/;"	m	struct:pbuf
len	net/lwip/include/lwip/snmp.h	/^  u8_t len;$/;"	m	struct:snmp_obj_id
len	net/lwip/include/lwip/tcp.h	/^  u16_t len;               \/* the TCP length of this segment *\/$/;"	m	struct:tcp_seg
len	obj/net/ns.asm	/^      len = 0;$/;"	d
len	obj/net/ns.asm	/^      len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^      len = p_from->len - offset_from;$/;"	d
len	obj/net/ns.asm	/^      len = p_to->len - offset_to;$/;"	d
len	obj/net/ns.asm	/^    len = 0;$/;"	d
len	obj/net/ns.asm	/^    len = 0xffff;$/;"	d
len	obj/net/ns.asm	/^    len = conn->write_msg->msg.w.len - conn->write_offset;$/;"	d
len	obj/net/ns.asm	/^    len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);$/;"	d
len	obj/net/ns.asm	/^  len = 0;$/;"	d
len	obj/net/ns.asm	/^  len = ntohs(IPH_LEN(fraghdr)) - IPH_HL(fraghdr) * 4;$/;"	d
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_igmp
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_proto
lenerr	obj/net/ns.asm	/^lenerr:$/;"	l
length	kern/e1000.h	/^	uint16_t length;$/;"	m	struct:rx_desc
length	kern/e1000.h	/^	uint16_t length;$/;"	m	struct:tx_desc
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
level	net/lwip/api/sockets.c	/^  int level;$/;"	m	struct:lwip_setgetsockopt_data	file:
level	obj/net/ns.asm	/^  level = data->level;$/;"	d
level_length	net/lwip/include/lwip/snmp_structs.h	/^  u16_t (*level_length)(void* addr_inf, u8_t level);$/;"	m	struct:mib_external_node
lexceptset	obj/net/ns.asm	/^      lexceptset = *exceptset;$/;"	d
lexceptset	obj/net/ns.asm	/^    lexceptset = *exceptset;$/;"	d
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/ns.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testinput.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testoutput.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echosrv.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echotest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/exechello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/httpd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testtime.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfree	net/lwip/core/mem.c	/^static struct mem *lfree;$/;"	v	typeref:struct:mem	file:
lfree	obj/net/ns.asm	/^            lfree = (struct mem *)&ram[lfree->next];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = (struct mem *)&ram[ptr2];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem2;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = pmem;$/;"	d
lfree	obj/net/ns.asm	/^    lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^  lfree = (struct mem *)ram;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	net/lwip/core/memp.c	/^  int line;$/;"	m	struct:memp	file:
line	user/num.c	/^int line = 0;$/;"	v
linger	net/lwip/include/lwip/sockets.h	/^struct linger {$/;"	s
link	net/lwip/include/lwip/stats.h	/^  struct stats_proto link;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
linkStatusCB	net/lwip/netif/ppp/ppp.c	/^  void (*linkStatusCB)(void *ctx, int errCode, void *arg);$/;"	m	struct:PPPControl_s	file:
linkStatusCtx	net/lwip/netif/ppp/ppp.c	/^  void *linkStatusCtx;$/;"	m	struct:PPPControl_s	file:
link_callback	net/lwip/include/lwip/netif.h	/^  void (* link_callback)(struct netif *netif);$/;"	m	struct:netif
link_down	net/lwip/netif/ppp/auth.c	/^link_down(int unit)$/;"	f
link_established	net/lwip/netif/ppp/auth.c	/^link_established(int unit)$/;"	f
link_required	net/lwip/netif/ppp/auth.c	/^link_required(int unit)$/;"	f
link_speed	net/lwip/include/lwip/netif.h	/^  u32_t link_speed;$/;"	m	struct:netif
link_terminated	net/lwip/netif/ppp/auth.c	/^link_terminated(int unit)$/;"	f
link_type	net/lwip/include/lwip/netif.h	/^  u8_t link_type;$/;"	m	struct:netif
linkoutput	net/lwip/include/lwip/netif.h	/^  err_t (* linkoutput)(struct netif *netif, struct pbuf *p);$/;"	m	struct:netif
listen	inc/ns.h	/^	} listen;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_listen
listen	lib/sockets.c	/^listen(int s, int backlog)$/;"	f
listen	net/lwip/include/lwip/sockets.h	335;"	d
listen_pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb_listen *listen_pcbs; $/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb_listen
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  struct ip_addr llipaddr;  \/* the currently selected, probed, announced or used LL IP-Address *\/$/;"	m	struct:autoip	typeref:struct:autoip::ip_addr
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
local	net/lwip/include/lwip/api_msg.h	/^      u8_t local;$/;"	m	struct:api_msg_msg::__anon30::__anon33
local_match	obj/net/ns.asm	/^        local_match = 1;$/;"	d
local_match	obj/net/ns.asm	/^    local_match = 0;$/;"	d
local_mem_free_count	obj/net/ns.asm	/^        local_mem_free_count = mem_free_count;$/;"	d
local_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
local_port	obj/net/ns.asm	/^    local_port = pcb->local_port;$/;"	d
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
lock_tcpip_core	net/lwip/api/tcpip.c	/^sys_sem_t lock_tcpip_core;$/;"	v
lock_tcpip_core	obj/net/ns.asm	/^  lock_tcpip_core = sys_sem_new(1);$/;"	d
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
logged_in	net/lwip/netif/ppp/auth.c	/^static int logged_in;$/;"	v	file:
logout	net/lwip/netif/ppp/auth.c	/^logout(void)$/;"	f	file:
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/net/ns.asm	/^long$/;"	l
long	obj/net/testinput.asm	/^long$/;"	l
long	obj/net/testoutput.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/echosrv.asm	/^long$/;"	l
long	obj/user/echotest.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/exechello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/httpd.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spawnhello.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
long	obj/user/testtime.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
loop_cnt_current	net/lwip/include/lwip/netif.h	/^  u16_t loop_cnt_current;$/;"	m	struct:netif
loop_first	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_first;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loop_last	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_last;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loopif_init	net/lwip/netif/loopif.c	/^loopif_init(struct netif *netif)$/;"	f
loopif_poll	net/lwip/include/netif/loopif.h	44;"	d
low_level_init	net/lwip/jos/jif/jif.c	/^low_level_init(struct netif *netif)$/;"	f	file:
low_level_input	net/lwip/jos/jif/jif.c	/^low_level_input(void *va)$/;"	f	file:
low_level_output	net/lwip/jos/jif/jif.c	/^low_level_output(struct netif *netif, struct pbuf *p)$/;"	f	file:
lowerdown	net/lwip/netif/ppp/ppp.h	/^    void (*lowerdown) (int unit);$/;"	m	struct:protent
lowerup	net/lwip/netif/ppp/ppp.h	/^    void (*lowerup) (int unit);$/;"	m	struct:protent
lpcb	obj/net/ns.asm	/^  lpcb = memp_malloc(MEMP_TCP_PCB_LISTEN);$/;"	d
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
lqr_period	net/lwip/netif/ppp/lcp.h	/^    u32_t lqr_period;            \/* Reporting period for LQR 1\/100ths second *\/$/;"	m	struct:lcp_options
lreadset	obj/net/ns.asm	/^      lreadset = *readset;$/;"	d
lreadset	obj/net/ns.asm	/^    lreadset = *readset;$/;"	d
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
lwip_accept	net/lwip/api/sockets.c	/^lwip_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
lwip_bind	net/lwip/api/sockets.c	/^lwip_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_close	net/lwip/api/sockets.c	/^lwip_close(int s)$/;"	f
lwip_connect	net/lwip/api/sockets.c	/^lwip_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_core_lock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_lock(void)$/;"	f
lwip_core_unlock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_unlock(void)$/;"	f
lwip_event	net/lwip/include/lwip/tcp.h	/^enum lwip_event {$/;"	g
lwip_freeaddrinfo	net/lwip/api/netdb.c	/^lwip_freeaddrinfo(struct addrinfo *ai)$/;"	f
lwip_getaddrinfo	net/lwip/api/netdb.c	/^lwip_getaddrinfo(const char *nodename, const char *servname,$/;"	f
lwip_getaddrname	net/lwip/api/sockets.c	/^lwip_getaddrname(int s, struct sockaddr *name, socklen_t *namelen, u8_t local)$/;"	f	file:
lwip_gethostbyname	net/lwip/api/netdb.c	/^lwip_gethostbyname(const char *name)$/;"	f
lwip_gethostbyname_r	net/lwip/api/netdb.c	/^lwip_gethostbyname_r(const char *name, struct hostent *ret, char *buf,$/;"	f
lwip_getpeername	net/lwip/api/sockets.c	/^lwip_getpeername(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockname	net/lwip/api/sockets.c	/^lwip_getsockname(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockopt	net/lwip/api/sockets.c	/^lwip_getsockopt(int s, int level, int optname, void *optval, socklen_t *optlen)$/;"	f
lwip_getsockopt_internal	net/lwip/api/sockets.c	/^lwip_getsockopt_internal(void *arg)$/;"	f	file:
lwip_init	net/lwip/core/init.c	/^lwip_init(void)$/;"	f
lwip_init	net/serv.c	/^lwip_init(struct netif *nif, void *if_state,$/;"	f	file:
lwip_ioctl	net/lwip/api/sockets.c	/^lwip_ioctl(int s, long cmd, void *argp)$/;"	f
lwip_listen	net/lwip/api/sockets.c	/^lwip_listen(int s, int backlog)$/;"	f
lwip_read	net/lwip/api/sockets.c	/^lwip_read(int s, void *mem, int len)$/;"	f
lwip_recv	net/lwip/api/sockets.c	/^lwip_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
lwip_recvfrom	net/lwip/api/sockets.c	/^lwip_recvfrom(int s, void *mem, int len, unsigned int flags,$/;"	f
lwip_sanity_check	net/lwip/core/init.c	/^lwip_sanity_check(void)$/;"	f	file:
lwip_sanity_check	net/lwip/core/init.c	209;"	d	file:
lwip_select	net/lwip/api/sockets.c	/^lwip_select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset,$/;"	f
lwip_select_cb	net/lwip/api/sockets.c	/^struct lwip_select_cb {$/;"	s	file:
lwip_selscan	net/lwip/api/sockets.c	/^lwip_selscan(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset)$/;"	f	file:
lwip_send	net/lwip/api/sockets.c	/^lwip_send(int s, const void *data, int size, unsigned int flags)$/;"	f
lwip_sendto	net/lwip/api/sockets.c	/^lwip_sendto(int s, const void *data, int size, unsigned int flags,$/;"	f
lwip_setgetsockopt_data	net/lwip/api/sockets.c	/^struct lwip_setgetsockopt_data {$/;"	s	file:
lwip_setsockopt	net/lwip/api/sockets.c	/^lwip_setsockopt(int s, int level, int optname, const void *optval, socklen_t optlen)$/;"	f
lwip_setsockopt_internal	net/lwip/api/sockets.c	/^lwip_setsockopt_internal(void *arg)$/;"	f	file:
lwip_shutdown	net/lwip/api/sockets.c	/^lwip_shutdown(int s, int how)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^lwip_socket(int domain, int type, int protocol)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^struct lwip_socket {$/;"	s	file:
lwip_socket_init	net/lwip/api/sockets.c	/^lwip_socket_init(void)$/;"	f
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, int len)$/;"	f	file:
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, u16_t len)$/;"	f	file:
lwip_stats	net/lwip/core/stats.c	/^struct stats_ lwip_stats;$/;"	v	typeref:struct:stats_
lwip_strerr	net/lwip/api/err.c	/^lwip_strerr(err_t err)$/;"	f
lwip_strerr	net/lwip/include/lwip/err.h	80;"	d
lwip_thread	net/lwip/jos/arch/sys_arch.c	/^struct lwip_thread {$/;"	s	file:
lwip_thread_entry	net/lwip/jos/arch/sys_arch.c	/^lwip_thread_entry(uint32_t arg)$/;"	f	file:
lwip_write	net/lwip/api/sockets.c	/^lwip_write(int s, const void *data, int size)$/;"	f
lwriteset	obj/net/ns.asm	/^      lwriteset = *writeset;$/;"	d
lwriteset	obj/net/ns.asm	/^    lwriteset = *writeset;$/;"	d
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/ns.asm	/^		m = n - tot;$/;"	d
m	obj/net/ns.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^        m = -m;$/;"	d
m	obj/net/ns.asm	/^      m = (s16_t)(tcp_ticks - pcb->rttest);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sa >> 3);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sv >> 2);$/;"	d
m	obj/net/testinput.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/testinput.asm	/^		m = n - tot;$/;"	d
m	obj/net/testinput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/testoutput.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/net/testoutput.asm	/^		m = n - tot;$/;"	d
m	obj/net/testoutput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/badsegment.asm	/^		m = n - tot;$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/breakpoint.asm	/^		m = n - tot;$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/divzero.asm	/^		m = n - tot;$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/dumbfork.asm	/^		m = n - tot;$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echosrv.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echosrv.asm	/^		m = n - tot;$/;"	d
m	obj/user/echosrv.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echotest.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echotest.asm	/^		m = n - tot;$/;"	d
m	obj/user/echotest.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/evilhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/exechello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/exechello.asm	/^		m = n - tot;$/;"	d
m	obj/user/exechello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fairness.asm	/^		m = n - tot;$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultalloc.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultdie.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultnostack.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultread.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultregs.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwrite.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^		m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/hello.asm	/^		m = n - tot;$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/httpd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/httpd.asm	/^		m = n - tot;$/;"	d
m	obj/user/httpd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^		m = n - tot;$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpongs.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^		m = n - tot;$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sendpage.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sendpage.asm	/^		m = n - tot;$/;"	d
m	obj/user/sendpage.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/softint.asm	/^		m = n - tot;$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spin.asm	/^		m = n - tot;$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/stresssched.asm	/^		m = n - tot;$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testbss.asm	/^		m = n - tot;$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testtime.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testtime.asm	/^		m = n - tot;$/;"	d
m	obj/user/testtime.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/yield.asm	/^		m = n - tot;$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
magic	net/lwip/netif/ppp/magic.c	/^u32_t magic()$/;"	f
magicInit	net/lwip/netif/ppp/magic.c	/^void magicInit()$/;"	f
magicnumber	net/lwip/netif/ppp/lcp.h	/^    u32_t magicnumber;$/;"	m	struct:lcp_options
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
malloc	lib/malloc.c	/^malloc(size_t n)$/;"	f
map_segment	lib/exec.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
map_segment	lib/extraspawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
mapped_regs	kern/e1000.c	/^volatile uint32_t *mapped_regs; $/;"	v
mapped_regs	obj/kern/kernel.asm	/^	mapped_regs = (uint32_t *)mmio_map_region((physaddr_t)func->reg_base[0], (size_t)func->reg_size[0]);$/;"	d
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
match_packet_seq	grade-lab6	/^def match_packet_seq(got, expect):$/;"	f
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f
max	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER max;$/;"	m	struct:stats_syselem
max	net/lwip/include/lwip/stats.h	/^  mem_size_t max;$/;"	m	struct:stats_mem
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
maxSlotIndex	net/lwip/netif/ppp/vj.h	/^  u_char maxSlotIndex;$/;"	m	struct:vjcompress
max_tid	net/lwip/jos/arch/thread.c	/^static thread_id_t max_tid;$/;"	v	file:
max_tid	obj/net/ns.asm	/^    max_tid = 0;$/;"	d
max_transmits	net/lwip/netif/ppp/chap.h	/^  int max_transmits;                      \/* Maximum # of challenge transmissions *\/$/;"	m	struct:chap_state
maxconfreqtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxconfreqtransmits;         \/* Maximum Configure-Request transmissions *\/$/;"	m	struct:fsm
maxconnect	net/lwip/netif/ppp/ppp.h	/^  int  maxconnect;                    \/* Maximum connect time (seconds) *\/$/;"	m	struct:ppp_settings
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_array_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_external_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_list_rootnode
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_ram_array_node
maxnakloops	net/lwip/netif/ppp/fsm.h	/^  int maxnakloops;                 \/* Maximum number of nak loops tolerated *\/$/;"	m	struct:fsm
maxslotindex	net/lwip/netif/ppp/ipcp.h	/^  u_char  maxslotindex;      \/* VJ slots - 1. *\/$/;"	m	struct:ipcp_options
maxtermtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxtermtransmits;            \/* Maximum Terminate-Request transmissions *\/$/;"	m	struct:fsm
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mbegin	lib/malloc.c	/^static uint8_t *mbegin = (uint8_t*) 0x08000000;$/;"	v	file:
mbox	net/lwip/api/tcpip.c	/^static sys_mbox_t mbox = SYS_MBOX_NULL;$/;"	v	file:
mbox	net/lwip/include/lwip/stats.h	/^  struct stats_syselem mbox;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
mbox	obj/net/ns.asm	/^  mbox = sys_mbox_new(TCPIP_MBOX_SIZE);$/;"	d
mboxes	net/lwip/jos/arch/sys_arch.c	/^static struct sys_mbox_entry mboxes[NMBOX];$/;"	v	typeref:struct:sys_mbox_entry	file:
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem	net/lwip/core/mem.c	/^struct mem {$/;"	s	file:
mem	net/lwip/include/lwip/stats.h	/^  struct stats_mem mem;$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
mem	obj/net/ns.asm	/^      mem = (struct mem *)&ram[ptr];$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)((u8_t *)rmem - SIZEOF_STRUCT_MEM);$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)ram;$/;"	d
mem2	obj/net/ns.asm	/^          mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^    mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^  mem2 = (struct mem *)&ram[mem->next];$/;"	d
mem_calloc	net/lwip/core/mem.c	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	f
mem_calloc	net/lwip/include/lwip/mem.h	59;"	d
mem_free	net/lwip/core/mem.c	/^mem_free(void *rmem)$/;"	f
mem_free	net/lwip/include/lwip/mem.h	53;"	d
mem_free_callback	net/lwip/api/tcpip.c	/^mem_free_callback(void *m)$/;"	f
mem_free_count	net/lwip/core/mem.c	/^static volatile u8_t mem_free_count;$/;"	v	file:
mem_free_count	obj/net/ns.asm	/^      mem_free_count = 0;$/;"	d
mem_free_count	obj/net/ns.asm	/^  mem_free_count = 1;$/;"	d
mem_helper	net/lwip/core/mem.c	/^struct mem_helper$/;"	s	file:
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init	kern/pmap1.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/core/mem.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/include/lwip/mem.h	48;"	d
mem_init	net/lwip/include/lwip/mem.h	77;"	d
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
mem_init_mp	kern/pmap1.c	/^mem_init_mp(void)$/;"	f	file:
mem_malloc	net/lwip/core/mem.c	/^mem_malloc(mem_size_t size)$/;"	f
mem_malloc	net/lwip/include/lwip/mem.h	56;"	d
mem_ptr_t	net/lwip/jos/arch/cc.h	/^typedef uintptr_t mem_ptr_t;$/;"	t
mem_realloc	net/lwip/core/mem.c	/^mem_realloc(void *rmem, mem_size_t newsize)$/;"	f
mem_realloc	net/lwip/include/lwip/mem.h	62;"	d
mem_realloc	net/lwip/include/lwip/mem.h	80;"	d
mem_sem	net/lwip/core/mem.c	/^static sys_sem_t mem_sem;$/;"	v	file:
mem_sem	obj/net/ns.asm	/^  mem_sem = sys_sem_new(1);$/;"	d
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef size_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u16_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u32_t mem_size_t;$/;"	t
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER memerr;           \/* Out of memory error. *\/$/;"	m	struct:stats_proto
memerr	obj/net/ns.asm	/^memerr:$/;"	l
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memp	net/lwip/core/memp.c	/^struct memp {$/;"	s	file:
memp	net/lwip/include/lwip/stats.h	/^  struct stats_mem memp[MEMP_MAX];$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
memp	obj/net/ns.asm	/^      memp = (struct memp *)((u8_t *)memp + MEMP_SIZE + memp_sizes[i]);$/;"	d
memp	obj/net/ns.asm	/^  memp = LWIP_MEM_ALIGN(memp_memory);$/;"	d
memp	obj/net/ns.asm	/^  memp = memp_tab[type];$/;"	d
memp_desc	net/lwip/core/memp.c	/^static const char *memp_desc[MEMP_MAX] = {$/;"	v	file:
memp_free	net/lwip/core/memp.c	/^memp_free(memp_t type, void *mem)$/;"	f
memp_init	net/lwip/core/memp.c	/^memp_init(void)$/;"	f
memp_malloc	net/lwip/core/memp.c	/^memp_malloc(memp_t type)$/;"	f
memp_malloc	net/lwip/include/lwip/memp.h	84;"	d
memp_memory	net/lwip/core/memp.c	/^static u8_t memp_memory[MEM_ALIGNMENT - 1 $/;"	v	file:
memp_num	net/lwip/core/memp.c	/^static const u16_t memp_num[MEMP_MAX] = {$/;"	v	file:
memp_overflow_check_all	net/lwip/core/memp.c	/^memp_overflow_check_all(void)$/;"	f	file:
memp_overflow_check_element	net/lwip/core/memp.c	/^memp_overflow_check_element(struct memp *p, u16_t memp_size)$/;"	f	file:
memp_overflow_init	net/lwip/core/memp.c	/^memp_overflow_init(void)$/;"	f	file:
memp_pool_helper_t	net/lwip/include/lwip/memp.h	/^} memp_pool_helper_t;$/;"	t	typeref:enum:__anon21
memp_sanity	net/lwip/core/memp.c	/^memp_sanity(void)$/;"	f	file:
memp_sizes	net/lwip/core/memp.c	/^const u16_t memp_sizes[MEMP_MAX] = {$/;"	v	file:
memp_t	net/lwip/include/lwip/memp.h	/^} memp_t;$/;"	t	typeref:enum:__anon20
memp_tab	net/lwip/core/memp.c	/^static struct memp *memp_tab[MEMP_MAX];$/;"	v	typeref:struct:memp	file:
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
mend	lib/malloc.c	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	v	file:
mgmt	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mgmt = {$/;"	v	typeref:struct:mib_array_node
mgmt_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mgmt_ids[1] = { 1 };$/;"	v
mgmt_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mgmt_nodes[1] = { (struct mib_node* const)&mib2 };$/;"	v
mib2	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2 = {$/;"	v	typeref:struct:mib_array_node
mib2_at_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* mib2_at_node = (struct mib_node* const)&attable;$/;"	v	typeref:struct:mib_node
mib2_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mib2_ids[MIB2_GROUPS] =$/;"	v
mib2_ip	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2_ip = {$/;"	v	typeref:struct:mib_array_node
mib2_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mib2_nodes[MIB2_GROUPS] = {$/;"	v
mib_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_array_node$/;"	s
mib_external_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_external_node$/;"	s
mib_list_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_node$/;"	s
mib_list_rootnode	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_rootnode$/;"	s
mib_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_node$/;"	s
mib_ram_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_ram_array_node$/;"	s
mib_scalar_node	net/lwip/include/lwip/snmp_structs.h	/^typedef struct mib_node mib_scalar_node;$/;"	t	typeref:struct:mib_node
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mime_type	user/httpd.c	/^mime_type(const char *file)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mk_test_httpd	grade-lab6	/^def mk_test_httpd(url, expect_code, expect_data):$/;"	f
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mode	net/lwip/netif/ppp/ppp.c	/^  enum NPmode mode;$/;"	m	struct:npioctl	typeref:enum:npioctl::NPmode	file:
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mp_main	kern/init1.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mprio	obj/net/ns.asm	/^      mprio = pcb->prio;$/;"	d
mprio	obj/net/ns.asm	/^  mprio = TCP_PRIO_MAX;$/;"	d
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
mptr	lib/malloc.c	/^static uint8_t *mptr;$/;"	v	file:
mptr	obj/net/ns.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/net/ns.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/net/ns.asm	/^		mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = mbegin;$/;"	d
mrru	net/lwip/netif/ppp/lcp.h	/^    u_short mrru;                \/* Value of MRRU, and multilink enable *\/$/;"	m	struct:lcp_options
mru	net/lwip/netif/ppp/lcp.h	/^    u_short mru;                 \/* Value of MRU *\/$/;"	m	struct:lcp_options
msec	net/serv.c	/^	uint32_t msec;$/;"	m	struct:timer_thread	file:
msecs	net/lwip/include/lwip/tcpip.h	/^      u32_t msecs;$/;"	m	struct:tcpip_msg::__anon26::__anon29
msecs	obj/net/ns.asm	/^  msecs = 10*1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = 500;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 2000 : 20 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? (dhcp->tries + 1) * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? dhcp->tries * 1000 : 4 * 1000;$/;"	d
msectimeout	obj/net/ns.asm	/^        msectimeout = 1;$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout =  ((timeout->tv_sec * 1000) + ((timeout->tv_usec + 500)\/1000));$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout = 0;$/;"	d
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	net/lwip/include/lwip/api_msg.h	/^  struct api_msg_msg msg;$/;"	m	struct:api_msg	typeref:struct:api_msg::api_msg_msg
msg	net/lwip/include/lwip/api_msg.h	/^  } msg;$/;"	m	struct:api_msg_msg	typeref:union:api_msg_msg::__anon30
msg	net/lwip/include/lwip/netifapi.h	/^  struct netifapi_msg_msg msg;$/;"	m	struct:netifapi_msg	typeref:struct:netifapi_msg::netifapi_msg_msg
msg	net/lwip/include/lwip/netifapi.h	/^  } msg;$/;"	m	struct:netifapi_msg_msg	typeref:union:netifapi_msg_msg::__anon22
msg	net/lwip/include/lwip/tcpip.h	/^  } msg;$/;"	m	struct:tcpip_msg	typeref:union:tcpip_msg::__anon26
msg	net/lwip/jos/arch/sys_arch.c	/^    void *msg[MBOXSLOTS];$/;"	m	struct:sys_mbox_entry	file:
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_API);$/;"	d
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_INPKT);$/;"	d
msg	user/echotest.c	/^const char *msg = "Hello world!\\n";$/;"	v
msg	user/httpd.c	/^	char *msg;$/;"	m	struct:error_messages	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon45	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon45	file:
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_in;$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_input_list	net/lwip/core/snmp/msg_in.c	/^struct snmp_msg_pstat msg_input_list[SNMP_CONCURRENT_REQUESTS];$/;"	v	typeref:struct:snmp_msg_pstat
msg_out	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_out; \/* outgoing msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_type	obj/net/ns.asm	/^  msg_type = dhcp_get_option_byte(options_ptr + 2);$/;"	d
mss	net/lwip/include/lwip/tcp.h	/^  u16_t mss;   \/* maximum segment size *\/$/;"	m	struct:tcp_pcb
mss	obj/net/ns.asm	/^        mss = (opts[c + 2] << 8) | opts[c + 3];$/;"	d
mss_s	obj/net/ns.asm	/^    mss_s = outif->mtu - IP_HLEN - TCP_HLEN;$/;"	d
mta_end	kern/e1000.c	/^uint32_t *mta_start, *mta_end;$/;"	v
mta_end	obj/kern/kernel.asm	/^	mta_end = (uint32_t *)(temp + 0x053FC);$/;"	d
mta_start	kern/e1000.c	/^uint32_t *mta_start, *mta_end;$/;"	v
mta_start	obj/kern/kernel.asm	/^	mta_start = (uint32_t *)(temp + 0x5200);$/;"	d
mtu	net/lwip/include/lwip/netif.h	/^  u16_t mtu;$/;"	m	struct:netif
mtu	net/lwip/netif/ppp/ppp.c	/^  int  mtu;                     \/* Peer's mru *\/$/;"	m	struct:PPPControl_s	file:
multiaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *multiaddr;$/;"	m	struct:api_msg_msg::__anon30::__anon36	typeref:struct:api_msg_msg::__anon30::__anon36::ip_addr
multicast_ip	net/lwip/include/lwip/udp.h	/^  struct ip_addr multicast_ip;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::ip_addr
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	net/lwip/include/lwip/api_msg.h	/^    } n;$/;"	m	union:api_msg_msg::__anon30	typeref:struct:api_msg_msg::__anon30::__anon31
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/fs/fs.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n	obj/net/ns.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/ns.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/net/ns.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/net/ns.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testinput.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/testinput.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/net/testinput.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testoutput.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/net/testoutput.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/badsegment.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/badsegment.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/breakpoint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/breakpoint.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/buggyhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/buggyhello2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello2.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/cat.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/divzero.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/divzero.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/dumbfork.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/dumbfork.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echo.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/echosrv.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echosrv.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/echosrv.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/echotest.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echotest.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/echotest.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/evilhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/evilhello.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/exechello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/exechello.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/fairness.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/fairness.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultalloc.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultalloc.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultallocbad.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultallocbad.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultbadhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultbadhandler.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultdie.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultdie.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultevilhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultevilhandler.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultnostack.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultnostack.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultread.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultread.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultreadkernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultreadkernel.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultregs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultregs.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultwrite.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwrite.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/faultwritekernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwritekernel.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/forktree.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/forktree.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/hello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/hello.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/httpd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/httpd.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/user/httpd.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/httpd.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/icode.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/idle.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/idle.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/init.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/ls.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lsfd.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/num.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/pingpong.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpong.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/pingpongs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpongs.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/primes.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primes.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primespipe.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/sendpage.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sendpage.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sh.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/softint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/softint.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnhello.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/spin.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spin.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/stresssched.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/stresssched.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testbss.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testbss.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfdsharing.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfile.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testkbd.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpipe.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace2.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpteshare.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testshell.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/testtime.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testtime.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n	obj/user/yield.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/yield.asm	/^                n = sizeof(fsipcbuf.write.req_buf);$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
nPut	net/lwip/netif/ppp/ppp.c	/^nPut(PPPControl *pc, struct pbuf *nb)$/;"	f	file:
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
nak_buffer	net/lwip/netif/ppp/lcp.c	/^static u_char nak_buffer[PPP_MRU]; \/* where we construct a nak packet *\/$/;"	v	file:
nakci	net/lwip/netif/ppp/fsm.h	/^  int  (*nakci)(fsm*, u_char*, int);                \/* NAK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
nakloops	net/lwip/netif/ppp/fsm.h	/^  int nakloops;                    \/* Number of nak loops since last ack *\/$/;"	m	struct:fsm
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
name	net/lwip/core/dns.c	/^  char name[DNS_MAX_NAME_LENGTH];$/;"	m	struct:dns_table_entry	file:
name	net/lwip/include/lwip/api_msg.h	/^  const char *name;$/;"	m	struct:dns_api_msg
name	net/lwip/include/lwip/netif.h	/^  char name[2];$/;"	m	struct:netif
name	net/lwip/netif/ppp/ppp.h	/^    char *name;         \/* Text name of protocol *\/$/;"	m	struct:protent
name	net/serv.c	/^	const char *name;$/;"	m	struct:timer_thread	file:
name_size	net/lwip/jos/arch/threadq.h	/^enum { name_size = 32 };$/;"	e	enum:__anon43
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
neg_accompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_accompression : 1; \/* HDLC Address\/Control Field Compression? *\/$/;"	m	struct:lcp_options
neg_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_addr      : 1; \/* Negotiate IP Address? *\/$/;"	m	struct:ipcp_options
neg_asyncmap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_asyncmap      : 1; \/* Negotiate the async map? *\/$/;"	m	struct:lcp_options
neg_cbcp	net/lwip/netif/ppp/lcp.h	/^    u_int neg_cbcp          : 1; \/* Negotiate use of CBCP *\/$/;"	m	struct:lcp_options
neg_chap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_chap          : 1; \/* Ask for CHAP authentication? *\/$/;"	m	struct:lcp_options
neg_endpoint	net/lwip/netif/ppp/lcp.h	/^    u_int neg_endpoint      : 1; \/* Negotiate endpoint discriminator *\/$/;"	m	struct:lcp_options
neg_lqr	net/lwip/netif/ppp/lcp.h	/^    u_int neg_lqr           : 1; \/* Negotiate use of Link Quality Reports *\/$/;"	m	struct:lcp_options
neg_magicnumber	net/lwip/netif/ppp/lcp.h	/^    u_int neg_magicnumber   : 1; \/* Ask for magic number? *\/$/;"	m	struct:lcp_options
neg_mrru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mrru          : 1; \/* Negotiate multilink MRRU *\/$/;"	m	struct:lcp_options
neg_mru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mru           : 1; \/* Negotiate the MRU? *\/$/;"	m	struct:lcp_options
neg_pcompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_pcompression  : 1; \/* HDLC Protocol Field Compression? *\/$/;"	m	struct:lcp_options
neg_ssnhf	net/lwip/netif/ppp/lcp.h	/^    u_int neg_ssnhf         : 1; \/* Negotiate short sequence numbers *\/$/;"	m	struct:lcp_options
neg_upap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_upap          : 1; \/* Ask for UPAP authentication? *\/$/;"	m	struct:lcp_options
neg_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_vj        : 1; \/* Van Jacobson Compression? *\/$/;"	m	struct:ipcp_options
net_timer	net/serv.c	/^net_timer(uint32_t arg)$/;"	f	file:
netbuf	net/lwip/include/lwip/netbuf.h	/^struct netbuf {$/;"	s
netbuf	obj/net/ns.asm	/^netbuf *netbuf_new(void)$/;"	l
netbuf_alloc	net/lwip/api/netbuf.c	/^netbuf_alloc(struct netbuf *buf, u16_t size)$/;"	f
netbuf_chain	net/lwip/api/netbuf.c	/^netbuf_chain(struct netbuf *head, struct netbuf *tail)$/;"	f
netbuf_copy	net/lwip/include/lwip/netbuf.h	67;"	d
netbuf_copy_partial	net/lwip/include/lwip/netbuf.h	65;"	d
netbuf_data	net/lwip/api/netbuf.c	/^netbuf_data(struct netbuf *buf, void **dataptr, u16_t *len)$/;"	f
netbuf_delete	net/lwip/api/netbuf.c	/^netbuf_delete(struct netbuf *buf)$/;"	f
netbuf_first	net/lwip/api/netbuf.c	/^netbuf_first(struct netbuf *buf)$/;"	f
netbuf_free	net/lwip/api/netbuf.c	/^netbuf_free(struct netbuf *buf)$/;"	f
netbuf_fromaddr	net/lwip/include/lwip/netbuf.h	69;"	d
netbuf_fromport	net/lwip/include/lwip/netbuf.h	70;"	d
netbuf_len	net/lwip/include/lwip/netbuf.h	68;"	d
netbuf_new	net/lwip/api/netbuf.c	/^netbuf *netbuf_new(void)$/;"	f
netbuf_next	net/lwip/api/netbuf.c	/^netbuf_next(struct netbuf *buf)$/;"	f
netbuf_ref	net/lwip/api/netbuf.c	/^netbuf_ref(struct netbuf *buf, const void *dataptr, u16_t size)$/;"	f
netconn	net/lwip/include/lwip/api.h	/^struct netconn {$/;"	s
netconn_accept	net/lwip/api/api_lib.c	/^netconn_accept(struct netconn *conn)$/;"	f
netconn_addr	net/lwip/include/lwip/api.h	176;"	d
netconn_alloc	net/lwip/api/api_msg.c	/^netconn_alloc(enum netconn_type t, netconn_callback callback)$/;"	f
netconn_bind	net/lwip/api/api_lib.c	/^netconn_bind(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_callback	net/lwip/include/lwip/api.h	/^typedef void (* netconn_callback)(struct netconn *, enum netconn_evt, u16_t len);$/;"	t
netconn_close	net/lwip/api/api_lib.c	/^netconn_close(struct netconn *conn)$/;"	f
netconn_connect	net/lwip/api/api_lib.c	/^netconn_connect(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_delete	net/lwip/api/api_lib.c	/^netconn_delete(struct netconn *conn)$/;"	f
netconn_disconnect	net/lwip/api/api_lib.c	/^netconn_disconnect(struct netconn *conn)$/;"	f
netconn_err	net/lwip/include/lwip/api.h	208;"	d
netconn_evt	net/lwip/include/lwip/api.h	/^enum netconn_evt {$/;"	g
netconn_free	net/lwip/api/api_msg.c	/^netconn_free(struct netconn *conn)$/;"	f
netconn_getaddr	net/lwip/api/api_lib.c	/^netconn_getaddr(struct netconn *conn, struct ip_addr *addr, u16_t *port, u8_t local)$/;"	f
netconn_gethostbyname	net/lwip/api/api_lib.c	/^netconn_gethostbyname(const char *name, struct ip_addr *addr)$/;"	f
netconn_igmp	net/lwip/include/lwip/api.h	/^enum netconn_igmp {$/;"	g
netconn_join_leave_group	net/lwip/api/api_lib.c	/^netconn_join_leave_group(struct netconn *conn,$/;"	f
netconn_listen	net/lwip/include/lwip/api.h	186;"	d
netconn_listen_with_backlog	net/lwip/api/api_lib.c	/^netconn_listen_with_backlog(struct netconn *conn, u8_t backlog)$/;"	f
netconn_new	net/lwip/include/lwip/api.h	163;"	d
netconn_new_with_callback	net/lwip/include/lwip/api.h	164;"	d
netconn_new_with_proto_and_callback	net/lwip/api/api_lib.c	/^netconn_new_with_proto_and_callback(enum netconn_type t, u8_t proto, netconn_callback callback)$/;"	f
netconn_peer	net/lwip/include/lwip/api.h	175;"	d
netconn_recv	net/lwip/api/api_lib.c	/^netconn_recv(struct netconn *conn)$/;"	f
netconn_recv_bufsize	net/lwip/include/lwip/api.h	209;"	d
netconn_send	net/lwip/api/api_lib.c	/^netconn_send(struct netconn *conn, struct netbuf *buf)$/;"	f
netconn_sendto	net/lwip/api/api_lib.c	/^netconn_sendto(struct netconn *conn, struct netbuf *buf, struct ip_addr *addr, u16_t port)$/;"	f
netconn_state	net/lwip/include/lwip/api.h	/^enum netconn_state {$/;"	g
netconn_type	net/lwip/api/api_lib.c	/^netconn_type(struct netconn *conn)$/;"	f
netconn_type	net/lwip/include/lwip/api.h	/^enum netconn_type {$/;"	g
netconn_write	net/lwip/api/api_lib.c	/^netconn_write(struct netconn *conn, const void *dataptr, int size, u8_t apiflags)$/;"	f
netif	net/lwip/include/lwip/netif.h	/^struct netif {$/;"	s
netif	net/lwip/include/lwip/netifapi.h	/^  struct netif *netif;$/;"	m	struct:netifapi_msg_msg	typeref:struct:netifapi_msg_msg::netif
netif	net/lwip/include/lwip/tcpip.h	/^      struct netif *netif;$/;"	m	struct:tcpip_msg::__anon26::__anon27	typeref:struct:tcpip_msg::__anon26::__anon27::netif
netif	net/lwip/netif/etharp.c	/^  struct netif *netif;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::netif	file:
netif	net/lwip/netif/ppp/ppp.c	/^  struct netif netif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
netif	obj/net/ns.asm	/^        netif = inp;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif_list;$/;"	d
netif	obj/net/ns.asm	/^    netif = inp;$/;"	d
netif	obj/net/ns.asm	/^    netif = ip_route(&(pcb->remote_ip));$/;"	d
netif	obj/net/ns.asm	/^    netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route((ip_addr_ismulticast(dst_ip))?(&(pcb->multicast_ip)):(dst_ip));$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route(dst_ip);$/;"	d
netif_add	net/lwip/core/netif.c	/^netif_add(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_default	net/lwip/core/netif.c	/^struct netif *netif_default;$/;"	v	typeref:struct:netif
netif_default	obj/net/ns.asm	/^  netif_default = netif;$/;"	d
netif_find	net/lwip/core/netif.c	/^netif_find(char *name)$/;"	f
netif_init	net/lwip/include/lwip/netif.h	205;"	d
netif_is_link_up	net/lwip/core/netif.c	/^u8_t netif_is_link_up(struct netif *netif)$/;"	f
netif_is_up	net/lwip/core/netif.c	/^u8_t netif_is_up(struct netif *netif)$/;"	f
netif_list	net/lwip/core/netif.c	/^struct netif *netif_list;$/;"	v	typeref:struct:netif
netif_list	obj/net/ns.asm	/^    netif_list = netif->next;$/;"	d
netif_list	obj/net/ns.asm	/^  netif_list = netif;$/;"	d
netif_loop_output	net/lwip/core/netif.c	/^netif_loop_output(struct netif *netif, struct pbuf *p,$/;"	f
netif_poll	net/lwip/core/netif.c	/^netif_poll(struct netif *netif)$/;"	f
netif_poll_all	net/lwip/core/netif.c	/^netif_poll_all(void)$/;"	f
netif_remove	net/lwip/core/netif.c	/^void netif_remove(struct netif * netif)$/;"	f
netif_set_addr	net/lwip/core/netif.c	/^netif_set_addr(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_set_default	net/lwip/core/netif.c	/^netif_set_default(struct netif *netif)$/;"	f
netif_set_down	net/lwip/core/netif.c	/^void netif_set_down(struct netif *netif)$/;"	f
netif_set_gw	net/lwip/core/netif.c	/^netif_set_gw(struct netif *netif, struct ip_addr *gw)$/;"	f
netif_set_ipaddr	net/lwip/core/netif.c	/^netif_set_ipaddr(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
netif_set_link_callback	net/lwip/core/netif.c	/^void netif_set_link_callback(struct netif *netif, void (* link_callback)(struct netif *netif ))$/;"	f
netif_set_link_down	net/lwip/core/netif.c	/^void netif_set_link_down(struct netif *netif )$/;"	f
netif_set_link_up	net/lwip/core/netif.c	/^void netif_set_link_up(struct netif *netif )$/;"	f
netif_set_netmask	net/lwip/core/netif.c	/^netif_set_netmask(struct netif *netif, struct ip_addr *netmask)$/;"	f
netif_set_status_callback	net/lwip/core/netif.c	/^void netif_set_status_callback(struct netif *netif, void (* status_callback)(struct netif *netif ))$/;"	f
netif_set_up	net/lwip/core/netif.c	/^void netif_set_up(struct netif *netif)$/;"	f
netifapi_autoip_start	net/lwip/include/lwip/netifapi.h	91;"	d
netifapi_autoip_stop	net/lwip/include/lwip/netifapi.h	92;"	d
netifapi_dhcp_start	net/lwip/include/lwip/netifapi.h	89;"	d
netifapi_dhcp_stop	net/lwip/include/lwip/netifapi.h	90;"	d
netifapi_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg {$/;"	s
netifapi_msg_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg_msg {$/;"	s
netifapi_netif_add	net/lwip/api/netifapi.c	/^netifapi_netif_add(struct netif *netif,$/;"	f
netifapi_netif_common	net/lwip/api/netifapi.c	/^netifapi_netif_common( struct netif *netif,$/;"	f
netifapi_netif_remove	net/lwip/include/lwip/netifapi.h	85;"	d
netifapi_netif_set_default	net/lwip/include/lwip/netifapi.h	88;"	d
netifapi_netif_set_down	net/lwip/include/lwip/netifapi.h	87;"	d
netifapi_netif_set_up	net/lwip/include/lwip/netifapi.h	86;"	d
netifapimsg	net/lwip/include/lwip/tcpip.h	/^    struct netifapi_msg *netifapimsg;$/;"	m	union:tcpip_msg::__anon26	typeref:struct:tcpip_msg::__anon26::netifapi_msg
netmask	net/lwip/include/lwip/netif.h	/^  struct ip_addr netmask;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
netmask	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *netmask;$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23	typeref:struct:netifapi_msg_msg::__anon22::__anon23::ip_addr
netmask	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
network_phase	net/lwip/netif/ppp/auth.c	/^network_phase(int unit)$/;"	f	file:
new_entry	obj/net/ns.asm	/^        new_entry = memp_malloc(MEMP_ARP_QUEUE);$/;"	d
new_envid	obj/kern/kernel.asm	/^			new_envid = (cur_envid + i) % NENV;$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
new_page	obj/kern/kernel.asm	/^   	 new_page = page_alloc(ALLOC_ZERO);$/;"	d
new_page_table	obj/kern/kernel.asm	/^	new_page_table = new_page_table + page_table_index;$/;"	d
new_tot_len	obj/net/ns.asm	/^        new_tot_len = (u16_t)(inseg.p->tot_len - off);$/;"	d
newconn	obj/net/ns.asm	/^    newconn = NULL;$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_accept(sock->conn);$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_alloc(conn->type, conn->callback);$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/ns.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testinput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testoutput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echosrv.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echotest.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/exechello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/httpd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sendpage.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testtime.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newsize	obj/net/ns.asm	/^    newsize = MIN_SIZE_ALIGNED;$/;"	d
newsize	obj/net/ns.asm	/^  newsize = LWIP_MEM_ALIGN_SIZE(newsize);$/;"	d
newsock	obj/net/ns.asm	/^  newsock = alloc_socket(newconn);$/;"	d
next	net/lwip/api/sockets.c	/^  struct lwip_select_cb *next;$/;"	m	struct:lwip_select_cb	typeref:struct:lwip_select_cb::lwip_select_cb	file:
next	net/lwip/core/mem.c	/^  mem_size_t next;$/;"	m	struct:mem	file:
next	net/lwip/core/memp.c	/^  struct memp *next;$/;"	m	struct:memp	typeref:struct:memp::memp	file:
next	net/lwip/include/ipv4/lwip/igmp.h	/^  struct igmp_group *next;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::igmp_group
next	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_reassdata *next;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_reassdata
next	net/lwip/include/lwip/netif.h	/^  struct netif *next;$/;"	m	struct:netif	typeref:struct:netif::netif
next	net/lwip/include/lwip/pbuf.h	/^  struct pbuf *next;$/;"	m	struct:pbuf	typeref:struct:pbuf::pbuf
next	net/lwip/include/lwip/raw.h	/^  struct raw_pcb *next;$/;"	m	struct:raw_pcb	typeref:struct:raw_pcb::raw_pcb
next	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *next;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
next	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *next;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeo	typeref:struct:sys_timeo::sys_timeo
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeouts	typeref:struct:sys_timeouts::sys_timeo
next	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *next;    \/* used when putting segements on a queue *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_seg
next	net/lwip/include/lwip/udp.h	/^  struct udp_pcb *next;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::udp_pcb
next	net/lwip/include/netif/etharp.h	/^  struct etharp_q_entry *next;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::etharp_q_entry
next	net/lwip/netif/ppp/auth.c	/^  struct wordlist *next;$/;"	m	struct:wordlist	typeref:struct:wordlist::wordlist	file:
next	obj/net/ns.asm	/^                    next = cseg->next;$/;"	d
next	obj/net/ns.asm	/^        next = pcb->unacked;$/;"	d
next	obj/net/ns.asm	/^      next = pcb->unsent;$/;"	d
next	obj/net/ns.asm	/^    next = mem2->next;$/;"	d
next	obj/net/ns.asm	/^    next = seg->next;$/;"	d
next_i	net/serv.c	/^static int next_i(int i) { return (i+1) % QUEUE_SIZE; }$/;"	f	file:
next_pbuf	net/lwip/core/ipv4/ip_frag.c	/^  struct pbuf *next_pbuf;$/;"	m	struct:ip_reass_helper	typeref:struct:ip_reass_helper::pbuf	file:
next_stack	obj/kern/kernel.asm	/^		next_stack = next_stack - (KSTKSIZE + KSTKGAP);		$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = nextfree + n;$/;"	d
nextfree	obj/kern/kernel.asm	/^	nextfree = ROUNDUP((char *)nextfree, PGSIZE);$/;"	d
nexthdr	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t nexthdr;             \/* next header *\/$/;"	m	struct:ip_hdr
nextq	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
nfb	obj/net/ns.asm	/^  nfb = (mtu - IP_HLEN) \/ 8;$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nif	net/serv.c	/^struct netif nif;$/;"	v	typeref:struct:netif
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nmem	obj/net/ns.asm	/^  nmem = (struct mem *)&ram[mem->next];$/;"	d
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/ns.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/testinput.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/net/testoutput.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/badsegment.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/breakpoint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/divzero.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/dumbfork.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echosrv.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echotest.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/evilhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/exechello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/fairness.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultalloc.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultallocbad.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultbadhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultdie.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultevilhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultnostack.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultread.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultreadkernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultregs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwrite.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwritekernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/forktree.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/hello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/httpd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/idle.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpong.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpongs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primes.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sendpage.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/softint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spin.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/stresssched.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testbss.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testtime.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/yield.asm	/^		nn = thisenv->env_runs;$/;"	d
node_stack	net/lwip/core/snmp/mib_structs.c	/^static struct nse node_stack[NODE_STACK_SIZE];$/;"	v	typeref:struct:nse	file:
node_stack_cnt	net/lwip/core/snmp/mib_structs.c	/^static u8_t node_stack_cnt;$/;"	v	file:
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_array_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_external_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_list_rootnode
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_ram_array_node
noleafs_get_object_def	net/lwip/core/snmp/mib2.c	/^noleafs_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f
noleafs_get_value	net/lwip/core/snmp/mib2.c	/^noleafs_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_test	net/lwip/core/snmp/mib2.c	/^noleafs_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_value	net/lwip/core/snmp/mib2.c	/^noleafs_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
now	obj/net/ns.asm	/^	now = sys_time_msec();$/;"	d
np_down	net/lwip/netif/ppp/auth.c	/^np_down(int unit, u16_t proto)$/;"	f
np_finished	net/lwip/netif/ppp/auth.c	/^np_finished(int unit, u16_t proto)$/;"	f
np_up	net/lwip/netif/ppp/auth.c	/^np_up(int unit, u16_t proto)$/;"	f
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	kern/pmap1.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
npcb	obj/net/ns.asm	/^    npcb = tcp_alloc(pcb->prio);$/;"	d
npioctl	net/lwip/netif/ppp/ppp.c	/^struct npioctl {$/;"	s	file:
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node **nptr;$/;"	m	struct:mib_ram_array_node	typeref:struct:mib_ram_array_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node *nptr;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node* const *nptr;$/;"	m	struct:mib_array_node
nready	obj/net/ns.asm	/^    nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nready	obj/net/ns.asm	/^  nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nrtx	net/lwip/include/lwip/tcp.h	/^  u8_t nrtx;    \/* number of retransmissions *\/$/;"	m	struct:tcp_pcb
nse	net/lwip/core/snmp/mib_structs.c	/^struct nse$/;"	s	file:
nsenv	obj/fs/fs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/ns.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testinput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testoutput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/badsegment.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/breakpoint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/buggyhello2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/cat.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/divzero.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/dumbfork.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echo.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echosrv.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echotest.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/evilhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/exechello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/fairness.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultalloc.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultallocbad.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultbadhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultdie.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultevilhandler.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultnostack.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultread.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultreadkernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultregs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwrite.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/faultwritekernel.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/forktree.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/hello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/httpd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/icode.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/idle.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/init.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/ls.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/lsfd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/num.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpong.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpongs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primes.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primespipe.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/sendpage.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/sh.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/softint.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spawnhello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/spin.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/stresssched.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testbss.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfdsharing.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfile.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testkbd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpipe.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpiperace.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpiperace2.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testpteshare.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testshell.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testtime.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/yield.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsipc	lib/nsipc.c	/^nsipc(unsigned type)$/;"	f	file:
nsipc_accept	lib/nsipc.c	/^nsipc_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
nsipc_bind	lib/nsipc.c	/^nsipc_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_close	lib/nsipc.c	/^nsipc_close(int s)$/;"	f
nsipc_connect	lib/nsipc.c	/^nsipc_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_listen	lib/nsipc.c	/^nsipc_listen(int s, int backlog)$/;"	f
nsipc_recv	lib/nsipc.c	/^nsipc_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
nsipc_send	lib/nsipc.c	/^nsipc_send(int s, const void *buf, int size, unsigned int flags)$/;"	f
nsipc_shutdown	lib/nsipc.c	/^nsipc_shutdown(int s, int how)$/;"	f
nsipc_socket	lib/nsipc.c	/^nsipc_socket(int domain, int type, int protocol)$/;"	f
nsipcbuf	lib/nsipc.c	/^union Nsipc nsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Nsipc
nsock	obj/net/ns.asm	/^  nsock = &sockets[newsock];$/;"	d
ntohl	net/lwip/core/ipv4/inet.c	/^ntohl(u32_t n)$/;"	f
ntohl	net/lwip/include/ipv4/lwip/inet.h	62;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	73;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	80;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	86;"	d
ntohs	net/lwip/core/ipv4/inet.c	/^ntohs(u16_t n)$/;"	f
ntohs	net/lwip/include/ipv4/lwip/inet.h	59;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	71;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	78;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	84;"	d
null_login	net/lwip/netif/ppp/auth.c	/^null_login(int unit)$/;"	f	file:
nullreturn	obj/net/ns.asm	/^nullreturn:$/;"	l
num	net/lwip/include/lwip/netif.h	/^  u8_t num;$/;"	m	struct:netif
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/ns.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/ns.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^  num = name[2] - '0';$/;"	d
num	obj/net/testinput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testinput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testinput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testinput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testoutput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testoutput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echosrv.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echosrv.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echotest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echotest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/exechello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/exechello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/exechello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/exechello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/httpd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/httpd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testtime.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testtime.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	user/num.c	/^num(int f, const char *s)$/;"	f
num_np_open	net/lwip/netif/ppp/auth.c	/^static int num_np_open;$/;"	v	file:
num_np_up	net/lwip/netif/ppp/auth.c	/^static int num_np_up;$/;"	v	file:
numanswers	net/lwip/core/dns.c	/^  u16_t numanswers;$/;"	m	struct:dns_hdr	file:
numauthrr	net/lwip/core/dns.c	/^  u16_t numauthrr;$/;"	m	struct:dns_hdr	file:
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/net/ns.asm	/^		number:$/;"	l
number	obj/net/testinput.asm	/^		number:$/;"	l
number	obj/net/testoutput.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/cat.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/echo.asm	/^		number:$/;"	l
number	obj/user/echosrv.asm	/^		number:$/;"	l
number	obj/user/echotest.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/exechello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/httpd.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/ls.asm	/^		number:$/;"	l
number	obj/user/lsfd.asm	/^		number:$/;"	l
number	obj/user/num.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/primespipe.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/sh.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spawnhello.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testkbd.asm	/^		number:$/;"	l
number	obj/user/testpipe.asm	/^		number:$/;"	l
number	obj/user/testpiperace.asm	/^		number:$/;"	l
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
number	obj/user/testpteshare.asm	/^		number:$/;"	l
number	obj/user/testshell.asm	/^		number:$/;"	l
number	obj/user/testtime.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
numdns	net/lwip/core/dns.c	/^  u8_t  numdns;$/;"	m	struct:dns_table_entry	file:
numextrarr	net/lwip/core/dns.c	/^  u16_t numextrarr;$/;"	m	struct:dns_hdr	file:
numloops	net/lwip/netif/ppp/lcp.h	/^    int numloops;                \/* Number of loops during magic number neg. *\/$/;"	m	struct:lcp_options
numquestions	net/lwip/core/dns.c	/^  u16_t numquestions;$/;"	m	struct:dns_hdr	file:
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/ns.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testinput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testoutput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echosrv.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echotest.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/exechello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/httpd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sendpage.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testtime.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
nvram_read	kern/pmap1.c	/^nvram_read(int r)$/;"	f	file:
nwrap	obj/net/ns.asm	/^	nwrap = 0;$/;"	d
nwrap	obj/user/httpd.asm	/^	nwrap = 0;$/;"	d
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
obj_def	net/lwip/include/lwip/snmp_structs.h	/^struct obj_def$/;"	s
objectidncpy	net/lwip/core/snmp/mib2.c	/^void objectidncpy(s32_t *dst, s32_t *src, u8_t n)$/;"	f
objid	net/lwip/include/lwip/snmp_structs.h	/^  const s32_t *objid;$/;"	m	struct:mib_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *objid;$/;"	m	struct:mib_ram_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t objid;$/;"	m	struct:mib_list_node
ocstrncpy	net/lwip/core/snmp/mib2.c	/^void ocstrncpy(u8_t *dst, u8_t *src, u8_t n)$/;"	f
octetptr	obj/net/ns.asm	/^  octetptr = (u8_t*)dataptr;$/;"	d
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off	obj/net/ns.asm	/^      off = pcb->rcv_nxt - seqno;$/;"	d
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offered_bc_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_bc_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_dns_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_dns_addr[DHCP_MAX_DNS]; \/* DNS server addresses *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_gw_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_gw_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_ip_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_sn_mask	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_sn_mask;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_t0_lease	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t0_lease; \/* lease period (in seconds) *\/$/;"	m	struct:dhcp
offered_t1_renew	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t1_renew; \/* recommended renew time (usually 50% of lease period) *\/$/;"	m	struct:dhcp
offered_t2_rebind	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t2_rebind; \/* recommended rebind time (usually 66% of lease period)  *\/$/;"	m	struct:dhcp
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offset	obj/net/ns.asm	/^      offset = 0;$/;"	d
offset	obj/net/ns.asm	/^  offset = (ntohs(IPH_OFFSET(fraghdr)) & IP_OFFMASK) * 8;$/;"	d
offset	obj/net/ns.asm	/^  offset = 0;$/;"	d
offset_from	obj/net/ns.asm	/^      offset_from = 0;$/;"	d
offset_to	obj/net/ns.asm	/^      offset_to = 0;$/;"	d
offsetof	inc/types.h	71;"	d
ofo	obj/net/ns.asm	/^  ofo = tmp & IP_OFFMASK;$/;"	d
old_addrs	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_addrs     : 1; \/* Use old (IP-Addresses) option? *\/$/;"	m	struct:ipcp_options
old_cwnd	obj/net/ns.asm	/^        old_cwnd = pcb->cwnd;$/;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
old_pending	obj/net/ns.asm	/^          old_pending = i;$/;"	d
old_queue	obj/net/ns.asm	/^          old_queue = i;$/;"	d
old_stable	obj/net/ns.asm	/^        old_stable = i;$/;"	d
old_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_vj        : 1; \/* use old (short) form of VJ option? *\/$/;"	m	struct:ipcp_options
oldest	obj/net/ns.asm	/^          oldest = r;$/;"	d
oldest	obj/net/ns.asm	/^    oldest = NULL;$/;"	d
olen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t olen;$/;"	m	struct:snmp_varbind
olenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t olenlen;$/;"	m	struct:snmp_varbind
omf	obj/net/ns.asm	/^  omf = tmp & IP_MF;$/;"	d
ooseq	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *ooseq;    \/* Received out of sequence segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
op_completed	net/lwip/include/lwip/api.h	/^  sys_sem_t op_completed;$/;"	m	struct:netconn
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
open	net/lwip/netif/ppp/ppp.h	/^    void (*open) (int unit);$/;"	m	struct:protent
openFlag	net/lwip/netif/ppp/ppp.c	/^  char openFlag;                \/* True when in use. *\/$/;"	m	struct:PPPControl_s	file:
opencons	lib/console.c	/^opencons(void)$/;"	f
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
opt	obj/net/ns.asm	/^      opt = opts[c];$/;"	d
optdata	obj/net/ns.asm	/^    optdata = TCP_BUILD_MSS_OPTION();$/;"	d
optdata	obj/net/ns.asm	/^  optdata = TCP_BUILD_MSS_OPTION();$/;"	d
opterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER opterr;           \/* Error in options. *\/$/;"	m	struct:stats_proto
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_BROADCAST);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_DNS_SERVER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_LEASE_TIME);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_ROUTER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_SUBNET_MASK);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T1);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T2);$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->file;$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->sname;$/;"	d
options_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *options_in; $/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
options_in_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_in_len;$/;"	m	struct:dhcp
options_out_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_out_len; \/* outgoing msg options length *\/$/;"	m	struct:dhcp
options_ptr	obj/net/ns.asm	/^  options_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_MESSAGE_TYPE);$/;"	d
optlen	net/lwip/api/sockets.c	/^  socklen_t *optlen;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	net/lwip/api/sockets.c	/^  int optname;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	obj/net/ns.asm	/^  optname = data->optname;$/;"	d
opts	obj/net/ns.asm	/^  opts = (u8_t *)tcphdr + TCP_HLEN;$/;"	d
optval	net/lwip/api/sockets.c	/^  void *optval;$/;"	m	struct:lwip_setgetsockopt_data	file:
optval	obj/net/ns.asm	/^  optval = data->optval;$/;"	d
original_iphdr	obj/net/ns.asm	/^  original_iphdr = p->payload;$/;"	d
other_datagrams	obj/net/ns.asm	/^    other_datagrams = 0;$/;"	d
our_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::ip_addr
our_name	net/lwip/netif/ppp/ppp.h	/^  char our_name   [MAXNAMELEN   + 1]; \/* Our name for authentication purposes *\/$/;"	m	struct:ppp_settings
ouraddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
out	obj/net/ns.asm	/^out:$/;"	l
out	obj/net/testinput.asm	/^			out = buf + snprintf(buf, end - buf,$/;"	d
outACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm outACCM;             \/* Async-Ctl-Char-Map for output. *\/$/;"	m	struct:PPPControl_s	file:
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outif	obj/net/ns.asm	/^  outif = ip_route(addr);$/;"	d
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outpacket_buf	net/lwip/netif/ppp/ppp.c	/^u_char *outpacket_buf[NUM_PPP];  $/;"	v
output	net/lwip/include/lwip/netif.h	/^  err_t (* output)(struct netif *netif, struct pbuf *p,$/;"	m	struct:netif
output	net/output.c	/^output(envid_t ns_envid)$/;"	f
output_envid	net/serv.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testinput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testoutput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	obj/net/ns.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/ns.asm	/^    output_envid = (envid_t *)netif->state;$/;"	d
output_envid	obj/net/testinput.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/testoutput.asm	/^	output_envid = fork();$/;"	d
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_varbind_root
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/ns.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testinput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testoutput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echosrv.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echotest.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/exechello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/httpd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sendpage.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testtime.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
overload	obj/net/ns.asm	/^        overload = options[offset++];$/;"	d
p	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct pbuf *p;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::pbuf
p	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p;$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::pbuf
p	net/lwip/include/lwip/tcp.h	/^  struct pbuf *p;          \/* buffer containing data + TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::pbuf
p	net/lwip/include/lwip/tcpip.h	/^      struct pbuf *p;$/;"	m	struct:tcpip_msg::__anon26::__anon27	typeref:struct:tcpip_msg::__anon26::__anon27::pbuf
p	net/lwip/include/netif/etharp.h	/^  struct pbuf *p;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::pbuf
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/net/ns.asm	/^				p = "(null)";$/;"	d
p	obj/net/ns.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/net/ns.asm	/^	p = sys_time_msec();$/;"	d
p	obj/net/ns.asm	/^          p = NULL;$/;"	d
p	obj/net/ns.asm	/^          p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = NULL;$/;"	d
p	obj/net/ns.asm	/^        p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^        p = q;$/;"	d
p	obj/net/ns.asm	/^      p = NULL;$/;"	d
p	obj/net/ns.asm	/^      p = inseg.p;$/;"	d
p	obj/net/ns.asm	/^      p = memp_malloc(MEMP_PBUF_POOL);$/;"	d
p	obj/net/ns.asm	/^      p = q;$/;"	d
p	obj/net/ns.asm	/^      p = r;$/;"	d
p	obj/net/ns.asm	/^    p = (struct pbuf*)mem_malloc(LWIP_MEM_ALIGN_SIZE(SIZEOF_STRUCT_PBUF + offset) + LWIP_MEM_ALIGN_SIZE(length));$/;"	d
p	obj/net/ns.asm	/^    p = ip_reass(p);$/;"	d
p	obj/net/ns.asm	/^    p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^    p = iprh->next_pbuf;$/;"	d
p	obj/net/ns.asm	/^    p = memp_malloc(MEMP_PBUF);$/;"	d
p	obj/net/ns.asm	/^    p = p->next;$/;"	d
p	obj/net/ns.asm	/^    p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^    p = q->p;$/;"	d
p	obj/net/ns.asm	/^  p = NULL;$/;"	d
p	obj/net/ns.asm	/^  p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^  p = mem_malloc(count * size);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN + 1, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_LINK, sizeof(struct etharp_hdr), PBUF_RAM);$/;"	d
p	obj/net/testinput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testinput.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testinput.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/net/testoutput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testoutput.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/net/testoutput.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echosrv.asm	/^				p = "(null)";$/;"	d
p	obj/user/echosrv.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echosrv.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echotest.asm	/^				p = "(null)";$/;"	d
p	obj/user/echotest.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echotest.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/exechello.asm	/^				p = "(null)";$/;"	d
p	obj/user/exechello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/exechello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/httpd.asm	/^				p = "(null)";$/;"	d
p	obj/user/httpd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/httpd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testtime.asm	/^				p = "(null)";$/;"	d
p	obj/user/testtime.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testtime.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_from	obj/net/ns.asm	/^      p_from = p_from->next;$/;"	d
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_out	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p_out; \/* pbuf of outcoming msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:
p_sock	obj/net/ns.asm	/^      p_sock = get_socket(i);$/;"	d
p_to	obj/net/ns.asm	/^      p_to = p_to->next;$/;"	d
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:
pa	obj/kern/kernel.asm	/^		pa = PADDR(percpu_kstacks[n]);$/;"	d
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/net/ns.asm	/^			padc = '-';$/;"	d
padc	obj/net/ns.asm	/^			padc = '0';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '0';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '-';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '0';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '-';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/exechello.asm	/^			padc = '-';$/;"	d
padc	obj/user/exechello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '-';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '-';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page	obj/kern/kernel.asm	/^	page = page_free_list;$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_alloc	kern/pmap1.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	kern/pmap1.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	                page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page_free_list -> pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;	$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_init	kern/pmap1.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
page_table_entry	obj/kern/kernel.asm	/^		page_table_entry = (pte_t *)KADDR(PTE_ADDR(pgtb_base_addr)) ;$/;"	d
page_table_entry	obj/kern/kernel.asm	/^		page_table_entry = page_table_entry + page_table_index;$/;"	d
page_to_send	obj/kern/kernel.asm	/^        		page_to_send = page_lookup(curenv->env_pgdir, srcva, &pgtb_entry);$/;"	d
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	kern/pmap1.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *)boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	kern/init1.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pap_protent	net/lwip/netif/ppp/pap.c	/^struct protent pap_protent = {$/;"	v	typeref:struct:protent
parent_bridge	kern/pci.h	/^    struct pci_func *parent_bridge;$/;"	m	struct:pci_bus	typeref:struct:pci_bus::pci_func
passive	net/lwip/netif/ppp/lcp.h	/^    u_int passive           : 1; \/* Don't die if we don't get a response *\/$/;"	m	struct:lcp_options
passwd	net/lwip/netif/ppp/ppp.h	/^  char passwd     [MAXSECRETLEN + 1]; \/* Password for PAP, secret for CHAP *\/$/;"	m	struct:ppp_settings
passwd_from_file	net/lwip/netif/ppp/auth.c	/^static int passwd_from_file;$/;"	v	file:
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
payload	net/lwip/include/lwip/pbuf.h	/^  void *payload;$/;"	m	struct:pbuf
payload	obj/net/ns.asm	/^  payload = p->payload;$/;"	d
pbuf	net/lwip/include/lwip/pbuf.h	/^struct pbuf {$/;"	s
pbuf_alloc	net/lwip/core/pbuf.c	/^pbuf_alloc(pbuf_layer layer, u16_t length, pbuf_type type)$/;"	f
pbuf_cat	net/lwip/core/pbuf.c	/^pbuf_cat(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_chain	net/lwip/core/pbuf.c	/^pbuf_chain(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_clen	net/lwip/core/pbuf.c	/^pbuf_clen(struct pbuf *p)$/;"	f
pbuf_copy	net/lwip/core/pbuf.c	/^pbuf_copy(struct pbuf *p_to, struct pbuf *p_from)$/;"	f
pbuf_copy_partial	net/lwip/core/pbuf.c	/^pbuf_copy_partial(struct pbuf *buf, void *dataptr, u16_t len, u16_t offset)$/;"	f
pbuf_dechain	net/lwip/core/pbuf.c	/^pbuf_dechain(struct pbuf *p)$/;"	f
pbuf_free	net/lwip/core/pbuf.c	/^pbuf_free(struct pbuf *p)$/;"	f
pbuf_free_callback	net/lwip/api/tcpip.c	/^pbuf_free_callback(struct pbuf *p)$/;"	f
pbuf_free_int	net/lwip/api/tcpip.c	/^pbuf_free_int(void *p)$/;"	f	file:
pbuf_header	net/lwip/core/pbuf.c	/^pbuf_header(struct pbuf *p, s16_t header_size_increment)$/;"	f
pbuf_init	net/lwip/include/lwip/pbuf.h	99;"	d
pbuf_layer	net/lwip/include/lwip/pbuf.h	/^} pbuf_layer;$/;"	t	typeref:enum:__anon38
pbuf_realloc	net/lwip/core/pbuf.c	/^pbuf_realloc(struct pbuf *p, u16_t new_len)$/;"	f
pbuf_ref	net/lwip/core/pbuf.c	/^pbuf_ref(struct pbuf *p)$/;"	f
pbuf_type	net/lwip/include/lwip/pbuf.h	/^} pbuf_type;$/;"	t	typeref:enum:__anon39
pbufs_freed_current	obj/net/ns.asm	/^      pbufs_freed_current = ip_reass_free_complete_datagram(oldest, prev);$/;"	d
pcb	net/lwip/include/lwip/api.h	/^  } pcb;$/;"	m	struct:netconn	typeref:union:netconn::__anon25
pcb	net/lwip/include/lwip/dhcp.h	/^  struct udp_pcb *pcb;$/;"	m	struct:dhcp	typeref:struct:dhcp::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::udp_pcb
pcb	obj/net/ns.asm	/^        pcb = next;$/;"	d
pcb	obj/net/ns.asm	/^        pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb2;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = uncon_pcb;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^    pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = conn->pcb.tcp;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_RAW_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_UDP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = raw_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_tw_pcbs;$/;"	d
pcb2	obj/net/ns.asm	/^      pcb2 = pcb->next;$/;"	d
pcb_new	net/lwip/api/api_msg.c	/^pcb_new(struct api_msg_msg *msg)$/;"	f	file:
pcb_remove	obj/net/ns.asm	/^    pcb_remove = 0;$/;"	d
pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb *pcbs;$/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb
pci_attach	kern/pci.c	/^pci_attach(struct pci_func *f)$/;"	f	file:
pci_attach_class	kern/pci.c	/^struct pci_driver pci_attach_class[] = {$/;"	v	typeref:struct:pci_driver
pci_attach_match	kern/pci.c	/^pci_attach_match(uint32_t key1, uint32_t key2,$/;"	f	file:
pci_attach_vendor	kern/pci.c	/^struct pci_driver pci_attach_vendor[] = {$/;"	v	typeref:struct:pci_driver
pci_bridge_attach	kern/pci.c	/^pci_bridge_attach(struct pci_func *pcif)$/;"	f	file:
pci_bus	kern/pci.h	/^struct pci_bus {$/;"	s
pci_class	kern/pci.c	/^static const char *pci_class[] =$/;"	v	file:
pci_class_t	kern/pcireg.h	/^typedef uint8_t pci_class_t;$/;"	t
pci_conf1_addr_ioport	kern/pci.c	/^static uint32_t pci_conf1_addr_ioport = 0x0cf8;$/;"	v	file:
pci_conf1_data_ioport	kern/pci.c	/^static uint32_t pci_conf1_data_ioport = 0x0cfc;$/;"	v	file:
pci_conf1_set_addr	kern/pci.c	/^pci_conf1_set_addr(uint32_t bus,$/;"	f	file:
pci_conf_read	kern/pci.c	/^pci_conf_read(struct pci_func *f, uint32_t off)$/;"	f	file:
pci_conf_write	kern/pci.c	/^pci_conf_write(struct pci_func *f, uint32_t off, uint32_t v)$/;"	f	file:
pci_driver	kern/pci.c	/^struct pci_driver {$/;"	s	file:
pci_func	kern/pci.h	/^struct pci_func {$/;"	s
pci_func_enable	kern/pci.c	/^pci_func_enable(struct pci_func *f)$/;"	f
pci_init	kern/pci.c	/^pci_init(void)$/;"	f
pci_interface_t	kern/pcireg.h	/^typedef uint8_t pci_interface_t;$/;"	t
pci_intr_grant_t	kern/pcireg.h	/^typedef uint8_t pci_intr_grant_t;$/;"	t
pci_intr_latency_t	kern/pcireg.h	/^typedef uint8_t pci_intr_latency_t;$/;"	t
pci_intr_line_t	kern/pcireg.h	/^typedef uint8_t pci_intr_line_t;$/;"	t
pci_intr_pin_t	kern/pcireg.h	/^typedef uint8_t pci_intr_pin_t;$/;"	t
pci_print_func	kern/pci.c	/^pci_print_func(struct pci_func *f)$/;"	f	file:
pci_product_id_t	kern/pcireg.h	/^typedef uint16_t pci_product_id_t;$/;"	t
pci_res_bus	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon10
pci_res_io	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon10
pci_res_max	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon10
pci_res_mem	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon10
pci_revision_t	kern/pcireg.h	/^typedef uint8_t pci_revision_t;$/;"	t
pci_scan_bus	kern/pci.c	/^pci_scan_bus(struct pci_bus *bus)$/;"	f	file:
pci_show_addrs	kern/pci.c	/^static int pci_show_addrs = 0;$/;"	v	file:
pci_show_devs	kern/pci.c	/^static int pci_show_devs = 1;$/;"	v	file:
pci_subclass_t	kern/pcireg.h	/^typedef uint8_t pci_subclass_t;$/;"	t
pci_vendor_id_t	kern/pcireg.h	/^typedef uint16_t pci_vendor_id_t;$/;"	t
pci_vpd	kern/pcireg.h	/^struct pci_vpd {$/;"	s
pci_vpd_largeres	kern/pcireg.h	/^struct pci_vpd_largeres {$/;"	s
pci_vpd_smallres	kern/pcireg.h	/^struct pci_vpd_smallres {$/;"	s
pcomp	net/lwip/netif/ppp/ppp.c	/^  int  pcomp;                   \/* Does peer accept protocol compression? *\/$/;"	m	struct:PPPControl_s	file:
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pcur	obj/net/ns.asm	/^    pcur = p;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_resp_header_lengths
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_trap_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_resp_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_trap_header_lengths
peer_authname	net/lwip/netif/ppp/auth.c	/^static char peer_authname[MAXNAMELEN];$/;"	v	file:
peer_mru	net/lwip/netif/ppp/fsm.c	/^int peer_mru[NUM_PPP];$/;"	v
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/net/ns.asm	/^		perm = 0;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/init.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/sh.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnhello.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testpteshare.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testshell.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perror	net/lwip/jos/arch/perror.c	/^perror(const char *s) {$/;"	f
persist_backoff	net/lwip/include/lwip/tcp.h	/^  u8_t persist_backoff;$/;"	m	struct:tcp_pcb
persist_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t persist_cnt;$/;"	m	struct:tcp_pcb
pg	obj/fs/fs.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/fs/fs.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pg	obj/net/ns.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/net/ns.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/net/testinput.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/net/testinput.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/net/testoutput.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/net/testoutput.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/badsegment.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/badsegment.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/breakpoint.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/breakpoint.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/buggyhello.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/buggyhello.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/buggyhello2.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/buggyhello2.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/cat.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/cat.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/divzero.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/divzero.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/dumbfork.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/dumbfork.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/echo.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/echo.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/echosrv.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/echosrv.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/echotest.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/echotest.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/evilhello.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/evilhello.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/exechello.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/exechello.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/fairness.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/fairness.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/faultalloc.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/faultalloc.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/faultallocbad.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/faultallocbad.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/faultbadhandler.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/faultbadhandler.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/faultdie.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/faultdie.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/faultevilhandler.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/faultevilhandler.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/faultnostack.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/faultnostack.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/faultread.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/faultread.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/faultreadkernel.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/faultreadkernel.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/faultregs.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/faultregs.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/faultwrite.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/faultwrite.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/faultwritekernel.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/faultwritekernel.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/forktree.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/forktree.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/hello.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/hello.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/httpd.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/httpd.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/icode.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/icode.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/idle.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/idle.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/init.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/init.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/ls.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/ls.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/lsfd.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/lsfd.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/num.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/num.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/pingpong.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/pingpong.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/pingpongs.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/pingpongs.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/primes.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/primes.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/primespipe.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/primespipe.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/sendpage.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/sendpage.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/sh.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/sh.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/softint.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/softint.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/spawnhello.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/spawnhello.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/spin.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/spin.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/stresssched.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/stresssched.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/testbss.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/testbss.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/testfdsharing.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/testfdsharing.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/testfile.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/testfile.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/testkbd.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/testkbd.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/testpipe.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/testpipe.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/testpiperace.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/testpiperace.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/testpiperace2.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/testpiperace2.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/testpteshare.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/testpteshare.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/testshell.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/testshell.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/testtime.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/testtime.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pg	obj/user/yield.asm	/^		pg  = (void *)UTOP ;$/;"	d
pg	obj/user/yield.asm	/^		pg = (void *) (UTOP + 1);$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_index	obj/net/ns.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/net/ns.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/net/testinput.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/net/testinput.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/net/testoutput.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/net/testoutput.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/user/forktree.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/user/forktree.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/user/icode.asm	/^		pgdir_index = pgdir_index + PGSIZE;	$/;"	d
pgdir_index	obj/user/init.asm	/^		pgdir_index = pgdir_index + PGSIZE;	$/;"	d
pgdir_index	obj/user/pingpong.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/user/pingpong.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/user/pingpongs.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/user/pingpongs.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/user/primes.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/user/primes.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/user/primespipe.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/user/primespipe.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/user/sendpage.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/user/sendpage.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/user/sh.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/user/sh.asm	/^		pgdir_index = pgdir_index + PGSIZE;	$/;"	d
pgdir_index	obj/user/sh.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/user/spawnhello.asm	/^		pgdir_index = pgdir_index + PGSIZE;	$/;"	d
pgdir_index	obj/user/spin.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/user/spin.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/user/stresssched.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/user/stresssched.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/user/testfdsharing.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/user/testfdsharing.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/user/testpipe.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/user/testpipe.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/user/testpiperace.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/user/testpiperace.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/user/testpiperace2.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/user/testpiperace2.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/user/testpteshare.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/user/testpteshare.asm	/^		pgdir_index = pgdir_index + PGSIZE;	$/;"	d
pgdir_index	obj/user/testpteshare.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_index	obj/user/testshell.asm	/^		pgdir_index = pgdir_index + 1;$/;"	d
pgdir_index	obj/user/testshell.asm	/^		pgdir_index = pgdir_index + PGSIZE;	$/;"	d
pgdir_index	obj/user/testshell.asm	/^	pgdir_index = pgdir_index * 1024;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgtb_entry	obj/kern/kernel.asm	/^		pgtb_entry =  pgdir_walk(kern_pgdir,(pte_t *)start, 0);$/;"	d
pgtb_entry	obj/kern/kernel.asm	/^		pgtb_entry =  pgdir_walk(kern_pgdir,start, 0);$/;"	d
pgtb_entry	obj/kern/kernel.asm	/^		pgtb_entry = pgdir_walk(env->env_pgdir, (void *)start, 0);$/;"	d
pgtb_entry	obj/kern/kernel.asm	/^		pgtb_entry = pgdir_walk(pgdir, (void *)(va + i), 1);$/;"	d
pgtb_entry	obj/kern/kernel.asm	/^	pgtb_entry = pgdir_walk(pgdir, va, 1);$/;"	d
pgtb_index	obj/net/ns.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/net/ns.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/net/testinput.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/net/testinput.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/net/testoutput.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/net/testoutput.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/user/forktree.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/user/forktree.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/user/pingpong.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/user/pingpong.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/user/pingpongs.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/user/pingpongs.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/user/primes.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/user/primes.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/user/primespipe.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/user/primespipe.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/user/sendpage.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/user/sendpage.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/user/sh.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/user/sh.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/user/spin.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/user/spin.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/user/stresssched.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/user/stresssched.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/user/testfdsharing.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/user/testfdsharing.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/user/testpipe.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/user/testpipe.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/user/testpiperace.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/user/testpiperace.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/user/testpiperace2.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/user/testpiperace2.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/user/testpteshare.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/user/testpteshare.asm	/^			pgtb_index = 0;$/;"	d
pgtb_index	obj/user/testshell.asm	/^				pgtb_index = pgtb_index + 1 ;$/;"	d
pgtb_index	obj/user/testshell.asm	/^			pgtb_index = 0;$/;"	d
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
phys_addr	obj/kern/kernel.asm	/^	phys_addr = page2pa(pp);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f
pipe_child	obj/user/sh.asm	/^				pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f
pkt	inc/ns.h	/^	struct jif_pkt pkt;$/;"	m	union:Nsipc	typeref:struct:Nsipc::jif_pkt
pkt	net/testinput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
pkt	net/testoutput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
plug_holes	net/lwip/core/mem.c	/^plug_holes(struct mem *mem)$/;"	f	file:
pmem	obj/net/ns.asm	/^  pmem = (struct mem *)&ram[mem->prev];$/;"	d
poff	obj/net/ns.asm	/^    poff = newpbuflen;$/;"	d
poll	net/lwip/include/lwip/tcp.h	/^  err_t (* poll)(void *arg, struct tcp_pcb *pcb);$/;"	m	struct:tcp_pcb
poll_tcp	net/lwip/api/api_msg.c	/^poll_tcp(void *arg, struct tcp_pcb *pcb)$/;"	f	file:
pollinterval	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
polltmr	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
poolnr	net/lwip/core/mem.c	/^   memp_t poolnr;$/;"	m	struct:mem_helper	file:
pop_node	net/lwip/core/snmp/mib_structs.c	/^pop_node(struct nse* node)$/;"	f	file:
port	net/lwip/include/lwip/api_msg.h	/^      u16_t *port;$/;"	m	struct:api_msg_msg::__anon30::__anon33
port	net/lwip/include/lwip/api_msg.h	/^      u16_t port;$/;"	m	struct:api_msg_msg::__anon30::__anon32
port	net/lwip/include/lwip/netbuf.h	/^  u16_t port;$/;"	m	struct:netbuf
port	obj/net/ns.asm	/^      port = netbuf_fromport(buf);$/;"	d
port	obj/net/ns.asm	/^    port = TCP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = UDP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = tcp_new_port();$/;"	d
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pppACCMMask	net/lwip/netif/ppp/ppp.c	/^static u_char pppACCMMask[] = {$/;"	v	file:
pppAppend	net/lwip/netif/ppp/ppp.c	/^pppAppend(u_char c, struct pbuf *nb, ext_accm *outACCM)$/;"	f	file:
pppAuthType	net/lwip/netif/ppp/ppp.h	/^enum pppAuthType {$/;"	g
pppClose	net/lwip/netif/ppp/ppp.c	/^pppClose(int pd)$/;"	f
pppControl	net/lwip/netif/ppp/ppp.c	/^static PPPControl pppControl[NUM_PPP]; \/* The PPP interface control blocks. *\/$/;"	v	file:
pppDrop	net/lwip/netif/ppp/ppp.c	/^pppDrop(PPPControl *pc)$/;"	f	file:
pppHupCB	net/lwip/netif/ppp/ppp.c	/^pppHupCB(void *arg)$/;"	f	file:
pppIOCtl	net/lwip/netif/ppp/ppp.c	/^pppIOCtl(int pd, int cmd, void *arg)$/;"	f
pppInProc	net/lwip/netif/ppp/ppp.c	/^pppInProc(int pd, u_char *s, int l)$/;"	f	file:
pppInProcOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppInProcOverEthernet(int pd, struct pbuf *pb)$/;"	f
pppInit	net/lwip/netif/ppp/ppp.c	/^pppInit(void)$/;"	f
pppInput	net/lwip/netif/ppp/ppp.c	/^pppInput(void *arg)$/;"	f	file:
pppInputHeader	net/lwip/netif/ppp/ppp.c	/^struct pppInputHeader {$/;"	s	file:
pppLinkDown	net/lwip/netif/ppp/ppp.c	/^pppLinkDown(int pd)$/;"	f
pppLinkTerminated	net/lwip/netif/ppp/ppp.c	/^pppLinkTerminated(int pd)$/;"	f
pppMTU	net/lwip/netif/ppp/ppp.c	/^pppMTU(int pd)$/;"	f
pppMain	net/lwip/netif/ppp/ppp.c	/^pppMain(void *arg)$/;"	f	file:
pppMainWakeup	net/lwip/netif/ppp/ppp.c	/^pppMainWakeup(int pd)$/;"	f
pppOpen	net/lwip/netif/ppp/ppp.h	393;"	d
pppOverEthernetClose	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetClose(int pd)$/;"	f
pppOverEthernetInitFailed	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetInitFailed(void* arg)$/;"	f
pppOverEthernetLinkStatusCB	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetLinkStatusCB(int pd, int up)$/;"	f	file:
pppOverEthernetOpen	net/lwip/netif/ppp/ppp.c	/^int pppOverEthernetOpen(struct netif *ethif, const char *service_name, const char *concentrator_name, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppOverSerialOpen	net/lwip/netif/ppp/ppp.c	/^pppOverSerialOpen(sio_fd_t fd, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppSetAuth	net/lwip/netif/ppp/ppp.c	/^pppSetAuth(enum pppAuthType authType, const char *user, const char *passwd)$/;"	f
pppSigHUP	net/lwip/netif/ppp/ppp.c	/^pppSigHUP(int pd)$/;"	f
pppSingleBuf	net/lwip/netif/ppp/ppp.c	/^pppSingleBuf(struct pbuf *p)$/;"	f
pppStartCB	net/lwip/netif/ppp/ppp.c	/^pppStartCB(void *arg)$/;"	f	file:
pppStopCB	net/lwip/netif/ppp/ppp.c	/^pppStopCB(void *arg)$/;"	f	file:
pppWrite	net/lwip/netif/ppp/ppp.c	/^pppWrite(int pd, const u_char *s, int n)$/;"	f
pppWriteOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppWriteOverEthernet(int pd, const u_char *s, int n)$/;"	f
ppp_addrs	net/lwip/netif/ppp/ppp.h	/^struct ppp_addrs {$/;"	s
ppp_idle	net/lwip/netif/ppp/ppp.h	/^struct ppp_idle {$/;"	s
ppp_protocols	net/lwip/netif/ppp/ppp.c	/^struct protent *ppp_protocols[] = {$/;"	v	typeref:struct:protent
ppp_recv_config	net/lwip/netif/ppp/ppp.c	/^ppp_recv_config( int unit, int mru, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_send_config	net/lwip/netif/ppp/ppp.c	/^ppp_send_config( int unit, int mtu, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_set_xaccm	net/lwip/netif/ppp/ppp.c	/^ppp_set_xaccm(int unit, ext_accm *accm)$/;"	f
ppp_settings	net/lwip/netif/ppp/ppp.c	/^struct ppp_settings ppp_settings;$/;"	v	typeref:struct:ppp_settings
ppp_settings	net/lwip/netif/ppp/ppp.h	/^struct ppp_settings {$/;"	s
ppperr_strerr	net/lwip/netif/ppp/fsm.c	/^static const char *ppperr_strerr[] = {$/;"	v	file:
pppifNetifInit	net/lwip/netif/ppp/ppp.c	/^pppifNetifInit(struct netif *netif)$/;"	f	file:
pppifOutput	net/lwip/netif/ppp/ppp.c	/^pppifOutput(struct netif *netif, struct pbuf *pb, struct ip_addr *ipaddr)$/;"	f	file:
pppifOutputOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppifOutputOverEthernet(int pd, struct pbuf *p)$/;"	f	file:
pppoe_abort_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_abort_connect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_clear_softc	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_clear_softc(struct pppoe_softc *sc, const char *message)$/;"	f	file:
pppoe_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_connect(struct pppoe_softc *sc)$/;"	f
pppoe_create	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_create(struct netif *ethif, int pd, void (*linkStatusCB)(int pd, int up), struct pppoe_softc **scptr)$/;"	f
pppoe_data_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_data_input(struct netif *netif, struct pbuf *pb)$/;"	f
pppoe_destroy	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_destroy(struct netif *ifp)$/;"	f
pppoe_disc_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disc_input(struct netif *netif, struct pbuf *p)$/;"	f
pppoe_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disconnect(struct pppoe_softc *sc)$/;"	f
pppoe_dispatch_disc_pkt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_dispatch_disc_pkt(struct netif *netif, struct pbuf *pb)$/;"	f	file:
pppoe_do_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_do_disconnect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_find_softc_by_hunique	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_hunique(u8_t *token, size_t len, struct netif *rcvif)$/;"	f	file:
pppoe_find_softc_by_session	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_session(u_int session, struct netif *rcvif)$/;"	f	file:
pppoe_hdrlen	net/lwip/netif/ppp/ppp_oe.c	/^int pppoe_hdrlen;$/;"	v
pppoe_init	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_init(void)$/;"	f
pppoe_linkstatus_up	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_linkstatus_up(void *arg)$/;"	f	file:
pppoe_output	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_output(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f	file:
pppoe_sc	net/lwip/netif/ppp/ppp.c	/^  struct pppoe_softc *pppoe_sc;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pppoe_softc	file:
pppoe_send_padi	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padi(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pado	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pado(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padr	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padr(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pads	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pads(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padt(struct netif *outgoing_if, u_int session, const u8_t *dest)$/;"	f	file:
pppoe_softc	net/lwip/netif/ppp/ppp_oe.c	/^struct pppoe_softc {$/;"	s	file:
pppoe_timeout	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_timeout(void *arg)$/;"	f	file:
pppoe_xmit	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_xmit(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f
pppoehdr	net/lwip/include/netif/ppp_oe.h	/^struct pppoehdr {$/;"	s
pppoetag	net/lwip/include/netif/ppp_oe.h	/^struct pppoetag {$/;"	s
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/net/ns.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/ns.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/ns.asm	/^		precision = -1;$/;"	d
precision	obj/net/testinput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testinput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testinput.asm	/^		precision = -1;$/;"	d
precision	obj/net/testoutput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testoutput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testoutput.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^		precision = -1;$/;"	d
precision	obj/user/echosrv.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echosrv.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echosrv.asm	/^		precision = -1;$/;"	d
precision	obj/user/echotest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echotest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echotest.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/exechello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/exechello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/exechello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/httpd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/httpd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/httpd.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^		precision = -1;$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^		precision = -1;$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^		precision = -1;$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^		precision = -1;$/;"	d
precision	obj/user/testtime.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testtime.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testtime.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
prefix	net/lwip/core/snmp/mib_structs.c	/^const s32_t prefix[4] = {1, 3, 6, 1};$/;"	v
prev	net/lwip/core/mem.c	/^  mem_size_t prev;$/;"	m	struct:mem	file:
prev	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *prev;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
prev	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *prev;  $/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
prev	obj/net/ns.asm	/^          prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^        prev = r;$/;"	d
prev	obj/net/ns.asm	/^      prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = r;$/;"	d
prev	obj/net/ns.asm	/^    prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^    prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;    $/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;$/;"	d
prev_i	net/serv.c	/^static int prev_i(int i) { return (i ? i-1 : QUEUE_SIZE-1); }$/;"	f	file:
prev_rand	user/hello2.c	/^static int prev_rand = 13;$/;"	v	file:
primeproc	user/primes.c	/^primeproc(void)$/;"	f
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f
print_jb	net/lwip/jos/arch/thread.c	/^print_jb(struct thread_context *tc) {$/;"	f	file:
print_priorities	kern/sched.c	/^void print_priorities(){$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
priority_fork	lib/fork.c	/^priority_fork(int priority){$/;"	f
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/net/ns.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testinput.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testoutput.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echosrv.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echotest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/exechello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/httpd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testtime.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
process_timer	net/serv.c	/^process_timer(envid_t envid) {$/;"	f	file:
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
protent	net/lwip/netif/ppp/ppp.h	/^struct protent {$/;"	s
proterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER proterr;          \/* Protocol error. *\/$/;"	m	struct:stats_proto
proto	net/lwip/include/lwip/api_msg.h	/^      u8_t proto;$/;"	m	struct:api_msg_msg::__anon30::__anon31
proto	net/lwip/netif/ppp/ppp.c	/^  u16_t proto;$/;"	m	struct:pppInputHeader	file:
proto	obj/net/ns.asm	/^  proto = IPH_PROTO(iphdr);$/;"	d
proto_name	net/lwip/netif/ppp/fsm.h	/^  char *proto_name;                                 \/* String name for protocol (for messages) *\/$/;"	m	struct:fsm_callbacks
protocol	net/lwip/include/lwip/raw.h	/^  u8_t protocol;$/;"	m	struct:raw_pcb
protocol	net/lwip/netif/ppp/fsm.h	/^  u_short protocol;                \/* Data Link Layer Protocol field value *\/$/;"	m	struct:fsm
protocol	net/lwip/netif/ppp/ppp.c	/^  int         protocol; \/* PPP procotol, e.g. PPP_IP *\/$/;"	m	struct:npioctl	file:
protocol	net/lwip/netif/ppp/ppp.h	/^    u_short protocol;       \/* PPP protocol number *\/$/;"	m	struct:protent
protrej	net/lwip/netif/ppp/ppp.h	/^    void (*protrej) (int unit);$/;"	m	struct:protent
protreject	net/lwip/netif/ppp/fsm.h	/^  void (*protreject)(int);                          \/* Called when Protocol-Reject received *\/$/;"	m	struct:fsm_callbacks
proxy_arp	net/lwip/netif/ppp/ipcp.h	/^  u_int   proxy_arp     : 1; \/* Make proxy ARP entry for peer? *\/$/;"	m	struct:ipcp_options
psem	net/lwip/core/sys.c	/^  sys_sem_t *psem;$/;"	m	struct:sswt_cb	file:
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/net/ns.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/net/testinput.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/net/testoutput.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/badsegment.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/breakpoint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/divzero.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/dumbfork.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echosrv.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echotest.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/exechello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/fairness.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultalloc.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultallocbad.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultbadhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultdie.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultevilhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultnostack.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultread.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultreadkernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultregs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwrite.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwritekernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/hello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/httpd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/idle.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primes.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sendpage.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/softint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spin.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/stresssched.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testbss.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testtime.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/yield.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *	$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
ptr	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::
ptr	obj/net/ns.asm	/^         ptr = ((struct mem *)&ram[ptr])->next) {$/;"	d
ptr	obj/net/ns.asm	/^    ptr = (void *)((u8_t *)ptr + seglen);$/;"	d
ptr	obj/net/ns.asm	/^  ptr = (u8_t *)mem - ram;$/;"	d
ptr	obj/net/ns.asm	/^  ptr = arg;$/;"	d
ptr2	obj/net/ns.asm	/^          ptr2 = ptr + SIZEOF_STRUCT_MEM + size;$/;"	d
ptr2	obj/net/ns.asm	/^    ptr2 = ptr + SIZEOF_STRUCT_MEM + newsize;$/;"	d
push_node	net/lwip/core/snmp/mib_structs.c	/^push_node(struct nse* node)$/;"	f	file:
put_buffer	net/serv.c	/^put_buffer(void *va) {$/;"	f	file:
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
q	net/lwip/netif/etharp.c	/^  struct etharp_q_entry *q;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::etharp_q_entry	file:
q	obj/net/ns.asm	/^          q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^        q = NULL;$/;"	d
q	obj/net/ns.asm	/^        q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^      q = memp_malloc(MEMP_PBUF_POOL);$/;"	d
q	obj/net/ns.asm	/^      q = p->next;$/;"	d
q	obj/net/ns.asm	/^    q = NULL;$/;"	d
q	obj/net/ns.asm	/^    q = iprh_tmp->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^    q = mem_realloc(q, (u8_t *)q->payload - (u8_t *)q + rem_len);$/;"	d
q	obj/net/ns.asm	/^    q = p;$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, 0, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, UDP_HLEN, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = q->next;$/;"	d
q	obj/net/ns.asm	/^  q = p->next;$/;"	d
q	obj/net/ns.asm	/^  q = p;$/;"	d
q	obj/net/ns.asm	/^  q = pbuf_alloc(PBUF_IP, sizeof(struct icmp_dur_hdr) + IP_HLEN + ICMP_DEST_UNREACH_DATASIZE,$/;"	d
queue	obj/net/ns.asm	/^      queue = seg;$/;"	d
queued_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t queued_msg;$/;"	m	struct:sys_mbox_entry	file:
queuelen	obj/net/ns.asm	/^  queuelen = pcb->snd_queuelen;$/;"	d
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab6	/^r = Runner(save("jos.out"),$/;"	v
r	net/lwip/include/lwip/api_msg.h	/^    } r;$/;"	m	union:api_msg_msg::__anon30	typeref:struct:api_msg_msg::__anon30::__anon35
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/net/ns.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/ns.asm	/^			r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = -E_INVAL;$/;"	d
r	obj/net/ns.asm	/^		r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = lwip_accept(req->accept.req_s, &ret.ret_addr,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_bind(req->bind.req_s, &req->bind.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_close(req->close.req_s);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_connect(req->connect.req_s, &req->connect.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_listen(req->listen.req_s, req->listen.req_backlog);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_recv(req->recv.req_s, req->recvRet.ret_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_send(req->send.req_s, &req->send.req_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_shutdown(req->shutdown.req_s, req->shutdown.req_how);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_socket(req->socket.req_domain, req->socket.req_type,$/;"	d
r	obj/net/ns.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/ns.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/net/ns.asm	/^              r = r->next;$/;"	d
r	obj/net/ns.asm	/^            r = arp_table[i].q;$/;"	d
r	obj/net/ns.asm	/^      r = iprh->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^      r = pbuf_alloc(PBUF_LINK, p->tot_len, PBUF_RAM);$/;"	d
r	obj/net/ns.asm	/^      r = q;$/;"	d
r	obj/net/ns.asm	/^      r = r->next;$/;"	d
r	obj/net/ns.asm	/^    r = ((struct ip_reass_helper*)ipr->p->payload)->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^    r = p;$/;"	d
r	obj/net/ns.asm	/^    r = q;$/;"	d
r	obj/net/ns.asm	/^    r = reassdatagrams;$/;"	d
r	obj/net/ns.asm	/^  r = reassdatagrams;$/;"	d
r	obj/net/testinput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testinput.asm	/^			r = 0;$/;"	d
r	obj/net/testinput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testinput.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/net/testoutput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testoutput.asm	/^			r = 0;$/;"	d
r	obj/net/testoutput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testoutput.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echosrv.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echosrv.asm	/^			r = 0;$/;"	d
r	obj/user/echosrv.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echosrv.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echotest.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echotest.asm	/^			r = 0;$/;"	d
r	obj/user/echotest.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echotest.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/exechello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/exechello.asm	/^			r = 0;$/;"	d
r	obj/user/exechello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/exechello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/httpd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/httpd.asm	/^			r = 0;$/;"	d
r	obj/user/httpd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/httpd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 512, "HTTP\/" HTTP_VERSION" %d %s\\r\\n"$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sendpage.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sendpage.asm	/^			r = 0;$/;"	d
r	obj/user/sendpage.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sendpage.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testtime.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testtime.asm	/^			r = 0;$/;"	d
r	obj/user/testtime.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testtime.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^	r = read(0, &c, 1);$/;"	d
r_id	net/lwip/core/snmp/mib_structs.c	/^  s32_t r_id;$/;"	m	struct:nse	file:
r_nl	net/lwip/core/snmp/mib_structs.c	/^  u8_t r_nl;$/;"	m	struct:nse	file:
r_ptr	net/lwip/core/snmp/mib_structs.c	/^  struct mib_node* r_ptr;$/;"	m	struct:nse	typeref:struct:nse::mib_node	file:
rah	kern/e1000.c	/^uint32_t *rah, *ral;$/;"	v
rah	obj/kern/kernel.asm	/^	rah = (uint32_t *)(temp + 0x5404);  \/\/ Doubtful$/;"	d
ral	kern/e1000.c	/^uint32_t *rah, *ral;$/;"	v
ral	obj/kern/kernel.asm	/^	ral = (uint32_t *)(temp + 0x5400);$/;"	d
ram	net/lwip/core/mem.c	/^static u8_t *ram;$/;"	v	file:
ram	obj/net/ns.asm	/^  ram = LWIP_MEM_ALIGN(ram_heap);$/;"	d
ram_end	net/lwip/core/mem.c	/^static struct mem *ram_end;$/;"	v	typeref:struct:mem	file:
ram_end	obj/net/ns.asm	/^  ram_end = (struct mem *)&ram[MEM_SIZE_ALIGNED];$/;"	d
ram_heap	net/lwip/core/mem.c	/^static u8_t ram_heap[MEM_SIZE_ALIGNED + (2*SIZEOF_STRUCT_MEM) + MEM_ALIGNMENT];$/;"	v	file:
rambuf	obj/net/ns.asm	/^  rambuf = pbuf_alloc(PBUF_LINK, 0, PBUF_REF);$/;"	d
randCount	net/lwip/netif/ppp/randm.c	/^static long randCount = 0;      \/* Pseudo-random incrementer *\/$/;"	v	file:
randPool	net/lwip/netif/ppp/randm.c	/^static char randPool[RANDPOOLSZ];   \/* Pool of randomness. *\/$/;"	v	file:
raw	net/lwip/include/lwip/api.h	/^    struct raw_pcb *raw;$/;"	m	union:netconn::__anon25	typeref:struct:netconn::__anon25::raw_pcb
raw_bind	net/lwip/core/raw.c	/^raw_bind(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_connect	net/lwip/core/raw.c	/^raw_connect(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_init	net/lwip/include/lwip/raw.h	89;"	d
raw_input	net/lwip/core/raw.c	/^raw_input(struct pbuf *p, struct netif *inp)$/;"	f
raw_new	net/lwip/core/raw.c	/^raw_new(u8_t proto) {$/;"	f
raw_pcb	net/lwip/include/lwip/raw.h	/^struct raw_pcb {$/;"	s
raw_pcbs	net/lwip/core/raw.c	/^static struct raw_pcb *raw_pcbs;$/;"	v	typeref:struct:raw_pcb	file:
raw_pcbs	obj/net/ns.asm	/^            raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = raw_pcbs->next;$/;"	d
raw_recv	net/lwip/core/raw.c	/^raw_recv(struct raw_pcb *pcb,$/;"	f
raw_remove	net/lwip/core/raw.c	/^raw_remove(struct raw_pcb *pcb)$/;"	f
raw_send	net/lwip/core/raw.c	/^raw_send(struct raw_pcb *pcb, struct pbuf *p)$/;"	f
raw_sendto	net/lwip/core/raw.c	/^raw_sendto(struct raw_pcb *pcb, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/ns.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testinput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testoutput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echosrv.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echotest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/exechello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/httpd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testtime.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rctl	kern/e1000.c	/^uint32_t *rdbah, *rdbal, *rdlen, *rdh, *rdt, *rctl, *ims, *rdtr;$/;"	v
rctl	obj/kern/kernel.asm	/^	rctl = (uint32_t *)(temp + 0x00100); *rctl = 0x4808082;$/;"	d
rcv_ann_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_ann_wnd; \/* announced receive window *\/$/;"	m	struct:tcp_pcb
rcv_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t rcv_nxt;   \/* next seqno expected *\/$/;"	m	struct:tcp_pcb
rcv_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_wnd;   \/* receiver window *\/$/;"	m	struct:tcp_pcb
rcvevent	net/lwip/api/sockets.c	/^  u16_t rcvevent;$/;"	m	struct:lwip_socket	file:
rdbah	kern/e1000.c	/^uint32_t *rdbah, *rdbal, *rdlen, *rdh, *rdt, *rctl, *ims, *rdtr;$/;"	v
rdbah	obj/kern/kernel.asm	/^	rdbah = (uint32_t *)(temp + 0x02804); *rdbah = 0;$/;"	d
rdbal	kern/e1000.c	/^uint32_t *rdbah, *rdbal, *rdlen, *rdh, *rdt, *rctl, *ims, *rdtr;$/;"	v
rdbal	obj/kern/kernel.asm	/^	rdbal = (uint32_t *)(temp + 0x02800); *rdbal = PADDR(recv_desc);$/;"	d
rdh	kern/e1000.c	/^uint32_t *rdbah, *rdbal, *rdlen, *rdh, *rdt, *rctl, *ims, *rdtr;$/;"	v
rdh	obj/kern/kernel.asm	/^	rdh = (uint32_t *)(temp + 0x02810); *rdh = 0;$/;"	d
rdlen	kern/e1000.c	/^uint32_t *rdbah, *rdbal, *rdlen, *rdh, *rdt, *rctl, *ims, *rdtr;$/;"	v
rdlen	obj/kern/kernel.asm	/^	rdlen = (uint32_t *)(temp + 0x02808); *rdlen = 16*SIZEOF_QUEUE;$/;"	d
rdt	kern/e1000.c	/^uint32_t *rdbah, *rdbal, *rdlen, *rdh, *rdt, *rctl, *ims, *rdtr;$/;"	v
rdt	obj/kern/kernel.asm	/^	rdt = (uint32_t *)(temp + 0x02818); *rdt = 125;$/;"	d
rdtr	kern/e1000.c	/^uint32_t *rdbah, *rdbal, *rdlen, *rdh, *rdt, *rctl, *ims, *rdtr;$/;"	v
rdtr	obj/kern/kernel.asm	/^	rdtr = (uint32_t *)(temp + 0x02820); *rdtr = 0;$/;"	d
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
read	net/lwip/include/lwip/sockets.h	345;"	d
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_pcap	grade-lab6	/^def read_pcap():$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
readset	net/lwip/api/sockets.c	/^  fd_set *readset;$/;"	m	struct:lwip_select_cb	file:
ready	grade-lab6	/^        def ready(line):$/;"	f	function:mk_test_httpd.test_httpd_test
ready	grade-lab6	/^    def ready(line):$/;"	f	function:test_echosrv
reassdatagrams	net/lwip/core/ipv4/ip_frag.c	/^static struct ip_reassdata *reassdatagrams;$/;"	v	typeref:struct:ip_reassdata	file:
reassdatagrams	obj/net/ns.asm	/^    reassdatagrams = ipr->next;$/;"	d
reassdatagrams	obj/net/ns.asm	/^  reassdatagrams = ipr;$/;"	d
rebind	obj/net/ns.asm	/^      rebind = 1;$/;"	d
rebind	obj/net/ns.asm	/^  rebind = 0;$/;"	d
recieve_packets	kern/e1000.c	/^recieve_packets(char *packet, int *size){$/;"	f
recv	inc/ns.h	/^	} recv;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_recv
recv	net/lwip/include/lwip/raw.h	/^  u8_t (* recv)(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	m	struct:raw_pcb
recv	net/lwip/include/lwip/sockets.h	336;"	d
recv	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER recv;             \/* Received packets. *\/$/;"	m	struct:stats_proto
recv	net/lwip/include/lwip/tcp.h	/^  err_t (* recv)(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err);$/;"	m	struct:tcp_pcb
recv	net/lwip/include/lwip/udp.h	/^  void (* recv)(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	m	struct:udp_pcb
recvRet	inc/ns.h	/^	} recvRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_recv
recv_arg	net/lwip/include/lwip/raw.h	/^  void *recv_arg;$/;"	m	struct:raw_pcb
recv_arg	net/lwip/include/lwip/udp.h	/^  void *recv_arg;  $/;"	m	struct:udp_pcb
recv_avail	net/lwip/include/lwip/api.h	/^  u16_t recv_avail;$/;"	m	struct:netconn
recv_bufsize	net/lwip/include/lwip/api.h	/^  int recv_bufsize;$/;"	m	struct:netconn
recv_data	net/lwip/core/tcp_in.c	/^static struct pbuf *recv_data;$/;"	v	typeref:struct:pbuf	file:
recv_data	obj/net/ns.asm	/^              recv_data = cseg->p;$/;"	d
recv_data	obj/net/ns.asm	/^          recv_data = inseg.p;$/;"	d
recv_data	obj/net/ns.asm	/^    recv_data = NULL;$/;"	d
recv_desc	kern/e1000.c	/^struct rx_desc recv_desc[SIZEOF_QUEUE];$/;"	v	typeref:struct:rx_desc
recv_flags	net/lwip/core/tcp_in.c	/^static u8_t recv_flags;$/;"	v	file:
recv_flags	obj/net/ns.asm	/^            recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^          recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_CLOSED;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_RESET;$/;"	d
recv_flags	obj/net/ns.asm	/^    recv_flags = 0;$/;"	d
recv_head	kern/e1000.c	/^static uint32_t recv_head = 0;$/;"	v	file:
recv_idle	net/lwip/netif/ppp/ppp.h	/^  u_short recv_idle;      \/* seconds since last NP packet received *\/$/;"	m	struct:ppp_idle
recv_raw	net/lwip/api/api_msg.c	/^recv_raw(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	f	file:
recv_tcp	net/lwip/api/api_msg.c	/^recv_tcp(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
recv_timeout	net/lwip/include/lwip/api.h	/^  int recv_timeout;$/;"	m	struct:netconn
recv_udp	net/lwip/api/api_msg.c	/^recv_udp(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	f	file:
recvfrom	net/lwip/include/lwip/sockets.h	337;"	d
recvmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t recvmbox;$/;"	m	struct:netconn
ref	net/lwip/include/lwip/pbuf.h	/^  u16_t ref;$/;"	m	struct:pbuf
ref	obj/net/ns.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
ref	obj/net/ns.asm	/^    ref = --(p->ref);$/;"	d
ref	obj/user/httpd.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
refuse_chap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_chap       : 1;       \/* Don't wanna auth. ourselves with CHAP *\/$/;"	m	struct:ppp_settings
refuse_pap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_pap        : 1;       \/* Don't wanna auth. ourselves with PAP *\/$/;"	m	struct:ppp_settings
refused_data	net/lwip/include/lwip/tcp.h	/^  struct pbuf *refused_data; \/* Data previously received but not yet taken by upper layer *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::pbuf
reg_base	kern/pci.h	/^    uint32_t reg_base[6];$/;"	m	struct:pci_func
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
reg_size	kern/pci.h	/^    uint32_t reg_size[6];$/;"	m	struct:pci_func
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
rejci	net/lwip/netif/ppp/fsm.h	/^  int  (*rejci)(fsm*, u_char*, int);                \/* Reject our Configuration Information *\/$/;"	m	struct:fsm_callbacks
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
rem	obj/net/ns.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/net/testinput.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echosrv.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echotest.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/httpd.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem_len	obj/net/ns.asm	/^    rem_len = length - p->len;$/;"	d
rem_len	obj/net/ns.asm	/^  rem_len = new_len;$/;"	d
remote_name	net/lwip/netif/ppp/ppp.h	/^  char remote_name[MAXNAMELEN   + 1]; \/* Peer's name for authentication *\/$/;"	m	struct:ppp_settings
remote_port	net/lwip/include/lwip/tcp.h	/^  u16_t remote_port;$/;"	m	struct:tcp_pcb
remote_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
remote_port	obj/net/ns.asm	/^    remote_port      = 0;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port      = ntohs(((struct sockaddr_in *)to)->sin_port);$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port = pcb->remote_port;$/;"	d
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
report_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_rxed;      \/* *\/$/;"	m	struct:stats_igmp
report_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_sent;      \/* *\/$/;"	m	struct:stats_igmp
req	net/serv.c	/^	union Nsipc *req;$/;"	m	struct:st_args	typeref:union:st_args::Nsipc	file:
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_addr      : 1; \/* Ask peer to send IP address? *\/$/;"	m	struct:ipcp_options
req_addrlen	inc/ns.h	/^		socklen_t req_addrlen;$/;"	m	struct:Nsipc::Nsreq_accept
req_backlog	inc/ns.h	/^		int req_backlog;$/;"	m	struct:Nsipc::Nsreq_listen
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_buf	inc/ns.h	/^		char req_buf[0];$/;"	m	struct:Nsipc::Nsreq_send
req_dns1	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns1      : 1; \/* Ask peer to send primary DNS address? *\/$/;"	m	struct:ipcp_options
req_dns2	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns2      : 1; \/* Ask peer to send secondary DNS address? *\/$/;"	m	struct:ipcp_options
req_domain	inc/ns.h	/^		int req_domain;$/;"	m	struct:Nsipc::Nsreq_socket
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_recv
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_send
req_free	user/httpd.c	/^req_free(struct http_request *req)$/;"	f	file:
req_how	inc/ns.h	/^		int req_how;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_len	inc/ns.h	/^		int req_len;$/;"	m	struct:Nsipc::Nsreq_recv
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_bind	typeref:struct:Nsipc::Nsreq_bind::sockaddr
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_connect	typeref:struct:Nsipc::Nsreq_connect::sockaddr
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_bind
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_connect
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_protocol	inc/ns.h	/^		int req_protocol;$/;"	m	struct:Nsipc::Nsreq_socket
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_accept
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_bind
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_close
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_connect
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_listen
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_recv
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_send
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
req_size	inc/ns.h	/^		int req_size;$/;"	m	struct:Nsipc::Nsreq_send
req_type	inc/ns.h	/^		int req_type;$/;"	m	struct:Nsipc::Nsreq_socket
reqci	net/lwip/netif/ppp/fsm.h	/^  int  (*reqci)(fsm*, u_char*, int*, int);          \/* Request peer's Configuration Information *\/$/;"	m	struct:fsm_callbacks
reqid	net/lwip/netif/ppp/fsm.h	/^  u_char reqid;                    \/* Current request id *\/$/;"	m	struct:fsm
reqno	net/serv.c	/^	int32_t reqno;$/;"	m	struct:st_args	file:
reqno	obj/net/ns.asm	/^		reqno = ipc_recv((int32_t *) &whom, (void *) va, &perm);$/;"	d
request_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t request_timeout; \/* #ticks with period DHCP_FINE_TIMER_SECS for request timeout *\/$/;"	m	struct:dhcp
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
resetci	net/lwip/netif/ppp/fsm.h	/^  void (*resetci)(fsm*);                            \/* Reset our Configuration Information *\/$/;"	m	struct:fsm_callbacks
resp_id	net/lwip/netif/ppp/chap.h	/^  u_char resp_id;                         \/* ID for response messages *\/$/;"	m	struct:chap_state
resp_length	net/lwip/netif/ppp/chap.h	/^  u_char resp_length;                     \/* length of response *\/$/;"	m	struct:chap_state
resp_name	net/lwip/netif/ppp/chap.h	/^  char *resp_name;                        \/* Our name to send with response *\/$/;"	m	struct:chap_state
resp_transmits	net/lwip/netif/ppp/chap.h	/^  int resp_transmits;                     \/* Number of transmissions of response *\/$/;"	m	struct:chap_state
resp_type	net/lwip/netif/ppp/chap.h	/^  u_char resp_type;                       \/* hash algorithm for responses *\/$/;"	m	struct:chap_state
responce_header	user/httpd.c	/^struct responce_header {$/;"	s	file:
response	net/lwip/netif/ppp/chap.h	/^  u_char response[MAX_RESPONSE_LENGTH];   \/* Response to send *\/$/;"	m	struct:chap_state
restart	net/lwip/netif/ppp/lcp.h	/^    u_int restart           : 1; \/* Restart vs. exit after close *\/$/;"	m	struct:lcp_options
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
result	obj/net/ns.asm	/^          result = ERR_OK;$/;"	d
result	obj/net/ns.asm	/^      result = etharp_send_ip(netif, q, srcaddr, &(arp_table[i].ethaddr));$/;"	d
result	obj/net/ns.asm	/^    result = etharp_request(netif, ipaddr);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_create_request(netif);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_discover(netif);$/;"	d
result	obj/net/ns.asm	/^  result = etharp_query(netif, &dhcp->offered_ip_addr, NULL);$/;"	d
result	obj/net/ns.asm	/^  result = netif->linkoutput(netif, p);$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/net/ns.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testinput.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testoutput.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echosrv.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echotest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/exechello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/httpd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testtime.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^ret:$/;"	l
ret	obj/net/ns.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/ns.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^      ret = ip_output_if(p, &(iphdr->src), IP_HDRINCL,$/;"	d
ret	obj/net/ns.asm	/^    ret = pbuf_copy_partial(dhcp->p, dhcp->options_in, dhcp->options_in_len, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN);$/;"	d
ret	obj/net/ns.asm	/^  ret = pbuf_copy_partial(dhcp->p, dhcp->msg_in, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN, 0);$/;"	d
ret	obj/net/ns.asm	/^  ret = tcp_enqueue(pcb, NULL, 0, TCP_SYN, 0, (u8_t *)&optdata, 4);$/;"	d
ret	obj/net/testinput.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testinput.asm	/^	ret = dst;$/;"	d
ret	obj/net/testoutput.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/net/testoutput.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
ret	obj/user/echosrv.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echosrv.asm	/^	ret = dst;$/;"	d
ret	obj/user/echotest.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echotest.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/exechello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/exechello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/httpd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/httpd.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
ret	obj/user/testtime.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testtime.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret_addr	inc/ns.h	/^		struct sockaddr ret_addr;$/;"	m	struct:Nsipc::Nsret_accept	typeref:struct:Nsipc::Nsret_accept::sockaddr
ret_addrlen	inc/ns.h	/^		socklen_t ret_addrlen;$/;"	m	struct:Nsipc::Nsret_accept
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_buf	inc/ns.h	/^		char ret_buf[0];$/;"	m	struct:Nsipc::Nsret_recv
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
retransmit	net/lwip/netif/ppp/fsm.h	/^  void (*retransmit)(fsm*);                         \/* Retransmission is necessary *\/$/;"	m	struct:fsm_callbacks
retransmits	net/lwip/netif/ppp/fsm.h	/^  int retransmits;                 \/* Number of retransmissions left *\/$/;"	m	struct:fsm
retries	net/lwip/core/dns.c	/^  u8_t  retries;$/;"	m	struct:dns_table_entry	file:
retval	obj/fs/fs.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/net/ns.asm	/^		retval = ipc_recv(&envid, &nsipcbuf, &perms);$/;"	d
retval	obj/net/ns.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/net/ns.asm	/^		retval = sys_recieve_packet(nsipcbuf.pkt.jp_data, &size);$/;"	d
retval	obj/net/ns.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/net/testinput.asm	/^		retval = ipc_recv(&envid, &nsipcbuf, &perms);$/;"	d
retval	obj/net/testinput.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/net/testinput.asm	/^		retval = sys_recieve_packet(nsipcbuf.pkt.jp_data, &size);$/;"	d
retval	obj/net/testinput.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/net/testoutput.asm	/^		retval = ipc_recv(&envid, &nsipcbuf, &perms);$/;"	d
retval	obj/net/testoutput.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/net/testoutput.asm	/^		retval = sys_recieve_packet(nsipcbuf.pkt.jp_data, &size);$/;"	d
retval	obj/net/testoutput.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/user/badsegment.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/breakpoint.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/buggyhello.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/buggyhello2.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/cat.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/divzero.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/dumbfork.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/echo.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/echosrv.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/echotest.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/evilhello.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/exechello.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/fairness.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/faultalloc.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/faultallocbad.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/faultbadhandler.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/faultdie.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/faultevilhandler.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/faultnostack.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/faultread.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/faultreadkernel.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/faultregs.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/faultwrite.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/faultwritekernel.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/forktree.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/forktree.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/user/hello.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/httpd.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/icode.asm	/^				retval = sys_page_map (0, (void *)pgdir_index, child , (void *)pgdir_index, uvpt[pgdir_index \/ PGSIZE] &PTE_SYSCALL);$/;"	d
retval	obj/user/icode.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/idle.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/init.asm	/^				retval = sys_page_map (0, (void *)pgdir_index, child , (void *)pgdir_index, uvpt[pgdir_index \/ PGSIZE] &PTE_SYSCALL);$/;"	d
retval	obj/user/init.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/ls.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/lsfd.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/num.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/pingpong.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/pingpong.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/user/pingpongs.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/pingpongs.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/user/primes.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/primes.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/user/primespipe.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/primespipe.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/user/sendpage.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/sendpage.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/user/sh.asm	/^				retval = sys_page_map (0, (void *)pgdir_index, child , (void *)pgdir_index, uvpt[pgdir_index \/ PGSIZE] &PTE_SYSCALL);$/;"	d
retval	obj/user/sh.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/sh.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/user/softint.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/spawnhello.asm	/^				retval = sys_page_map (0, (void *)pgdir_index, child , (void *)pgdir_index, uvpt[pgdir_index \/ PGSIZE] &PTE_SYSCALL);$/;"	d
retval	obj/user/spawnhello.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/spin.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/spin.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/user/stresssched.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/stresssched.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/user/testbss.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/testfdsharing.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/testfdsharing.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/user/testfile.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/testkbd.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/testpipe.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/testpipe.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/user/testpiperace.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/testpiperace.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/user/testpiperace2.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/testpiperace2.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/user/testpteshare.asm	/^				retval = sys_page_map (0, (void *)pgdir_index, child , (void *)pgdir_index, uvpt[pgdir_index \/ PGSIZE] &PTE_SYSCALL);$/;"	d
retval	obj/user/testpteshare.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/testpteshare.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/user/testshell.asm	/^				retval = sys_page_map (0, (void *)pgdir_index, child , (void *)pgdir_index, uvpt[pgdir_index \/ PGSIZE] &PTE_SYSCALL);$/;"	d
retval	obj/user/testshell.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/testshell.asm	/^        	retval = sys_page_map(0, va, envid, va, uvpt[pn]&PTE_SYSCALL);$/;"	d
retval	obj/user/testtime.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
retval	obj/user/yield.asm	/^		retval = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rhl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_resp_header_lengths rhl;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_resp_header_lengths
rid	net/lwip/include/lwip/snmp_msg.h	/^  s32_t rid;$/;"	m	struct:snmp_msg_pstat
ridlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t ridlen;$/;"	m	struct:snmp_resp_header_lengths
ridlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ridlenlen;$/;"	m	struct:snmp_resp_header_lengths
right_wnd_edge	obj/net/ns.asm	/^    right_wnd_edge = pcb->snd_wnd + pcb->snd_wl1;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rp	obj/net/ns.asm	/^  rp = str;$/;"	d
rp	obj/net/testinput.asm	/^  rp = str;$/;"	d
rp	obj/user/echosrv.asm	/^  rp = str;$/;"	d
rp	obj/user/echotest.asm	/^  rp = str;$/;"	d
rp	obj/user/httpd.asm	/^  rp = str;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon11	file:
rseg	obj/net/ns.asm	/^      rseg = pcb->unacked;$/;"	d
rstate	net/lwip/netif/ppp/vj.h	/^  struct cstate rstate[MAX_SLOTS]; \/* receive connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
rt	net/lwip/include/lwip/snmp_msg.h	/^  u8_t rt;$/;"	m	struct:snmp_msg_pstat
rterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER rterr;            \/* Routing error. *\/$/;"	m	struct:stats_proto
rtime	net/lwip/include/lwip/tcp.h	/^  s16_t rtime;$/;"	m	struct:tcp_pcb
rto	net/lwip/include/lwip/tcp.h	/^  s16_t rto;    \/* retransmission time-out *\/$/;"	m	struct:tcp_pcb
rtseq	net/lwip/include/lwip/tcp.h	/^  u32_t rtseq;  \/* sequence number being timed *\/$/;"	m	struct:tcp_pcb
rttest	net/lwip/include/lwip/tcp.h	/^  u32_t rttest; \/* RTT estimate in 500ms ticks *\/$/;"	m	struct:tcp_pcb
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f
runit	obj/user/sh.asm	/^runit:$/;"	l
rx_buffer	kern/e1000.c	/^char rx_buffer[SIZEOF_QUEUE][PKT_SIZE];$/;"	v
rx_desc	kern/e1000.h	/^struct rx_desc$/;"	s
s	net/lwip/api/sockets.c	/^  int s;$/;"	m	struct:lwip_setgetsockopt_data	file:
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^    s = conn->socket;$/;"	d
s	obj/net/ns.asm	/^  s = data->s;$/;"	d
s	obj/net/testinput.asm	/^	s = src;$/;"	d
s	obj/net/testoutput.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
s	obj/user/echosrv.asm	/^	s = src;$/;"	d
s	obj/user/echotest.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/exechello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/httpd.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/sh.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
s	obj/user/testtime.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s16_t	net/lwip/jos/arch/cc.h	/^typedef int16_t s16_t;$/;"	t
s32_t	net/lwip/jos/arch/cc.h	/^typedef int32_t s32_t;$/;"	t
s64_t	net/lwip/jos/arch/cc.h	/^typedef int64_t s64_t;$/;"	t
s8_t	net/lwip/jos/arch/cc.h	/^typedef int8_t s8_t;$/;"	t
s8_t	obj/net/ns.asm	/^s8_t$/;"	l
s_addr	net/lwip/include/ipv4/lwip/inet.h	/^  u32_t s_addr;$/;"	m	struct:in_addr
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
sa	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
sa_data	net/lwip/include/lwip/sockets.h	/^  char sa_data[14];$/;"	m	struct:sockaddr
sa_family	net/lwip/include/lwip/sockets.h	/^  u8_t sa_family;$/;"	m	struct:sockaddr
sa_len	net/lwip/include/lwip/sockets.h	/^  u8_t sa_len;$/;"	m	struct:sockaddr
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
save_pcap	grade-lab6	/^    def save_pcap(fail):$/;"	f	function:save_pcap_on_fail
save_pcap_on_fail	grade-lab6	/^def save_pcap_on_fail():$/;"	f
sc_ac_cookie	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_ac_cookie;          \/* content of AC cookie we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_ac_cookie_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_ac_cookie_len;     \/* length of cookie data *\/$/;"	m	struct:pppoe_softc	file:
sc_concentrator_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_concentrator_name;  \/* if != NULL: requested concentrator id *\/$/;"	m	struct:pppoe_softc	file:
sc_dest	net/lwip/netif/ppp/ppp_oe.c	/^  struct eth_addr sc_dest;     \/* hardware address of concentrator *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::eth_addr	file:
sc_ethif	net/lwip/netif/ppp/ppp_oe.c	/^  struct netif *sc_ethif;      \/* ethernet interface we are using *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::netif	file:
sc_hunique	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_hunique;            \/* content of host unique we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_hunique_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_hunique_len;       \/* length of host unique *\/$/;"	m	struct:pppoe_softc	file:
sc_linkStatusCB	net/lwip/netif/ppp/ppp_oe.c	/^  void (*sc_linkStatusCB)(int pd, int up);$/;"	m	struct:pppoe_softc	file:
sc_padi_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padi_retried;         \/* number of PADI retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_padr_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padr_retried;         \/* number of PADR retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_pd	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_pd;                   \/* ppp unit number *\/$/;"	m	struct:pppoe_softc	file:
sc_service_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_service_name;       \/* if != NULL: requested name of service *\/$/;"	m	struct:pppoe_softc	file:
sc_session	net/lwip/netif/ppp/ppp_oe.c	/^  u16_t sc_session;            \/* PPPoE session id *\/$/;"	m	struct:pppoe_softc	file:
sc_state	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_state;                \/* discovery phase or session connected *\/$/;"	m	struct:pppoe_softc	file:
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
seen_ack	net/lwip/netif/ppp/fsm.h	/^  u_char seen_ack;                 \/* Have received valid Ack\/Nak\/Rej to Req *\/$/;"	m	struct:fsm
seg	obj/net/ns.asm	/^      seg = NULL;$/;"	d
seg	obj/net/ns.asm	/^    seg = memp_malloc(MEMP_TCP_SEG);$/;"	d
seg	obj/net/ns.asm	/^    seg = next;$/;"	d
seg	obj/net/ns.asm	/^    seg = pcb->unsent;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked->next;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unsent;$/;"	d
seglen	obj/net/ns.asm	/^    seglen = left > pcb->mss? pcb->mss: left;$/;"	d
seglen	obj/net/ns.asm	/^  seglen = 0;$/;"	d
select	net/lwip/include/lwip/sockets.h	341;"	d
select_cb_list	net/lwip/api/sockets.c	/^static struct lwip_select_cb *select_cb_list;$/;"	v	typeref:struct:lwip_select_cb	file:
select_cb_list	obj/net/ns.asm	/^      select_cb_list = select_cb.next;$/;"	d
select_cb_list	obj/net/ns.asm	/^    select_cb_list = &select_cb;$/;"	d
selectsem	net/lwip/api/sockets.c	/^static sys_sem_t selectsem;$/;"	v	file:
selectsem	obj/net/ns.asm	/^  selectsem = sys_sem_new(1);$/;"	d
sem	net/lwip/api/sockets.c	/^  sys_sem_t sem;$/;"	m	struct:lwip_select_cb	file:
sem	net/lwip/include/lwip/api_msg.h	/^  sys_sem_t sem;$/;"	m	struct:dns_api_msg
sem	net/lwip/include/lwip/netifapi.h	/^  sys_sem_t sem;$/;"	m	struct:netifapi_msg_msg
sem	net/lwip/include/lwip/stats.h	/^  struct stats_syselem sem;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
sem	net/lwip/include/lwip/tcpip.h	/^  sys_sem_t *sem;$/;"	m	struct:tcpip_msg
sem_signalled	net/lwip/api/sockets.c	/^  int sem_signalled;$/;"	m	struct:lwip_select_cb	file:
sems	net/lwip/jos/arch/sys_arch.c	/^static struct sys_sem_entry sems[NSEM];$/;"	v	typeref:struct:sys_sem_entry	file:
send	inc/ns.h	/^	} send;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_send
send	net/lwip/include/lwip/sockets.h	338;"	d
send_content_type	user/httpd.c	/^send_content_type(struct http_request *req)$/;"	f	file:
send_data	user/httpd.c	/^send_data(struct http_request *req, int fd)$/;"	f	file:
send_error	user/httpd.c	/^send_error(struct http_request *req, int code)$/;"	f	file:
send_file	user/httpd.c	/^send_file(struct http_request *req)$/;"	f	file:
send_header	user/httpd.c	/^send_header(struct http_request *req, int code)$/;"	f	file:
send_header_fin	user/httpd.c	/^send_header_fin(struct http_request *req)$/;"	f	file:
send_packets	grade-lab6	/^    def send_packets():$/;"	f	function:test_testinput_helper
send_size	user/httpd.c	/^send_size(struct http_request *req, off_t size)$/;"	f	file:
sendevent	net/lwip/api/sockets.c	/^  u16_t sendevent;$/;"	m	struct:lwip_socket	file:
sendmss	obj/net/ns.asm	/^    sendmss = LWIP_MIN(sendmss, mss_s);$/;"	d
sendto	net/lwip/include/lwip/sockets.h	339;"	d
sent	net/lwip/include/lwip/tcp.h	/^  err_t (* sent)(void *arg, struct tcp_pcb *pcb, u16_t space);$/;"	m	struct:tcp_pcb
sent_num	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t sent_num;            \/* sent number of probes or announces, dependent on state *\/$/;"	m	struct:autoip
sent_tcp	net/lwip/api/api_msg.c	/^sent_tcp(void *arg, struct tcp_pcb *pcb, u16_t len)$/;"	f	file:
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_resp_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_trap_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind_root
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_resp_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_trap_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind_root
seqno	net/lwip/core/dns.c	/^  u8_t  seqno;$/;"	m	struct:dns_table_entry	file:
seqno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
seqno	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t seqno;$/;"	m	struct:icmp_echo_hdr
seqno	obj/net/ns.asm	/^          seqno = pcb->ooseq->tcphdr->seqno;$/;"	d
seqno	obj/net/ns.asm	/^    seqno = pcb->snd_nxt;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = pcb->snd_lbb;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = tcphdr->seqno = ntohl(tcphdr->seqno);$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve	net/serv.c	/^serve(void) {$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_init	net/serv.c	/^serve_init(uint32_t ipaddr, uint32_t netmask, uint32_t gw)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_thread	net/serv.c	/^serve_thread(uint32_t a) {$/;"	f	file:
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
server_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr server_ip_addr; \/* dhcp server address that offered this lease *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
serverstate	net/lwip/netif/ppp/chap.h	/^  int serverstate;                        \/* Server state *\/$/;"	m	struct:chap_state
set_errno	net/lwip/api/sockets.c	153;"	d	file:
set_errno	net/lwip/api/sockets.c	155;"	d	file:
set_perms	kern/pmap.c	/^set_perms(pte_t *va, int u, int p, int w) {$/;"	f
set_perms	kern/pmap1.c	/^set_perms(pte_t *va, int u, int p, int w) {$/;"	f
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_recv_desc_fields	kern/e1000.c	/^set_recv_desc_fields(){$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_test_a	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_test_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_trans_desc_fields	kern/e1000.c	/^set_trans_desc_fields(){$/;"	f
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);  $/;"	m	struct:mib_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_q)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
setperms	kern/monitor.c	/^int setperms(int argc, char** argv, struct Trapframe* tf) {$/;"	f
setsockopt	net/lwip/include/lwip/sockets.h	333;"	d
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
setup_tcp	net/lwip/api/api_msg.c	/^setup_tcp(struct netconn *conn)$/;"	f	file:
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_mappings	kern/pmap.c	/^show_mappings(int *start, int *end) {$/;"	f
show_mappings	kern/pmap1.c	/^show_mappings(int *start, int *end) {$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
showmappings	kern/monitor.c	/^int showmappings(int argc, char** argv, struct Trapframe* tf) {$/;"	f
shutdown	inc/ns.h	/^	} shutdown;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_shutdown
shutdown	lib/sockets.c	/^shutdown(int s, int how)$/;"	f
shutdown	net/lwip/include/lwip/sockets.h	328;"	d
sifaddr	net/lwip/netif/ppp/ppp.c	/^sifaddr( int pd, u32_t o, u32_t h, u32_t m, u32_t ns1, u32_t ns2)$/;"	f
sifdefaultroute	net/lwip/netif/ppp/ppp.c	/^sifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
sifdown	net/lwip/netif/ppp/ppp.c	/^sifdown(int pd)$/;"	f
sifnpmode	net/lwip/netif/ppp/ppp.c	/^sifnpmode(int u, int proto, enum NPmode mode)$/;"	f
sifup	net/lwip/netif/ppp/ppp.c	/^sifup(int pd)$/;"	f
sifvjcomp	net/lwip/netif/ppp/ppp.c	/^sifvjcomp( int pd, int vjcomp, int cidcomp, int maxcid)$/;"	f
sig_hup	net/lwip/netif/ppp/ppp.c	/^  int  sig_hup;                 \/* Carrier lost. *\/$/;"	m	struct:PPPControl_s	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
silent	net/lwip/netif/ppp/lcp.h	/^    u_int silent            : 1; \/* Wait for the other end to start first *\/$/;"	m	struct:lcp_options
sin_addr	net/lwip/include/lwip/sockets.h	/^  struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr
sin_family	net/lwip/include/lwip/sockets.h	/^  u8_t sin_family;$/;"	m	struct:sockaddr_in
sin_len	net/lwip/include/lwip/sockets.h	/^  u8_t sin_len;$/;"	m	struct:sockaddr_in
sin_port	net/lwip/include/lwip/sockets.h	/^  u16_t sin_port;$/;"	m	struct:sockaddr_in
sin_zero	net/lwip/include/lwip/sockets.h	/^  char sin_zero[8];$/;"	m	struct:sockaddr_in
sio_fd_t	net/lwip/include/lwip/sio.h	/^typedef void * sio_fd_t;$/;"	t
sip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr sip;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::ip_addr
sip_raw	net/lwip/include/lwip/snmp_msg.h	/^  u8_t sip_raw[4];$/;"	m	struct:snmp_msg_trap
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_IO_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_MEM_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^	size  = ROUNDUP(size, PGSIZE);$/;"	d
size	obj/net/ns.asm	/^    size = MIN_SIZE_ALIGNED;$/;"	d
size	obj/net/ns.asm	/^  size = LWIP_MEM_ALIGN_SIZE(size);$/;"	d
size	obj/net/ns.asm	/^  size = mem->next - ptr - SIZEOF_STRUCT_MEM;$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/net/ns.asm	/^size_t$/;"	l
size_t	obj/net/testinput.asm	/^size_t$/;"	l
size_t	obj/net/testoutput.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/echosrv.asm	/^size_t$/;"	l
size_t	obj/user/echotest.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/exechello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/httpd.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
size_t	obj/user/testtime.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
sleep	net/input.c	/^sleep(int sec)$/;"	f
sleep	user/testtime.c	/^sleep(int sec)$/;"	f
slipif_init	net/lwip/netif/slipif.c	/^slipif_init(struct netif *netif)$/;"	f
slipif_input	net/lwip/netif/slipif.c	/^slipif_input(struct netif *netif)$/;"	f	file:
slipif_loop	net/lwip/netif/slipif.c	/^slipif_loop(void *nf)$/;"	f	file:
slipif_output	net/lwip/netif/slipif.c	/^slipif_output(struct netif *netif, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
snd_buf	net/lwip/include/lwip/tcp.h	/^  u16_t snd_buf;   \/* Available buffer space for sending (in bytes). *\/$/;"	m	struct:tcp_pcb
snd_lbb	net/lwip/include/lwip/tcp.h	/^    snd_lbb;       \/* Sequence number of next byte to be buffered. *\/$/;"	m	struct:tcp_pcb
snd_max	net/lwip/include/lwip/tcp.h	/^    snd_max;       \/* Highest seqno sent. *\/$/;"	m	struct:tcp_pcb
snd_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t snd_nxt,   \/* next seqno to be sent *\/$/;"	m	struct:tcp_pcb
snd_queuelen	net/lwip/include/lwip/tcp.h	/^  u16_t snd_queuelen; \/* Available buffer space for sending (in tcp_segs). *\/$/;"	m	struct:tcp_pcb
snd_wl1	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wl2	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t snd_wnd;   \/* sender window *\/$/;"	m	struct:tcp_pcb
snmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node snmp = {$/;"	v	typeref:struct:mib_array_node
snmp1_pcb	net/lwip/core/snmp/msg_in.c	/^struct udp_pcb *snmp1_pcb;$/;"	v	typeref:struct:udp_pcb
snmp_add_ifinoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifinoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifinoctets	net/lwip/include/lwip/snmp.h	242;"	d
snmp_add_ifoutoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifoutoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifoutoctets	net/lwip/include/lwip/snmp.h	246;"	d
snmp_add_snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalreqvars(u8_t value)$/;"	f
snmp_add_snmpintotalreqvars	net/lwip/include/lwip/snmp.h	338;"	d
snmp_add_snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalsetvars(u8_t value)$/;"	f
snmp_add_snmpintotalsetvars	net/lwip/include/lwip/snmp.h	339;"	d
snmp_add_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_add_sysuptime(u32_t value)$/;"	f
snmp_add_sysuptime	net/lwip/include/lwip/snmp.h	235;"	d
snmp_asn1_dec_length	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_length(struct pbuf *p, u16_t ofs, u8_t *octets_used, u16_t *length)$/;"	f
snmp_asn1_dec_oid	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_oid(struct pbuf *p, u16_t ofs, u16_t len, struct snmp_obj_id *oid)$/;"	f
snmp_asn1_dec_raw	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_raw(struct pbuf *p, u16_t ofs, u16_t len, u16_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_dec_s32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_s32t(struct pbuf *p, u16_t ofs, u16_t len, s32_t *value)$/;"	f
snmp_asn1_dec_type	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_type(struct pbuf *p, u16_t ofs, u8_t *type)$/;"	f
snmp_asn1_dec_u32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_u32t(struct pbuf *p, u16_t ofs, u16_t len, u32_t *value)$/;"	f
snmp_asn1_enc_length	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length(struct pbuf *p, u16_t ofs, u16_t length)$/;"	f
snmp_asn1_enc_length_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length_cnt(u16_t length, u8_t *octets_needed)$/;"	f
snmp_asn1_enc_oid	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid(struct pbuf *p, u16_t ofs, u8_t ident_len, s32_t *ident)$/;"	f
snmp_asn1_enc_oid_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid_cnt(u8_t ident_len, s32_t *ident, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_raw	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_raw(struct pbuf *p, u16_t ofs, u8_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_enc_s32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, s32_t value)$/;"	f
snmp_asn1_enc_s32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t_cnt(s32_t value, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_type	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_type(struct pbuf *p, u16_t ofs, u8_t type)$/;"	f
snmp_asn1_enc_u32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, u32_t value)$/;"	f
snmp_asn1_enc_u32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t_cnt(u32_t value, u16_t *octets_needed)$/;"	f
snmp_authfail_trap	net/lwip/core/snmp/msg_out.c	/^snmp_authfail_trap(void)$/;"	f
snmp_coldstart_trap	net/lwip/core/snmp/msg_out.c	/^snmp_coldstart_trap(void)$/;"	f
snmp_dec_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_dec_iflist(void)$/;"	f
snmp_dec_iflist	net/lwip/include/lwip/snmp.h	251;"	d
snmp_delete_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_delete_arpidx_tree	net/lwip/include/lwip/snmp.h	255;"	d
snmp_delete_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_delete_ipaddridx_tree	net/lwip/include/lwip/snmp.h	276;"	d
snmp_delete_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_delete_iprteidx_tree	net/lwip/include/lwip/snmp.h	278;"	d
snmp_delete_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_delete_udpidx_tree	net/lwip/include/lwip/snmp.h	324;"	d
snmp_error_response	net/lwip/core/snmp/msg_in.c	/^snmp_error_response(struct snmp_msg_pstat *msg_ps, u8_t error)$/;"	f	file:
snmp_expand_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_expand_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_get_object_def	net/lwip/core/snmp/mib2.c	/^snmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
snmp_get_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_get_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	356;"	d
snmp_get_snmpgrpid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpgrpid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_snmpgrpid_ptr	net/lwip/include/lwip/snmp.h	354;"	d
snmp_get_sysobjid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysobjid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_sysobjid_ptr	net/lwip/include/lwip/snmp.h	233;"	d
snmp_get_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysuptime(u32_t *value)$/;"	f
snmp_get_sysuptime	net/lwip/include/lwip/snmp.h	236;"	d
snmp_get_value	net/lwip/core/snmp/mib2.c	/^snmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t snmp_ids[28] = {$/;"	v
snmp_ifType	net/lwip/include/lwip/snmp.h	/^enum snmp_ifType {$/;"	g
snmp_ifType_basicISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_basicISDN,$/;"	e	enum:snmp_ifType
snmp_ifType_ddn_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ddn_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_ds1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds1,                    \/* T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ds3	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds3,                    \/* T-3 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_e1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_e1,                     \/* european equiv. of T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_eon	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_eon,                    \/* CLNP over IP [11] *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_3Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_3Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_fddi	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_fddi,$/;"	e	enum:snmp_ifType
snmp_ifType_frame_relay	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_frame_relay$/;"	e	enum:snmp_ifType
snmp_ifType_hdh1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hdh1822,$/;"	e	enum:snmp_ifType
snmp_ifType_hyperchannel	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hyperchannel,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88023_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88023_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88024_tokenBus	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88024_tokenBus,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88025_tokenRing	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88025_tokenRing,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88026_man	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88026_man,$/;"	e	enum:snmp_ifType
snmp_ifType_lapb	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_lapb,$/;"	e	enum:snmp_ifType
snmp_ifType_nsip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_nsip,                   \/* XNS over IP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_other	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_other=1,                \/* none of the following *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ppp	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ppp,$/;"	e	enum:snmp_ifType
snmp_ifType_primaryISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_primaryISDN,            \/* proprietary serial *\/$/;"	e	enum:snmp_ifType
snmp_ifType_propPointToPointSerial	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_propPointToPointSerial,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_10Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_10Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_80Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_80Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_regular1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_regular1822,$/;"	e	enum:snmp_ifType
snmp_ifType_rfc877_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_rfc877_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_sdlc	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sdlc,$/;"	e	enum:snmp_ifType
snmp_ifType_sip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sip,                    \/* SMDS *\/$/;"	e	enum:snmp_ifType
snmp_ifType_slip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_slip,                   \/* generic SLIP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_softwareLoopback	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_softwareLoopback,$/;"	e	enum:snmp_ifType
snmp_ifType_starLan	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_starLan,$/;"	e	enum:snmp_ifType
snmp_ifType_ultra	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ultra,                  \/* ULTRA technologies *\/$/;"	e	enum:snmp_ifType
snmp_ifindextonetif	net/lwip/core/snmp/mib_structs.c	/^snmp_ifindextonetif(s32_t ifindex, struct netif **netif)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmaskreps(void)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/include/lwip/snmp.h	293;"	d
snmp_inc_icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmasks(void)$/;"	f
snmp_inc_icmpinaddrmasks	net/lwip/include/lwip/snmp.h	292;"	d
snmp_inc_icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpindestunreachs(void)$/;"	f
snmp_inc_icmpindestunreachs	net/lwip/include/lwip/snmp.h	283;"	d
snmp_inc_icmpinechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechoreps(void)$/;"	f
snmp_inc_icmpinechoreps	net/lwip/include/lwip/snmp.h	289;"	d
snmp_inc_icmpinechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechos(void)$/;"	f
snmp_inc_icmpinechos	net/lwip/include/lwip/snmp.h	288;"	d
snmp_inc_icmpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinerrors(void)$/;"	f
snmp_inc_icmpinerrors	net/lwip/include/lwip/snmp.h	282;"	d
snmp_inc_icmpinmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinmsgs(void)$/;"	f
snmp_inc_icmpinmsgs	net/lwip/include/lwip/snmp.h	281;"	d
snmp_inc_icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinparmprobs(void)$/;"	f
snmp_inc_icmpinparmprobs	net/lwip/include/lwip/snmp.h	285;"	d
snmp_inc_icmpinredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinredirects(void)$/;"	f
snmp_inc_icmpinredirects	net/lwip/include/lwip/snmp.h	287;"	d
snmp_inc_icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinsrcquenchs(void)$/;"	f
snmp_inc_icmpinsrcquenchs	net/lwip/include/lwip/snmp.h	286;"	d
snmp_inc_icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimeexcds(void)$/;"	f
snmp_inc_icmpintimeexcds	net/lwip/include/lwip/snmp.h	284;"	d
snmp_inc_icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestampreps(void)$/;"	f
snmp_inc_icmpintimestampreps	net/lwip/include/lwip/snmp.h	291;"	d
snmp_inc_icmpintimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestamps(void)$/;"	f
snmp_inc_icmpintimestamps	net/lwip/include/lwip/snmp.h	290;"	d
snmp_inc_icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmaskreps(void)$/;"	f
snmp_inc_icmpoutaddrmaskreps	net/lwip/include/lwip/snmp.h	306;"	d
snmp_inc_icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmasks(void)$/;"	f
snmp_inc_icmpoutaddrmasks	net/lwip/include/lwip/snmp.h	305;"	d
snmp_inc_icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutdestunreachs(void)$/;"	f
snmp_inc_icmpoutdestunreachs	net/lwip/include/lwip/snmp.h	296;"	d
snmp_inc_icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechoreps(void)$/;"	f
snmp_inc_icmpoutechoreps	net/lwip/include/lwip/snmp.h	302;"	d
snmp_inc_icmpoutechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechos(void)$/;"	f
snmp_inc_icmpoutechos	net/lwip/include/lwip/snmp.h	301;"	d
snmp_inc_icmpouterrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouterrors(void)$/;"	f
snmp_inc_icmpouterrors	net/lwip/include/lwip/snmp.h	295;"	d
snmp_inc_icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutmsgs(void)$/;"	f
snmp_inc_icmpoutmsgs	net/lwip/include/lwip/snmp.h	294;"	d
snmp_inc_icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutparmprobs(void)$/;"	f
snmp_inc_icmpoutparmprobs	net/lwip/include/lwip/snmp.h	298;"	d
snmp_inc_icmpoutredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutredirects(void)$/;"	f
snmp_inc_icmpoutredirects	net/lwip/include/lwip/snmp.h	300;"	d
snmp_inc_icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutsrcquenchs(void)$/;"	f
snmp_inc_icmpoutsrcquenchs	net/lwip/include/lwip/snmp.h	299;"	d
snmp_inc_icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimeexcds(void)$/;"	f
snmp_inc_icmpouttimeexcds	net/lwip/include/lwip/snmp.h	297;"	d
snmp_inc_icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestampreps(void)$/;"	f
snmp_inc_icmpouttimestampreps	net/lwip/include/lwip/snmp.h	304;"	d
snmp_inc_icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestamps(void)$/;"	f
snmp_inc_icmpouttimestamps	net/lwip/include/lwip/snmp.h	303;"	d
snmp_inc_ifindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifindiscards(struct netif *ni)$/;"	f
snmp_inc_ifindiscards	net/lwip/include/lwip/snmp.h	245;"	d
snmp_inc_ifinnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinnucastpkts	net/lwip/include/lwip/snmp.h	244;"	d
snmp_inc_ifinucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinucastpkts	net/lwip/include/lwip/snmp.h	243;"	d
snmp_inc_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iflist(void)$/;"	f
snmp_inc_iflist	net/lwip/include/lwip/snmp.h	250;"	d
snmp_inc_ifoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutdiscards(struct netif *ni)$/;"	f
snmp_inc_ifoutdiscards	net/lwip/include/lwip/snmp.h	249;"	d
snmp_inc_ifoutnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutnucastpkts	net/lwip/include/lwip/snmp.h	248;"	d
snmp_inc_ifoutucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutucastpkts	net/lwip/include/lwip/snmp.h	247;"	d
snmp_inc_ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipforwdatagrams(void)$/;"	f
snmp_inc_ipforwdatagrams	net/lwip/include/lwip/snmp.h	261;"	d
snmp_inc_ipfragcreates	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragcreates(void)$/;"	f
snmp_inc_ipfragcreates	net/lwip/include/lwip/snmp.h	273;"	d
snmp_inc_ipfragfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragfails(void)$/;"	f
snmp_inc_ipfragfails	net/lwip/include/lwip/snmp.h	272;"	d
snmp_inc_ipfragoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragoks(void)$/;"	f
snmp_inc_ipfragoks	net/lwip/include/lwip/snmp.h	271;"	d
snmp_inc_ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinaddrerrors(void)$/;"	f
snmp_inc_ipinaddrerrors	net/lwip/include/lwip/snmp.h	260;"	d
snmp_inc_ipindelivers	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindelivers(void)$/;"	f
snmp_inc_ipindelivers	net/lwip/include/lwip/snmp.h	264;"	d
snmp_inc_ipindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindiscards(void)$/;"	f
snmp_inc_ipindiscards	net/lwip/include/lwip/snmp.h	263;"	d
snmp_inc_ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinhdrerrors(void)$/;"	f
snmp_inc_ipinhdrerrors	net/lwip/include/lwip/snmp.h	259;"	d
snmp_inc_ipinreceives	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinreceives(void)$/;"	f
snmp_inc_ipinreceives	net/lwip/include/lwip/snmp.h	258;"	d
snmp_inc_ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinunknownprotos(void)$/;"	f
snmp_inc_ipinunknownprotos	net/lwip/include/lwip/snmp.h	262;"	d
snmp_inc_ipoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutdiscards(void)$/;"	f
snmp_inc_ipoutdiscards	net/lwip/include/lwip/snmp.h	266;"	d
snmp_inc_ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutnoroutes(void)$/;"	f
snmp_inc_ipoutnoroutes	net/lwip/include/lwip/snmp.h	267;"	d
snmp_inc_ipoutrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutrequests(void)$/;"	f
snmp_inc_ipoutrequests	net/lwip/include/lwip/snmp.h	265;"	d
snmp_inc_ipreasmfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmfails(void)$/;"	f
snmp_inc_ipreasmfails	net/lwip/include/lwip/snmp.h	270;"	d
snmp_inc_ipreasmoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmoks(void)$/;"	f
snmp_inc_ipreasmoks	net/lwip/include/lwip/snmp.h	269;"	d
snmp_inc_ipreasmreqds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmreqds(void)$/;"	f
snmp_inc_ipreasmreqds	net/lwip/include/lwip/snmp.h	268;"	d
snmp_inc_iproutingdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iproutingdiscards(void)$/;"	f
snmp_inc_iproutingdiscards	net/lwip/include/lwip/snmp.h	274;"	d
snmp_inc_snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinasnparseerrs(void)$/;"	f
snmp_inc_snmpinasnparseerrs	net/lwip/include/lwip/snmp.h	332;"	d
snmp_inc_snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunitynames(void)$/;"	f
snmp_inc_snmpinbadcommunitynames	net/lwip/include/lwip/snmp.h	330;"	d
snmp_inc_snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunityuses(void)$/;"	f
snmp_inc_snmpinbadcommunityuses	net/lwip/include/lwip/snmp.h	331;"	d
snmp_inc_snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadvalues(void)$/;"	f
snmp_inc_snmpinbadvalues	net/lwip/include/lwip/snmp.h	335;"	d
snmp_inc_snmpinbadversions	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadversions(void)$/;"	f
snmp_inc_snmpinbadversions	net/lwip/include/lwip/snmp.h	329;"	d
snmp_inc_snmpingenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingenerrs(void)$/;"	f
snmp_inc_snmpingenerrs	net/lwip/include/lwip/snmp.h	337;"	d
snmp_inc_snmpingetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetnexts(void)$/;"	f
snmp_inc_snmpingetnexts	net/lwip/include/lwip/snmp.h	341;"	d
snmp_inc_snmpingetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetrequests(void)$/;"	f
snmp_inc_snmpingetrequests	net/lwip/include/lwip/snmp.h	340;"	d
snmp_inc_snmpingetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetresponses(void)$/;"	f
snmp_inc_snmpingetresponses	net/lwip/include/lwip/snmp.h	343;"	d
snmp_inc_snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinnosuchnames(void)$/;"	f
snmp_inc_snmpinnosuchnames	net/lwip/include/lwip/snmp.h	334;"	d
snmp_inc_snmpinpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinpkts(void)$/;"	f
snmp_inc_snmpinpkts	net/lwip/include/lwip/snmp.h	327;"	d
snmp_inc_snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinreadonlys(void)$/;"	f
snmp_inc_snmpinreadonlys	net/lwip/include/lwip/snmp.h	336;"	d
snmp_inc_snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinsetrequests(void)$/;"	f
snmp_inc_snmpinsetrequests	net/lwip/include/lwip/snmp.h	342;"	d
snmp_inc_snmpintoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintoobigs(void)$/;"	f
snmp_inc_snmpintoobigs	net/lwip/include/lwip/snmp.h	333;"	d
snmp_inc_snmpintraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintraps(void)$/;"	f
snmp_inc_snmpintraps	net/lwip/include/lwip/snmp.h	344;"	d
snmp_inc_snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutbadvalues(void)$/;"	f
snmp_inc_snmpoutbadvalues	net/lwip/include/lwip/snmp.h	347;"	d
snmp_inc_snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgenerrs(void)$/;"	f
snmp_inc_snmpoutgenerrs	net/lwip/include/lwip/snmp.h	348;"	d
snmp_inc_snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetnexts(void)$/;"	f
snmp_inc_snmpoutgetnexts	net/lwip/include/lwip/snmp.h	350;"	d
snmp_inc_snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetrequests(void)$/;"	f
snmp_inc_snmpoutgetrequests	net/lwip/include/lwip/snmp.h	349;"	d
snmp_inc_snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetresponses(void)$/;"	f
snmp_inc_snmpoutgetresponses	net/lwip/include/lwip/snmp.h	352;"	d
snmp_inc_snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutnosuchnames(void)$/;"	f
snmp_inc_snmpoutnosuchnames	net/lwip/include/lwip/snmp.h	346;"	d
snmp_inc_snmpoutpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutpkts(void)$/;"	f
snmp_inc_snmpoutpkts	net/lwip/include/lwip/snmp.h	328;"	d
snmp_inc_snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutsetrequests(void)$/;"	f
snmp_inc_snmpoutsetrequests	net/lwip/include/lwip/snmp.h	351;"	d
snmp_inc_snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttoobigs(void)$/;"	f
snmp_inc_snmpouttoobigs	net/lwip/include/lwip/snmp.h	345;"	d
snmp_inc_snmpouttraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttraps(void)$/;"	f
snmp_inc_snmpouttraps	net/lwip/include/lwip/snmp.h	353;"	d
snmp_inc_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_inc_sysuptime(void)$/;"	f
snmp_inc_sysuptime	net/lwip/include/lwip/snmp.h	234;"	d
snmp_inc_tcpactiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpactiveopens(void)$/;"	f
snmp_inc_tcpactiveopens	net/lwip/include/lwip/snmp.h	308;"	d
snmp_inc_tcpattemptfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpattemptfails(void)$/;"	f
snmp_inc_tcpattemptfails	net/lwip/include/lwip/snmp.h	310;"	d
snmp_inc_tcpestabresets	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpestabresets(void)$/;"	f
snmp_inc_tcpestabresets	net/lwip/include/lwip/snmp.h	311;"	d
snmp_inc_tcpinerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinerrs(void)$/;"	f
snmp_inc_tcpinerrs	net/lwip/include/lwip/snmp.h	315;"	d
snmp_inc_tcpinsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinsegs(void)$/;"	f
snmp_inc_tcpinsegs	net/lwip/include/lwip/snmp.h	312;"	d
snmp_inc_tcpoutrsts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutrsts(void)$/;"	f
snmp_inc_tcpoutrsts	net/lwip/include/lwip/snmp.h	316;"	d
snmp_inc_tcpoutsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutsegs(void)$/;"	f
snmp_inc_tcpoutsegs	net/lwip/include/lwip/snmp.h	313;"	d
snmp_inc_tcppassiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcppassiveopens(void)$/;"	f
snmp_inc_tcppassiveopens	net/lwip/include/lwip/snmp.h	309;"	d
snmp_inc_tcpretranssegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpretranssegs(void)$/;"	f
snmp_inc_tcpretranssegs	net/lwip/include/lwip/snmp.h	314;"	d
snmp_inc_udpindatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpindatagrams(void)$/;"	f
snmp_inc_udpindatagrams	net/lwip/include/lwip/snmp.h	319;"	d
snmp_inc_udpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpinerrors(void)$/;"	f
snmp_inc_udpinerrors	net/lwip/include/lwip/snmp.h	321;"	d
snmp_inc_udpnoports	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpnoports(void)$/;"	f
snmp_inc_udpnoports	net/lwip/include/lwip/snmp.h	320;"	d
snmp_inc_udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpoutdatagrams(void)$/;"	f
snmp_inc_udpoutdatagrams	net/lwip/include/lwip/snmp.h	322;"	d
snmp_init	net/lwip/core/snmp/msg_in.c	/^snmp_init(void)$/;"	f
snmp_insert_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_insert_arpidx_tree	net/lwip/include/lwip/snmp.h	254;"	d
snmp_insert_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_insert_ipaddridx_tree	net/lwip/include/lwip/snmp.h	275;"	d
snmp_insert_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_insert_iprteidx_tree	net/lwip/include/lwip/snmp.h	277;"	d
snmp_insert_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_insert_udpidx_tree	net/lwip/include/lwip/snmp.h	323;"	d
snmp_iptooid	net/lwip/core/snmp/mib_structs.c	/^snmp_iptooid(struct ip_addr *ip, s32_t *ident)$/;"	f
snmp_iso_prefix_expand	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_expand(u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_iso_prefix_tst	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_tst(u8_t ident_len, s32_t *ident)$/;"	f
snmp_mib_ln_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_alloc(s32_t id)$/;"	f
snmp_mib_ln_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_free(struct mib_list_node *ln)$/;"	f
snmp_mib_lrn_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_alloc(void)$/;"	f
snmp_mib_lrn_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_free(struct mib_list_rootnode *lrn)$/;"	f
snmp_mib_node_delete	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_delete(struct mib_list_rootnode *rn, struct mib_list_node *n)$/;"	f
snmp_mib_node_find	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_find(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **fn)$/;"	f
snmp_mib_node_insert	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_insert(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **insn)$/;"	f
snmp_msg_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_event(u8_t request_id)$/;"	f
snmp_msg_get_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_get_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_getnext_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_getnext_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_pstat	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_pstat$/;"	s
snmp_msg_set_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_set_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_trap	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_trap$/;"	s
snmp_name_ptr	net/lwip/include/lwip/snmp_structs.h	/^struct snmp_name_ptr$/;"	s
snmp_netiftoifindex	net/lwip/core/snmp/mib_structs.c	/^snmp_netiftoifindex(struct netif *netif, s32_t *ifidx)$/;"	f
snmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const snmp_nodes[28] = {$/;"	v
snmp_obj_id	net/lwip/include/lwip/snmp.h	/^struct snmp_obj_id$/;"	s
snmp_oidtoip	net/lwip/core/snmp/mib_structs.c	/^snmp_oidtoip(s32_t *ident, struct ip_addr *ip)$/;"	f
snmp_ok_response	net/lwip/core/snmp/msg_in.c	/^snmp_ok_response(struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_pdu_dec_varbindlist	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_dec_varbindlist(struct pbuf *p, u16_t ofs, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_pdu_header_check	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_header_check(struct pbuf *p, u16_t ofs, u16_t pdu_len, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_publiccommunity	net/lwip/core/snmp/msg_in.c	/^const char snmp_publiccommunity[7] = "public";$/;"	v
snmp_recv	net/lwip/core/snmp/msg_in.c	/^snmp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
snmp_resp_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_enc(struct snmp_msg_pstat *m_stat, struct pbuf *p)$/;"	f	file:
snmp_resp_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_resp_header_lengths$/;"	s
snmp_resp_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_sum(struct snmp_msg_pstat *m_stat, u16_t vb_len)$/;"	f	file:
snmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node snmp_scalar = {$/;"	v
snmp_search_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_search_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_name_ptr *np)$/;"	f
snmp_send_response	net/lwip/core/snmp/msg_out.c	/^snmp_send_response(struct snmp_msg_pstat *m_stat)$/;"	f
snmp_send_trap	net/lwip/core/snmp/msg_out.c	/^snmp_send_trap(s8_t generic_trap, struct snmp_obj_id *eoid, s32_t specific_trap)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_set_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	355;"	d
snmp_set_syscontact	net/lwip/core/snmp/mib2.c	/^void snmp_set_syscontact(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syscontact	net/lwip/include/lwip/snmp.h	237;"	d
snmp_set_sysdesr	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysdesr(u8_t *str, u8_t *len)$/;"	f
snmp_set_sysdesr	net/lwip/include/lwip/snmp.h	231;"	d
snmp_set_syslocation	net/lwip/core/snmp/mib2.c	/^void snmp_set_syslocation(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syslocation	net/lwip/include/lwip/snmp.h	239;"	d
snmp_set_sysname	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysname(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_sysname	net/lwip/include/lwip/snmp.h	238;"	d
snmp_set_sysobjid	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysobjid(struct snmp_obj_id *oid)$/;"	f
snmp_set_sysobjid	net/lwip/include/lwip/snmp.h	232;"	d
snmp_set_test	net/lwip/core/snmp/mib2.c	/^snmp_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_set_value	net/lwip/core/snmp/mib2.c	/^snmp_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst$/;"	s	file:
snmp_trap_dst_enable	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_enable(u8_t dst_idx, u8_t enable)$/;"	f
snmp_trap_dst_ip_set	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_ip_set(u8_t dst_idx, struct ip_addr *dst)$/;"	f
snmp_trap_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_enc(struct snmp_msg_trap *m_trap, struct pbuf *p)$/;"	f	file:
snmp_trap_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_trap_header_lengths$/;"	s
snmp_trap_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_sum(struct snmp_msg_trap *m_trap, u16_t vb_len)$/;"	f	file:
snmp_varbind	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind$/;"	s
snmp_varbind_alloc	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_alloc(struct snmp_obj_id *oid, u8_t type, u8_t len)$/;"	f
snmp_varbind_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_free(struct snmp_varbind *vb)$/;"	f
snmp_varbind_list_enc	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_enc(struct snmp_varbind_root *root, struct pbuf *p, u16_t ofs)$/;"	f	file:
snmp_varbind_list_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_list_free(struct snmp_varbind_root *root)$/;"	f
snmp_varbind_list_sum	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_sum(struct snmp_varbind_root *root)$/;"	f	file:
snmp_varbind_root	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind_root$/;"	s
snmp_varbind_tail_add	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_add(struct snmp_varbind_root *root, struct snmp_varbind *vb)$/;"	f
snmp_varbind_tail_remove	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_remove(struct snmp_varbind_root *root)$/;"	f
snmp_version	net/lwip/core/snmp/msg_in.c	/^const s32_t snmp_version = 0;$/;"	v
snmpenableauthentraps_default	net/lwip/core/snmp/mib2.c	/^static const u8_t snmpenableauthentraps_default = 2; \/* disabled *\/$/;"	v	file:
snmpenableauthentraps_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* snmpenableauthentraps_ptr = (u8_t*)&snmpenableauthentraps_default;$/;"	v	file:
snmpgrp_id	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id snmpgrp_id = {7,{1,3,6,1,2,1,11}};$/;"	v	typeref:struct:snmp_obj_id	file:
snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^             snmpinasnparseerrs = 0,$/;"	v	file:
snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunitynames = 0,$/;"	v	file:
snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunityuses = 0,$/;"	v	file:
snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpinbadvalues = 0,$/;"	v	file:
snmpinbadversions	net/lwip/core/snmp/mib2.c	/^             snmpinbadversions = 0,$/;"	v	file:
snmpingenerrs	net/lwip/core/snmp/mib2.c	/^             snmpingenerrs = 0,$/;"	v	file:
snmpingetnexts	net/lwip/core/snmp/mib2.c	/^             snmpingetnexts = 0,$/;"	v	file:
snmpingetrequests	net/lwip/core/snmp/mib2.c	/^             snmpingetrequests = 0,$/;"	v	file:
snmpingetresponses	net/lwip/core/snmp/mib2.c	/^             snmpingetresponses = 0,$/;"	v	file:
snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpinnosuchnames = 0,$/;"	v	file:
snmpinpkts	net/lwip/core/snmp/mib2.c	/^static u32_t snmpinpkts = 0,$/;"	v	file:
snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^             snmpinreadonlys = 0,$/;"	v	file:
snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpinsetrequests = 0,$/;"	v	file:
snmpintoobigs	net/lwip/core/snmp/mib2.c	/^             snmpintoobigs = 0,$/;"	v	file:
snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalreqvars = 0,$/;"	v	file:
snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalsetvars = 0,$/;"	v	file:
snmpintraps	net/lwip/core/snmp/mib2.c	/^             snmpintraps = 0,$/;"	v	file:
snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpoutbadvalues = 0,$/;"	v	file:
snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^             snmpoutgenerrs = 0,$/;"	v	file:
snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^             snmpoutgetnexts = 0,$/;"	v	file:
snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutgetrequests = 0,$/;"	v	file:
snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^             snmpoutgetresponses = 0,$/;"	v	file:
snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpoutnosuchnames = 0,$/;"	v	file:
snmpoutpkts	net/lwip/core/snmp/mib2.c	/^             snmpoutpkts = 0,$/;"	v	file:
snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutsetrequests = 0,$/;"	v	file:
snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^             snmpouttoobigs = 0,$/;"	v	file:
snmpouttraps	net/lwip/core/snmp/mib2.c	/^             snmpouttraps = 0;$/;"	v	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
so	obj/net/ns.asm	/^       so do nothing here! *\/$/;"	d
sock	net/lwip/api/sockets.c	/^  struct lwip_socket *sock;$/;"	m	struct:lwip_setgetsockopt_data	typeref:struct:lwip_setgetsockopt_data::lwip_socket	file:
sock	obj/net/ns.asm	/^    sock = get_socket(s);$/;"	d
sock	obj/net/ns.asm	/^  sock = &sockets[s];$/;"	d
sock	obj/net/ns.asm	/^  sock = data->sock;$/;"	d
sock	obj/net/ns.asm	/^  sock = get_socket(s);$/;"	d
sock	user/httpd.c	/^	int sock;$/;"	m	struct:http_request	file:
sock_set_errno	net/lwip/api/sockets.c	158;"	d	file:
sockaddr	net/lwip/include/lwip/sockets.h	/^struct sockaddr {$/;"	s
sockaddr_in	net/lwip/include/lwip/sockets.h	/^struct sockaddr_in {$/;"	s
socket	inc/ns.h	/^	} socket;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_socket
socket	lib/sockets.c	/^socket(int domain, int type, int protocol)$/;"	f
socket	net/lwip/include/lwip/api.h	/^  int socket;$/;"	m	struct:netconn
socket	net/lwip/include/lwip/sockets.h	340;"	d
sockets	net/lwip/api/sockets.c	/^static struct lwip_socket sockets[NUM_SOCKETS];$/;"	v	typeref:struct:lwip_socket	file:
sockid	inc/fd.h	/^	int sockid;$/;"	m	struct:FdSock
socklen_t	net/lwip/include/lwip/sockets.h	64;"	d
socksem	net/lwip/api/sockets.c	/^static sys_sem_t socksem;$/;"	v	file:
socksem	obj/net/ns.asm	/^  socksem   = sys_sem_new(1);$/;"	d
sp	net/lwip/include/lwip/snmp_msg.h	/^  u16_t sp;$/;"	m	struct:snmp_msg_pstat
spawn	lib/extraspawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/extraspawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
spc_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t spc_trap;$/;"	m	struct:snmp_msg_trap
special	kern/e1000.h	/^	uint16_t special;$/;"	m	struct:rx_desc
special	kern/e1000.h	/^	uint16_t special;$/;"	m	struct:tx_desc
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
src	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::ip_addr
src	obj/net/ns.asm	/^    src = (*octetptr) << 8;$/;"	d
src	obj/net/ns.asm	/^  src = ntohs(udphdr->src);$/;"	d
src_ip	obj/net/ns.asm	/^    src_ip = &(netif->ip_addr);$/;"	d
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/net/ns.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testinput.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testoutput.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echosrv.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echotest.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/exechello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/httpd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sendpage.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testtime.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
ssthresh	net/lwip/include/lwip/tcp.h	/^  u16_t ssthresh;$/;"	m	struct:tcp_pcb
sswt_cb	net/lwip/core/sys.c	/^struct sswt_cb$/;"	s	file:
sswt_handler	net/lwip/core/sys.c	/^sswt_handler(void *arg)$/;"	f	file:
st_args	net/serv.c	/^struct st_args {$/;"	s	file:
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
stack_size	net/lwip/jos/arch/threadq.h	/^enum { stack_size = PGSIZE };$/;"	e	enum:__anon44
stacktop	obj/net/ns.asm	/^    stacktop = stacktop - 4;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	net/lwip/core/ipv4/ip_frag.c	/^  u16_t start;$/;"	m	struct:ip_reass_helper	file:
start	obj/boot/boot.asm	/^start:$/;"	l
start	obj/kern/kernel.asm	/^		start = start + 1 ;$/;"	d
start	obj/kern/kernel.asm	/^		start = start + PGSIZE;$/;"	d
start	obj/net/ns.asm	/^	start = sys_time_msec();$/;"	d
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
start_timer	net/serv.c	/^start_timer(struct timer_thread *t, void (*func)(void), const char *name, int msec)$/;"	f	file:
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
starting	net/lwip/netif/ppp/fsm.h	/^  void (*starting)(fsm*);                           \/* Called when we want the lower layer *\/$/;"	m	struct:fsm_callbacks
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
state	net/lwip/core/dns.c	/^  u8_t  state;$/;"	m	struct:dns_table_entry	file:
state	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t state;               \/* current AutoIP state machine state *\/$/;"	m	struct:autoip
state	net/lwip/include/lwip/api.h	/^  enum netconn_state state;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_state
state	net/lwip/include/lwip/dhcp.h	/^  u8_t state;$/;"	m	struct:dhcp
state	net/lwip/include/lwip/netif.h	/^  void *state;$/;"	m	struct:netif
state	net/lwip/include/lwip/netifapi.h	/^      void *state;$/;"	m	struct:netifapi_msg_msg::__anon22::__anon23
state	net/lwip/include/lwip/snmp_msg.h	/^  u8_t state;$/;"	m	struct:snmp_msg_pstat
state	net/lwip/netif/etharp.c	/^  enum etharp_state state;$/;"	m	struct:etharp_entry	typeref:enum:etharp_entry::etharp_state	file:
state	net/lwip/netif/ppp/fsm.h	/^  int state;                       \/* State *\/$/;"	m	struct:fsm
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^	static struct pci_bus root_bus;$/;"	t
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int __attribute__((warn_unused_result))$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned int ticks;$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void * boot_alloc(uint32_t n);$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/net/ns.asm	/^static LIST_HEAD(thread_list, sys_thread) threads[thread_hash_size];$/;"	l
static	obj/net/ns.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/ns.asm	/^static err_t$/;"	l
static	obj/net/ns.asm	/^static inline struct thread_context *$/;"	l
static	obj/net/ns.asm	/^static inline void $/;"	l
static	obj/net/ns.asm	/^static inline void$/;"	l
static	obj/net/ns.asm	/^static int$/;"	l
static	obj/net/ns.asm	/^static long long$/;"	l
static	obj/net/ns.asm	/^static ssize_t$/;"	l
static	obj/net/ns.asm	/^static struct ip_reassdata*$/;"	t
static	obj/net/ns.asm	/^static struct lwip_socket *$/;"	t
static	obj/net/ns.asm	/^static struct pbuf *$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue kill_queue;$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue thread_queue;$/;"	t
static	obj/net/ns.asm	/^static thread_id_t$/;"	l
static	obj/net/ns.asm	/^static u16_t$/;"	l
static	obj/net/ns.asm	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	l
static	obj/net/ns.asm	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	l
static	obj/net/ns.asm	/^static u8_t$/;"	l
static	obj/net/ns.asm	/^static unsigned long long$/;"	l
static	obj/net/ns.asm	/^static void *$/;"	l
static	obj/net/ns.asm	/^static void __attribute__((noreturn))$/;"	l
static	obj/net/ns.asm	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	l
static	obj/net/ns.asm	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	l
static	obj/net/ns.asm	/^static void$/;"	l
static	obj/net/testinput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testinput.asm	/^static int$/;"	l
static	obj/net/testinput.asm	/^static long long$/;"	l
static	obj/net/testinput.asm	/^static ssize_t$/;"	l
static	obj/net/testinput.asm	/^static unsigned long long$/;"	l
static	obj/net/testinput.asm	/^static void$/;"	l
static	obj/net/testoutput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testoutput.asm	/^static int$/;"	l
static	obj/net/testoutput.asm	/^static long long$/;"	l
static	obj/net/testoutput.asm	/^static ssize_t$/;"	l
static	obj/net/testoutput.asm	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	t
static	obj/net/testoutput.asm	/^static unsigned long long$/;"	l
static	obj/net/testoutput.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/echosrv.asm	/^static int$/;"	l
static	obj/user/echosrv.asm	/^static long long$/;"	l
static	obj/user/echosrv.asm	/^static ssize_t$/;"	l
static	obj/user/echosrv.asm	/^static unsigned long long$/;"	l
static	obj/user/echosrv.asm	/^static void$/;"	l
static	obj/user/echotest.asm	/^static int$/;"	l
static	obj/user/echotest.asm	/^static long long$/;"	l
static	obj/user/echotest.asm	/^static ssize_t$/;"	l
static	obj/user/echotest.asm	/^static unsigned long long$/;"	l
static	obj/user/echotest.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/exechello.asm	/^static int$/;"	l
static	obj/user/exechello.asm	/^static long long$/;"	l
static	obj/user/exechello.asm	/^static ssize_t$/;"	l
static	obj/user/exechello.asm	/^static unsigned long long$/;"	l
static	obj/user/exechello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/httpd.asm	/^static int$/;"	l
static	obj/user/httpd.asm	/^static long long$/;"	l
static	obj/user/httpd.asm	/^static ssize_t$/;"	l
static	obj/user/httpd.asm	/^static unsigned long long$/;"	l
static	obj/user/httpd.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static int$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static ssize_t$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spawnhello.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testpteshare.asm	/^static __inline void$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testshell.asm	/^static __inline void$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static	obj/user/testtime.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testtime.asm	/^static __inline void$/;"	l
static	obj/user/testtime.asm	/^static int$/;"	l
static	obj/user/testtime.asm	/^static long long$/;"	l
static	obj/user/testtime.asm	/^static ssize_t$/;"	l
static	obj/user/testtime.asm	/^static unsigned long long$/;"	l
static	obj/user/testtime.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stats	net/lwip/netif/ppp/vj.h	/^  struct vjstat stats;$/;"	m	struct:vjcompress	typeref:struct:vjcompress::vjstat
stats_	net/lwip/include/lwip/stats.h	/^struct stats_ {$/;"	s
stats_display	net/lwip/core/stats.c	/^stats_display(void)$/;"	f
stats_display	net/lwip/include/lwip/stats.h	271;"	d
stats_display_igmp	net/lwip/core/stats.c	/^stats_display_igmp(struct stats_igmp *igmp)$/;"	f
stats_display_igmp	net/lwip/include/lwip/stats.h	273;"	d
stats_display_mem	net/lwip/core/stats.c	/^stats_display_mem(struct stats_mem *mem, char *name)$/;"	f
stats_display_mem	net/lwip/include/lwip/stats.h	274;"	d
stats_display_memp	net/lwip/core/stats.c	/^stats_display_memp(struct stats_mem *mem, int index)$/;"	f
stats_display_memp	net/lwip/include/lwip/stats.h	275;"	d
stats_display_proto	net/lwip/core/stats.c	/^stats_display_proto(struct stats_proto *proto, char *name)$/;"	f
stats_display_proto	net/lwip/include/lwip/stats.h	272;"	d
stats_display_sys	net/lwip/core/stats.c	/^stats_display_sys(struct stats_sys *sys)$/;"	f
stats_display_sys	net/lwip/include/lwip/stats.h	276;"	d
stats_igmp	net/lwip/include/lwip/stats.h	/^struct stats_igmp {$/;"	s
stats_init	net/lwip/include/lwip/stats.h	142;"	d
stats_init	net/lwip/include/lwip/stats.h	147;"	d
stats_mem	net/lwip/include/lwip/stats.h	/^struct stats_mem {$/;"	s
stats_proto	net/lwip/include/lwip/stats.h	/^struct stats_proto {$/;"	s
stats_sys	net/lwip/include/lwip/stats.h	/^struct stats_sys {$/;"	s
stats_syselem	net/lwip/include/lwip/stats.h	/^struct stats_syselem {$/;"	s
status	kern/e1000.h	/^	uint8_t status;$/;"	m	struct:rx_desc
status	kern/e1000.h	/^	uint8_t status;$/;"	m	struct:tx_desc
status_callback	net/lwip/include/lwip/netif.h	/^  void (* status_callback)(struct netif *netif);$/;"	m	struct:netif
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop	obj/net/ns.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testinput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testoutput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t strplen;$/;"	m	struct:snmp_trap_header_lengths
strplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t strplenlen;$/;"	m	struct:snmp_trap_header_lengths
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
subnetMask	net/lwip/netif/ppp/ppp.c	/^u_long subnetMask;$/;"	v
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sv	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
swapped	obj/net/ns.asm	/^      swapped = 1 - swapped;$/;"	d
swapped	obj/net/ns.asm	/^  swapped = 0;$/;"	d
sync	lib/file.c	/^sync(void)$/;"	f
sys	net/lwip/include/lwip/stats.h	/^  struct stats_sys sys;$/;"	m	struct:stats_	typeref:struct:stats_::stats_sys
sys_arch_mbox_fetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_fetch(sys_mbox_t mbox, void **msg, u32_t tm_msec)$/;"	f
sys_arch_mbox_tryfetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_tryfetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_arch_sem_wait	net/lwip/include/lwip/sys.h	57;"	d
sys_arch_sem_wait	net/lwip/jos/arch/sys_arch.c	/^sys_arch_sem_wait(sys_sem_t sem, u32_t tm_msec)$/;"	f
sys_arch_timeouts	net/lwip/jos/arch/sys_arch.c	/^sys_arch_timeouts(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_assign_priority	kern/syscall.c	/^sys_env_assign_priority(int priority_number)$/;"	f	file:
sys_env_assign_priority	lib/syscall.c	/^sys_env_assign_priority(int priority_number) {$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_errlist	net/lwip/jos/arch/perror.c	/^const char *sys_errlist[] = {$/;"	v
sys_exec	kern/syscall.c	/^sys_exec(uint32_t eip, uint32_t esp, void * _ph, uint32_t phnum)$/;"	f	file:
sys_exec	lib/syscall.c	/^sys_exec(uint32_t eip, uint32_t esp, void *ph, uint32_t phnum) $/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_init	net/lwip/include/lwip/sys.h	50;"	d
sys_init	net/lwip/jos/arch/sys_arch.c	/^sys_init(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_mbox_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_mbox_entry {$/;"	s	file:
sys_mbox_fetch	net/lwip/core/sys.c	/^sys_mbox_fetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_mbox_fetch	net/lwip/include/lwip/sys.h	60;"	d
sys_mbox_free	net/lwip/include/lwip/sys.h	64;"	d
sys_mbox_free	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_free(sys_mbox_t mbox)$/;"	f
sys_mbox_new	net/lwip/include/lwip/sys.h	59;"	d
sys_mbox_new	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_new(int size)$/;"	f
sys_mbox_post	net/lwip/include/lwip/sys.h	62;"	d
sys_mbox_post	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_post(sys_mbox_t mbox, void *msg)$/;"	f
sys_mbox_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_mbox_t;$/;"	t
sys_mbox_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_mbox_t;$/;"	t
sys_mbox_t	obj/net/ns.asm	/^sys_mbox_t$/;"	l
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	135;"	d
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	61;"	d
sys_mbox_trypost	net/lwip/include/lwip/sys.h	63;"	d
sys_mbox_trypost	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_trypost(sys_mbox_t mbox, void *msg)$/;"	f
sys_msleep	net/lwip/core/sys.c	/^sys_msleep(u32_t ms)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_prot_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_prot_t;$/;"	t
sys_recieve_packet	kern/syscall.c	/^sys_recieve_packet(char *packet, int *size){$/;"	f	file:
sys_recieve_packet	lib/syscall.c	/^sys_recieve_packet(char *packet, int *size)$/;"	f
sys_sem_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_sem_entry {$/;"	s	file:
sys_sem_free	net/lwip/include/lwip/sys.h	58;"	d
sys_sem_free	net/lwip/jos/arch/sys_arch.c	/^sys_sem_free(sys_sem_t sem)$/;"	f
sys_sem_new	net/lwip/include/lwip/sys.h	53;"	d
sys_sem_new	net/lwip/jos/arch/sys_arch.c	/^sys_sem_new(u8_t count)$/;"	f
sys_sem_signal	net/lwip/include/lwip/sys.h	54;"	d
sys_sem_signal	net/lwip/jos/arch/sys_arch.c	/^sys_sem_signal(sys_sem_t sem)$/;"	f
sys_sem_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_sem_t;$/;"	t
sys_sem_t	net/lwip/jos/arch/sys_arch.h	/^typedef	int sys_sem_t;$/;"	t
sys_sem_t	obj/net/ns.asm	/^sys_sem_t$/;"	l
sys_sem_wait	net/lwip/core/sys.c	/^sys_sem_wait(sys_sem_t sem)$/;"	f
sys_sem_wait	net/lwip/include/lwip/sys.h	55;"	d
sys_sem_wait_timeout	net/lwip/core/sys.c	/^sys_sem_wait_timeout(sys_sem_t sem, u32_t timeout)$/;"	f
sys_sem_wait_timeout	net/lwip/include/lwip/sys.h	56;"	d
sys_tem	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node sys_tem = {$/;"	v	typeref:struct:mib_array_node
sys_tem_ids	net/lwip/core/snmp/mib2.c	/^const s32_t sys_tem_ids[7] = { 1, 2, 3, 4, 5, 6, 7 };$/;"	v
sys_tem_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const sys_tem_nodes[7] = {$/;"	v
sys_tem_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node sys_tem_scalar = {$/;"	v
sys_thread	net/lwip/jos/arch/sys_arch.c	/^struct sys_thread {$/;"	s	file:
sys_thread_new	net/lwip/include/lwip/sys.h	66;"	d
sys_thread_new	net/lwip/jos/arch/sys_arch.c	/^sys_thread_new(char *name, void (* thread)(void *arg), void *arg, $/;"	f
sys_thread_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_thread_t;$/;"	t
sys_thread_t	obj/net/ns.asm	/^sys_thread_t$/;"	l
sys_time_msec	kern/syscall.c	/^sys_time_msec(void)$/;"	f	file:
sys_time_msec	lib/syscall.c	/^sys_time_msec(void)$/;"	f
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {$/;"	s
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	s
sys_timeout	net/lwip/core/sys.c	/^sys_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
sys_timeout	net/lwip/include/lwip/sys.h	51;"	d
sys_timeout_handler	net/lwip/include/lwip/sys.h	/^typedef void (* sys_timeout_handler)(void *arg);$/;"	t
sys_timeouts	net/lwip/include/lwip/sys.h	/^struct sys_timeouts {$/;"	s
sys_transmit_packet	kern/syscall.c	/^sys_transmit_packet(char *packet, int size){$/;"	f	file:
sys_transmit_packet	lib/syscall.c	/^sys_transmit_packet(char *packet, int size)$/;"	f
sys_untimeout	net/lwip/core/sys.c	/^sys_untimeout(sys_timeout_handler h, void *arg)$/;"	f
sys_untimeout	net/lwip/include/lwip/sys.h	52;"	d
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
syscontact_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_default[] = "";$/;"	v	file:
syscontact_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_len_default = 0;$/;"	v	file:
syscontact_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_len_ptr = (u8_t*)&syscontact_len_default;$/;"	v	file:
syscontact_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_ptr = (u8_t*)&syscontact_default[0];$/;"	v	file:
sysdescr_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_default[] = "lwIP";$/;"	v	file:
sysdescr_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_len_default = 4;$/;"	v	file:
sysdescr_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_len_ptr = (u8_t*)&sysdescr_len_default;$/;"	v	file:
sysdescr_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_ptr = (u8_t*)&sysdescr_default[0];$/;"	v	file:
syslocation_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_default[] = "";$/;"	v	file:
syslocation_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_len_default = 0;$/;"	v	file:
syslocation_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_len_ptr = (u8_t*)&syslocation_len_default;$/;"	v	file:
syslocation_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_ptr = (u8_t*)&syslocation_default[0];$/;"	v	file:
sysname_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_default[] = "FQDN-unk";$/;"	v	file:
sysname_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_len_default = 8;$/;"	v	file:
sysname_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_len_ptr = (u8_t*)&sysname_len_default;$/;"	v	file:
sysname_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_ptr = (u8_t*)&sysname_default[0];$/;"	v	file:
sysobjid	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id sysobjid = {SNMP_SYSOBJID_LEN, SNMP_SYSOBJID};$/;"	v	typeref:struct:snmp_obj_id	file:
sysservices	net/lwip/core/snmp/mib2.c	/^static const s32_t sysservices = SNMP_SYSSERVICES;$/;"	v	file:
system_get_object_def	net/lwip/core/snmp/mib2.c	/^system_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
system_get_value	net/lwip/core/snmp/mib2.c	/^system_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_test	net/lwip/core/snmp/mib2.c	/^system_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_value	net/lwip/core/snmp/mib2.c	/^system_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
sysuptime	net/lwip/core/snmp/mib2.c	/^static u32_t sysuptime = 0;$/;"	v	file:
t	obj/net/ns.asm	/^    t = malloc(sizeof(*t));$/;"	d
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
t1_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t1_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for renewal time *\/$/;"	m	struct:dhcp
t2_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t2_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for rebind time *\/$/;"	m	struct:dhcp
t_arp	net/serv.c	/^static struct timer_thread t_arp;$/;"	v	typeref:struct:timer_thread	file:
t_tcpf	net/serv.c	/^static struct timer_thread t_tcpf;$/;"	v	typeref:struct:timer_thread	file:
t_tcps	net/serv.c	/^static struct timer_thread t_tcps;$/;"	v	typeref:struct:timer_thread	file:
tail	kern/e1000.c	/^uint32_t head=0, tail=0;$/;"	v
tail	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *tail;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
tail	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *tail;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
tail	obj/kern/kernel.asm	/^	tail = (tdt + 1) % SIZEOF_QUEUE;$/;"	d
tail_gone	obj/net/ns.asm	/^    tail_gone = pbuf_free(q);$/;"	d
tc	obj/net/ns.asm	/^	tc = tc->tc_queue_link;$/;"	d
tc_arg	net/lwip/jos/arch/threadq.h	/^    uint32_t		tc_arg;$/;"	m	struct:thread_context
tc_entry	net/lwip/jos/arch/threadq.h	/^    void		(*tc_entry)(uint32_t);$/;"	m	struct:thread_context
tc_jb	net/lwip/jos/arch/threadq.h	/^    struct jos_jmp_buf	tc_jb;$/;"	m	struct:thread_context	typeref:struct:thread_context::jos_jmp_buf
tc_name	net/lwip/jos/arch/threadq.h	/^    char 		tc_name[name_size];$/;"	m	struct:thread_context
tc_nonhalt	net/lwip/jos/arch/threadq.h	/^    int			tc_nonhalt;$/;"	m	struct:thread_context
tc_onhalt	net/lwip/jos/arch/threadq.h	/^    void		(*tc_onhalt[THREAD_NUM_ONHALT])(thread_id_t);$/;"	m	struct:thread_context
tc_queue_link	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tc_queue_link;$/;"	m	struct:thread_context	typeref:struct:thread_context::thread_context
tc_stack_bottom	net/lwip/jos/arch/threadq.h	/^    void		*tc_stack_bottom;$/;"	m	struct:thread_context
tc_tid	net/lwip/jos/arch/threadq.h	/^    thread_id_t		tc_tid;$/;"	m	struct:thread_context
tc_wait_addr	net/lwip/jos/arch/threadq.h	/^    volatile uint32_t	*tc_wait_addr;$/;"	m	struct:thread_context
tc_wakeup	net/lwip/jos/arch/threadq.h	/^    volatile char	tc_wakeup;$/;"	m	struct:thread_context
tclass1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
tclass2	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
tcp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcp = {$/;"	v	typeref:struct:mib_array_node
tcp	net/lwip/include/lwip/api.h	/^    struct tcp_pcb *tcp;$/;"	m	union:netconn::__anon25	typeref:struct:netconn::__anon25::tcp_pcb
tcp	net/lwip/include/lwip/stats.h	/^  struct stats_proto tcp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
tcp_abort	net/lwip/core/tcp.c	/^tcp_abort(struct tcp_pcb *pcb)$/;"	f
tcp_accept	net/lwip/core/tcp.c	/^tcp_accept(struct tcp_pcb *pcb,$/;"	f
tcp_accept_null	net/lwip/core/tcp.c	/^tcp_accept_null(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
tcp_accepted	net/lwip/include/lwip/tcp.h	83;"	d
tcp_accepted	net/lwip/include/lwip/tcp.h	85;"	d
tcp_ack	net/lwip/include/lwip/tcp.h	509;"	d
tcp_ack_now	net/lwip/include/lwip/tcp.h	517;"	d
tcp_active_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_active_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb->next;$/;"	d
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb;$/;"	d
tcp_alloc	net/lwip/core/tcp.c	/^tcp_alloc(u8_t prio)$/;"	f
tcp_arg	net/lwip/core/tcp.c	/^tcp_arg(struct tcp_pcb *pcb, void *arg)$/;"	f
tcp_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_backoff[13] =$/;"	v
tcp_bind	net/lwip/core/tcp.c	/^tcp_bind(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
tcp_bound_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_bound_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_close	net/lwip/core/tcp.c	/^tcp_close(struct tcp_pcb *pcb)$/;"	f
tcp_connect	net/lwip/core/tcp.c	/^tcp_connect(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port,$/;"	f
tcp_debug_print	net/lwip/core/tcp.c	/^tcp_debug_print(struct tcp_hdr *tcphdr)$/;"	f
tcp_debug_print	net/lwip/include/lwip/tcp.h	550;"	d
tcp_debug_print_flags	net/lwip/core/tcp.c	/^tcp_debug_print_flags(u8_t flags)$/;"	f
tcp_debug_print_flags	net/lwip/include/lwip/tcp.h	551;"	d
tcp_debug_print_pcbs	net/lwip/core/tcp.c	/^tcp_debug_print_pcbs(void)$/;"	f
tcp_debug_print_pcbs	net/lwip/include/lwip/tcp.h	553;"	d
tcp_debug_print_state	net/lwip/core/tcp.c	/^tcp_debug_print_state(enum tcp_state s)$/;"	f
tcp_debug_print_state	net/lwip/include/lwip/tcp.h	552;"	d
tcp_do_output_nagle	net/lwip/include/lwip/tcp.h	134;"	d
tcp_eff_send_mss	net/lwip/core/tcp.c	/^tcp_eff_send_mss(u16_t sendmss, struct ip_addr *addr)$/;"	f
tcp_enqueue	net/lwip/core/tcp_out.c	/^tcp_enqueue(struct tcp_pcb *pcb, void *arg, u16_t len,$/;"	f
tcp_err	net/lwip/core/tcp.c	/^tcp_err(struct tcp_pcb *pcb,$/;"	f
tcp_fasttmr	net/lwip/core/tcp.c	/^tcp_fasttmr(void)$/;"	f
tcp_get_object_def	net/lwip/core/snmp/mib2.c	/^tcp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcp_get_value	net/lwip/core/snmp/mib2.c	/^tcp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcp_hdr	net/lwip/include/lwip/tcp.h	/^struct tcp_hdr {$/;"	s
tcp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcp_ids[15] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };$/;"	v
tcp_init	net/lwip/include/lwip/tcp.h	55;"	d
tcp_input	net/lwip/core/tcp_in.c	/^tcp_input(struct pbuf *p, struct netif *inp)$/;"	f
tcp_input_pcb	net/lwip/core/tcp_in.c	/^struct tcp_pcb *tcp_input_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = NULL;$/;"	d
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = pcb;$/;"	d
tcp_keepalive	net/lwip/core/tcp_out.c	/^tcp_keepalive(struct tcp_pcb *pcb)$/;"	f
tcp_kill_prio	net/lwip/core/tcp.c	/^tcp_kill_prio(u8_t prio)$/;"	f	file:
tcp_kill_timewait	net/lwip/core/tcp.c	/^tcp_kill_timewait(void)$/;"	f	file:
tcp_listen	net/lwip/include/lwip/tcp.h	97;"	d
tcp_listen_input	net/lwip/core/tcp_in.c	/^tcp_listen_input(struct tcp_pcb_listen *pcb)$/;"	f	file:
tcp_listen_pcbs	net/lwip/core/tcp.c	/^union tcp_listen_pcbs_t tcp_listen_pcbs;$/;"	v	typeref:union:tcp_listen_pcbs_t
tcp_listen_pcbs_t	net/lwip/include/lwip/tcp.h	/^union tcp_listen_pcbs_t { \/* List of all TCP PCBs in LISTEN state. *\/$/;"	u
tcp_listen_with_backlog	net/lwip/core/tcp.c	/^tcp_listen_with_backlog(struct tcp_pcb *pcb, u8_t backlog)$/;"	f
tcp_mss	net/lwip/include/lwip/tcp.h	79;"	d
tcp_new	net/lwip/core/tcp.c	/^tcp_new(void)$/;"	f
tcp_new_port	net/lwip/core/tcp.c	/^tcp_new_port(void)$/;"	f	file:
tcp_next_iss	net/lwip/core/tcp.c	/^tcp_next_iss(void)$/;"	f
tcp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcp_nodes[15] = {$/;"	v
tcp_output	net/lwip/core/tcp_out.c	/^tcp_output(struct tcp_pcb *pcb)$/;"	f
tcp_output_nagle	net/lwip/include/lwip/tcp.h	138;"	d
tcp_output_segment	net/lwip/core/tcp_out.c	/^tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb)$/;"	f	file:
tcp_parseopt	net/lwip/core/tcp_in.c	/^tcp_parseopt(struct tcp_pcb *pcb)$/;"	f	file:
tcp_pcb	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb {$/;"	s
tcp_pcb_listen	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb_listen {  $/;"	s
tcp_pcb_purge	net/lwip/core/tcp.c	/^tcp_pcb_purge(struct tcp_pcb *pcb)$/;"	f
tcp_pcb_remove	net/lwip/core/tcp.c	/^tcp_pcb_remove(struct tcp_pcb **pcblist, struct tcp_pcb *pcb)$/;"	f
tcp_pcbs_sane	net/lwip/core/tcp.c	/^tcp_pcbs_sane(void)$/;"	f
tcp_pcbs_sane	net/lwip/include/lwip/tcp.h	554;"	d
tcp_persist_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_persist_backoff[7] = { 3, 6, 12, 24, 48, 96, 120 };$/;"	v
tcp_poll	net/lwip/core/tcp.c	/^tcp_poll(struct tcp_pcb *pcb,$/;"	f
tcp_process	net/lwip/core/tcp_in.c	/^tcp_process(struct tcp_pcb *pcb)$/;"	f	file:
tcp_receive	net/lwip/core/tcp_in.c	/^tcp_receive(struct tcp_pcb *pcb)$/;"	f	file:
tcp_recv	net/lwip/core/tcp.c	/^tcp_recv(struct tcp_pcb *pcb,$/;"	f
tcp_recv_null	net/lwip/core/tcp.c	/^tcp_recv_null(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
tcp_recved	net/lwip/core/tcp.c	/^tcp_recved(struct tcp_pcb *pcb, u16_t len)$/;"	f
tcp_rexmit	net/lwip/core/tcp_out.c	/^tcp_rexmit(struct tcp_pcb *pcb)$/;"	f
tcp_rexmit_rto	net/lwip/core/tcp_out.c	/^tcp_rexmit_rto(struct tcp_pcb *pcb)$/;"	f
tcp_rst	net/lwip/core/tcp_out.c	/^tcp_rst(u32_t seqno, u32_t ackno,$/;"	f
tcp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node tcp_scalar = {$/;"	v
tcp_seg	net/lwip/include/lwip/tcp.h	/^struct tcp_seg {$/;"	s
tcp_seg_copy	net/lwip/core/tcp.c	/^tcp_seg_copy(struct tcp_seg *seg)$/;"	f
tcp_seg_free	net/lwip/core/tcp.c	/^tcp_seg_free(struct tcp_seg *seg)$/;"	f
tcp_segs_free	net/lwip/core/tcp.c	/^tcp_segs_free(struct tcp_seg *seg)$/;"	f
tcp_send_ctrl	net/lwip/core/tcp_out.c	/^tcp_send_ctrl(struct tcp_pcb *pcb, u8_t flags)$/;"	f
tcp_sent	net/lwip/core/tcp.c	/^tcp_sent(struct tcp_pcb *pcb,$/;"	f
tcp_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^typedef u32_t tcp_seq;$/;"	t
tcp_setprio	net/lwip/core/tcp.c	/^tcp_setprio(struct tcp_pcb *pcb, u8_t prio)$/;"	f
tcp_slowtmr	net/lwip/core/tcp.c	/^tcp_slowtmr(void)$/;"	f
tcp_sndbuf	net/lwip/include/lwip/tcp.h	80;"	d
tcp_state	net/lwip/include/lwip/tcp.h	/^enum tcp_state {$/;"	g
tcp_ticks	net/lwip/core/tcp.c	/^u32_t tcp_ticks;$/;"	v
tcp_timer	net/lwip/core/tcp.c	/^static u8_t tcp_timer;$/;"	v	file:
tcp_timer_needed	net/lwip/api/tcpip.c	/^tcp_timer_needed(void)$/;"	f
tcp_timer_needed	net/lwip/include/lwip/tcp.h	558;"	d
tcp_timewait_input	net/lwip/core/tcp_in.c	/^tcp_timewait_input(struct tcp_pcb *pcb)$/;"	f	file:
tcp_tmp_pcb	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tmp_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_tmr	net/lwip/core/tcp.c	/^tcp_tmr(void)$/;"	f
tcp_tw_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tw_pcbs;$/;"	v	typeref:struct:tcp_pcb
tcp_tw_pcbs	obj/net/ns.asm	/^        tcp_tw_pcbs = pcb->next;$/;"	d
tcp_write	net/lwip/core/tcp_out.c	/^tcp_write(struct tcp_pcb *pcb, const void *data, u16_t len, u8_t apiflags)$/;"	f
tcp_zero_window_probe	net/lwip/core/tcp_out.c	/^tcp_zero_window_probe(struct tcp_pcb *pcb)$/;"	f
tcpactiveopens	net/lwip/core/snmp/mib2.c	/^static u32_t tcpactiveopens = 0,$/;"	v	file:
tcpattemptfails	net/lwip/core/snmp/mib2.c	/^             tcpattemptfails = 0,$/;"	v	file:
tcpconnentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcpconnentry = {$/;"	v	typeref:struct:mib_array_node
tcpconnentry_get_object_def	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcpconnentry_get_value	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcpconnentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcpconnentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
tcpconnentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcpconnentry_nodes[5] = {$/;"	v
tcpconntable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node tcpconntable = {$/;"	v	typeref:struct:mib_ram_array_node
tcpconntable_id	net/lwip/core/snmp/mib2.c	/^s32_t tcpconntable_id = 1;$/;"	v
tcpconntable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* tcpconntable_node = (struct mib_node* const)&tcpconnentry;$/;"	v	typeref:struct:mib_node
tcpconntree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode tcpconntree_root = {$/;"	v	typeref:struct:mib_list_rootnode
tcpestabresets	net/lwip/core/snmp/mib2.c	/^             tcpestabresets = 0,$/;"	v	file:
tcphdr	net/lwip/core/tcp_in.c	/^static struct tcp_hdr *tcphdr;$/;"	v	typeref:struct:tcp_hdr	file:
tcphdr	net/lwip/include/lwip/tcp.h	/^  struct tcp_hdr *tcphdr;  \/* the TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_hdr
tcphdr	net/lwip/netif/ppp/vjbsdhdr.h	/^struct tcphdr  $/;"	s
tcphdr	obj/net/ns.asm	/^    tcphdr = p->payload;$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = (struct tcp_hdr *)((u8_t *)p->payload + IPH_HL(iphdr) * 4);$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = p->payload;$/;"	d
tcpinerrs	net/lwip/core/snmp/mib2.c	/^             tcpinerrs = 0,$/;"	v	file:
tcpinsegs	net/lwip/core/snmp/mib2.c	/^             tcpinsegs = 0,$/;"	v	file:
tcpip_apimsg	net/lwip/api/tcpip.c	/^tcpip_apimsg(struct api_msg *apimsg)$/;"	f
tcpip_apimsg_lock	net/lwip/api/tcpip.c	/^tcpip_apimsg_lock(struct api_msg *apimsg)$/;"	f
tcpip_callback	net/lwip/include/lwip/tcpip.h	86;"	d
tcpip_callback_with_block	net/lwip/api/tcpip.c	/^tcpip_callback_with_block(void (*f)(void *ctx), void *ctx, u8_t block)$/;"	f
tcpip_init	net/lwip/api/tcpip.c	/^tcpip_init(void (* initfunc)(void *), void *arg)$/;"	f
tcpip_init_done	net/lwip/api/tcpip.c	/^static void (* tcpip_init_done)(void *arg);$/;"	v	file:
tcpip_init_done	net/serv.c	/^tcpip_init_done(void *arg)$/;"	f	file:
tcpip_init_done	obj/net/ns.asm	/^  tcpip_init_done = initfunc;$/;"	d
tcpip_init_done_arg	net/lwip/api/tcpip.c	/^static void *tcpip_init_done_arg;$/;"	v	file:
tcpip_init_done_arg	obj/net/ns.asm	/^  tcpip_init_done_arg = arg;$/;"	d
tcpip_input	net/lwip/api/tcpip.c	/^tcpip_input(struct pbuf *p, struct netif *inp)$/;"	f
tcpip_msg	net/lwip/include/lwip/tcpip.h	/^struct tcpip_msg {$/;"	s
tcpip_msg_type	net/lwip/include/lwip/tcpip.h	/^enum tcpip_msg_type {$/;"	g
tcpip_netifapi	net/lwip/api/tcpip.c	/^tcpip_netifapi(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_netifapi_lock	net/lwip/api/tcpip.c	/^tcpip_netifapi_lock(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_tcp_timer	net/lwip/api/tcpip.c	/^tcpip_tcp_timer(void *arg)$/;"	f	file:
tcpip_tcp_timer_active	net/lwip/api/tcpip.c	/^static int tcpip_tcp_timer_active;$/;"	v	file:
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 0;$/;"	d
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 1;$/;"	d
tcpip_thread	net/lwip/api/tcpip.c	/^tcpip_thread(void *arg)$/;"	f	file:
tcpip_timeout	net/lwip/api/tcpip.c	/^tcpip_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
tcpip_untimeout	net/lwip/include/lwip/tcpip.h	93;"	d
tcplen	net/lwip/core/tcp_in.c	/^static u16_t tcplen;$/;"	v	file:
tcplen	obj/net/ns.asm	/^        tcplen = TCP_TCPLEN(&inseg);$/;"	d
tcplen	obj/net/ns.asm	/^  tcplen = p->tot_len + ((flags & TCP_FIN || flags & TCP_SYN)? 1: 0);$/;"	d
tcpoutrsts	net/lwip/core/snmp/mib2.c	/^             tcpoutrsts = 0;$/;"	v	file:
tcpoutsegs	net/lwip/core/snmp/mib2.c	/^             tcpoutsegs = 0,$/;"	v	file:
tcppassiveopens	net/lwip/core/snmp/mib2.c	/^             tcppassiveopens = 0,$/;"	v	file:
tcpretranssegs	net/lwip/core/snmp/mib2.c	/^             tcpretranssegs = 0,$/;"	v	file:
tctl	kern/e1000.c	/^uint32_t *tctl, *tipg;$/;"	v
tctl	obj/kern/kernel.asm	/^	tctl = (uint32_t *)(temp + E1000_TCTL);$/;"	d
tdbah	kern/e1000.c	/^uint32_t *tdbal, *tdbah, *tdlen, *tdh, *tdt;$/;"	v
tdbah	obj/kern/kernel.asm	/^	tdbah = (uint32_t *)(temp + E1000_TDBAH);$/;"	d
tdbal	kern/e1000.c	/^uint32_t *tdbal, *tdbah, *tdlen, *tdh, *tdt;$/;"	v
tdbal	obj/kern/kernel.asm	/^	tdbal = (uint32_t *)(temp + E1000_TDBAL);$/;"	d
tdh	kern/e1000.c	/^uint32_t *tdbal, *tdbah, *tdlen, *tdh, *tdt;$/;"	v
tdh	obj/kern/kernel.asm	/^	tdh = (uint32_t *)(temp + E1000_TDH);$/;"	d
tdlen	kern/e1000.c	/^uint32_t *tdbal, *tdbah, *tdlen, *tdh, *tdt;$/;"	v
tdlen	obj/kern/kernel.asm	/^	tdlen = (uint32_t *)(temp + E1000_TDLEN);$/;"	d
tdt	kern/e1000.c	/^uint32_t *tdbal, *tdbah, *tdlen, *tdh, *tdt;$/;"	v
tdt	obj/kern/kernel.asm	/^	tdt = (uint32_t *)(temp + E1000_TDT);$/;"	d
tehdr	obj/net/ns.asm	/^  tehdr = q->payload;$/;"	d
temp	obj/kern/kernel.asm	/^		temp = temp->env_link;$/;"	d
term_reason	net/lwip/netif/ppp/fsm.h	/^  char* term_reason;               \/* Reason for closing protocol *\/$/;"	m	struct:fsm
term_reason_len	net/lwip/netif/ppp/fsm.h	/^  int term_reason_len;             \/* Length of term_reason *\/$/;"	m	struct:fsm
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	kern/init.c	/^test_backtrace(int x)$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_echosrv	grade-lab6	/^def test_echosrv():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_fd_share	grade-lab5	/^def test_fd_share():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_fs	grade-lab5	/^def test_fs():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_httpd	grade-lab6	/^def test_httpd():$/;"	f
test_httpd_test	grade-lab6	/^    def test_httpd_test():$/;"	f	function:mk_test_httpd
test_icode	grade-lab5	/^def test_icode():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pci_attach	grade-lab6	/^def test_pci_attach():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_primespipe	grade-lab5	/^def test_primespipe():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_pte_share	grade-lab5	/^def test_pte_share():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spawn	grade-lab5	/^def test_spawn():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
test_testfile	grade-lab5	/^def test_testfile():$/;"	f
test_testinput_100	grade-lab6	/^def test_testinput_100():$/;"	f
test_testinput_5	grade-lab6	/^def test_testinput_5():$/;"	f
test_testinput_helper	grade-lab6	/^def test_testinput_helper(count):$/;"	f
test_testoutput_100	grade-lab6	/^def test_testoutput_100():$/;"	f
test_testoutput_5	grade-lab6	/^def test_testoutput_5():$/;"	f
test_testoutput_helper	grade-lab6	/^def test_testoutput_helper(count):$/;"	f
test_testshell	grade-lab5	/^def test_testshell():$/;"	f
test_testtime	grade-lab6	/^def test_testtime():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
th_ack	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_ack;      \/* acknowledgement number *\/$/;"	m	struct:tcphdr
th_dport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_dport;    \/* destination port *\/$/;"	m	struct:tcphdr
th_flags	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_flags;$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_off:4;    \/* data offset *\/$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_off:4,    \/* data offset *\/$/;"	m	struct:tcphdr
th_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_seq;      \/* sequence number *\/$/;"	m	struct:tcphdr
th_sport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sport;    \/* source port *\/$/;"	m	struct:tcphdr
th_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sum;      \/* checksum *\/$/;"	m	struct:tcphdr
th_urp	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_urp;      \/* urgent pointer *\/$/;"	m	struct:tcphdr
th_win	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_win;      \/* window *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_x2 :4;    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_x2 :4,    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_x2_off;$/;"	m	struct:tcphdr
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^volatile const struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/net/ns.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/net/ns.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/net/testinput.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/net/testinput.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/net/testoutput.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/net/testoutput.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/cat.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/echo.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/echosrv.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/echotest.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/exechello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/httpd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/ls.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/lsfd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/num.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primespipe.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/sendpage.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/sh.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/spin.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testfdsharing.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testkbd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpipe.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpiperace.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpiperace2.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpteshare.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testshell.asm	/^		thisenv = &envs[envs_array_index];$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testtime.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_trap_header_lengths thl;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_trap_header_lengths
thread_clean	net/lwip/jos/arch/thread.c	/^thread_clean(struct thread_context *tc) {$/;"	f	file:
thread_context	net/lwip/jos/arch/threadq.h	/^struct thread_context {$/;"	s
thread_create	net/lwip/jos/arch/thread.c	/^thread_create(thread_id_t *tid, const char *name, $/;"	f
thread_entry	net/lwip/jos/arch/thread.c	/^thread_entry(void) {$/;"	f	file:
thread_halt	net/lwip/jos/arch/thread.c	/^thread_halt() {$/;"	f
thread_hash_size	net/lwip/jos/arch/sys_arch.c	/^enum { thread_hash_size = 257 };$/;"	e	enum:__anon42	file:
thread_id	net/lwip/jos/arch/thread.c	/^thread_id(void) {$/;"	f
thread_id_t	net/lwip/jos/arch/thread.h	/^typedef uint32_t thread_id_t;$/;"	t
thread_init	net/lwip/jos/arch/thread.c	/^thread_init(void) {$/;"	f
thread_onhalt	net/lwip/jos/arch/thread.c	/^thread_onhalt(void (*fun)(thread_id_t)) {$/;"	f
thread_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue thread_queue;$/;"	v	typeref:struct:thread_queue	file:
thread_queue	net/lwip/jos/arch/threadq.h	/^struct thread_queue$/;"	s
thread_set_name	net/lwip/jos/arch/thread.c	/^thread_set_name(struct thread_context *tc, const char *name)$/;"	f	file:
thread_wait	net/lwip/jos/arch/thread.c	/^thread_wait(volatile uint32_t *addr, uint32_t val, uint32_t msec) {$/;"	f
thread_wakeup	net/lwip/jos/arch/thread.c	/^thread_wakeup(volatile uint32_t *addr) {$/;"	f
thread_wakeups_pending	net/lwip/jos/arch/thread.c	/^thread_wakeups_pending(void)$/;"	f
thread_yield	net/lwip/jos/arch/thread.c	/^thread_yield(void) {$/;"	f
threadq_init	net/lwip/jos/arch/threadq.h	/^threadq_init(struct thread_queue *tq)$/;"	f
threadq_pop	net/lwip/jos/arch/threadq.h	/^threadq_pop(struct thread_queue *tq)$/;"	f
threadq_push	net/lwip/jos/arch/threadq.h	/^threadq_push(struct thread_queue *tq, struct thread_context *tc)$/;"	f
ticks	kern/time.c	/^static unsigned int ticks;$/;"	v	file:
ticks	obj/kern/kernel.asm	/^	ticks = 0;$/;"	d
tid	net/lwip/jos/arch/sys_arch.c	/^    thread_id_t tid;$/;"	m	struct:sys_thread	file:
time	net/lwip/include/lwip/sys.h	/^  u32_t time;$/;"	m	struct:sys_timeo
time_init	kern/time.c	/^time_init(void)$/;"	f
time_msec	kern/time.c	/^time_msec(void)$/;"	f
time_needed	obj/net/ns.asm	/^      time_needed = SYS_ARCH_TIMEOUT;$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_mbox_fetch(mbox, msg, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_sem_wait(sem, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^    time_needed = sys_arch_mbox_fetch(mbox, msg, 0);$/;"	d
time_tick	kern/time.c	/^time_tick(void)$/;"	f
timeflag	net/lwip/core/sys.c	/^  s16_t timeflag;$/;"	m	struct:sswt_cb	file:
timeout	obj/net/ns.asm	/^      timeout = 0xffff;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t1_renew + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t2_rebind + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^  timeout = memp_malloc(MEMP_SYS_TIMEOUT);$/;"	d
timeout_cleanup	net/lwip/jos/arch/sys_arch.c	/^timeout_cleanup(thread_id_t tid)$/;"	f	file:
timeouts	obj/net/ns.asm	/^  timeouts = sys_arch_timeouts();$/;"	d
timeouttime	net/lwip/netif/ppp/chap.h	/^  int timeouttime;                        \/* Timeout time in seconds *\/$/;"	m	struct:chap_state
timeouttime	net/lwip/netif/ppp/fsm.h	/^  int timeouttime;                 \/* Timeout time in milliseconds *\/$/;"	m	struct:fsm
timer	net/lwip/include/ipv4/lwip/igmp.h	/^  u16_t              timer;$/;"	m	struct:igmp_group
timer	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t timer;$/;"	m	struct:ip_reassdata
timer	net/timer.c	/^timer(envid_t ns_envid, uint32_t initial_to) {$/;"	f
timer_envid	net/serv.c	/^static envid_t timer_envid;$/;"	v	file:
timer_envid	obj/net/ns.asm	/^	timer_envid = fork();$/;"	d
timer_thread	net/serv.c	/^struct timer_thread {$/;"	s	file:
timeval	net/lwip/include/lwip/sockets.h	/^struct timeval {$/;"	s
tipg	kern/e1000.c	/^uint32_t *tctl, *tipg;$/;"	v
tipg	obj/kern/kernel.asm	/^	tipg = (uint32_t *)(temp + E1000_TIPG);$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
tmain	net/serv.c	/^tmain(uint32_t arg) {$/;"	f	file:
tmo	net/lwip/include/lwip/tcpip.h	/^    } tmo;$/;"	m	union:tcpip_msg::__anon26	typeref:struct:tcpip_msg::__anon26::__anon29
tmo	net/lwip/jos/arch/sys_arch.c	/^    struct sys_timeouts tmo;$/;"	m	struct:sys_thread	typeref:struct:sys_thread::sys_timeouts	file:
tmp	obj/net/ns.asm	/^      tmp = r;$/;"	d
tmp	obj/net/ns.asm	/^      tmp = tmp | IP_MF;$/;"	d
tmp	obj/net/ns.asm	/^    tmp = omf | (IP_OFFMASK & (ofo));$/;"	d
tmp	obj/net/ns.asm	/^  tmp = ntohs(IPH_OFFSET(iphdr));$/;"	d
tmptimeout	obj/net/ns.asm	/^      tmptimeout = timeouts->next;$/;"	d
tmr	net/lwip/core/dns.c	/^  u8_t  tmr;$/;"	m	struct:dns_table_entry	file:
tmr	net/lwip/include/lwip/tcp.h	/^  u32_t tmr;$/;"	m	struct:tcp_pcb
to	obj/net/ns.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/ns.asm	/^	to = TIMER_INTERVAL - (now - start);$/;"	d
to	obj/net/testinput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/testoutput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
tot_len	net/lwip/include/lwip/pbuf.h	/^  u16_t tot_len;$/;"	m	struct:pbuf
tq_first	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_first;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
tq_last	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_last;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
trans_desc	kern/e1000.c	/^struct tx_desc trans_desc[SIZEOF_QUEUE];$/;"	v	typeref:struct:tx_desc
transmit_packets	kern/e1000.c	/^transmit_packets(char *buf, int size){$/;"	f
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst trap_dst[SNMP_TRAP_DESTINATIONS];$/;"	v	typeref:struct:snmp_trap_dst
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trap_msg	net/lwip/core/snmp/msg_out.c	/^struct snmp_msg_trap trap_msg;$/;"	v	typeref:struct:snmp_msg_trap
trapframe_top	obj/kern/kernel.asm	/^		trapframe_top = trapframe_top - sizeof(struct UTrapframe);$/;"	d
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
tree_levels	net/lwip/include/lwip/snmp_structs.h	/^  u8_t tree_levels;$/;"	m	struct:mib_external_node
tried_llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t tried_llipaddr;      \/* total number of probed\/used Link Local IP-Addresses *\/$/;"	m	struct:autoip
tries	net/lwip/include/lwip/dhcp.h	/^  u8_t tries;$/;"	m	struct:dhcp
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
truncate_func_name	kern/monitor.c	/^truncate_func_name(const char *str){$/;"	f
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts	net/lwip/include/lwip/netif.h	/^  u32_t ts;$/;"	m	struct:netif
ts	net/lwip/include/lwip/snmp_msg.h	/^  u32_t ts;$/;"	m	struct:snmp_msg_trap
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
tslen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t tslen;$/;"	m	struct:snmp_trap_header_lengths
tslenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t tslenlen;$/;"	m	struct:snmp_trap_header_lengths
tstate	net/lwip/netif/ppp/vj.h	/^  struct cstate tstate[MAX_SLOTS]; \/* xmit connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_answer	file:
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_table_entry	file:
ttw	net/lwip/include/ipv4/lwip/autoip.h	/^  u16_t ttw;                \/* ticks to wait, tick is AUTOIP_TMR_INTERVAL long *\/$/;"	m	struct:autoip
tv_sec	net/lwip/include/lwip/sockets.h	/^  long    tv_sec;         \/* seconds *\/$/;"	m	struct:timeval
tv_usec	net/lwip/include/lwip/sockets.h	/^  long    tv_usec;        \/* and microseconds *\/$/;"	m	struct:timeval
tx_desc	kern/e1000.h	/^struct tx_desc$/;"	s
type	inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_answer	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_query	file:
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_dur_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_echo_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_te_hdr
type	net/lwip/include/lwip/api.h	/^  enum netconn_type type;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_type
type	net/lwip/include/lwip/pbuf.h	/^  u8_t \/*pbuf_type*\/ type;$/;"	m	struct:pbuf
type	net/lwip/include/lwip/tcpip.h	/^  enum tcpip_msg_type type;$/;"	m	struct:tcpip_msg	typeref:enum:tcpip_msg::tcpip_msg_type
type	obj/net/ns.asm	/^      type = p->type;$/;"	d
type	obj/net/ns.asm	/^  type = *((u8_t *)p->payload);$/;"	d
type	obj/net/ns.asm	/^  type = p->type;$/;"	d
u16_t	net/lwip/jos/arch/cc.h	/^typedef uint16_t u16_t;$/;"	t
u16_t	obj/net/ns.asm	/^u16_t$/;"	l
u16_t	obj/net/testinput.asm	/^u16_t$/;"	l
u16_t	obj/user/echosrv.asm	/^u16_t$/;"	l
u16_t	obj/user/echotest.asm	/^u16_t$/;"	l
u16_t	obj/user/httpd.asm	/^u16_t$/;"	l
u32_t	net/lwip/jos/arch/cc.h	/^typedef uint32_t u32_t;$/;"	t
u32_t	obj/net/ns.asm	/^u32_t $/;"	l
u32_t	obj/net/ns.asm	/^u32_t$/;"	l
u32_t	obj/net/testinput.asm	/^u32_t$/;"	l
u32_t	obj/user/echosrv.asm	/^u32_t$/;"	l
u32_t	obj/user/echotest.asm	/^u32_t$/;"	l
u32_t	obj/user/httpd.asm	/^u32_t$/;"	l
u64_t	net/lwip/jos/arch/cc.h	/^typedef uint64_t u64_t;$/;"	t
u8_t	net/lwip/jos/arch/cc.h	/^typedef uint8_t u8_t;$/;"	t
u8_t	obj/net/ns.asm	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t netif_is_up(struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t$/;"	l
u_char	net/lwip/netif/ppp/ppp.h	/^typedef unsigned char  u_char;$/;"	t
u_int	net/lwip/netif/ppp/ppp.h	/^typedef unsigned int   u_int;$/;"	t
u_long	net/lwip/netif/ppp/ppp.h	/^typedef unsigned long  u_long;$/;"	t
u_short	net/lwip/netif/ppp/ppp.h	/^typedef unsigned short u_short;$/;"	t
udp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udp = {$/;"	v	typeref:struct:mib_array_node
udp	net/lwip/include/lwip/api.h	/^    struct udp_pcb *udp;$/;"	m	union:netconn::__anon25	typeref:struct:netconn::__anon25::udp_pcb
udp	net/lwip/include/lwip/stats.h	/^  struct stats_proto udp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
udp_bind	net/lwip/core/udp.c	/^udp_bind(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_connect	net/lwip/core/udp.c	/^udp_connect(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_debug_print	net/lwip/core/udp.c	/^udp_debug_print(struct udp_hdr *udphdr)$/;"	f
udp_debug_print	net/lwip/include/lwip/udp.h	141;"	d
udp_disconnect	net/lwip/core/udp.c	/^udp_disconnect(struct udp_pcb *pcb)$/;"	f
udp_flags	net/lwip/include/lwip/udp.h	130;"	d
udp_get_object_def	net/lwip/core/snmp/mib2.c	/^udp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udp_get_value	net/lwip/core/snmp/mib2.c	/^udp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udp_hdr	net/lwip/include/lwip/udp.h	/^struct udp_hdr {$/;"	s
udp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udp_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
udp_init	net/lwip/include/lwip/udp.h	136;"	d
udp_input	net/lwip/core/udp.c	/^udp_input(struct pbuf *p, struct netif *inp)$/;"	f
udp_new	net/lwip/core/udp.c	/^udp_new(void)$/;"	f
udp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udp_nodes[5] = {$/;"	v
udp_pcb	net/lwip/include/lwip/udp.h	/^struct udp_pcb {$/;"	s
udp_pcbs	net/lwip/core/udp.c	/^struct udp_pcb *udp_pcbs;$/;"	v	typeref:struct:udp_pcb
udp_pcbs	obj/net/ns.asm	/^          udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = udp_pcbs->next;$/;"	d
udp_pcbs	obj/net/ns.asm	/^  udp_pcbs = pcb;$/;"	d
udp_recv	net/lwip/core/udp.c	/^udp_recv(struct udp_pcb *pcb,$/;"	f
udp_remove	net/lwip/core/udp.c	/^udp_remove(struct udp_pcb *pcb)$/;"	f
udp_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode udp_root = {$/;"	v	typeref:struct:mib_list_rootnode
udp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node udp_scalar = {$/;"	v
udp_send	net/lwip/core/udp.c	/^udp_send(struct udp_pcb *pcb, struct pbuf *p)$/;"	f
udp_sendto	net/lwip/core/udp.c	/^udp_sendto(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_sendto_if	net/lwip/core/udp.c	/^udp_sendto_if(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_setflags	net/lwip/include/lwip/udp.h	131;"	d
udpentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udpentry = {$/;"	v	typeref:struct:mib_array_node
udpentry_get_object_def	net/lwip/core/snmp/mib2.c	/^udpentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udpentry_get_value	net/lwip/core/snmp/mib2.c	/^udpentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udpentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udpentry_ids[2] = { 1, 2 };$/;"	v
udpentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udpentry_nodes[2] = {$/;"	v
udphdr	obj/net/ns.asm	/^  udphdr = (struct udp_hdr *)p->payload;$/;"	d
udphdr	obj/net/ns.asm	/^  udphdr = q->payload;$/;"	d
udpindatagrams	net/lwip/core/snmp/mib2.c	/^static u32_t udpindatagrams = 0,$/;"	v	file:
udpinerrors	net/lwip/core/snmp/mib2.c	/^             udpinerrors = 0,$/;"	v	file:
udpnoports	net/lwip/core/snmp/mib2.c	/^             udpnoports = 0,$/;"	v	file:
udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^             udpoutdatagrams = 0;$/;"	v	file:
udptable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node udptable = {$/;"	v	typeref:struct:mib_ram_array_node
udptable_id	net/lwip/core/snmp/mib2.c	/^s32_t udptable_id = 1;$/;"	v
udptable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* udptable_node = (struct mib_node* const)&udpentry;$/;"	v	typeref:struct:mib_node
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/kern/kernel.asm	/^uint32_t *mta_start, *mta_end;$/;"	l
uint32_t	obj/kern/kernel.asm	/^uint32_t *rah, *ral;$/;"	l
uint32_t	obj/kern/kernel.asm	/^uint32_t *rdbah, *rdbal, *rdlen, *rdh, *rdt, *rctl, *ims, *rdtr;$/;"	l
uint32_t	obj/net/ns.asm	/^uint32_t$/;"	l
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testinput.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testoutput.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echosrv.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echotest.c	/^void umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/exechello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello2.c	/^umain(int argc, char **argv){$/;"	f
umain	user/httpd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testtime.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unacked	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unacked;  \/* Sent but unacknowledged segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
uncon_pcb	obj/net/ns.asm	/^          uncon_pcb = pcb;$/;"	d
uncon_pcb	obj/net/ns.asm	/^    uncon_pcb = NULL;$/;"	d
unicast_query	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER unicast_query;    \/* *\/$/;"	m	struct:stats_igmp
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unit	net/lwip/netif/ppp/chap.h	/^  int unit;                               \/* Interface unit number *\/$/;"	m	struct:chap_state
unit	net/lwip/netif/ppp/fsm.h	/^  int unit;                        \/* Interface unit number *\/$/;"	m	struct:fsm
unit	net/lwip/netif/ppp/ppp.c	/^  int unit;$/;"	m	struct:pppInputHeader	file:
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsent	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unsent;   \/* Unsent (queued) segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
unsigned	obj/fs/fs.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/net/ns.asm	/^unsigned int$/;"	l
unsigned	obj/net/testinput.asm	/^unsigned int$/;"	l
unsigned	obj/net/testoutput.asm	/^unsigned int$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
unsigned	obj/user/breakpoint.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/buggyhello2.asm	/^unsigned int$/;"	l
unsigned	obj/user/cat.asm	/^unsigned int$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
unsigned	obj/user/dumbfork.asm	/^unsigned int$/;"	l
unsigned	obj/user/echo.asm	/^unsigned int$/;"	l
unsigned	obj/user/echosrv.asm	/^unsigned int$/;"	l
unsigned	obj/user/echotest.asm	/^unsigned int$/;"	l
unsigned	obj/user/evilhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/exechello.asm	/^unsigned int$/;"	l
unsigned	obj/user/fairness.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultalloc.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultallocbad.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultbadhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultdie.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultevilhandler.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultnostack.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultregs.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwrite.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultwritekernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
unsigned	obj/user/httpd.asm	/^unsigned int$/;"	l
unsigned	obj/user/icode.asm	/^unsigned int$/;"	l
unsigned	obj/user/idle.asm	/^unsigned int$/;"	l
unsigned	obj/user/init.asm	/^unsigned int$/;"	l
unsigned	obj/user/ls.asm	/^unsigned int$/;"	l
unsigned	obj/user/lsfd.asm	/^unsigned int$/;"	l
unsigned	obj/user/num.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpong.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpongs.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned int$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
unsigned	obj/user/sendpage.asm	/^unsigned int$/;"	l
unsigned	obj/user/sh.asm	/^unsigned int$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
unsigned	obj/user/spawnhello.asm	/^unsigned int$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
unsigned	obj/user/stresssched.asm	/^unsigned int$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
unsigned	obj/user/testfdsharing.asm	/^unsigned int$/;"	l
unsigned	obj/user/testfile.asm	/^unsigned int$/;"	l
unsigned	obj/user/testkbd.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpipe.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpiperace.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpiperace2.asm	/^unsigned int$/;"	l
unsigned	obj/user/testpteshare.asm	/^unsigned int$/;"	l
unsigned	obj/user/testshell.asm	/^unsigned int$/;"	l
unsigned	obj/user/testtime.asm	/^unsigned int$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_dur_hdr
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_te_hdr
up	net/lwip/netif/ppp/fsm.h	/^  void (*up)(fsm*);                                 \/* Called when fsm reaches LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
upap	net/lwip/netif/ppp/pap.c	/^upap_state upap[NUM_PPP]; \/* UPAP state; one for each unit *\/$/;"	v
upap_authpeer	net/lwip/netif/ppp/pap.c	/^upap_authpeer(int unit)$/;"	f
upap_authwithpeer	net/lwip/netif/ppp/pap.c	/^upap_authwithpeer(int unit, char *user, char *password)$/;"	f
upap_init	net/lwip/netif/ppp/pap.c	/^upap_init(int unit)$/;"	f	file:
upap_input	net/lwip/netif/ppp/pap.c	/^upap_input(int unit, u_char *inpacket, int l)$/;"	f	file:
upap_lowerdown	net/lwip/netif/ppp/pap.c	/^upap_lowerdown(int unit)$/;"	f	file:
upap_lowerup	net/lwip/netif/ppp/pap.c	/^upap_lowerup(int unit)$/;"	f	file:
upap_protrej	net/lwip/netif/ppp/pap.c	/^upap_protrej(int unit)$/;"	f	file:
upap_rauthack	net/lwip/netif/ppp/pap.c	/^upap_rauthack(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthnak	net/lwip/netif/ppp/pap.c	/^upap_rauthnak(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthreq	net/lwip/netif/ppp/pap.c	/^upap_rauthreq(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_reqtimeout	net/lwip/netif/ppp/pap.c	/^upap_reqtimeout(void *arg)$/;"	f	file:
upap_sauthreq	net/lwip/netif/ppp/pap.c	/^upap_sauthreq(upap_state *u)$/;"	f	file:
upap_setloginpasswd	net/lwip/netif/ppp/pap.c	/^upap_setloginpasswd(int unit, const char *luser, const char *lpassword)$/;"	f
upap_sresp	net/lwip/netif/ppp/pap.c	/^upap_sresp(upap_state *u, u_char code, u_char id, char *msg, int msglen)$/;"	f	file:
upap_state	net/lwip/netif/ppp/pap.h	/^typedef struct upap_state {$/;"	s
upap_state	net/lwip/netif/ppp/pap.h	/^} upap_state;$/;"	t	typeref:struct:upap_state
upap_timeout	net/lwip/netif/ppp/pap.c	/^upap_timeout(void *arg)$/;"	f	file:
update_arp_entry	net/lwip/netif/etharp.c	/^update_arp_entry(struct netif *netif, struct ip_addr *ipaddr, struct eth_addr *ethaddr, u8_t flags)$/;"	f	file:
url	obj/user/httpd.asm	/^	url = request;$/;"	d
url	user/httpd.c	/^	char *url;$/;"	m	struct:http_request	file:
url_len	obj/user/httpd.asm	/^	url_len = request - url;$/;"	d
us_clientstate	net/lwip/netif/ppp/pap.h	/^  int us_clientstate;    \/* Client state *\/$/;"	m	struct:upap_state
us_id	net/lwip/netif/ppp/pap.h	/^  u_char us_id;          \/* Current id *\/$/;"	m	struct:upap_state
us_maxtransmits	net/lwip/netif/ppp/pap.h	/^  int us_maxtransmits;   \/* Maximum number of auth-reqs to send *\/$/;"	m	struct:upap_state
us_passwd	net/lwip/netif/ppp/pap.h	/^  const char *us_passwd; \/* Password *\/$/;"	m	struct:upap_state
us_passwdlen	net/lwip/netif/ppp/pap.h	/^  int us_passwdlen;      \/* Password length *\/$/;"	m	struct:upap_state
us_reqtimeout	net/lwip/netif/ppp/pap.h	/^  int us_reqtimeout;     \/* Time to wait for auth-req from peer *\/$/;"	m	struct:upap_state
us_serverstate	net/lwip/netif/ppp/pap.h	/^  int us_serverstate;    \/* Server state *\/$/;"	m	struct:upap_state
us_timeouttime	net/lwip/netif/ppp/pap.h	/^  int us_timeouttime;    \/* Timeout (seconds) for auth-req retrans. *\/$/;"	m	struct:upap_state
us_transmits	net/lwip/netif/ppp/pap.h	/^  int us_transmits;      \/* Number of auth-reqs sent *\/$/;"	m	struct:upap_state
us_unit	net/lwip/netif/ppp/pap.h	/^  int us_unit;           \/* Interface unit number *\/$/;"	m	struct:upap_state
us_user	net/lwip/netif/ppp/pap.h	/^  const char *us_user;   \/* User *\/$/;"	m	struct:upap_state
us_userlen	net/lwip/netif/ppp/pap.h	/^  int us_userlen;        \/* User length *\/$/;"	m	struct:upap_state
usage	fs/fsformat.c	/^usage(void)$/;"	f
usage	user/ls.c	/^usage(void)$/;"	f
usage	user/lsfd.c	/^usage(void)$/;"	f
usage	user/sh.c	/^usage(void)$/;"	f
use	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               use; \/* counter of simultaneous uses *\/$/;"	m	struct:igmp_group
used	net/lwip/core/mem.c	/^  u8_t used;$/;"	m	struct:mem	file:
used	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER used;$/;"	m	struct:stats_syselem
used	net/lwip/include/lwip/stats.h	/^  mem_size_t used;$/;"	m	struct:stats_mem
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
useg	obj/net/ns.asm	/^          useg = useg->next;$/;"	d
useg	obj/net/ns.asm	/^    useg = NULL;$/;"	d
useg	obj/net/ns.asm	/^  useg = pcb->unacked;$/;"	d
useg	obj/net/ns.asm	/^  useg = queue = seg = NULL;$/;"	d
usehostname	net/lwip/netif/ppp/ppp.h	/^  u_int  usehostname       : 1;       \/* Use hostname for our_name *\/$/;"	m	struct:ppp_settings
usepeerdns	net/lwip/netif/ppp/ppp.h	/^  u_int  usepeerdns        : 1;       \/* Ask peer for DNS adds *\/$/;"	m	struct:ppp_settings
user	net/lwip/netif/ppp/ppp.h	/^  char user       [MAXNAMELEN   + 1]; \/* Username for PAP *\/$/;"	m	struct:ppp_settings
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^					user_mem_check_addr =  (uintptr_t) va ;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^					user_mem_check_addr = start;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
v	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
v	net/lwip/jos/arch/sys_arch.c	/^	uint32_t v;$/;"	m	union:sys_sem_entry::__anon40	file:
v	obj/net/ns.asm	/^			v = mptr;$/;"	d
v	obj/net/ns.asm	/^	v = mptr;$/;"	d
v	obj/user/httpd.asm	/^			v = mptr;$/;"	d
v	obj/user/httpd.asm	/^	v = mptr;$/;"	d
v1_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER v1_rxed;          \/* *\/$/;"	m	struct:stats_igmp
v_len	net/lwip/include/lwip/snmp_structs.h	/^  u16_t v_len;$/;"	m	struct:obj_def
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^		va = KSTACKTOP - (KSTKSIZE + KSTKGAP) * n - KSTKSIZE;$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/net/ns.asm	/^		va = get_buffer();$/;"	d
va	obj/net/ns.asm	/^	va = (void *)(REQVA + i * PGSIZE);$/;"	d
va	obj/net/ns.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/net/testinput.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/net/testoutput.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/badsegment.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/breakpoint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/divzero.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/dumbfork.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echosrv.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echotest.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/evilhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/exechello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/fairness.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultalloc.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultallocbad.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultbadhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultdie.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultevilhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultnostack.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultread.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultreadkernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultregs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwrite.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwritekernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/forktree.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/hello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/httpd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/idle.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpong.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpongs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primes.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sendpage.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/softint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spin.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/stresssched.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testbss.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testtime.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/yield.asm	/^	va = fd2data(fd0);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	obj/net/ns.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/ns.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/ns.asm	/^    val = 0;$/;"	d
val	obj/net/testinput.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/testinput.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/testinput.asm	/^    val = 0;$/;"	d
val	obj/user/echosrv.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echosrv.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echosrv.asm	/^    val = 0;$/;"	d
val	obj/user/echotest.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echotest.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echotest.asm	/^    val = 0;$/;"	d
val	obj/user/httpd.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/httpd.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/httpd.asm	/^    val = 0;$/;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
valid	obj/net/ns.asm	/^            valid = 0;$/;"	d
valid	obj/net/ns.asm	/^          valid = 0;$/;"	d
valid	obj/net/ns.asm	/^        valid = 0;$/;"	d
value	net/lwip/include/lwip/snmp_msg.h	/^  void *value;$/;"	m	struct:snmp_varbind
value	obj/net/ns.asm	/^  value = (u32_t)(*ptr++) << 24;$/;"	d
value_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_len;$/;"	m	struct:snmp_varbind
value_type	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_type;$/;"	m	struct:snmp_varbind
vb_idx	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vb_idx;$/;"	m	struct:snmp_msg_pstat
vb_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *vb_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_resp_header_lengths
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_trap_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_resp_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_trap_header_lengths
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
version	obj/user/httpd.asm	/^	version = request;$/;"	d
version	user/httpd.c	/^	char *version;$/;"	m	struct:http_request	file:
version_len	obj/user/httpd.asm	/^	version_len = request - version;$/;"	d
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
vjComp	net/lwip/netif/ppp/ppp.c	/^  struct vjcompress vjComp;     \/* Van Jabobsen compression header. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::vjcompress	file:
vjEnabled	net/lwip/netif/ppp/ppp.c	/^  int  vjEnabled;               \/* Flag indicating VJ compression enabled. *\/$/;"	m	struct:PPPControl_s	file:
vj_compress_init	net/lwip/netif/ppp/vj.c	/^vj_compress_init(struct vjcompress *comp)$/;"	f
vj_compress_tcp	net/lwip/netif/ppp/vj.c	/^vj_compress_tcp(struct vjcompress *comp, struct pbuf *pb)$/;"	f
vj_protocol	net/lwip/netif/ppp/ipcp.h	/^  u_short vj_protocol;       \/* protocol value to use in VJ option *\/$/;"	m	struct:ipcp_options
vj_uncompress_err	net/lwip/netif/ppp/vj.c	/^vj_uncompress_err(struct vjcompress *comp)$/;"	f
vj_uncompress_tcp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_tcp(struct pbuf **nb, struct vjcompress *comp)$/;"	f
vj_uncompress_uncomp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_uncomp(struct pbuf *nb, struct vjcompress *comp)$/;"	f
vjcompress	net/lwip/netif/ppp/vj.h	/^struct vjcompress {$/;"	s
vjcs_u	net/lwip/netif/ppp/vj.h	/^  } vjcs_u;$/;"	m	struct:cstate	typeref:union:cstate::__anon14
vjs_compressed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressed;     \/* outbound compressed packets *\/$/;"	m	struct:vjstat
vjs_compressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressedin;   \/* inbound compressed packets *\/$/;"	m	struct:vjstat
vjs_errorin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_errorin;        \/* inbound unknown type packets *\/$/;"	m	struct:vjstat
vjs_misses	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_misses;         \/* times couldn't find conn. state *\/$/;"	m	struct:vjstat
vjs_packets	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_packets;        \/* outbound packets *\/$/;"	m	struct:vjstat
vjs_searches	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_searches;       \/* searches for connection state *\/$/;"	m	struct:vjstat
vjs_tossed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_tossed;         \/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat
vjs_uncompressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat
vjstat	net/lwip/netif/ppp/vj.h	/^struct vjstat {$/;"	s
vlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t vlen;$/;"	m	struct:snmp_varbind
vlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vlenlen;$/;"	m	struct:snmp_varbind
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void $/;"	l
void	obj/kern/kernel.asm	/^void (*interrupts[20])();$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void check_perm(char *perm, int *u, int *t, int *w) {$/;"	l
void	obj/kern/kernel.asm	/^void init_interrupts();$/;"	l
void	obj/kern/kernel.asm	/^void init_interrupts(){$/;"	l
void	obj/kern/kernel.asm	/^void insert_in_list(struct Env *env) {$/;"	l
void	obj/kern/kernel.asm	/^void print_priorities(){$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/net/ns.asm	/^void *$/;"	l
void	obj/net/ns.asm	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	l
void	obj/net/ns.asm	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	l
void	obj/net/ns.asm	/^void netif_remove(struct netif * netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_down(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_up(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/ns.asm	/^void$/;"	l
void	obj/net/testinput.asm	/^void *$/;"	l
void	obj/net/testinput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testinput.asm	/^void$/;"	l
void	obj/net/testoutput.asm	/^void *$/;"	l
void	obj/net/testoutput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testoutput.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/echosrv.asm	/^void *$/;"	l
void	obj/user/echosrv.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echosrv.asm	/^void$/;"	l
void	obj/user/echotest.asm	/^void *$/;"	l
void	obj/user/echotest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echotest.asm	/^void umain(int argc, char **argv)$/;"	l
void	obj/user/echotest.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/exechello.asm	/^void *$/;"	l
void	obj/user/exechello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/exechello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/httpd.asm	/^void *$/;"	l
void	obj/user/httpd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/httpd.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
void	obj/user/testtime.asm	/^void *$/;"	l
void	obj/user/testtime.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testtime.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
voidfunc	net/lwip/include/lwip/netifapi.h	/^      void  (* voidfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon22::__anon24
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vpd_key0	kern/pcireg.h	/^	uint8_t		vpd_key0;$/;"	m	struct:pci_vpd
vpd_key1	kern/pcireg.h	/^	uint8_t		vpd_key1;$/;"	m	struct:pci_vpd
vpd_len	kern/pcireg.h	/^	uint8_t		vpd_len;		\/* length of data only *\/$/;"	m	struct:pci_vpd
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;		\/* length of data + tag *\/$/;"	m	struct:pci_vpd_smallres
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;$/;"	m	struct:pci_vpd_largeres
vpdres_len_lsb	kern/pcireg.h	/^	uint8_t		vpdres_len_lsb;		\/* length of data only *\/$/;"	m	struct:pci_vpd_largeres
vpdres_len_msb	kern/pcireg.h	/^	uint8_t		vpdres_len_msb;$/;"	m	struct:pci_vpd_largeres
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
w	net/lwip/include/lwip/api_msg.h	/^    } w;$/;"	m	union:api_msg_msg::__anon30	typeref:struct:api_msg_msg::__anon30::__anon34
wait	gradelib.py	/^    def wait(self):$/;"	f
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
waiters	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t waiters;$/;"	m	struct:sys_sem_entry::__anon40::__anon41	file:
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
we	obj/net/ns.asm	/^       we do NOT return to the application thread, since ERR_MEM is$/;"	d
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
whom	net/serv.c	/^	uint32_t whom;$/;"	m	struct:st_args	file:
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/net/ns.asm	/^				width = 0;$/;"	d
width	obj/net/ns.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/ns.asm	/^		width = -1;$/;"	d
width	obj/net/testinput.asm	/^				width = 0;$/;"	d
width	obj/net/testinput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testinput.asm	/^		width = -1;$/;"	d
width	obj/net/testoutput.asm	/^				width = 0;$/;"	d
width	obj/net/testoutput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testoutput.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^		width = -1;$/;"	d
width	obj/user/echosrv.asm	/^				width = 0;$/;"	d
width	obj/user/echosrv.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echosrv.asm	/^		width = -1;$/;"	d
width	obj/user/echotest.asm	/^				width = 0;$/;"	d
width	obj/user/echotest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echotest.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/exechello.asm	/^				width = 0;$/;"	d
width	obj/user/exechello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/exechello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/httpd.asm	/^				width = 0;$/;"	d
width	obj/user/httpd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/httpd.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^		width = -1;$/;"	d
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^		width = -1;$/;"	d
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spawnhello.asm	/^				width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnhello.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^		width = -1;$/;"	d
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^		width = -1;$/;"	d
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^		width = -1;$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^		width = -1;$/;"	d
width	obj/user/testtime.asm	/^				width = 0;$/;"	d
width	obj/user/testtime.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testtime.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
winsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   winsaddr[2];       \/* Primary and secondary MS WINS entries *\/$/;"	m	struct:ipcp_options
wnd	obj/net/ns.asm	/^  wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);$/;"	d
word	net/lwip/netif/ppp/auth.c	/^  char        word[1];$/;"	m	struct:wordlist	file:
wordlist	net/lwip/netif/ppp/auth.c	/^struct wordlist {$/;"	s	file:
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon11	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write	net/lwip/include/lwip/sockets.h	346;"	d
write_delayed	net/lwip/include/lwip/api.h	/^  u8_t write_delayed;$/;"	m	struct:netconn
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
write_finished	obj/net/ns.asm	/^      write_finished = 1;$/;"	d
write_finished	obj/net/ns.asm	/^    write_finished = 1;$/;"	d
write_msg	net/lwip/include/lwip/api.h	/^  struct api_msg_msg *write_msg;$/;"	m	struct:netconn	typeref:struct:netconn::api_msg_msg
write_offset	net/lwip/include/lwip/api.h	/^  int write_offset;$/;"	m	struct:netconn
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
writeset	net/lwip/api/sockets.c	/^  fd_set *writeset;$/;"	m	struct:lwip_select_cb	file:
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xid	net/lwip/core/dhcp.c	/^static u32_t xid = 0xABCD0000;$/;"	v	file:
xid	net/lwip/include/lwip/dhcp.h	/^  u32_t xid;$/;"	m	struct:dhcp
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
xmit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER xmit;             \/* Transmitted packets. *\/$/;"	m	struct:stats_proto
xmit_accm	net/lwip/netif/ppp/lcp.c	/^ext_accm xmit_accm[NUM_PPP];           \/* extended transmit ACCM *\/$/;"	v
xmit_idle	net/lwip/netif/ppp/ppp.h	/^  u_short xmit_idle;      \/* seconds since last NP packet sent *\/$/;"	m	struct:ppp_idle
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
